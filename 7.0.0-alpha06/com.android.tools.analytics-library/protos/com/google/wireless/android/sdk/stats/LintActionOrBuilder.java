// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface LintActionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.LintAction)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The issue id is a unique identifier for this type of problem.
   * Examples of issue id's are "HardcodedText" and "NewApi".
   * </pre>
   *
   * <code>optional string issue_id = 1;</code>
   * @return Whether the issueId field is set.
   */
  boolean hasIssueId();
  /**
   * <pre>
   * The issue id is a unique identifier for this type of problem.
   * Examples of issue id's are "HardcodedText" and "NewApi".
   * </pre>
   *
   * <code>optional string issue_id = 1;</code>
   * @return The issueId.
   */
  java.lang.String getIssueId();
  /**
   * <pre>
   * The issue id is a unique identifier for this type of problem.
   * Examples of issue id's are "HardcodedText" and "NewApi".
   * </pre>
   *
   * <code>optional string issue_id = 1;</code>
   * @return The bytes for issueId.
   */
  com.google.protobuf.ByteString
      getIssueIdBytes();

  /**
   * <pre>
   * Client-side salted, sha256 of the root project path.
   * This exists to allow multiple instant run builds in one project by one
   * user to be correlated.
   * The salt is rotated every 28 days, so it is not a permanent pseudonymous
   * identifier. It is anonymized and is unique per user, but has a 1-N
   * relation.
   * </pre>
   *
   * <code>optional string project_id = 2;</code>
   * @return Whether the projectId field is set.
   */
  boolean hasProjectId();
  /**
   * <pre>
   * Client-side salted, sha256 of the root project path.
   * This exists to allow multiple instant run builds in one project by one
   * user to be correlated.
   * The salt is rotated every 28 days, so it is not a permanent pseudonymous
   * identifier. It is anonymized and is unique per user, but has a 1-N
   * relation.
   * </pre>
   *
   * <code>optional string project_id = 2;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Client-side salted, sha256 of the root project path.
   * This exists to allow multiple instant run builds in one project by one
   * user to be correlated.
   * The salt is rotated every 28 days, so it is not a permanent pseudonymous
   * identifier. It is anonymized and is unique per user, but has a 1-N
   * relation.
   * </pre>
   *
   * <code>optional string project_id = 2;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * A unique identifier for this quickfix.
   * </pre>
   *
   * <code>optional string fix_id = 3;</code>
   * @return Whether the fixId field is set.
   */
  boolean hasFixId();
  /**
   * <pre>
   * A unique identifier for this quickfix.
   * </pre>
   *
   * <code>optional string fix_id = 3;</code>
   * @return The fixId.
   */
  java.lang.String getFixId();
  /**
   * <pre>
   * A unique identifier for this quickfix.
   * </pre>
   *
   * <code>optional string fix_id = 3;</code>
   * @return The bytes for fixId.
   */
  com.google.protobuf.ByteString
      getFixIdBytes();

  /**
   * <pre>
   * Feedback about this lint check if available
   * </pre>
   *
   * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
   * @return Whether the lintFeedback field is set.
   */
  boolean hasLintFeedback();
  /**
   * <pre>
   * Feedback about this lint check if available
   * </pre>
   *
   * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
   * @return The lintFeedback.
   */
  com.google.wireless.android.sdk.stats.LintAction.LintFeedback getLintFeedback();
}
