// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorUiEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorUiEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Id of the UI element, baked in the emulator binary.
   * </pre>
   *
   * <code>optional string element_id = 1;</code>
   * @return Whether the elementId field is set.
   */
  boolean hasElementId();
  /**
   * <pre>
   * Id of the UI element, baked in the emulator binary.
   * </pre>
   *
   * <code>optional string element_id = 1;</code>
   * @return The elementId.
   */
  java.lang.String getElementId();
  /**
   * <pre>
   * Id of the UI element, baked in the emulator binary.
   * </pre>
   *
   * <code>optional string element_id = 1;</code>
   * @return The bytes for elementId.
   */
  com.google.protobuf.ByteString
      getElementIdBytes();

  /**
   * <pre>
   * The type of UI event
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent.EmulatorUiEventType type = 2;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of UI event
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent.EmulatorUiEventType type = 2;</code>
   * @return The type.
   */
  com.google.wireless.android.sdk.stats.EmulatorUiEvent.EmulatorUiEventType getType();

  /**
   * <pre>
   * The current context of the event.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent.EmulatorUiEventContext context = 3;</code>
   * @return Whether the context field is set.
   */
  boolean hasContext();
  /**
   * <pre>
   * The current context of the event.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent.EmulatorUiEventContext context = 3;</code>
   * @return The context.
   */
  com.google.wireless.android.sdk.stats.EmulatorUiEvent.EmulatorUiEventContext getContext();

  /**
   * <pre>
   * This value is an opaque numeric type. The exact schema of the UI metrics
   * is not specific here. e.g., |value| may represent a boolean, a "count", or
   * an index into the list of items in a drop down menu.
   * </pre>
   *
   * <code>optional int64 value = 4;</code>
   * @return Whether the value field is set.
   */
  boolean hasValue();
  /**
   * <pre>
   * This value is an opaque numeric type. The exact schema of the UI metrics
   * is not specific here. e.g., |value| may represent a boolean, a "count", or
   * an index into the list of items in a drop down menu.
   * </pre>
   *
   * <code>optional int64 value = 4;</code>
   * @return The value.
   */
  long getValue();
}
