// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorHostOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorHost)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * CPU manufacturer of the host, used as certain hypervisors are limited
   * to a certain manufacturer.
   * </pre>
   *
   * <code>optional string cpu_manufacturer = 1;</code>
   * @return Whether the cpuManufacturer field is set.
   */
  boolean hasCpuManufacturer();
  /**
   * <pre>
   * CPU manufacturer of the host, used as certain hypervisors are limited
   * to a certain manufacturer.
   * </pre>
   *
   * <code>optional string cpu_manufacturer = 1;</code>
   * @return The cpuManufacturer.
   */
  java.lang.String getCpuManufacturer();
  /**
   * <pre>
   * CPU manufacturer of the host, used as certain hypervisors are limited
   * to a certain manufacturer.
   * </pre>
   *
   * <code>optional string cpu_manufacturer = 1;</code>
   * @return The bytes for cpuManufacturer.
   */
  com.google.protobuf.ByteString
      getCpuManufacturerBytes();

  /**
   * <pre>
   * Does the host support virtualization technology
   * </pre>
   *
   * <code>optional bool virt_support = 2;</code>
   * @return Whether the virtSupport field is set.
   */
  boolean hasVirtSupport();
  /**
   * <pre>
   * Does the host support virtualization technology
   * </pre>
   *
   * <code>optional bool virt_support = 2;</code>
   * @return The virtSupport.
   */
  boolean getVirtSupport();

  /**
   * <pre>
   * Is the host itself running inside a virtual machine.
   * </pre>
   *
   * <code>optional bool running_in_vm = 3;</code>
   * @return Whether the runningInVm field is set.
   */
  boolean hasRunningInVm();
  /**
   * <pre>
   * Is the host itself running inside a virtual machine.
   * </pre>
   *
   * <code>optional bool running_in_vm = 3;</code>
   * @return The runningInVm.
   */
  boolean getRunningInVm();

  /**
   * <pre>
   * May differ from os_architecture field as it is calculated differently,
   * trying to compensate the JVM bittness.
   * </pre>
   *
   * <code>optional int64 os_bit_count = 4;</code>
   * @return Whether the osBitCount field is set.
   */
  boolean hasOsBitCount();
  /**
   * <pre>
   * May differ from os_architecture field as it is calculated differently,
   * trying to compensate the JVM bittness.
   * </pre>
   *
   * <code>optional int64 os_bit_count = 4;</code>
   * @return The osBitCount.
   */
  long getOsBitCount();

  /**
   * <pre>
   * CPU model, family, stepping, as stored in the EAX register
   * after issuing CPUID instruction with EAX=1:
   * 31   27   23   19   15   11   7    3  0
   * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
   * </pre>
   *
   * <code>optional uint32 cpuid_stepping = 5;</code>
   * @return Whether the cpuidStepping field is set.
   */
  boolean hasCpuidStepping();
  /**
   * <pre>
   * CPU model, family, stepping, as stored in the EAX register
   * after issuing CPUID instruction with EAX=1:
   * 31   27   23   19   15   11   7    3  0
   * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
   * </pre>
   *
   * <code>optional uint32 cpuid_stepping = 5;</code>
   * @return The cpuidStepping.
   */
  int getCpuidStepping();

  /**
   * <pre>
   * m: [7:4] model (CPU model)
   * </pre>
   *
   * <code>optional uint32 cpuid_model = 6;</code>
   * @return Whether the cpuidModel field is set.
   */
  boolean hasCpuidModel();
  /**
   * <pre>
   * m: [7:4] model (CPU model)
   * </pre>
   *
   * <code>optional uint32 cpuid_model = 6;</code>
   * @return The cpuidModel.
   */
  int getCpuidModel();

  /**
   * <pre>
   * f: [11:8] family (CPU make)
   * </pre>
   *
   * <code>optional uint32 cpuid_family = 7;</code>
   * @return Whether the cpuidFamily field is set.
   */
  boolean hasCpuidFamily();
  /**
   * <pre>
   * f: [11:8] family (CPU make)
   * </pre>
   *
   * <code>optional uint32 cpuid_family = 7;</code>
   * @return The cpuidFamily.
   */
  int getCpuidFamily();

  /**
   * <pre>
   * t: [13:12] CPU type
   * </pre>
   *
   * <code>optional uint32 cpuid_type = 8;</code>
   * @return Whether the cpuidType field is set.
   */
  boolean hasCpuidType();
  /**
   * <pre>
   * t: [13:12] CPU type
   * </pre>
   *
   * <code>optional uint32 cpuid_type = 8;</code>
   * @return The cpuidType.
   */
  int getCpuidType();

  /**
   * <pre>
   * x: [19:16] extended model
   * </pre>
   *
   * <code>optional uint32 cpuid_extmodel = 9;</code>
   * @return Whether the cpuidExtmodel field is set.
   */
  boolean hasCpuidExtmodel();
  /**
   * <pre>
   * x: [19:16] extended model
   * </pre>
   *
   * <code>optional uint32 cpuid_extmodel = 9;</code>
   * @return The cpuidExtmodel.
   */
  int getCpuidExtmodel();

  /**
   * <pre>
   * y: [27:20] extended family
   * </pre>
   *
   * <code>optional uint32 cpuid_extfamily = 10;</code>
   * @return Whether the cpuidExtfamily field is set.
   */
  boolean hasCpuidExtfamily();
  /**
   * <pre>
   * y: [27:20] extended family
   * </pre>
   *
   * <code>optional uint32 cpuid_extfamily = 10;</code>
   * @return The cpuidExtfamily.
   */
  int getCpuidExtfamily();
}
