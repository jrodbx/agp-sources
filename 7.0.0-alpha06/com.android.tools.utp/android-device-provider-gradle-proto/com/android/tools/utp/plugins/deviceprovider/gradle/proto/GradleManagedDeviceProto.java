// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gradle_managed_device_config.proto

package com.android.tools.utp.plugins.deviceprovider.gradle.proto;

public final class GradleManagedDeviceProto {
  private GradleManagedDeviceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GradleManagedDeviceConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The absolute path to the folder used by the Gradle Plugin for Android for
     * Android Virtual Devices.
     * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any avd_folder = 1;</code>
     * @return Whether the avdFolder field is set.
     */
    boolean hasAvdFolder();
    /**
     * <pre>
     * The absolute path to the folder used by the Gradle Plugin for Android for
     * Android Virtual Devices.
     * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any avd_folder = 1;</code>
     * @return The avdFolder.
     */
    com.google.protobuf.Any getAvdFolder();
    /**
     * <pre>
     * The absolute path to the folder used by the Gradle Plugin for Android for
     * Android Virtual Devices.
     * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any avd_folder = 1;</code>
     */
    com.google.protobuf.AnyOrBuilder getAvdFolderOrBuilder();

    /**
     * <pre>
     * Name of the android virtual device to be run from the given avd_folder.
     * </pre>
     *
     * <code>string avd_name = 2;</code>
     * @return The avdName.
     */
    java.lang.String getAvdName();
    /**
     * <pre>
     * Name of the android virtual device to be run from the given avd_folder.
     * </pre>
     *
     * <code>string avd_name = 2;</code>
     * @return The bytes for avdName.
     */
    com.google.protobuf.ByteString
        getAvdNameBytes();

    /**
     * <pre>
     * A unique identifier supplied by the Gradle Plugin for android to
     * distinguish this emulator instance from other instances that use the same
     * device name
     * </pre>
     *
     * <code>string avd_id = 3;</code>
     * @return The avdId.
     */
    java.lang.String getAvdId();
    /**
     * <pre>
     * A unique identifier supplied by the Gradle Plugin for android to
     * distinguish this emulator instance from other instances that use the same
     * device name
     * </pre>
     *
     * <code>string avd_id = 3;</code>
     * @return The bytes for avdId.
     */
    com.google.protobuf.ByteString
        getAvdIdBytes();

    /**
     * <pre>
     * Enables the device to be displayed to the user.
     * </pre>
     *
     * <code>bool enable_display = 4;</code>
     * @return The enableDisplay.
     */
    boolean getEnableDisplay();

    /**
     * <pre>
     * The absolute path to the emulator executable.
     * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any emulator_path = 5;</code>
     * @return Whether the emulatorPath field is set.
     */
    boolean hasEmulatorPath();
    /**
     * <pre>
     * The absolute path to the emulator executable.
     * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any emulator_path = 5;</code>
     * @return The emulatorPath.
     */
    com.google.protobuf.Any getEmulatorPath();
    /**
     * <pre>
     * The absolute path to the emulator executable.
     * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any emulator_path = 5;</code>
     */
    com.google.protobuf.AnyOrBuilder getEmulatorPathOrBuilder();
  }
  /**
   * <pre>
   * Fields that correspond to a device managed by the Gradle Plugin for android.
   * </pre>
   *
   * Protobuf type {@code com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig}
   */
  public  static final class GradleManagedDeviceConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig)
      GradleManagedDeviceConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GradleManagedDeviceConfig.newBuilder() to construct.
    private GradleManagedDeviceConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GradleManagedDeviceConfig() {
      avdName_ = "";
      avdId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GradleManagedDeviceConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GradleManagedDeviceConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (avdFolder_ != null) {
                subBuilder = avdFolder_.toBuilder();
              }
              avdFolder_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(avdFolder_);
                avdFolder_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              avdName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              avdId_ = s;
              break;
            }
            case 32: {

              enableDisplay_ = input.readBool();
              break;
            }
            case 42: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (emulatorPath_ != null) {
                subBuilder = emulatorPath_.toBuilder();
              }
              emulatorPath_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emulatorPath_);
                emulatorPath_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.class, com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.Builder.class);
    }

    public static final int AVD_FOLDER_FIELD_NUMBER = 1;
    private com.google.protobuf.Any avdFolder_;
    /**
     * <pre>
     * The absolute path to the folder used by the Gradle Plugin for Android for
     * Android Virtual Devices.
     * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any avd_folder = 1;</code>
     * @return Whether the avdFolder field is set.
     */
    public boolean hasAvdFolder() {
      return avdFolder_ != null;
    }
    /**
     * <pre>
     * The absolute path to the folder used by the Gradle Plugin for Android for
     * Android Virtual Devices.
     * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any avd_folder = 1;</code>
     * @return The avdFolder.
     */
    public com.google.protobuf.Any getAvdFolder() {
      return avdFolder_ == null ? com.google.protobuf.Any.getDefaultInstance() : avdFolder_;
    }
    /**
     * <pre>
     * The absolute path to the folder used by the Gradle Plugin for Android for
     * Android Virtual Devices.
     * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any avd_folder = 1;</code>
     */
    public com.google.protobuf.AnyOrBuilder getAvdFolderOrBuilder() {
      return getAvdFolder();
    }

    public static final int AVD_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object avdName_;
    /**
     * <pre>
     * Name of the android virtual device to be run from the given avd_folder.
     * </pre>
     *
     * <code>string avd_name = 2;</code>
     * @return The avdName.
     */
    public java.lang.String getAvdName() {
      java.lang.Object ref = avdName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        avdName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the android virtual device to be run from the given avd_folder.
     * </pre>
     *
     * <code>string avd_name = 2;</code>
     * @return The bytes for avdName.
     */
    public com.google.protobuf.ByteString
        getAvdNameBytes() {
      java.lang.Object ref = avdName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        avdName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AVD_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object avdId_;
    /**
     * <pre>
     * A unique identifier supplied by the Gradle Plugin for android to
     * distinguish this emulator instance from other instances that use the same
     * device name
     * </pre>
     *
     * <code>string avd_id = 3;</code>
     * @return The avdId.
     */
    public java.lang.String getAvdId() {
      java.lang.Object ref = avdId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        avdId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique identifier supplied by the Gradle Plugin for android to
     * distinguish this emulator instance from other instances that use the same
     * device name
     * </pre>
     *
     * <code>string avd_id = 3;</code>
     * @return The bytes for avdId.
     */
    public com.google.protobuf.ByteString
        getAvdIdBytes() {
      java.lang.Object ref = avdId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        avdId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENABLE_DISPLAY_FIELD_NUMBER = 4;
    private boolean enableDisplay_;
    /**
     * <pre>
     * Enables the device to be displayed to the user.
     * </pre>
     *
     * <code>bool enable_display = 4;</code>
     * @return The enableDisplay.
     */
    public boolean getEnableDisplay() {
      return enableDisplay_;
    }

    public static final int EMULATOR_PATH_FIELD_NUMBER = 5;
    private com.google.protobuf.Any emulatorPath_;
    /**
     * <pre>
     * The absolute path to the emulator executable.
     * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any emulator_path = 5;</code>
     * @return Whether the emulatorPath field is set.
     */
    public boolean hasEmulatorPath() {
      return emulatorPath_ != null;
    }
    /**
     * <pre>
     * The absolute path to the emulator executable.
     * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any emulator_path = 5;</code>
     * @return The emulatorPath.
     */
    public com.google.protobuf.Any getEmulatorPath() {
      return emulatorPath_ == null ? com.google.protobuf.Any.getDefaultInstance() : emulatorPath_;
    }
    /**
     * <pre>
     * The absolute path to the emulator executable.
     * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
     * </pre>
     *
     * <code>.google.protobuf.Any emulator_path = 5;</code>
     */
    public com.google.protobuf.AnyOrBuilder getEmulatorPathOrBuilder() {
      return getEmulatorPath();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (avdFolder_ != null) {
        output.writeMessage(1, getAvdFolder());
      }
      if (!getAvdNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, avdName_);
      }
      if (!getAvdIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, avdId_);
      }
      if (enableDisplay_ != false) {
        output.writeBool(4, enableDisplay_);
      }
      if (emulatorPath_ != null) {
        output.writeMessage(5, getEmulatorPath());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (avdFolder_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAvdFolder());
      }
      if (!getAvdNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, avdName_);
      }
      if (!getAvdIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, avdId_);
      }
      if (enableDisplay_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enableDisplay_);
      }
      if (emulatorPath_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getEmulatorPath());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig)) {
        return super.equals(obj);
      }
      com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig other = (com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig) obj;

      if (hasAvdFolder() != other.hasAvdFolder()) return false;
      if (hasAvdFolder()) {
        if (!getAvdFolder()
            .equals(other.getAvdFolder())) return false;
      }
      if (!getAvdName()
          .equals(other.getAvdName())) return false;
      if (!getAvdId()
          .equals(other.getAvdId())) return false;
      if (getEnableDisplay()
          != other.getEnableDisplay()) return false;
      if (hasEmulatorPath() != other.hasEmulatorPath()) return false;
      if (hasEmulatorPath()) {
        if (!getEmulatorPath()
            .equals(other.getEmulatorPath())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAvdFolder()) {
        hash = (37 * hash) + AVD_FOLDER_FIELD_NUMBER;
        hash = (53 * hash) + getAvdFolder().hashCode();
      }
      hash = (37 * hash) + AVD_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getAvdName().hashCode();
      hash = (37 * hash) + AVD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAvdId().hashCode();
      hash = (37 * hash) + ENABLE_DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableDisplay());
      if (hasEmulatorPath()) {
        hash = (37 * hash) + EMULATOR_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getEmulatorPath().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Fields that correspond to a device managed by the Gradle Plugin for android.
     * </pre>
     *
     * Protobuf type {@code com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig)
        com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.class, com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.Builder.class);
      }

      // Construct using com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (avdFolderBuilder_ == null) {
          avdFolder_ = null;
        } else {
          avdFolder_ = null;
          avdFolderBuilder_ = null;
        }
        avdName_ = "";

        avdId_ = "";

        enableDisplay_ = false;

        if (emulatorPathBuilder_ == null) {
          emulatorPath_ = null;
        } else {
          emulatorPath_ = null;
          emulatorPathBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_descriptor;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig getDefaultInstanceForType() {
        return com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig build() {
        com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig buildPartial() {
        com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig result = new com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig(this);
        if (avdFolderBuilder_ == null) {
          result.avdFolder_ = avdFolder_;
        } else {
          result.avdFolder_ = avdFolderBuilder_.build();
        }
        result.avdName_ = avdName_;
        result.avdId_ = avdId_;
        result.enableDisplay_ = enableDisplay_;
        if (emulatorPathBuilder_ == null) {
          result.emulatorPath_ = emulatorPath_;
        } else {
          result.emulatorPath_ = emulatorPathBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig) {
          return mergeFrom((com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig other) {
        if (other == com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig.getDefaultInstance()) return this;
        if (other.hasAvdFolder()) {
          mergeAvdFolder(other.getAvdFolder());
        }
        if (!other.getAvdName().isEmpty()) {
          avdName_ = other.avdName_;
          onChanged();
        }
        if (!other.getAvdId().isEmpty()) {
          avdId_ = other.avdId_;
          onChanged();
        }
        if (other.getEnableDisplay() != false) {
          setEnableDisplay(other.getEnableDisplay());
        }
        if (other.hasEmulatorPath()) {
          mergeEmulatorPath(other.getEmulatorPath());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Any avdFolder_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> avdFolderBuilder_;
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       * @return Whether the avdFolder field is set.
       */
      public boolean hasAvdFolder() {
        return avdFolderBuilder_ != null || avdFolder_ != null;
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       * @return The avdFolder.
       */
      public com.google.protobuf.Any getAvdFolder() {
        if (avdFolderBuilder_ == null) {
          return avdFolder_ == null ? com.google.protobuf.Any.getDefaultInstance() : avdFolder_;
        } else {
          return avdFolderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      public Builder setAvdFolder(com.google.protobuf.Any value) {
        if (avdFolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          avdFolder_ = value;
          onChanged();
        } else {
          avdFolderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      public Builder setAvdFolder(
          com.google.protobuf.Any.Builder builderForValue) {
        if (avdFolderBuilder_ == null) {
          avdFolder_ = builderForValue.build();
          onChanged();
        } else {
          avdFolderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      public Builder mergeAvdFolder(com.google.protobuf.Any value) {
        if (avdFolderBuilder_ == null) {
          if (avdFolder_ != null) {
            avdFolder_ =
              com.google.protobuf.Any.newBuilder(avdFolder_).mergeFrom(value).buildPartial();
          } else {
            avdFolder_ = value;
          }
          onChanged();
        } else {
          avdFolderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      public Builder clearAvdFolder() {
        if (avdFolderBuilder_ == null) {
          avdFolder_ = null;
          onChanged();
        } else {
          avdFolder_ = null;
          avdFolderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      public com.google.protobuf.Any.Builder getAvdFolderBuilder() {

        onChanged();
        return getAvdFolderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      public com.google.protobuf.AnyOrBuilder getAvdFolderOrBuilder() {
        if (avdFolderBuilder_ != null) {
          return avdFolderBuilder_.getMessageOrBuilder();
        } else {
          return avdFolder_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : avdFolder_;
        }
      }
      /**
       * <pre>
       * The absolute path to the folder used by the Gradle Plugin for Android for
       * Android Virtual Devices.
       * Message type must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any avd_folder = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>
          getAvdFolderFieldBuilder() {
        if (avdFolderBuilder_ == null) {
          avdFolderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getAvdFolder(),
                  getParentForChildren(),
                  isClean());
          avdFolder_ = null;
        }
        return avdFolderBuilder_;
      }

      private java.lang.Object avdName_ = "";
      /**
       * <pre>
       * Name of the android virtual device to be run from the given avd_folder.
       * </pre>
       *
       * <code>string avd_name = 2;</code>
       * @return The avdName.
       */
      public java.lang.String getAvdName() {
        java.lang.Object ref = avdName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          avdName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the android virtual device to be run from the given avd_folder.
       * </pre>
       *
       * <code>string avd_name = 2;</code>
       * @return The bytes for avdName.
       */
      public com.google.protobuf.ByteString
          getAvdNameBytes() {
        java.lang.Object ref = avdName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          avdName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the android virtual device to be run from the given avd_folder.
       * </pre>
       *
       * <code>string avd_name = 2;</code>
       * @param value The avdName to set.
       * @return This builder for chaining.
       */
      public Builder setAvdName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        avdName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the android virtual device to be run from the given avd_folder.
       * </pre>
       *
       * <code>string avd_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvdName() {

        avdName_ = getDefaultInstance().getAvdName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the android virtual device to be run from the given avd_folder.
       * </pre>
       *
       * <code>string avd_name = 2;</code>
       * @param value The bytes for avdName to set.
       * @return This builder for chaining.
       */
      public Builder setAvdNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        avdName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object avdId_ = "";
      /**
       * <pre>
       * A unique identifier supplied by the Gradle Plugin for android to
       * distinguish this emulator instance from other instances that use the same
       * device name
       * </pre>
       *
       * <code>string avd_id = 3;</code>
       * @return The avdId.
       */
      public java.lang.String getAvdId() {
        java.lang.Object ref = avdId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          avdId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier supplied by the Gradle Plugin for android to
       * distinguish this emulator instance from other instances that use the same
       * device name
       * </pre>
       *
       * <code>string avd_id = 3;</code>
       * @return The bytes for avdId.
       */
      public com.google.protobuf.ByteString
          getAvdIdBytes() {
        java.lang.Object ref = avdId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          avdId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier supplied by the Gradle Plugin for android to
       * distinguish this emulator instance from other instances that use the same
       * device name
       * </pre>
       *
       * <code>string avd_id = 3;</code>
       * @param value The avdId to set.
       * @return This builder for chaining.
       */
      public Builder setAvdId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        avdId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier supplied by the Gradle Plugin for android to
       * distinguish this emulator instance from other instances that use the same
       * device name
       * </pre>
       *
       * <code>string avd_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvdId() {

        avdId_ = getDefaultInstance().getAvdId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier supplied by the Gradle Plugin for android to
       * distinguish this emulator instance from other instances that use the same
       * device name
       * </pre>
       *
       * <code>string avd_id = 3;</code>
       * @param value The bytes for avdId to set.
       * @return This builder for chaining.
       */
      public Builder setAvdIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        avdId_ = value;
        onChanged();
        return this;
      }

      private boolean enableDisplay_ ;
      /**
       * <pre>
       * Enables the device to be displayed to the user.
       * </pre>
       *
       * <code>bool enable_display = 4;</code>
       * @return The enableDisplay.
       */
      public boolean getEnableDisplay() {
        return enableDisplay_;
      }
      /**
       * <pre>
       * Enables the device to be displayed to the user.
       * </pre>
       *
       * <code>bool enable_display = 4;</code>
       * @param value The enableDisplay to set.
       * @return This builder for chaining.
       */
      public Builder setEnableDisplay(boolean value) {

        enableDisplay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enables the device to be displayed to the user.
       * </pre>
       *
       * <code>bool enable_display = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnableDisplay() {

        enableDisplay_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any emulatorPath_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> emulatorPathBuilder_;
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       * @return Whether the emulatorPath field is set.
       */
      public boolean hasEmulatorPath() {
        return emulatorPathBuilder_ != null || emulatorPath_ != null;
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       * @return The emulatorPath.
       */
      public com.google.protobuf.Any getEmulatorPath() {
        if (emulatorPathBuilder_ == null) {
          return emulatorPath_ == null ? com.google.protobuf.Any.getDefaultInstance() : emulatorPath_;
        } else {
          return emulatorPathBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      public Builder setEmulatorPath(com.google.protobuf.Any value) {
        if (emulatorPathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emulatorPath_ = value;
          onChanged();
        } else {
          emulatorPathBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      public Builder setEmulatorPath(
          com.google.protobuf.Any.Builder builderForValue) {
        if (emulatorPathBuilder_ == null) {
          emulatorPath_ = builderForValue.build();
          onChanged();
        } else {
          emulatorPathBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      public Builder mergeEmulatorPath(com.google.protobuf.Any value) {
        if (emulatorPathBuilder_ == null) {
          if (emulatorPath_ != null) {
            emulatorPath_ =
              com.google.protobuf.Any.newBuilder(emulatorPath_).mergeFrom(value).buildPartial();
          } else {
            emulatorPath_ = value;
          }
          onChanged();
        } else {
          emulatorPathBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      public Builder clearEmulatorPath() {
        if (emulatorPathBuilder_ == null) {
          emulatorPath_ = null;
          onChanged();
        } else {
          emulatorPath_ = null;
          emulatorPathBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      public com.google.protobuf.Any.Builder getEmulatorPathBuilder() {

        onChanged();
        return getEmulatorPathFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      public com.google.protobuf.AnyOrBuilder getEmulatorPathOrBuilder() {
        if (emulatorPathBuilder_ != null) {
          return emulatorPathBuilder_.getMessageOrBuilder();
        } else {
          return emulatorPath_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : emulatorPath_;
        }
      }
      /**
       * <pre>
       * The absolute path to the emulator executable.
       * Message must be com.google.testing.platform.proto.api.core.PathProto.Path.
       * </pre>
       *
       * <code>.google.protobuf.Any emulator_path = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>
          getEmulatorPathFieldBuilder() {
        if (emulatorPathBuilder_ == null) {
          emulatorPathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getEmulatorPath(),
                  getParentForChildren(),
                  isClean());
          emulatorPath_ = null;
        }
        return emulatorPathBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig)
    }

    // @@protoc_insertion_point(class_scope:com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceConfig)
    private static final com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig();
    }

    public static com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GradleManagedDeviceConfig>
        PARSER = new com.google.protobuf.AbstractParser<GradleManagedDeviceConfig>() {
      @java.lang.Override
      public GradleManagedDeviceConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GradleManagedDeviceConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GradleManagedDeviceConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GradleManagedDeviceConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.tools.utp.plugins.deviceprovider.gradle.proto.GradleManagedDeviceProto.GradleManagedDeviceConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"gradle_managed_device_config.proto\0229co" +
      "m.android.tools.utp.plugins.deviceprovid" +
      "er.gradle.proto\032\031google/protobuf/any.pro" +
      "to\"\254\001\n\031GradleManagedDeviceConfig\022(\n\navd_" +
      "folder\030\001 \001(\0132\024.google.protobuf.Any\022\020\n\010av" +
      "d_name\030\002 \001(\t\022\016\n\006avd_id\030\003 \001(\t\022\026\n\016enable_d" +
      "isplay\030\004 \001(\010\022+\n\remulator_path\030\005 \001(\0132\024.go" +
      "ogle.protobuf.AnyBU\n9com.android.tools.u" +
      "tp.plugins.deviceprovider.gradle.protoB\030" +
      "GradleManagedDeviceProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        });
    internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_tools_utp_plugins_deviceprovider_gradle_proto_GradleManagedDeviceConfig_descriptor,
        new java.lang.String[] { "AvdFolder", "AvdName", "AvdId", "EnableDisplay", "EmulatorPath", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
