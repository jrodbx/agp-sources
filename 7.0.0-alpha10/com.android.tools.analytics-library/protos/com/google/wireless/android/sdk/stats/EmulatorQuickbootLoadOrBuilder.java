// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorQuickbootLoadOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorQuickbootLoad)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The state of the quickboot load operation.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
   * @return Whether the state field is set.
   */
  boolean hasState();
  /**
   * <pre>
   * The state of the quickboot load operation.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
   * @return The state.
   */
  com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState getState();

  /**
   * <pre>
   * How long it took, milliseconds.
   * </pre>
   *
   * <code>optional uint64 duration_ms = 2;</code>
   * @return Whether the durationMs field is set.
   */
  boolean hasDurationMs();
  /**
   * <pre>
   * How long it took, milliseconds.
   * </pre>
   *
   * <code>optional uint64 duration_ms = 2;</code>
   * @return The durationMs.
   */
  long getDurationMs();

  /**
   * <pre>
   * Information about loaded snapshot.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshot snapshot = 3;</code>
   * @return Whether the snapshot field is set.
   */
  boolean hasSnapshot();
  /**
   * <pre>
   * Information about loaded snapshot.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshot snapshot = 3;</code>
   * @return The snapshot.
   */
  com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshot();
  /**
   * <pre>
   * Information about loaded snapshot.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshot snapshot = 3;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotOrBuilder();

  /**
   * <pre>
   * Flag is set when on demand RAM loading was enabled for the load.
   * </pre>
   *
   * <code>optional bool on_demand_ram_enabled = 4;</code>
   * @return Whether the onDemandRamEnabled field is set.
   */
  boolean hasOnDemandRamEnabled();
  /**
   * <pre>
   * Flag is set when on demand RAM loading was enabled for the load.
   * </pre>
   *
   * <code>optional bool on_demand_ram_enabled = 4;</code>
   * @return The onDemandRamEnabled.
   */
  boolean getOnDemandRamEnabled();

  /**
   * <pre>
   * ADB connection retries.
   * </pre>
   *
   * <code>optional uint32 adb_connection_retries = 6;</code>
   * @return Whether the adbConnectionRetries field is set.
   */
  boolean hasAdbConnectionRetries();
  /**
   * <pre>
   * ADB connection retries.
   * </pre>
   *
   * <code>optional uint32 adb_connection_retries = 6;</code>
   * @return The adbConnectionRetries.
   */
  int getAdbConnectionRetries();
}
