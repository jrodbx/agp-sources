// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cxx_logging.proto

package com.android.build.gradle.internal.cxx.logging;

/**
 * <pre>
 **
 *The string-encoded equivalent of [LoggingMessage].
 * </pre>
 *
 * Protobuf type {@code EncodedLoggingMessage}
 */
public final class EncodedLoggingMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:EncodedLoggingMessage)
    EncodedLoggingMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EncodedLoggingMessage.newBuilder() to construct.
  private EncodedLoggingMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EncodedLoggingMessage() {
    level_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EncodedLoggingMessage();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.android.build.gradle.internal.cxx.logging.CxxLogging.internal_static_EncodedLoggingMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.android.build.gradle.internal.cxx.logging.CxxLogging.internal_static_EncodedLoggingMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.class, com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.Builder.class);
  }

  public static final int LEVEL_FIELD_NUMBER = 1;
  private int level_ = 0;
  /**
   * <code>.LoggingMessage.LoggingLevel level = 1;</code>
   * @return The enum numeric value on the wire for level.
   */
  @java.lang.Override public int getLevelValue() {
    return level_;
  }
  /**
   * <code>.LoggingMessage.LoggingLevel level = 1;</code>
   * @return The level.
   */
  @java.lang.Override public com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel getLevel() {
    com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel result = com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel.forNumber(level_);
    return result == null ? com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel.UNRECOGNIZED : result;
  }

  public static final int MESSAGE_ID_FIELD_NUMBER = 2;
  private int messageId_ = 0;
  /**
   * <code>int32 message_id = 2;</code>
   * @return The messageId.
   */
  @java.lang.Override
  public int getMessageId() {
    return messageId_;
  }

  public static final int FILE_ID_FIELD_NUMBER = 3;
  private int fileId_ = 0;
  /**
   * <code>int32 file_id = 3;</code>
   * @return The fileId.
   */
  @java.lang.Override
  public int getFileId() {
    return fileId_;
  }

  public static final int TAG_ID_FIELD_NUMBER = 4;
  private int tagId_ = 0;
  /**
   * <code>int32 tag_id = 4;</code>
   * @return The tagId.
   */
  @java.lang.Override
  public int getTagId() {
    return tagId_;
  }

  public static final int DIAGNOSTIC_CODE_FIELD_NUMBER = 5;
  private int diagnosticCode_ = 0;
  /**
   * <code>int32 diagnostic_code = 5;</code>
   * @return The diagnosticCode.
   */
  @java.lang.Override
  public int getDiagnosticCode() {
    return diagnosticCode_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (level_ != com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel.INFO.getNumber()) {
      output.writeEnum(1, level_);
    }
    if (messageId_ != 0) {
      output.writeInt32(2, messageId_);
    }
    if (fileId_ != 0) {
      output.writeInt32(3, fileId_);
    }
    if (tagId_ != 0) {
      output.writeInt32(4, tagId_);
    }
    if (diagnosticCode_ != 0) {
      output.writeInt32(5, diagnosticCode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (level_ != com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel.INFO.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, level_);
    }
    if (messageId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, messageId_);
    }
    if (fileId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, fileId_);
    }
    if (tagId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, tagId_);
    }
    if (diagnosticCode_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, diagnosticCode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage)) {
      return super.equals(obj);
    }
    com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage other = (com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage) obj;

    if (level_ != other.level_) return false;
    if (getMessageId()
        != other.getMessageId()) return false;
    if (getFileId()
        != other.getFileId()) return false;
    if (getTagId()
        != other.getTagId()) return false;
    if (getDiagnosticCode()
        != other.getDiagnosticCode()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + level_;
    hash = (37 * hash) + MESSAGE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getMessageId();
    hash = (37 * hash) + FILE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getFileId();
    hash = (37 * hash) + TAG_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTagId();
    hash = (37 * hash) + DIAGNOSTIC_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getDiagnosticCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   *The string-encoded equivalent of [LoggingMessage].
   * </pre>
   *
   * Protobuf type {@code EncodedLoggingMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:EncodedLoggingMessage)
      com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.build.gradle.internal.cxx.logging.CxxLogging.internal_static_EncodedLoggingMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.build.gradle.internal.cxx.logging.CxxLogging.internal_static_EncodedLoggingMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.class, com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.Builder.class);
    }

    // Construct using com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      level_ = 0;
      messageId_ = 0;
      fileId_ = 0;
      tagId_ = 0;
      diagnosticCode_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.android.build.gradle.internal.cxx.logging.CxxLogging.internal_static_EncodedLoggingMessage_descriptor;
    }

    @java.lang.Override
    public com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage getDefaultInstanceForType() {
      return com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.getDefaultInstance();
    }

    @java.lang.Override
    public com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage build() {
      com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage buildPartial() {
      com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage result = new com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.level_ = level_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.messageId_ = messageId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.fileId_ = fileId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.tagId_ = tagId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.diagnosticCode_ = diagnosticCode_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage) {
        return mergeFrom((com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage other) {
      if (other == com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage.getDefaultInstance()) return this;
      if (other.level_ != 0) {
        setLevelValue(other.getLevelValue());
      }
      if (other.getMessageId() != 0) {
        setMessageId(other.getMessageId());
      }
      if (other.getFileId() != 0) {
        setFileId(other.getFileId());
      }
      if (other.getTagId() != 0) {
        setTagId(other.getTagId());
      }
      if (other.getDiagnosticCode() != 0) {
        setDiagnosticCode(other.getDiagnosticCode());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              level_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              messageId_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              fileId_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              tagId_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              diagnosticCode_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int level_ = 0;
    /**
     * <code>.LoggingMessage.LoggingLevel level = 1;</code>
     * @return The enum numeric value on the wire for level.
     */
    @java.lang.Override public int getLevelValue() {
      return level_;
    }
    /**
     * <code>.LoggingMessage.LoggingLevel level = 1;</code>
     * @param value The enum numeric value on the wire for level to set.
     * @return This builder for chaining.
     */
    public Builder setLevelValue(int value) {
      level_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.LoggingMessage.LoggingLevel level = 1;</code>
     * @return The level.
     */
    @java.lang.Override
    public com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel getLevel() {
      com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel result = com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel.forNumber(level_);
      return result == null ? com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel.UNRECOGNIZED : result;
    }
    /**
     * <code>.LoggingMessage.LoggingLevel level = 1;</code>
     * @param value The level to set.
     * @return This builder for chaining.
     */
    public Builder setLevel(com.android.build.gradle.internal.cxx.logging.LoggingMessage.LoggingLevel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      level_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.LoggingMessage.LoggingLevel level = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLevel() {
      bitField0_ = (bitField0_ & ~0x00000001);
      level_ = 0;
      onChanged();
      return this;
    }

    private int messageId_ ;
    /**
     * <code>int32 message_id = 2;</code>
     * @return The messageId.
     */
    @java.lang.Override
    public int getMessageId() {
      return messageId_;
    }
    /**
     * <code>int32 message_id = 2;</code>
     * @param value The messageId to set.
     * @return This builder for chaining.
     */
    public Builder setMessageId(int value) {

      messageId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 message_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessageId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      messageId_ = 0;
      onChanged();
      return this;
    }

    private int fileId_ ;
    /**
     * <code>int32 file_id = 3;</code>
     * @return The fileId.
     */
    @java.lang.Override
    public int getFileId() {
      return fileId_;
    }
    /**
     * <code>int32 file_id = 3;</code>
     * @param value The fileId to set.
     * @return This builder for chaining.
     */
    public Builder setFileId(int value) {

      fileId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 file_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      fileId_ = 0;
      onChanged();
      return this;
    }

    private int tagId_ ;
    /**
     * <code>int32 tag_id = 4;</code>
     * @return The tagId.
     */
    @java.lang.Override
    public int getTagId() {
      return tagId_;
    }
    /**
     * <code>int32 tag_id = 4;</code>
     * @param value The tagId to set.
     * @return This builder for chaining.
     */
    public Builder setTagId(int value) {

      tagId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 tag_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTagId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      tagId_ = 0;
      onChanged();
      return this;
    }

    private int diagnosticCode_ ;
    /**
     * <code>int32 diagnostic_code = 5;</code>
     * @return The diagnosticCode.
     */
    @java.lang.Override
    public int getDiagnosticCode() {
      return diagnosticCode_;
    }
    /**
     * <code>int32 diagnostic_code = 5;</code>
     * @param value The diagnosticCode to set.
     * @return This builder for chaining.
     */
    public Builder setDiagnosticCode(int value) {

      diagnosticCode_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int32 diagnostic_code = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiagnosticCode() {
      bitField0_ = (bitField0_ & ~0x00000010);
      diagnosticCode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:EncodedLoggingMessage)
  }

  // @@protoc_insertion_point(class_scope:EncodedLoggingMessage)
  private static final com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage();
  }

  public static com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EncodedLoggingMessage>
      PARSER = new com.google.protobuf.AbstractParser<EncodedLoggingMessage>() {
    @java.lang.Override
    public EncodedLoggingMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EncodedLoggingMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EncodedLoggingMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.android.build.gradle.internal.cxx.logging.EncodedLoggingMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

