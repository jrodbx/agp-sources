// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Metrics on camera usage.
 * </pre>
 *
 * Protobuf type {@code android_studio.EmulatorCameraSession}
 */
public  final class EmulatorCameraSession extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorCameraSession)
    EmulatorCameraSessionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorCameraSession.newBuilder() to construct.
  private EmulatorCameraSession(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorCameraSession() {
    type_ = 0;
    direction_ = 0;
    startResult_ = 0;
    virtualSceneName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorCameraSession();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EmulatorCameraSession(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType value = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              type_ = rawValue;
            }
            break;
          }
          case 16: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection value = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(2, rawValue);
            } else {
              bitField0_ |= 0x00000002;
              direction_ = rawValue;
            }
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            width_ = input.readUInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            height_ = input.readUInt32();
            break;
          }
          case 45: {
            bitField0_ |= 0x00000010;
            pixelFormat_ = input.readFixed32();
            break;
          }
          case 48: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult value = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(6, rawValue);
            } else {
              bitField0_ |= 0x00000020;
              startResult_ = rawValue;
            }
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            startupTimeMs_ = input.readUInt64();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            durationMs_ = input.readUInt64();
            break;
          }
          case 73: {
            bitField0_ |= 0x00000100;
            averageFramerate_ = input.readDouble();
            break;
          }
          case 82: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000200;
            virtualSceneName_ = bs;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCameraSession_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCameraSession_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.class, com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder.class);
  }

  /**
   * <pre>
   * List of possible camera types.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorCameraSession.EmulatorCameraType}
   */
  public enum EmulatorCameraType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified camera source.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_UNSPECIFIED = 0;</code>
     */
    EMULATOR_CAMERA_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * Camera source is the host's webcam.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_WEBCAM = 1;</code>
     */
    EMULATOR_CAMERA_TYPE_WEBCAM(1),
    /**
     * <pre>
     * Camera source is the virtual scene camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE = 2;</code>
     */
    EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE(2),
    /**
     * <pre>
     * Camera source is the video playback camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_VIDEO_PLAYBACK = 3;</code>
     */
    EMULATOR_CAMERA_TYPE_VIDEO_PLAYBACK(3),
    ;

    /**
     * <pre>
     * Unspecified camera source.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int EMULATOR_CAMERA_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Camera source is the host's webcam.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_WEBCAM = 1;</code>
     */
    public static final int EMULATOR_CAMERA_TYPE_WEBCAM_VALUE = 1;
    /**
     * <pre>
     * Camera source is the virtual scene camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE = 2;</code>
     */
    public static final int EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE_VALUE = 2;
    /**
     * <pre>
     * Camera source is the video playback camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_TYPE_VIDEO_PLAYBACK = 3;</code>
     */
    public static final int EMULATOR_CAMERA_TYPE_VIDEO_PLAYBACK_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorCameraType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorCameraType forNumber(int value) {
      switch (value) {
        case 0: return EMULATOR_CAMERA_TYPE_UNSPECIFIED;
        case 1: return EMULATOR_CAMERA_TYPE_WEBCAM;
        case 2: return EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE;
        case 3: return EMULATOR_CAMERA_TYPE_VIDEO_PLAYBACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorCameraType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorCameraType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorCameraType>() {
            public EmulatorCameraType findValueByNumber(int number) {
              return EmulatorCameraType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDescriptor().getEnumTypes().get(0);
    }

    private static final EmulatorCameraType[] VALUES = values();

    public static EmulatorCameraType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorCameraType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorCameraSession.EmulatorCameraType)
  }

  /**
   * <pre>
   * List of possible camera directions.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorCameraSession.EmulatorCameraDirection}
   */
  public enum EmulatorCameraDirection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified direction.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_DIRECTION_UNSPECIFIED = 0;</code>
     */
    EMULATOR_CAMERA_DIRECTION_UNSPECIFIED(0),
    /**
     * <pre>
     * Back-facing camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_DIRECTION_BACK = 1;</code>
     */
    EMULATOR_CAMERA_DIRECTION_BACK(1),
    /**
     * <pre>
     * Front-facing camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_DIRECTION_FRONT = 2;</code>
     */
    EMULATOR_CAMERA_DIRECTION_FRONT(2),
    ;

    /**
     * <pre>
     * Unspecified direction.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_DIRECTION_UNSPECIFIED = 0;</code>
     */
    public static final int EMULATOR_CAMERA_DIRECTION_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Back-facing camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_DIRECTION_BACK = 1;</code>
     */
    public static final int EMULATOR_CAMERA_DIRECTION_BACK_VALUE = 1;
    /**
     * <pre>
     * Front-facing camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_DIRECTION_FRONT = 2;</code>
     */
    public static final int EMULATOR_CAMERA_DIRECTION_FRONT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorCameraDirection valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorCameraDirection forNumber(int value) {
      switch (value) {
        case 0: return EMULATOR_CAMERA_DIRECTION_UNSPECIFIED;
        case 1: return EMULATOR_CAMERA_DIRECTION_BACK;
        case 2: return EMULATOR_CAMERA_DIRECTION_FRONT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorCameraDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorCameraDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorCameraDirection>() {
            public EmulatorCameraDirection findValueByNumber(int number) {
              return EmulatorCameraDirection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDescriptor().getEnumTypes().get(1);
    }

    private static final EmulatorCameraDirection[] VALUES = values();

    public static EmulatorCameraDirection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorCameraDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorCameraSession.EmulatorCameraDirection)
  }

  /**
   * <pre>
   * Camera start result, successful values are positive, failures are negative.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorCameraSession.EmulatorCameraStartResult}
   */
  public enum EmulatorCameraStartResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Camera was started successfully.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_SUCCESS = 0;</code>
     */
    EMULATOR_CAMERA_START_SUCCESS(0),
    /**
     * <pre>
     * The camera was already started.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_ALREADY_STARTED = 1;</code>
     */
    EMULATOR_CAMERA_START_ALREADY_STARTED(1),
    /**
     * <pre>
     * Failures.
     * Camera start failed with an unspecified error.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_FAILED = -1;</code>
     */
    EMULATOR_CAMERA_START_FAILED(-1),
    /**
     * <pre>
     * The camera was already started, but the parameters don't match.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_PARAMETER_MISMATCH = -2;</code>
     */
    EMULATOR_CAMERA_START_PARAMETER_MISMATCH(-2),
    /**
     * <pre>
     * The requested pixel format is unknown.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_UNKNOWN_PIXEL_FORMAT = -3;</code>
     */
    EMULATOR_CAMERA_START_UNKNOWN_PIXEL_FORMAT(-3),
    /**
     * <pre>
     * No pixel conversion available.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_NO_PIXEL_CONVERSION = -4;</code>
     */
    EMULATOR_CAMERA_START_NO_PIXEL_CONVERSION(-4),
    /**
     * <pre>
     * Out of memory when starting the camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_OUT_OF_MEMORY = -5;</code>
     */
    EMULATOR_CAMERA_START_OUT_OF_MEMORY(-5),
    ;

    /**
     * <pre>
     * Camera was started successfully.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_SUCCESS = 0;</code>
     */
    public static final int EMULATOR_CAMERA_START_SUCCESS_VALUE = 0;
    /**
     * <pre>
     * The camera was already started.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_ALREADY_STARTED = 1;</code>
     */
    public static final int EMULATOR_CAMERA_START_ALREADY_STARTED_VALUE = 1;
    /**
     * <pre>
     * Failures.
     * Camera start failed with an unspecified error.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_FAILED = -1;</code>
     */
    public static final int EMULATOR_CAMERA_START_FAILED_VALUE = -1;
    /**
     * <pre>
     * The camera was already started, but the parameters don't match.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_PARAMETER_MISMATCH = -2;</code>
     */
    public static final int EMULATOR_CAMERA_START_PARAMETER_MISMATCH_VALUE = -2;
    /**
     * <pre>
     * The requested pixel format is unknown.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_UNKNOWN_PIXEL_FORMAT = -3;</code>
     */
    public static final int EMULATOR_CAMERA_START_UNKNOWN_PIXEL_FORMAT_VALUE = -3;
    /**
     * <pre>
     * No pixel conversion available.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_NO_PIXEL_CONVERSION = -4;</code>
     */
    public static final int EMULATOR_CAMERA_START_NO_PIXEL_CONVERSION_VALUE = -4;
    /**
     * <pre>
     * Out of memory when starting the camera.
     * </pre>
     *
     * <code>EMULATOR_CAMERA_START_OUT_OF_MEMORY = -5;</code>
     */
    public static final int EMULATOR_CAMERA_START_OUT_OF_MEMORY_VALUE = -5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorCameraStartResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorCameraStartResult forNumber(int value) {
      switch (value) {
        case 0: return EMULATOR_CAMERA_START_SUCCESS;
        case 1: return EMULATOR_CAMERA_START_ALREADY_STARTED;
        case -1: return EMULATOR_CAMERA_START_FAILED;
        case -2: return EMULATOR_CAMERA_START_PARAMETER_MISMATCH;
        case -3: return EMULATOR_CAMERA_START_UNKNOWN_PIXEL_FORMAT;
        case -4: return EMULATOR_CAMERA_START_NO_PIXEL_CONVERSION;
        case -5: return EMULATOR_CAMERA_START_OUT_OF_MEMORY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorCameraStartResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorCameraStartResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorCameraStartResult>() {
            public EmulatorCameraStartResult findValueByNumber(int number) {
              return EmulatorCameraStartResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDescriptor().getEnumTypes().get(2);
    }

    private static final EmulatorCameraStartResult[] VALUES = values();

    public static EmulatorCameraStartResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorCameraStartResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorCameraSession.EmulatorCameraStartResult)
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <pre>
   * The camera source used for the camera session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraType type = 1;</code>
   * @return Whether the type field is set.
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The camera source used for the camera session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraType type = 1;</code>
   * @return The type.
   */
  public com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType getType() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType result = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType.valueOf(type_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType.EMULATOR_CAMERA_TYPE_UNSPECIFIED : result;
  }

  public static final int DIRECTION_FIELD_NUMBER = 2;
  private int direction_;
  /**
   * <pre>
   * The camera direction.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraDirection direction = 2;</code>
   * @return Whether the direction field is set.
   */
  public boolean hasDirection() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The camera direction.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraDirection direction = 2;</code>
   * @return The direction.
   */
  public com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection getDirection() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection result = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection.valueOf(direction_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection.EMULATOR_CAMERA_DIRECTION_UNSPECIFIED : result;
  }

  public static final int WIDTH_FIELD_NUMBER = 3;
  private int width_;
  /**
   * <pre>
   * Width of the camera frame in pixels.
   * </pre>
   *
   * <code>optional uint32 width = 3;</code>
   * @return Whether the width field is set.
   */
  public boolean hasWidth() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Width of the camera frame in pixels.
   * </pre>
   *
   * <code>optional uint32 width = 3;</code>
   * @return The width.
   */
  public int getWidth() {
    return width_;
  }

  public static final int HEIGHT_FIELD_NUMBER = 4;
  private int height_;
  /**
   * <pre>
   * Height of the camera frame in pixels.
   * </pre>
   *
   * <code>optional uint32 height = 4;</code>
   * @return Whether the height field is set.
   */
  public boolean hasHeight() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Height of the camera frame in pixels.
   * </pre>
   *
   * <code>optional uint32 height = 4;</code>
   * @return The height.
   */
  public int getHeight() {
    return height_;
  }

  public static final int PIXEL_FORMAT_FIELD_NUMBER = 5;
  private int pixelFormat_;
  /**
   * <pre>
   * FOURCC pixel format requested.
   * </pre>
   *
   * <code>optional fixed32 pixel_format = 5;</code>
   * @return Whether the pixelFormat field is set.
   */
  public boolean hasPixelFormat() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * FOURCC pixel format requested.
   * </pre>
   *
   * <code>optional fixed32 pixel_format = 5;</code>
   * @return The pixelFormat.
   */
  public int getPixelFormat() {
    return pixelFormat_;
  }

  public static final int START_RESULT_FIELD_NUMBER = 6;
  private int startResult_;
  /**
   * <pre>
   * Camera start result.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraStartResult start_result = 6;</code>
   * @return Whether the startResult field is set.
   */
  public boolean hasStartResult() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Camera start result.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraStartResult start_result = 6;</code>
   * @return The startResult.
   */
  public com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult getStartResult() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult result = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult.valueOf(startResult_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult.EMULATOR_CAMERA_START_SUCCESS : result;
  }

  public static final int STARTUP_TIME_MS_FIELD_NUMBER = 7;
  private long startupTimeMs_;
  /**
   * <pre>
   * How long the camera session took to initialize.
   * </pre>
   *
   * <code>optional uint64 startup_time_ms = 7;</code>
   * @return Whether the startupTimeMs field is set.
   */
  public boolean hasStartupTimeMs() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * How long the camera session took to initialize.
   * </pre>
   *
   * <code>optional uint64 startup_time_ms = 7;</code>
   * @return The startupTimeMs.
   */
  public long getStartupTimeMs() {
    return startupTimeMs_;
  }

  public static final int DURATION_MS_FIELD_NUMBER = 8;
  private long durationMs_;
  /**
   * <pre>
   * How long the session was running, in milliseconds.
   * </pre>
   *
   * <code>optional uint64 duration_ms = 8;</code>
   * @return Whether the durationMs field is set.
   */
  public boolean hasDurationMs() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * How long the session was running, in milliseconds.
   * </pre>
   *
   * <code>optional uint64 duration_ms = 8;</code>
   * @return The durationMs.
   */
  public long getDurationMs() {
    return durationMs_;
  }

  public static final int AVERAGE_FRAMERATE_FIELD_NUMBER = 9;
  private double averageFramerate_;
  /**
   * <pre>
   * Average framerate of the camera.
   * </pre>
   *
   * <code>optional double average_framerate = 9;</code>
   * @return Whether the averageFramerate field is set.
   */
  public boolean hasAverageFramerate() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Average framerate of the camera.
   * </pre>
   *
   * <code>optional double average_framerate = 9;</code>
   * @return The averageFramerate.
   */
  public double getAverageFramerate() {
    return averageFramerate_;
  }

  public static final int VIRTUAL_SCENE_NAME_FIELD_NUMBER = 10;
  private volatile java.lang.Object virtualSceneName_;
  /**
   * <pre>
   * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
   * Name of the virtual scene that is loaded.
   * </pre>
   *
   * <code>optional string virtual_scene_name = 10;</code>
   * @return Whether the virtualSceneName field is set.
   */
  public boolean hasVirtualSceneName() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
   * Name of the virtual scene that is loaded.
   * </pre>
   *
   * <code>optional string virtual_scene_name = 10;</code>
   * @return The virtualSceneName.
   */
  public java.lang.String getVirtualSceneName() {
    java.lang.Object ref = virtualSceneName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        virtualSceneName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
   * Name of the virtual scene that is loaded.
   * </pre>
   *
   * <code>optional string virtual_scene_name = 10;</code>
   * @return The bytes for virtualSceneName.
   */
  public com.google.protobuf.ByteString
      getVirtualSceneNameBytes() {
    java.lang.Object ref = virtualSceneName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      virtualSceneName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, direction_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt32(3, width_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt32(4, height_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeFixed32(5, pixelFormat_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeEnum(6, startResult_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeUInt64(7, startupTimeMs_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeUInt64(8, durationMs_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeDouble(9, averageFramerate_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, virtualSceneName_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, direction_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, width_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, height_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(5, pixelFormat_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, startResult_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, startupTimeMs_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, durationMs_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(9, averageFramerate_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, virtualSceneName_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorCameraSession)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorCameraSession other = (com.google.wireless.android.sdk.stats.EmulatorCameraSession) obj;

    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasDirection() != other.hasDirection()) return false;
    if (hasDirection()) {
      if (direction_ != other.direction_) return false;
    }
    if (hasWidth() != other.hasWidth()) return false;
    if (hasWidth()) {
      if (getWidth()
          != other.getWidth()) return false;
    }
    if (hasHeight() != other.hasHeight()) return false;
    if (hasHeight()) {
      if (getHeight()
          != other.getHeight()) return false;
    }
    if (hasPixelFormat() != other.hasPixelFormat()) return false;
    if (hasPixelFormat()) {
      if (getPixelFormat()
          != other.getPixelFormat()) return false;
    }
    if (hasStartResult() != other.hasStartResult()) return false;
    if (hasStartResult()) {
      if (startResult_ != other.startResult_) return false;
    }
    if (hasStartupTimeMs() != other.hasStartupTimeMs()) return false;
    if (hasStartupTimeMs()) {
      if (getStartupTimeMs()
          != other.getStartupTimeMs()) return false;
    }
    if (hasDurationMs() != other.hasDurationMs()) return false;
    if (hasDurationMs()) {
      if (getDurationMs()
          != other.getDurationMs()) return false;
    }
    if (hasAverageFramerate() != other.hasAverageFramerate()) return false;
    if (hasAverageFramerate()) {
      if (java.lang.Double.doubleToLongBits(getAverageFramerate())
          != java.lang.Double.doubleToLongBits(
              other.getAverageFramerate())) return false;
    }
    if (hasVirtualSceneName() != other.hasVirtualSceneName()) return false;
    if (hasVirtualSceneName()) {
      if (!getVirtualSceneName()
          .equals(other.getVirtualSceneName())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasDirection()) {
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + direction_;
    }
    if (hasWidth()) {
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
    }
    if (hasHeight()) {
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
    }
    if (hasPixelFormat()) {
      hash = (37 * hash) + PIXEL_FORMAT_FIELD_NUMBER;
      hash = (53 * hash) + getPixelFormat();
    }
    if (hasStartResult()) {
      hash = (37 * hash) + START_RESULT_FIELD_NUMBER;
      hash = (53 * hash) + startResult_;
    }
    if (hasStartupTimeMs()) {
      hash = (37 * hash) + STARTUP_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartupTimeMs());
    }
    if (hasDurationMs()) {
      hash = (37 * hash) + DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDurationMs());
    }
    if (hasAverageFramerate()) {
      hash = (37 * hash) + AVERAGE_FRAMERATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAverageFramerate()));
    }
    if (hasVirtualSceneName()) {
      hash = (37 * hash) + VIRTUAL_SCENE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getVirtualSceneName().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorCameraSession prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Metrics on camera usage.
   * </pre>
   *
   * Protobuf type {@code android_studio.EmulatorCameraSession}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorCameraSession)
      com.google.wireless.android.sdk.stats.EmulatorCameraSessionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCameraSession_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCameraSession_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorCameraSession.class, com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorCameraSession.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      direction_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      width_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      height_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      pixelFormat_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      startResult_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      startupTimeMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      durationMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      averageFramerate_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000100);
      virtualSceneName_ = "";
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCameraSession_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession build() {
      com.google.wireless.android.sdk.stats.EmulatorCameraSession result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorCameraSession result = new com.google.wireless.android.sdk.stats.EmulatorCameraSession(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.direction_ = direction_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.width_ = width_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.height_ = height_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.pixelFormat_ = pixelFormat_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        to_bitField0_ |= 0x00000020;
      }
      result.startResult_ = startResult_;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.startupTimeMs_ = startupTimeMs_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.durationMs_ = durationMs_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.averageFramerate_ = averageFramerate_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        to_bitField0_ |= 0x00000200;
      }
      result.virtualSceneName_ = virtualSceneName_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorCameraSession) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorCameraSession)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorCameraSession other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance()) return this;
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasDirection()) {
        setDirection(other.getDirection());
      }
      if (other.hasWidth()) {
        setWidth(other.getWidth());
      }
      if (other.hasHeight()) {
        setHeight(other.getHeight());
      }
      if (other.hasPixelFormat()) {
        setPixelFormat(other.getPixelFormat());
      }
      if (other.hasStartResult()) {
        setStartResult(other.getStartResult());
      }
      if (other.hasStartupTimeMs()) {
        setStartupTimeMs(other.getStartupTimeMs());
      }
      if (other.hasDurationMs()) {
        setDurationMs(other.getDurationMs());
      }
      if (other.hasAverageFramerate()) {
        setAverageFramerate(other.getAverageFramerate());
      }
      if (other.hasVirtualSceneName()) {
        bitField0_ |= 0x00000200;
        virtualSceneName_ = other.virtualSceneName_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.EmulatorCameraSession parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.EmulatorCameraSession) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * The camera source used for the camera session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraType type = 1;</code>
     * @return Whether the type field is set.
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The camera source used for the camera session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraType type = 1;</code>
     * @return The type.
     */
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType getType() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType result = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType.valueOf(type_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType.EMULATOR_CAMERA_TYPE_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The camera source used for the camera session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraType type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The camera source used for the camera session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private int direction_ = 0;
    /**
     * <pre>
     * The camera direction.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraDirection direction = 2;</code>
     * @return Whether the direction field is set.
     */
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The camera direction.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraDirection direction = 2;</code>
     * @return The direction.
     */
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection getDirection() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection result = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection.valueOf(direction_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection.EMULATOR_CAMERA_DIRECTION_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * The camera direction.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraDirection direction = 2;</code>
     * @param value The direction to set.
     * @return This builder for chaining.
     */
    public Builder setDirection(com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraDirection value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      direction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The camera direction.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraDirection direction = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDirection() {
      bitField0_ = (bitField0_ & ~0x00000002);
      direction_ = 0;
      onChanged();
      return this;
    }

    private int width_ ;
    /**
     * <pre>
     * Width of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 width = 3;</code>
     * @return Whether the width field is set.
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Width of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 width = 3;</code>
     * @return The width.
     */
    public int getWidth() {
      return width_;
    }
    /**
     * <pre>
     * Width of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 width = 3;</code>
     * @param value The width to set.
     * @return This builder for chaining.
     */
    public Builder setWidth(int value) {
      bitField0_ |= 0x00000004;
      width_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Width of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 width = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearWidth() {
      bitField0_ = (bitField0_ & ~0x00000004);
      width_ = 0;
      onChanged();
      return this;
    }

    private int height_ ;
    /**
     * <pre>
     * Height of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return Whether the height field is set.
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Height of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return The height.
     */
    public int getHeight() {
      return height_;
    }
    /**
     * <pre>
     * Height of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @param value The height to set.
     * @return This builder for chaining.
     */
    public Builder setHeight(int value) {
      bitField0_ |= 0x00000008;
      height_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Height of the camera frame in pixels.
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeight() {
      bitField0_ = (bitField0_ & ~0x00000008);
      height_ = 0;
      onChanged();
      return this;
    }

    private int pixelFormat_ ;
    /**
     * <pre>
     * FOURCC pixel format requested.
     * </pre>
     *
     * <code>optional fixed32 pixel_format = 5;</code>
     * @return Whether the pixelFormat field is set.
     */
    public boolean hasPixelFormat() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * FOURCC pixel format requested.
     * </pre>
     *
     * <code>optional fixed32 pixel_format = 5;</code>
     * @return The pixelFormat.
     */
    public int getPixelFormat() {
      return pixelFormat_;
    }
    /**
     * <pre>
     * FOURCC pixel format requested.
     * </pre>
     *
     * <code>optional fixed32 pixel_format = 5;</code>
     * @param value The pixelFormat to set.
     * @return This builder for chaining.
     */
    public Builder setPixelFormat(int value) {
      bitField0_ |= 0x00000010;
      pixelFormat_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * FOURCC pixel format requested.
     * </pre>
     *
     * <code>optional fixed32 pixel_format = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPixelFormat() {
      bitField0_ = (bitField0_ & ~0x00000010);
      pixelFormat_ = 0;
      onChanged();
      return this;
    }

    private int startResult_ = 0;
    /**
     * <pre>
     * Camera start result.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraStartResult start_result = 6;</code>
     * @return Whether the startResult field is set.
     */
    public boolean hasStartResult() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Camera start result.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraStartResult start_result = 6;</code>
     * @return The startResult.
     */
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult getStartResult() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult result = com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult.valueOf(startResult_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult.EMULATOR_CAMERA_START_SUCCESS : result;
    }
    /**
     * <pre>
     * Camera start result.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraStartResult start_result = 6;</code>
     * @param value The startResult to set.
     * @return This builder for chaining.
     */
    public Builder setStartResult(com.google.wireless.android.sdk.stats.EmulatorCameraSession.EmulatorCameraStartResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      startResult_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Camera start result.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession.EmulatorCameraStartResult start_result = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartResult() {
      bitField0_ = (bitField0_ & ~0x00000020);
      startResult_ = 0;
      onChanged();
      return this;
    }

    private long startupTimeMs_ ;
    /**
     * <pre>
     * How long the camera session took to initialize.
     * </pre>
     *
     * <code>optional uint64 startup_time_ms = 7;</code>
     * @return Whether the startupTimeMs field is set.
     */
    public boolean hasStartupTimeMs() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * How long the camera session took to initialize.
     * </pre>
     *
     * <code>optional uint64 startup_time_ms = 7;</code>
     * @return The startupTimeMs.
     */
    public long getStartupTimeMs() {
      return startupTimeMs_;
    }
    /**
     * <pre>
     * How long the camera session took to initialize.
     * </pre>
     *
     * <code>optional uint64 startup_time_ms = 7;</code>
     * @param value The startupTimeMs to set.
     * @return This builder for chaining.
     */
    public Builder setStartupTimeMs(long value) {
      bitField0_ |= 0x00000040;
      startupTimeMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How long the camera session took to initialize.
     * </pre>
     *
     * <code>optional uint64 startup_time_ms = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartupTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000040);
      startupTimeMs_ = 0L;
      onChanged();
      return this;
    }

    private long durationMs_ ;
    /**
     * <pre>
     * How long the session was running, in milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 8;</code>
     * @return Whether the durationMs field is set.
     */
    public boolean hasDurationMs() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * How long the session was running, in milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 8;</code>
     * @return The durationMs.
     */
    public long getDurationMs() {
      return durationMs_;
    }
    /**
     * <pre>
     * How long the session was running, in milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 8;</code>
     * @param value The durationMs to set.
     * @return This builder for chaining.
     */
    public Builder setDurationMs(long value) {
      bitField0_ |= 0x00000080;
      durationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How long the session was running, in milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000080);
      durationMs_ = 0L;
      onChanged();
      return this;
    }

    private double averageFramerate_ ;
    /**
     * <pre>
     * Average framerate of the camera.
     * </pre>
     *
     * <code>optional double average_framerate = 9;</code>
     * @return Whether the averageFramerate field is set.
     */
    public boolean hasAverageFramerate() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Average framerate of the camera.
     * </pre>
     *
     * <code>optional double average_framerate = 9;</code>
     * @return The averageFramerate.
     */
    public double getAverageFramerate() {
      return averageFramerate_;
    }
    /**
     * <pre>
     * Average framerate of the camera.
     * </pre>
     *
     * <code>optional double average_framerate = 9;</code>
     * @param value The averageFramerate to set.
     * @return This builder for chaining.
     */
    public Builder setAverageFramerate(double value) {
      bitField0_ |= 0x00000100;
      averageFramerate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Average framerate of the camera.
     * </pre>
     *
     * <code>optional double average_framerate = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearAverageFramerate() {
      bitField0_ = (bitField0_ & ~0x00000100);
      averageFramerate_ = 0D;
      onChanged();
      return this;
    }

    private java.lang.Object virtualSceneName_ = "";
    /**
     * <pre>
     * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
     * Name of the virtual scene that is loaded.
     * </pre>
     *
     * <code>optional string virtual_scene_name = 10;</code>
     * @return Whether the virtualSceneName field is set.
     */
    public boolean hasVirtualSceneName() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
     * Name of the virtual scene that is loaded.
     * </pre>
     *
     * <code>optional string virtual_scene_name = 10;</code>
     * @return The virtualSceneName.
     */
    public java.lang.String getVirtualSceneName() {
      java.lang.Object ref = virtualSceneName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          virtualSceneName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
     * Name of the virtual scene that is loaded.
     * </pre>
     *
     * <code>optional string virtual_scene_name = 10;</code>
     * @return The bytes for virtualSceneName.
     */
    public com.google.protobuf.ByteString
        getVirtualSceneNameBytes() {
      java.lang.Object ref = virtualSceneName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        virtualSceneName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
     * Name of the virtual scene that is loaded.
     * </pre>
     *
     * <code>optional string virtual_scene_name = 10;</code>
     * @param value The virtualSceneName to set.
     * @return This builder for chaining.
     */
    public Builder setVirtualSceneName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
      virtualSceneName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
     * Name of the virtual scene that is loaded.
     * </pre>
     *
     * <code>optional string virtual_scene_name = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearVirtualSceneName() {
      bitField0_ = (bitField0_ & ~0x00000200);
      virtualSceneName_ = getDefaultInstance().getVirtualSceneName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * set when type = EMULATOR_CAMERA_TYPE_VIRTUAL_SCENE
     * Name of the virtual scene that is loaded.
     * </pre>
     *
     * <code>optional string virtual_scene_name = 10;</code>
     * @param value The bytes for virtualSceneName to set.
     * @return This builder for chaining.
     */
    public Builder setVirtualSceneNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
      virtualSceneName_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorCameraSession)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorCameraSession)
  private static final com.google.wireless.android.sdk.stats.EmulatorCameraSession DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorCameraSession();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorCameraSession getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorCameraSession>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorCameraSession>() {
    @java.lang.Override
    public EmulatorCameraSession parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EmulatorCameraSession(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EmulatorCameraSession> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorCameraSession> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorCameraSession getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

