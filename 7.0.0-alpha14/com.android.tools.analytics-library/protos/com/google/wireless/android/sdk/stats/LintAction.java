// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * A quickfix for lint was invoked: data about issue type, fix type, etc
 * </pre>
 *
 * Protobuf type {@code android_studio.LintAction}
 */
public  final class LintAction extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.LintAction)
    LintActionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LintAction.newBuilder() to construct.
  private LintAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LintAction() {
    issueId_ = "";
    projectId_ = "";
    fixId_ = "";
    lintFeedback_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LintAction();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LintAction(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            issueId_ = bs;
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            projectId_ = bs;
            break;
          }
          case 26: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000004;
            fixId_ = bs;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.LintAction.LintFeedback value = com.google.wireless.android.sdk.stats.LintAction.LintFeedback.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(4, rawValue);
            } else {
              bitField0_ |= 0x00000008;
              lintFeedback_ = rawValue;
            }
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LintAction_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LintAction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.LintAction.class, com.google.wireless.android.sdk.stats.LintAction.Builder.class);
  }

  /**
   * <pre>
   * The user has provided feedback about this issue: problems, sentiment, etc
   * </pre>
   *
   * Protobuf enum {@code android_studio.LintAction.LintFeedback}
   */
  public enum LintFeedback
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Something else
     * </pre>
     *
     * <code>UNKNOWN_FEEDBACK = 0;</code>
     */
    UNKNOWN_FEEDBACK(0),
    /**
     * <pre>
     * Lint incorrectly diagnosed the code
     * </pre>
     *
     * <code>FALSE_POSITIVE = 1;</code>
     */
    FALSE_POSITIVE(1),
    /**
     * <pre>
     * The message is not clear
     * </pre>
     *
     * <code>UNCLEAR_MESSAGE = 2;</code>
     */
    UNCLEAR_MESSAGE(2),
    /**
     * <pre>
     * I liked this check, thanks
     * </pre>
     *
     * <code>LOVE_IT = 3;</code>
     */
    LOVE_IT(3),
    ;

    /**
     * <pre>
     * Something else
     * </pre>
     *
     * <code>UNKNOWN_FEEDBACK = 0;</code>
     */
    public static final int UNKNOWN_FEEDBACK_VALUE = 0;
    /**
     * <pre>
     * Lint incorrectly diagnosed the code
     * </pre>
     *
     * <code>FALSE_POSITIVE = 1;</code>
     */
    public static final int FALSE_POSITIVE_VALUE = 1;
    /**
     * <pre>
     * The message is not clear
     * </pre>
     *
     * <code>UNCLEAR_MESSAGE = 2;</code>
     */
    public static final int UNCLEAR_MESSAGE_VALUE = 2;
    /**
     * <pre>
     * I liked this check, thanks
     * </pre>
     *
     * <code>LOVE_IT = 3;</code>
     */
    public static final int LOVE_IT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LintFeedback valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LintFeedback forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_FEEDBACK;
        case 1: return FALSE_POSITIVE;
        case 2: return UNCLEAR_MESSAGE;
        case 3: return LOVE_IT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LintFeedback>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LintFeedback> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LintFeedback>() {
            public LintFeedback findValueByNumber(int number) {
              return LintFeedback.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.LintAction.getDescriptor().getEnumTypes().get(0);
    }

    private static final LintFeedback[] VALUES = values();

    public static LintFeedback valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LintFeedback(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.LintAction.LintFeedback)
  }

  private int bitField0_;
  public static final int ISSUE_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object issueId_;
  /**
   * <pre>
   * The issue id is a unique identifier for this type of problem.
   * Examples of issue id's are "HardcodedText" and "NewApi".
   * </pre>
   *
   * <code>optional string issue_id = 1;</code>
   * @return Whether the issueId field is set.
   */
  public boolean hasIssueId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The issue id is a unique identifier for this type of problem.
   * Examples of issue id's are "HardcodedText" and "NewApi".
   * </pre>
   *
   * <code>optional string issue_id = 1;</code>
   * @return The issueId.
   */
  public java.lang.String getIssueId() {
    java.lang.Object ref = issueId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        issueId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The issue id is a unique identifier for this type of problem.
   * Examples of issue id's are "HardcodedText" and "NewApi".
   * </pre>
   *
   * <code>optional string issue_id = 1;</code>
   * @return The bytes for issueId.
   */
  public com.google.protobuf.ByteString
      getIssueIdBytes() {
    java.lang.Object ref = issueId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      issueId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROJECT_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object projectId_;
  /**
   * <pre>
   * Client-side salted, sha256 of the root project path.
   * This exists to allow multiple instant run builds in one project by one
   * user to be correlated.
   * The salt is rotated every 28 days, so it is not a permanent pseudonymous
   * identifier. It is anonymized and is unique per user, but has a 1-N
   * relation.
   * </pre>
   *
   * <code>optional string project_id = 2;</code>
   * @return Whether the projectId field is set.
   */
  public boolean hasProjectId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Client-side salted, sha256 of the root project path.
   * This exists to allow multiple instant run builds in one project by one
   * user to be correlated.
   * The salt is rotated every 28 days, so it is not a permanent pseudonymous
   * identifier. It is anonymized and is unique per user, but has a 1-N
   * relation.
   * </pre>
   *
   * <code>optional string project_id = 2;</code>
   * @return The projectId.
   */
  public java.lang.String getProjectId() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        projectId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Client-side salted, sha256 of the root project path.
   * This exists to allow multiple instant run builds in one project by one
   * user to be correlated.
   * The salt is rotated every 28 days, so it is not a permanent pseudonymous
   * identifier. It is anonymized and is unique per user, but has a 1-N
   * relation.
   * </pre>
   *
   * <code>optional string project_id = 2;</code>
   * @return The bytes for projectId.
   */
  public com.google.protobuf.ByteString
      getProjectIdBytes() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      projectId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIX_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object fixId_;
  /**
   * <pre>
   * A unique identifier for this quickfix.
   * </pre>
   *
   * <code>optional string fix_id = 3;</code>
   * @return Whether the fixId field is set.
   */
  public boolean hasFixId() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * A unique identifier for this quickfix.
   * </pre>
   *
   * <code>optional string fix_id = 3;</code>
   * @return The fixId.
   */
  public java.lang.String getFixId() {
    java.lang.Object ref = fixId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        fixId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * A unique identifier for this quickfix.
   * </pre>
   *
   * <code>optional string fix_id = 3;</code>
   * @return The bytes for fixId.
   */
  public com.google.protobuf.ByteString
      getFixIdBytes() {
    java.lang.Object ref = fixId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fixId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LINT_FEEDBACK_FIELD_NUMBER = 4;
  private int lintFeedback_;
  /**
   * <pre>
   * Feedback about this lint check if available
   * </pre>
   *
   * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
   * @return Whether the lintFeedback field is set.
   */
  public boolean hasLintFeedback() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Feedback about this lint check if available
   * </pre>
   *
   * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
   * @return The lintFeedback.
   */
  public com.google.wireless.android.sdk.stats.LintAction.LintFeedback getLintFeedback() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.LintAction.LintFeedback result = com.google.wireless.android.sdk.stats.LintAction.LintFeedback.valueOf(lintFeedback_);
    return result == null ? com.google.wireless.android.sdk.stats.LintAction.LintFeedback.UNKNOWN_FEEDBACK : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, issueId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, projectId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fixId_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(4, lintFeedback_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, issueId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, projectId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fixId_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, lintFeedback_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.LintAction)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.LintAction other = (com.google.wireless.android.sdk.stats.LintAction) obj;

    if (hasIssueId() != other.hasIssueId()) return false;
    if (hasIssueId()) {
      if (!getIssueId()
          .equals(other.getIssueId())) return false;
    }
    if (hasProjectId() != other.hasProjectId()) return false;
    if (hasProjectId()) {
      if (!getProjectId()
          .equals(other.getProjectId())) return false;
    }
    if (hasFixId() != other.hasFixId()) return false;
    if (hasFixId()) {
      if (!getFixId()
          .equals(other.getFixId())) return false;
    }
    if (hasLintFeedback() != other.hasLintFeedback()) return false;
    if (hasLintFeedback()) {
      if (lintFeedback_ != other.lintFeedback_) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasIssueId()) {
      hash = (37 * hash) + ISSUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIssueId().hashCode();
    }
    if (hasProjectId()) {
      hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getProjectId().hashCode();
    }
    if (hasFixId()) {
      hash = (37 * hash) + FIX_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFixId().hashCode();
    }
    if (hasLintFeedback()) {
      hash = (37 * hash) + LINT_FEEDBACK_FIELD_NUMBER;
      hash = (53 * hash) + lintFeedback_;
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LintAction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.LintAction prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A quickfix for lint was invoked: data about issue type, fix type, etc
   * </pre>
   *
   * Protobuf type {@code android_studio.LintAction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.LintAction)
      com.google.wireless.android.sdk.stats.LintActionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LintAction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LintAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LintAction.class, com.google.wireless.android.sdk.stats.LintAction.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.LintAction.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      issueId_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      projectId_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      fixId_ = "";
      bitField0_ = (bitField0_ & ~0x00000004);
      lintFeedback_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LintAction_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LintAction getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.LintAction.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LintAction build() {
      com.google.wireless.android.sdk.stats.LintAction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LintAction buildPartial() {
      com.google.wireless.android.sdk.stats.LintAction result = new com.google.wireless.android.sdk.stats.LintAction(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.issueId_ = issueId_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.projectId_ = projectId_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        to_bitField0_ |= 0x00000004;
      }
      result.fixId_ = fixId_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        to_bitField0_ |= 0x00000008;
      }
      result.lintFeedback_ = lintFeedback_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.LintAction) {
        return mergeFrom((com.google.wireless.android.sdk.stats.LintAction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.LintAction other) {
      if (other == com.google.wireless.android.sdk.stats.LintAction.getDefaultInstance()) return this;
      if (other.hasIssueId()) {
        bitField0_ |= 0x00000001;
        issueId_ = other.issueId_;
        onChanged();
      }
      if (other.hasProjectId()) {
        bitField0_ |= 0x00000002;
        projectId_ = other.projectId_;
        onChanged();
      }
      if (other.hasFixId()) {
        bitField0_ |= 0x00000004;
        fixId_ = other.fixId_;
        onChanged();
      }
      if (other.hasLintFeedback()) {
        setLintFeedback(other.getLintFeedback());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.LintAction parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.LintAction) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object issueId_ = "";
    /**
     * <pre>
     * The issue id is a unique identifier for this type of problem.
     * Examples of issue id's are "HardcodedText" and "NewApi".
     * </pre>
     *
     * <code>optional string issue_id = 1;</code>
     * @return Whether the issueId field is set.
     */
    public boolean hasIssueId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The issue id is a unique identifier for this type of problem.
     * Examples of issue id's are "HardcodedText" and "NewApi".
     * </pre>
     *
     * <code>optional string issue_id = 1;</code>
     * @return The issueId.
     */
    public java.lang.String getIssueId() {
      java.lang.Object ref = issueId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          issueId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The issue id is a unique identifier for this type of problem.
     * Examples of issue id's are "HardcodedText" and "NewApi".
     * </pre>
     *
     * <code>optional string issue_id = 1;</code>
     * @return The bytes for issueId.
     */
    public com.google.protobuf.ByteString
        getIssueIdBytes() {
      java.lang.Object ref = issueId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        issueId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The issue id is a unique identifier for this type of problem.
     * Examples of issue id's are "HardcodedText" and "NewApi".
     * </pre>
     *
     * <code>optional string issue_id = 1;</code>
     * @param value The issueId to set.
     * @return This builder for chaining.
     */
    public Builder setIssueId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      issueId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The issue id is a unique identifier for this type of problem.
     * Examples of issue id's are "HardcodedText" and "NewApi".
     * </pre>
     *
     * <code>optional string issue_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIssueId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      issueId_ = getDefaultInstance().getIssueId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The issue id is a unique identifier for this type of problem.
     * Examples of issue id's are "HardcodedText" and "NewApi".
     * </pre>
     *
     * <code>optional string issue_id = 1;</code>
     * @param value The bytes for issueId to set.
     * @return This builder for chaining.
     */
    public Builder setIssueIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      issueId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object projectId_ = "";
    /**
     * <pre>
     * Client-side salted, sha256 of the root project path.
     * This exists to allow multiple instant run builds in one project by one
     * user to be correlated.
     * The salt is rotated every 28 days, so it is not a permanent pseudonymous
     * identifier. It is anonymized and is unique per user, but has a 1-N
     * relation.
     * </pre>
     *
     * <code>optional string project_id = 2;</code>
     * @return Whether the projectId field is set.
     */
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Client-side salted, sha256 of the root project path.
     * This exists to allow multiple instant run builds in one project by one
     * user to be correlated.
     * The salt is rotated every 28 days, so it is not a permanent pseudonymous
     * identifier. It is anonymized and is unique per user, but has a 1-N
     * relation.
     * </pre>
     *
     * <code>optional string project_id = 2;</code>
     * @return The projectId.
     */
    public java.lang.String getProjectId() {
      java.lang.Object ref = projectId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          projectId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Client-side salted, sha256 of the root project path.
     * This exists to allow multiple instant run builds in one project by one
     * user to be correlated.
     * The salt is rotated every 28 days, so it is not a permanent pseudonymous
     * identifier. It is anonymized and is unique per user, but has a 1-N
     * relation.
     * </pre>
     *
     * <code>optional string project_id = 2;</code>
     * @return The bytes for projectId.
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      java.lang.Object ref = projectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Client-side salted, sha256 of the root project path.
     * This exists to allow multiple instant run builds in one project by one
     * user to be correlated.
     * The salt is rotated every 28 days, so it is not a permanent pseudonymous
     * identifier. It is anonymized and is unique per user, but has a 1-N
     * relation.
     * </pre>
     *
     * <code>optional string project_id = 2;</code>
     * @param value The projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      projectId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Client-side salted, sha256 of the root project path.
     * This exists to allow multiple instant run builds in one project by one
     * user to be correlated.
     * The salt is rotated every 28 days, so it is not a permanent pseudonymous
     * identifier. It is anonymized and is unique per user, but has a 1-N
     * relation.
     * </pre>
     *
     * <code>optional string project_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      projectId_ = getDefaultInstance().getProjectId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Client-side salted, sha256 of the root project path.
     * This exists to allow multiple instant run builds in one project by one
     * user to be correlated.
     * The salt is rotated every 28 days, so it is not a permanent pseudonymous
     * identifier. It is anonymized and is unique per user, but has a 1-N
     * relation.
     * </pre>
     *
     * <code>optional string project_id = 2;</code>
     * @param value The bytes for projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      projectId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fixId_ = "";
    /**
     * <pre>
     * A unique identifier for this quickfix.
     * </pre>
     *
     * <code>optional string fix_id = 3;</code>
     * @return Whether the fixId field is set.
     */
    public boolean hasFixId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * A unique identifier for this quickfix.
     * </pre>
     *
     * <code>optional string fix_id = 3;</code>
     * @return The fixId.
     */
    public java.lang.String getFixId() {
      java.lang.Object ref = fixId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fixId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A unique identifier for this quickfix.
     * </pre>
     *
     * <code>optional string fix_id = 3;</code>
     * @return The bytes for fixId.
     */
    public com.google.protobuf.ByteString
        getFixIdBytes() {
      java.lang.Object ref = fixId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fixId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A unique identifier for this quickfix.
     * </pre>
     *
     * <code>optional string fix_id = 3;</code>
     * @param value The fixId to set.
     * @return This builder for chaining.
     */
    public Builder setFixId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      fixId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for this quickfix.
     * </pre>
     *
     * <code>optional string fix_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFixId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      fixId_ = getDefaultInstance().getFixId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for this quickfix.
     * </pre>
     *
     * <code>optional string fix_id = 3;</code>
     * @param value The bytes for fixId to set.
     * @return This builder for chaining.
     */
    public Builder setFixIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      fixId_ = value;
      onChanged();
      return this;
    }

    private int lintFeedback_ = 0;
    /**
     * <pre>
     * Feedback about this lint check if available
     * </pre>
     *
     * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
     * @return Whether the lintFeedback field is set.
     */
    public boolean hasLintFeedback() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Feedback about this lint check if available
     * </pre>
     *
     * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
     * @return The lintFeedback.
     */
    public com.google.wireless.android.sdk.stats.LintAction.LintFeedback getLintFeedback() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.LintAction.LintFeedback result = com.google.wireless.android.sdk.stats.LintAction.LintFeedback.valueOf(lintFeedback_);
      return result == null ? com.google.wireless.android.sdk.stats.LintAction.LintFeedback.UNKNOWN_FEEDBACK : result;
    }
    /**
     * <pre>
     * Feedback about this lint check if available
     * </pre>
     *
     * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
     * @param value The lintFeedback to set.
     * @return This builder for chaining.
     */
    public Builder setLintFeedback(com.google.wireless.android.sdk.stats.LintAction.LintFeedback value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      lintFeedback_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Feedback about this lint check if available
     * </pre>
     *
     * <code>optional .android_studio.LintAction.LintFeedback lint_feedback = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLintFeedback() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lintFeedback_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.LintAction)
  }

  // @@protoc_insertion_point(class_scope:android_studio.LintAction)
  private static final com.google.wireless.android.sdk.stats.LintAction DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LintAction();
  }

  public static com.google.wireless.android.sdk.stats.LintAction getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<LintAction>
      PARSER = new com.google.protobuf.AbstractParser<LintAction>() {
    @java.lang.Override
    public LintAction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LintAction(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LintAction> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LintAction> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LintAction getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

