// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface TraceProcessorDaemonQueryStatsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.TraceProcessorDaemonQueryStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *&#47; Data for all query types:
   * Time to perform the whole method
   * </pre>
   *
   * <code>optional uint64 method_duration_ms = 1;</code>
   * @return Whether the methodDurationMs field is set.
   */
  boolean hasMethodDurationMs();
  /**
   * <pre>
   *&#47; Data for all query types:
   * Time to perform the whole method
   * </pre>
   *
   * <code>optional uint64 method_duration_ms = 1;</code>
   * @return The methodDurationMs.
   */
  long getMethodDurationMs();

  /**
   * <pre>
   * Time to perform the gRPC query only
   * </pre>
   *
   * <code>optional uint64 grpc_query_duration_ms = 2;</code>
   * @return Whether the grpcQueryDurationMs field is set.
   */
  boolean hasGrpcQueryDurationMs();
  /**
   * <pre>
   * Time to perform the gRPC query only
   * </pre>
   *
   * <code>optional uint64 grpc_query_duration_ms = 2;</code>
   * @return The grpcQueryDurationMs.
   */
  long getGrpcQueryDurationMs();

  /**
   * <pre>
   * The return status of the query
   * </pre>
   *
   * <code>optional .android_studio.TraceProcessorDaemonQueryStats.QueryReturnStatus query_status = 3;</code>
   * @return Whether the queryStatus field is set.
   */
  boolean hasQueryStatus();
  /**
   * <pre>
   * The return status of the query
   * </pre>
   *
   * <code>optional .android_studio.TraceProcessorDaemonQueryStats.QueryReturnStatus query_status = 3;</code>
   * @return The queryStatus.
   */
  com.google.wireless.android.sdk.stats.TraceProcessorDaemonQueryStats.QueryReturnStatus getQueryStatus();

  /**
   * <pre>
   *&#47; Set when |TPD_QUERY_LOAD_TRACE|
   * The file size in bytes of the trace we tried to load.
   * </pre>
   *
   * <code>optional uint64 trace_size_bytes = 100;</code>
   * @return Whether the traceSizeBytes field is set.
   */
  boolean hasTraceSizeBytes();
  /**
   * <pre>
   *&#47; Set when |TPD_QUERY_LOAD_TRACE|
   * The file size in bytes of the trace we tried to load.
   * </pre>
   *
   * <code>optional uint64 trace_size_bytes = 100;</code>
   * @return The traceSizeBytes.
   */
  long getTraceSizeBytes();
}
