// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Metrics related to the Emulator.
 * </pre>
 *
 * Protobuf type {@code android_studio.EmulatorDetails}
 */
public  final class EmulatorDetails extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorDetails)
    EmulatorDetailsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorDetails.newBuilder() to construct.
  private EmulatorDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorDetails() {
    guestArch_ = 0;
    adbLiveness_ = 0;
    hostGpu_ = java.util.Collections.emptyList();
    sessionPhase_ = 0;
    coreVersion_ = "";
    renderer_ = 0;
    hypervisor_ = 0;
    snapshotLoads_ = java.util.Collections.emptyList();
    snapshotSaves_ = java.util.Collections.emptyList();
    icebox_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorDetails();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EmulatorDetails(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    int mutable_bitField1_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture value = com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              guestArch_ = rawValue;
            }
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            systemTime_ = input.readInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            userTime_ = input.readInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            crashes_ = input.readInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            wallTime_ = input.readInt64();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            exitStarted_ = input.readBool();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            guestApiLevel_ = input.readInt64();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            guestGpuEnabled_ = input.readBool();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000100;
            isOpenglAlive_ = input.readBool();
            break;
          }
          case 88: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness value = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(11, rawValue);
            } else {
              bitField0_ |= 0x00000200;
              adbLiveness_ = rawValue;
            }
            break;
          }
          case 98: {
            com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000400) != 0)) {
              subBuilder = guestGl_.toBuilder();
            }
            guestGl_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(guestGl_);
              guestGl_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000400;
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000800) != 0)) {
              hostGpu_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorGpuInfo>();
              mutable_bitField0_ |= 0x00000800;
            }
            hostGpu_.add(
                input.readMessage(com.google.wireless.android.sdk.stats.EmulatorGpuInfo.PARSER, extensionRegistry));
            break;
          }
          case 112: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase value = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(14, rawValue);
            } else {
              bitField0_ |= 0x00000800;
              sessionPhase_ = rawValue;
            }
            break;
          }
          case 122: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00001000;
            coreVersion_ = bs;
            break;
          }
          case 128: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer value = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(16, rawValue);
            } else {
              bitField0_ |= 0x00002000;
              renderer_ = rawValue;
            }
            break;
          }
          case 138: {
            com.google.wireless.android.sdk.stats.EmulatorFeatures.Builder subBuilder = null;
            if (((bitField0_ & 0x00004000) != 0)) {
              subBuilder = usedFeatures_.toBuilder();
            }
            usedFeatures_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorFeatures.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(usedFeatures_);
              usedFeatures_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00004000;
            break;
          }
          case 146: {
            com.google.wireless.android.sdk.stats.EmulatorAvdInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00008000) != 0)) {
              subBuilder = avdInfo_.toBuilder();
            }
            avdInfo_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorAvdInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(avdInfo_);
              avdInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00008000;
            break;
          }
          case 154: {
            com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder subBuilder = null;
            if (((bitField0_ & 0x00010000) != 0)) {
              subBuilder = featureFlagState_.toBuilder();
            }
            featureFlagState_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(featureFlagState_);
              featureFlagState_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00010000;
            break;
          }
          case 160: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor value = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(20, rawValue);
            } else {
              bitField0_ |= 0x00020000;
              hypervisor_ = rawValue;
            }
            break;
          }
          case 170: {
            com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder subBuilder = null;
            if (((bitField0_ & 0x00040000) != 0)) {
              subBuilder = quickbootLoad_.toBuilder();
            }
            quickbootLoad_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(quickbootLoad_);
              quickbootLoad_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00040000;
            break;
          }
          case 178: {
            com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.Builder subBuilder = null;
            if (((bitField0_ & 0x00080000) != 0)) {
              subBuilder = quickbootSave_.toBuilder();
            }
            quickbootSave_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(quickbootSave_);
              quickbootSave_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00080000;
            break;
          }
          case 186: {
            com.google.wireless.android.sdk.stats.EmulatorGLESUsages.Builder subBuilder = null;
            if (((bitField0_ & 0x00100000) != 0)) {
              subBuilder = glesUsages_.toBuilder();
            }
            glesUsages_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorGLESUsages.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(glesUsages_);
              glesUsages_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00100000;
            break;
          }
          case 194: {
            if (!((mutable_bitField0_ & 0x00400000) != 0)) {
              snapshotLoads_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorSnapshot>();
              mutable_bitField0_ |= 0x00400000;
            }
            snapshotLoads_.add(
                input.readMessage(com.google.wireless.android.sdk.stats.EmulatorSnapshot.PARSER, extensionRegistry));
            break;
          }
          case 202: {
            if (!((mutable_bitField0_ & 0x00800000) != 0)) {
              snapshotSaves_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorSnapshot>();
              mutable_bitField0_ |= 0x00800000;
            }
            snapshotSaves_.add(
                input.readMessage(com.google.wireless.android.sdk.stats.EmulatorSnapshot.PARSER, extensionRegistry));
            break;
          }
          case 210: {
            com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.Builder subBuilder = null;
            if (((bitField0_ & 0x00200000) != 0)) {
              subBuilder = snapshotUiCounts_.toBuilder();
            }
            snapshotUiCounts_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(snapshotUiCounts_);
              snapshotUiCounts_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00200000;
            break;
          }
          case 218: {
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder subBuilder = null;
            if (((bitField0_ & 0x00400000) != 0)) {
              subBuilder = camera_.toBuilder();
            }
            camera_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorCameraSession.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(camera_);
              camera_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00400000;
            break;
          }
          case 226: {
            com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.Builder subBuilder = null;
            if (((bitField0_ & 0x00800000) != 0)) {
              subBuilder = virtualScene_.toBuilder();
            }
            virtualScene_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(virtualScene_);
              virtualScene_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00800000;
            break;
          }
          case 234: {
            com.google.wireless.android.sdk.stats.EmulatorBootInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x01000000) != 0)) {
              subBuilder = bootInfo_.toBuilder();
            }
            bootInfo_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorBootInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(bootInfo_);
              bootInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x01000000;
            break;
          }
          case 242: {
            com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder subBuilder = null;
            if (((bitField0_ & 0x02000000) != 0)) {
              subBuilder = automation_.toBuilder();
            }
            automation_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorAutomation.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(automation_);
              automation_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x02000000;
            break;
          }
          case 250: {
            com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.Builder subBuilder = null;
            if (((bitField0_ & 0x04000000) != 0)) {
              subBuilder = multiDisplay_.toBuilder();
            }
            multiDisplay_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(multiDisplay_);
              multiDisplay_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x04000000;
            break;
          }
          case 258: {
            com.google.wireless.android.sdk.stats.EmulatorGrpc.Builder subBuilder = null;
            if (((bitField0_ & 0x08000000) != 0)) {
              subBuilder = grpc_.toBuilder();
            }
            grpc_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorGrpc.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(grpc_);
              grpc_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x08000000;
            break;
          }
          case 266: {
            com.google.wireless.android.sdk.stats.EmulatorLocationV2.Builder subBuilder = null;
            if (((bitField0_ & 0x10000000) != 0)) {
              subBuilder = locationV2_.toBuilder();
            }
            locationV2_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorLocationV2.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(locationV2_);
              locationV2_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x10000000;
            break;
          }
          case 274: {
            com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.Builder subBuilder = null;
            if (((bitField0_ & 0x20000000) != 0)) {
              subBuilder = screenshot_.toBuilder();
            }
            screenshot_ = input.readMessage(com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(screenshot_);
              screenshot_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x20000000;
            break;
          }
          case 282: {
            if (!((mutable_bitField1_ & 0x00000002) != 0)) {
              icebox_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorIcebox>();
              mutable_bitField1_ |= 0x00000002;
            }
            icebox_.add(
                input.readMessage(com.google.wireless.android.sdk.stats.EmulatorIcebox.PARSER, extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000800) != 0)) {
        hostGpu_ = java.util.Collections.unmodifiableList(hostGpu_);
      }
      if (((mutable_bitField0_ & 0x00400000) != 0)) {
        snapshotLoads_ = java.util.Collections.unmodifiableList(snapshotLoads_);
      }
      if (((mutable_bitField0_ & 0x00800000) != 0)) {
        snapshotSaves_ = java.util.Collections.unmodifiableList(snapshotSaves_);
      }
      if (((mutable_bitField1_ & 0x00000002) != 0)) {
        icebox_ = java.util.Collections.unmodifiableList(icebox_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorDetails_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorDetails_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorDetails.class, com.google.wireless.android.sdk.stats.EmulatorDetails.Builder.class);
  }

  /**
   * <pre>
   * Emulator instance liveness as determined via adb connectivity.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorDetails.EmulatorAdbLiveness}
   */
  public enum EmulatorAdbLiveness
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_EMULATOR_ADB_LIVENESS = 0;</code>
     */
    UNKNOWN_EMULATOR_ADB_LIVENESS(0),
    /**
     * <code>FAILURE_NO_ADB = 1;</code>
     */
    FAILURE_NO_ADB(1),
    /**
     * <code>ADB_ONLINE = 2;</code>
     */
    ADB_ONLINE(2),
    /**
     * <code>FAILURE_ADB_SERVER_DEAD = 3;</code>
     */
    FAILURE_ADB_SERVER_DEAD(3),
    /**
     * <code>FAILURE_EMULATOR_DEAD = 4;</code>
     */
    FAILURE_EMULATOR_DEAD(4),
    ;

    /**
     * <code>UNKNOWN_EMULATOR_ADB_LIVENESS = 0;</code>
     */
    public static final int UNKNOWN_EMULATOR_ADB_LIVENESS_VALUE = 0;
    /**
     * <code>FAILURE_NO_ADB = 1;</code>
     */
    public static final int FAILURE_NO_ADB_VALUE = 1;
    /**
     * <code>ADB_ONLINE = 2;</code>
     */
    public static final int ADB_ONLINE_VALUE = 2;
    /**
     * <code>FAILURE_ADB_SERVER_DEAD = 3;</code>
     */
    public static final int FAILURE_ADB_SERVER_DEAD_VALUE = 3;
    /**
     * <code>FAILURE_EMULATOR_DEAD = 4;</code>
     */
    public static final int FAILURE_EMULATOR_DEAD_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorAdbLiveness valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorAdbLiveness forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EMULATOR_ADB_LIVENESS;
        case 1: return FAILURE_NO_ADB;
        case 2: return ADB_ONLINE;
        case 3: return FAILURE_ADB_SERVER_DEAD;
        case 4: return FAILURE_EMULATOR_DEAD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorAdbLiveness>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorAdbLiveness> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorAdbLiveness>() {
            public EmulatorAdbLiveness findValueByNumber(int number) {
              return EmulatorAdbLiveness.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorDetails.getDescriptor().getEnumTypes().get(0);
    }

    private static final EmulatorAdbLiveness[] VALUES = values();

    public static EmulatorAdbLiveness valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorAdbLiveness(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorDetails.EmulatorAdbLiveness)
  }

  /**
   * <pre>
   * In What phase of the lifetime of the Emulator were the metrics reported.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorDetails.EmulatorSessionPhase}
   */
  public enum EmulatorSessionPhase
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_EMULATOR_SESSION_PHASE = 0;</code>
     */
    UNKNOWN_EMULATOR_SESSION_PHASE(0),
    /**
     * <pre>
     * The custom emulator launcher is running.
     * </pre>
     *
     * <code>LAUNCHER = 1;</code>
     */
    LAUNCHER(1),
    /**
     * <pre>
     * Final emulator target is parsing command line arguments.
     * </pre>
     *
     * <code>PARSE_OPTIONS = 2;</code>
     */
    PARSE_OPTIONS(2),
    /**
     * <pre>
     * Initialization - general.
     * </pre>
     *
     * <code>INIT_GENERAL = 3;</code>
     */
    INIT_GENERAL(3),
    /**
     * <pre>
     * Initializing GPU
     * </pre>
     *
     * <code>INIT_GPU = 4;</code>
     */
    INIT_GPU(4),
    /**
     * <pre>
     * Initializing hardware acceleration.
     * </pre>
     *
     * <code>INIT_ACCEL = 5;</code>
     */
    INIT_ACCEL(5),
    /**
     * <pre>
     * Main use case -- init done, emulator is up.
     * </pre>
     *
     * <code>RUNNING_GENERAL = 6;</code>
     */
    RUNNING_GENERAL(6),
    /**
     * <pre>
     * Exiting
     * </pre>
     *
     * <code>EXIT_GENERAL = 7;</code>
     */
    EXIT_GENERAL(7),
    ;

    /**
     * <code>UNKNOWN_EMULATOR_SESSION_PHASE = 0;</code>
     */
    public static final int UNKNOWN_EMULATOR_SESSION_PHASE_VALUE = 0;
    /**
     * <pre>
     * The custom emulator launcher is running.
     * </pre>
     *
     * <code>LAUNCHER = 1;</code>
     */
    public static final int LAUNCHER_VALUE = 1;
    /**
     * <pre>
     * Final emulator target is parsing command line arguments.
     * </pre>
     *
     * <code>PARSE_OPTIONS = 2;</code>
     */
    public static final int PARSE_OPTIONS_VALUE = 2;
    /**
     * <pre>
     * Initialization - general.
     * </pre>
     *
     * <code>INIT_GENERAL = 3;</code>
     */
    public static final int INIT_GENERAL_VALUE = 3;
    /**
     * <pre>
     * Initializing GPU
     * </pre>
     *
     * <code>INIT_GPU = 4;</code>
     */
    public static final int INIT_GPU_VALUE = 4;
    /**
     * <pre>
     * Initializing hardware acceleration.
     * </pre>
     *
     * <code>INIT_ACCEL = 5;</code>
     */
    public static final int INIT_ACCEL_VALUE = 5;
    /**
     * <pre>
     * Main use case -- init done, emulator is up.
     * </pre>
     *
     * <code>RUNNING_GENERAL = 6;</code>
     */
    public static final int RUNNING_GENERAL_VALUE = 6;
    /**
     * <pre>
     * Exiting
     * </pre>
     *
     * <code>EXIT_GENERAL = 7;</code>
     */
    public static final int EXIT_GENERAL_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorSessionPhase valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorSessionPhase forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EMULATOR_SESSION_PHASE;
        case 1: return LAUNCHER;
        case 2: return PARSE_OPTIONS;
        case 3: return INIT_GENERAL;
        case 4: return INIT_GPU;
        case 5: return INIT_ACCEL;
        case 6: return RUNNING_GENERAL;
        case 7: return EXIT_GENERAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorSessionPhase>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorSessionPhase> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorSessionPhase>() {
            public EmulatorSessionPhase findValueByNumber(int number) {
              return EmulatorSessionPhase.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorDetails.getDescriptor().getEnumTypes().get(1);
    }

    private static final EmulatorSessionPhase[] VALUES = values();

    public static EmulatorSessionPhase valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorSessionPhase(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorDetails.EmulatorSessionPhase)
  }

  /**
   * <pre>
   * Chip the emulator is emulating for.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorDetails.GuestCpuArchitecture}
   */
  public enum GuestCpuArchitecture
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_GUEST_CPU_ARCHITECTURE = 0;</code>
     */
    UNKNOWN_GUEST_CPU_ARCHITECTURE(0),
    /**
     * <code>X86 = 1;</code>
     */
    X86(1),
    /**
     * <code>X86_64 = 2;</code>
     */
    X86_64(2),
    /**
     * <code>ARM = 3;</code>
     */
    ARM(3),
    /**
     * <code>ARM_64 = 4;</code>
     */
    ARM_64(4),
    /**
     * <code>MIPS = 5;</code>
     */
    MIPS(5),
    /**
     * <code>MIPS_64 = 6;</code>
     */
    MIPS_64(6),
    ;

    /**
     * <code>UNKNOWN_GUEST_CPU_ARCHITECTURE = 0;</code>
     */
    public static final int UNKNOWN_GUEST_CPU_ARCHITECTURE_VALUE = 0;
    /**
     * <code>X86 = 1;</code>
     */
    public static final int X86_VALUE = 1;
    /**
     * <code>X86_64 = 2;</code>
     */
    public static final int X86_64_VALUE = 2;
    /**
     * <code>ARM = 3;</code>
     */
    public static final int ARM_VALUE = 3;
    /**
     * <code>ARM_64 = 4;</code>
     */
    public static final int ARM_64_VALUE = 4;
    /**
     * <code>MIPS = 5;</code>
     */
    public static final int MIPS_VALUE = 5;
    /**
     * <code>MIPS_64 = 6;</code>
     */
    public static final int MIPS_64_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GuestCpuArchitecture valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GuestCpuArchitecture forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_GUEST_CPU_ARCHITECTURE;
        case 1: return X86;
        case 2: return X86_64;
        case 3: return ARM;
        case 4: return ARM_64;
        case 5: return MIPS;
        case 6: return MIPS_64;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GuestCpuArchitecture>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GuestCpuArchitecture> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GuestCpuArchitecture>() {
            public GuestCpuArchitecture findValueByNumber(int number) {
              return GuestCpuArchitecture.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorDetails.getDescriptor().getEnumTypes().get(2);
    }

    private static final GuestCpuArchitecture[] VALUES = values();

    public static GuestCpuArchitecture valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GuestCpuArchitecture(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorDetails.GuestCpuArchitecture)
  }

  /**
   * <pre>
   * Rendering method emulator uses for the reporter session.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorDetails.EmulatorRenderer}
   */
  public enum EmulatorRenderer
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_EMULATOR_RENDERER = 0;</code>
     */
    UNKNOWN_EMULATOR_RENDERER(0),
    /**
     * <code>HOST = 1;</code>
     */
    HOST(1),
    /**
     * <code>OFF = 2;</code>
     */
    OFF(2),
    /**
     * <code>GUEST = 3;</code>
     */
    GUEST(3),
    /**
     * <code>MESA = 4;</code>
     */
    MESA(4),
    /**
     * <code>SWIFTSHADER = 5;</code>
     */
    SWIFTSHADER(5),
    /**
     * <code>ANGLE = 6;</code>
     */
    ANGLE(6),
    /**
     * <code>ANGLE9 = 7;</code>
     */
    ANGLE9(7),
    /**
     * <code>SWIFTSHADER_INDIRECT = 8;</code>
     */
    SWIFTSHADER_INDIRECT(8),
    /**
     * <code>ANGLE_INDIRECT = 9;</code>
     */
    ANGLE_INDIRECT(9),
    /**
     * <code>ANGLE9_INDIRECT = 10;</code>
     */
    ANGLE9_INDIRECT(10),
    /**
     * <code>ERROR_IN_EMULATOR_RENDERER = 255;</code>
     */
    ERROR_IN_EMULATOR_RENDERER(255),
    ;

    /**
     * <code>UNKNOWN_EMULATOR_RENDERER = 0;</code>
     */
    public static final int UNKNOWN_EMULATOR_RENDERER_VALUE = 0;
    /**
     * <code>HOST = 1;</code>
     */
    public static final int HOST_VALUE = 1;
    /**
     * <code>OFF = 2;</code>
     */
    public static final int OFF_VALUE = 2;
    /**
     * <code>GUEST = 3;</code>
     */
    public static final int GUEST_VALUE = 3;
    /**
     * <code>MESA = 4;</code>
     */
    public static final int MESA_VALUE = 4;
    /**
     * <code>SWIFTSHADER = 5;</code>
     */
    public static final int SWIFTSHADER_VALUE = 5;
    /**
     * <code>ANGLE = 6;</code>
     */
    public static final int ANGLE_VALUE = 6;
    /**
     * <code>ANGLE9 = 7;</code>
     */
    public static final int ANGLE9_VALUE = 7;
    /**
     * <code>SWIFTSHADER_INDIRECT = 8;</code>
     */
    public static final int SWIFTSHADER_INDIRECT_VALUE = 8;
    /**
     * <code>ANGLE_INDIRECT = 9;</code>
     */
    public static final int ANGLE_INDIRECT_VALUE = 9;
    /**
     * <code>ANGLE9_INDIRECT = 10;</code>
     */
    public static final int ANGLE9_INDIRECT_VALUE = 10;
    /**
     * <code>ERROR_IN_EMULATOR_RENDERER = 255;</code>
     */
    public static final int ERROR_IN_EMULATOR_RENDERER_VALUE = 255;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorRenderer valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorRenderer forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EMULATOR_RENDERER;
        case 1: return HOST;
        case 2: return OFF;
        case 3: return GUEST;
        case 4: return MESA;
        case 5: return SWIFTSHADER;
        case 6: return ANGLE;
        case 7: return ANGLE9;
        case 8: return SWIFTSHADER_INDIRECT;
        case 9: return ANGLE_INDIRECT;
        case 10: return ANGLE9_INDIRECT;
        case 255: return ERROR_IN_EMULATOR_RENDERER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorRenderer>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorRenderer> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorRenderer>() {
            public EmulatorRenderer findValueByNumber(int number) {
              return EmulatorRenderer.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorDetails.getDescriptor().getEnumTypes().get(3);
    }

    private static final EmulatorRenderer[] VALUES = values();

    public static EmulatorRenderer valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorRenderer(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorDetails.EmulatorRenderer)
  }

  /**
   * <pre>
   * Hypervisor in use for the session.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorDetails.EmulatorHypervisor}
   */
  public enum EmulatorHypervisor
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_HYPERVISOR = 0;</code>
     */
    UNKNOWN_HYPERVISOR(0),
    /**
     * <code>NO_HYPERVISOR = 1;</code>
     */
    NO_HYPERVISOR(1),
    /**
     * <pre>
     * KVM
     * </pre>
     *
     * <code>KVM = 2;</code>
     */
    KVM(2),
    /**
     * <pre>
     * Intel HAXM
     * </pre>
     *
     * <code>HAXM = 3;</code>
     */
    HAXM(3),
    /**
     * <pre>
     * Apple Hypervisor.Framework
     * </pre>
     *
     * <code>HVF = 4;</code>
     */
    HVF(4),
    /**
     * <pre>
     * Microsoft Hyper-V
     * </pre>
     *
     * <code>HYPERV = 5;</code>
     */
    HYPERV(5),
    /**
     * <pre>
     * AMD Hypervisor for Android Emulator
     * </pre>
     *
     * <code>GVM = 6;</code>
     */
    GVM(6),
    ;

    /**
     * <code>UNKNOWN_HYPERVISOR = 0;</code>
     */
    public static final int UNKNOWN_HYPERVISOR_VALUE = 0;
    /**
     * <code>NO_HYPERVISOR = 1;</code>
     */
    public static final int NO_HYPERVISOR_VALUE = 1;
    /**
     * <pre>
     * KVM
     * </pre>
     *
     * <code>KVM = 2;</code>
     */
    public static final int KVM_VALUE = 2;
    /**
     * <pre>
     * Intel HAXM
     * </pre>
     *
     * <code>HAXM = 3;</code>
     */
    public static final int HAXM_VALUE = 3;
    /**
     * <pre>
     * Apple Hypervisor.Framework
     * </pre>
     *
     * <code>HVF = 4;</code>
     */
    public static final int HVF_VALUE = 4;
    /**
     * <pre>
     * Microsoft Hyper-V
     * </pre>
     *
     * <code>HYPERV = 5;</code>
     */
    public static final int HYPERV_VALUE = 5;
    /**
     * <pre>
     * AMD Hypervisor for Android Emulator
     * </pre>
     *
     * <code>GVM = 6;</code>
     */
    public static final int GVM_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorHypervisor valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorHypervisor forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_HYPERVISOR;
        case 1: return NO_HYPERVISOR;
        case 2: return KVM;
        case 3: return HAXM;
        case 4: return HVF;
        case 5: return HYPERV;
        case 6: return GVM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorHypervisor>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorHypervisor> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorHypervisor>() {
            public EmulatorHypervisor findValueByNumber(int number) {
              return EmulatorHypervisor.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorDetails.getDescriptor().getEnumTypes().get(4);
    }

    private static final EmulatorHypervisor[] VALUES = values();

    public static EmulatorHypervisor valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorHypervisor(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorDetails.EmulatorHypervisor)
  }

  private int bitField0_;
  public static final int GUEST_ARCH_FIELD_NUMBER = 1;
  private int guestArch_;
  /**
   * <pre>
   * Cpu architecture of the guest.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.GuestCpuArchitecture guest_arch = 1;</code>
   * @return Whether the guestArch field is set.
   */
  public boolean hasGuestArch() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Cpu architecture of the guest.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.GuestCpuArchitecture guest_arch = 1;</code>
   * @return The guestArch.
   */
  public com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture getGuestArch() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture result = com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture.valueOf(guestArch_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture.UNKNOWN_GUEST_CPU_ARCHITECTURE : result;
  }

  public static final int SYSTEM_TIME_FIELD_NUMBER = 2;
  private long systemTime_;
  /**
   * <pre>
   * cpu time spent in kernel mode in milliseconds since last metrics report.
   * </pre>
   *
   * <code>optional int64 system_time = 2;</code>
   * @return Whether the systemTime field is set.
   */
  public boolean hasSystemTime() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * cpu time spent in kernel mode in milliseconds since last metrics report.
   * </pre>
   *
   * <code>optional int64 system_time = 2;</code>
   * @return The systemTime.
   */
  public long getSystemTime() {
    return systemTime_;
  }

  public static final int USER_TIME_FIELD_NUMBER = 3;
  private long userTime_;
  /**
   * <pre>
   * cpu time spent in user mode in milliseconds since last metrics report.
   * </pre>
   *
   * <code>optional int64 user_time = 3;</code>
   * @return Whether the userTime field is set.
   */
  public boolean hasUserTime() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * cpu time spent in user mode in milliseconds since last metrics report.
   * </pre>
   *
   * <code>optional int64 user_time = 3;</code>
   * @return The userTime.
   */
  public long getUserTime() {
    return userTime_;
  }

  public static final int CRASHES_FIELD_NUMBER = 4;
  private long crashes_;
  /**
   * <pre>
   * number of crashes since last metrics report.
   * </pre>
   *
   * <code>optional int64 crashes = 4;</code>
   * @return Whether the crashes field is set.
   */
  public boolean hasCrashes() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * number of crashes since last metrics report.
   * </pre>
   *
   * <code>optional int64 crashes = 4;</code>
   * @return The crashes.
   */
  public long getCrashes() {
    return crashes_;
  }

  public static final int WALL_TIME_FIELD_NUMBER = 5;
  private long wallTime_;
  /**
   * <pre>
   * real time in milliseconds since last metrics report.
   * </pre>
   *
   * <code>optional int64 wall_time = 5;</code>
   * @return Whether the wallTime field is set.
   */
  public boolean hasWallTime() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * real time in milliseconds since last metrics report.
   * </pre>
   *
   * <code>optional int64 wall_time = 5;</code>
   * @return The wallTime.
   */
  public long getWallTime() {
    return wallTime_;
  }

  public static final int EXIT_STARTED_FIELD_NUMBER = 6;
  private boolean exitStarted_;
  /**
   * <pre>
   * True iff a crash occurred while process started its exit routines.
   * </pre>
   *
   * <code>optional bool exit_started = 6;</code>
   * @return Whether the exitStarted field is set.
   */
  public boolean hasExitStarted() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * True iff a crash occurred while process started its exit routines.
   * </pre>
   *
   * <code>optional bool exit_started = 6;</code>
   * @return The exitStarted.
   */
  public boolean getExitStarted() {
    return exitStarted_;
  }

  public static final int GUEST_API_LEVEL_FIELD_NUMBER = 7;
  private long guestApiLevel_;
  /**
   * <pre>
   * The API level of the running guest image.
   * </pre>
   *
   * <code>optional int64 guest_api_level = 7;</code>
   * @return Whether the guestApiLevel field is set.
   */
  public boolean hasGuestApiLevel() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The API level of the running guest image.
   * </pre>
   *
   * <code>optional int64 guest_api_level = 7;</code>
   * @return The guestApiLevel.
   */
  public long getGuestApiLevel() {
    return guestApiLevel_;
  }

  public static final int GUEST_GPU_ENABLED_FIELD_NUMBER = 8;
  private boolean guestGpuEnabled_;
  /**
   * <pre>
   * The value of guest gpu option (ro.kernel.qemu.gles)
   * </pre>
   *
   * <code>optional bool guest_gpu_enabled = 8;</code>
   * @return Whether the guestGpuEnabled field is set.
   */
  public boolean hasGuestGpuEnabled() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * The value of guest gpu option (ro.kernel.qemu.gles)
   * </pre>
   *
   * <code>optional bool guest_gpu_enabled = 8;</code>
   * @return The guestGpuEnabled.
   */
  public boolean getGuestGpuEnabled() {
    return guestGpuEnabled_;
  }

  public static final int IS_OPENGL_ALIVE_FIELD_NUMBER = 10;
  private boolean isOpenglAlive_;
  /**
   * <pre>
   * True if we were able to correctly initialize opengl on the host.
   * </pre>
   *
   * <code>optional bool is_opengl_alive = 10;</code>
   * @return Whether the isOpenglAlive field is set.
   */
  public boolean hasIsOpenglAlive() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * True if we were able to correctly initialize opengl on the host.
   * </pre>
   *
   * <code>optional bool is_opengl_alive = 10;</code>
   * @return The isOpenglAlive.
   */
  public boolean getIsOpenglAlive() {
    return isOpenglAlive_;
  }

  public static final int ADB_LIVENESS_FIELD_NUMBER = 11;
  private int adbLiveness_;
  /**
   * <pre>
   * Connectivity from adb of the running emulator instance.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorAdbLiveness adb_liveness = 11;</code>
   * @return Whether the adbLiveness field is set.
   */
  public boolean hasAdbLiveness() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Connectivity from adb of the running emulator instance.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorAdbLiveness adb_liveness = 11;</code>
   * @return The adbLiveness.
   */
  public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness getAdbLiveness() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness.valueOf(adbLiveness_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness.UNKNOWN_EMULATOR_ADB_LIVENESS : result;
  }

  public static final int GUEST_GL_FIELD_NUMBER = 12;
  private com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo guestGl_;
  /**
   * <pre>
   * Information about the gl implementation in the guest image.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
   * @return Whether the guestGl field is set.
   */
  public boolean hasGuestGl() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * Information about the gl implementation in the guest image.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
   * @return The guestGl.
   */
  public com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo getGuestGl() {
    return guestGl_ == null ? com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.getDefaultInstance() : guestGl_;
  }
  /**
   * <pre>
   * Information about the gl implementation in the guest image.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorGuestGlInfoOrBuilder getGuestGlOrBuilder() {
    return guestGl_ == null ? com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.getDefaultInstance() : guestGl_;
  }

  public static final int HOST_GPU_FIELD_NUMBER = 13;
  private java.util.List<com.google.wireless.android.sdk.stats.EmulatorGpuInfo> hostGpu_;
  /**
   * <pre>
   * Information about the host GPUs (one per GPU).
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
   */
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorGpuInfo> getHostGpuList() {
    return hostGpu_;
  }
  /**
   * <pre>
   * Information about the host GPUs (one per GPU).
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
   */
  public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder>
      getHostGpuOrBuilderList() {
    return hostGpu_;
  }
  /**
   * <pre>
   * Information about the host GPUs (one per GPU).
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
   */
  public int getHostGpuCount() {
    return hostGpu_.size();
  }
  /**
   * <pre>
   * Information about the host GPUs (one per GPU).
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorGpuInfo getHostGpu(int index) {
    return hostGpu_.get(index);
  }
  /**
   * <pre>
   * Information about the host GPUs (one per GPU).
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder getHostGpuOrBuilder(
      int index) {
    return hostGpu_.get(index);
  }

  public static final int SESSION_PHASE_FIELD_NUMBER = 14;
  private int sessionPhase_;
  /**
   * <pre>
   * The "phase" of an emulator session where crash happened.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorSessionPhase session_phase = 14;</code>
   * @return Whether the sessionPhase field is set.
   */
  public boolean hasSessionPhase() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * The "phase" of an emulator session where crash happened.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorSessionPhase session_phase = 14;</code>
   * @return The sessionPhase.
   */
  public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase getSessionPhase() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase.valueOf(sessionPhase_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase.UNKNOWN_EMULATOR_SESSION_PHASE : result;
  }

  public static final int CORE_VERSION_FIELD_NUMBER = 15;
  private volatile java.lang.Object coreVersion_;
  /**
   * <pre>
   * The emulator core version (e.g. QEMU engine's version).
   * </pre>
   *
   * <code>optional string core_version = 15;</code>
   * @return Whether the coreVersion field is set.
   */
  public boolean hasCoreVersion() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * The emulator core version (e.g. QEMU engine's version).
   * </pre>
   *
   * <code>optional string core_version = 15;</code>
   * @return The coreVersion.
   */
  public java.lang.String getCoreVersion() {
    java.lang.Object ref = coreVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        coreVersion_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The emulator core version (e.g. QEMU engine's version).
   * </pre>
   *
   * <code>optional string core_version = 15;</code>
   * @return The bytes for coreVersion.
   */
  public com.google.protobuf.ByteString
      getCoreVersionBytes() {
    java.lang.Object ref = coreVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      coreVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RENDERER_FIELD_NUMBER = 16;
  private int renderer_;
  /**
   * <pre>
   * Renderer of the current emulator session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorRenderer renderer = 16;</code>
   * @return Whether the renderer field is set.
   */
  public boolean hasRenderer() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * Renderer of the current emulator session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorRenderer renderer = 16;</code>
   * @return The renderer.
   */
  public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer getRenderer() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer.valueOf(renderer_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer.UNKNOWN_EMULATOR_RENDERER : result;
  }

  public static final int USED_FEATURES_FIELD_NUMBER = 17;
  private com.google.wireless.android.sdk.stats.EmulatorFeatures usedFeatures_;
  /**
   * <pre>
   * Flags for the used UI features.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
   * @return Whether the usedFeatures field is set.
   */
  public boolean hasUsedFeatures() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <pre>
   * Flags for the used UI features.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
   * @return The usedFeatures.
   */
  public com.google.wireless.android.sdk.stats.EmulatorFeatures getUsedFeatures() {
    return usedFeatures_ == null ? com.google.wireless.android.sdk.stats.EmulatorFeatures.getDefaultInstance() : usedFeatures_;
  }
  /**
   * <pre>
   * Flags for the used UI features.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorFeaturesOrBuilder getUsedFeaturesOrBuilder() {
    return usedFeatures_ == null ? com.google.wireless.android.sdk.stats.EmulatorFeatures.getDefaultInstance() : usedFeatures_;
  }

  public static final int AVD_INFO_FIELD_NUMBER = 18;
  private com.google.wireless.android.sdk.stats.EmulatorAvdInfo avdInfo_;
  /**
   * <pre>
   * Information about the currently loaded AVD.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
   * @return Whether the avdInfo field is set.
   */
  public boolean hasAvdInfo() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <pre>
   * Information about the currently loaded AVD.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
   * @return The avdInfo.
   */
  public com.google.wireless.android.sdk.stats.EmulatorAvdInfo getAvdInfo() {
    return avdInfo_ == null ? com.google.wireless.android.sdk.stats.EmulatorAvdInfo.getDefaultInstance() : avdInfo_;
  }
  /**
   * <pre>
   * Information about the currently loaded AVD.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorAvdInfoOrBuilder getAvdInfoOrBuilder() {
    return avdInfo_ == null ? com.google.wireless.android.sdk.stats.EmulatorAvdInfo.getDefaultInstance() : avdInfo_;
  }

  public static final int FEATURE_FLAG_STATE_FIELD_NUMBER = 19;
  private com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState featureFlagState_;
  /**
   * <pre>
   * State tracking emulator feature flag enable/disable.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
   * @return Whether the featureFlagState field is set.
   */
  public boolean hasFeatureFlagState() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <pre>
   * State tracking emulator feature flag enable/disable.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
   * @return The featureFlagState.
   */
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState getFeatureFlagState() {
    return featureFlagState_ == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance() : featureFlagState_;
  }
  /**
   * <pre>
   * State tracking emulator feature flag enable/disable.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagStateOrBuilder getFeatureFlagStateOrBuilder() {
    return featureFlagState_ == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance() : featureFlagState_;
  }

  public static final int HYPERVISOR_FIELD_NUMBER = 20;
  private int hypervisor_;
  /**
   * <pre>
   * Hypervisor used in current session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorHypervisor hypervisor = 20;</code>
   * @return Whether the hypervisor field is set.
   */
  public boolean hasHypervisor() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <pre>
   * Hypervisor used in current session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails.EmulatorHypervisor hypervisor = 20;</code>
   * @return The hypervisor.
   */
  public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor getHypervisor() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor.valueOf(hypervisor_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor.UNKNOWN_HYPERVISOR : result;
  }

  public static final int QUICKBOOT_LOAD_FIELD_NUMBER = 21;
  private com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad quickbootLoad_;
  /**
   * <pre>
   * Information about quickboot status of the current session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
   * @return Whether the quickbootLoad field is set.
   */
  public boolean hasQuickbootLoad() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <pre>
   * Information about quickboot status of the current session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
   * @return The quickbootLoad.
   */
  public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad getQuickbootLoad() {
    return quickbootLoad_ == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance() : quickbootLoad_;
  }
  /**
   * <pre>
   * Information about quickboot status of the current session.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoadOrBuilder getQuickbootLoadOrBuilder() {
    return quickbootLoad_ == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance() : quickbootLoad_;
  }

  public static final int QUICKBOOT_SAVE_FIELD_NUMBER = 22;
  private com.google.wireless.android.sdk.stats.EmulatorQuickbootSave quickbootSave_;
  /**
   * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
   * @return Whether the quickbootSave field is set.
   */
  public boolean hasQuickbootSave() {
    return ((bitField0_ & 0x00080000) != 0);
  }
  /**
   * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
   * @return The quickbootSave.
   */
  public com.google.wireless.android.sdk.stats.EmulatorQuickbootSave getQuickbootSave() {
    return quickbootSave_ == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.getDefaultInstance() : quickbootSave_;
  }
  /**
   * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorQuickbootSaveOrBuilder getQuickbootSaveOrBuilder() {
    return quickbootSave_ == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.getDefaultInstance() : quickbootSave_;
  }

  public static final int GLES_USAGES_FIELD_NUMBER = 23;
  private com.google.wireless.android.sdk.stats.EmulatorGLESUsages glesUsages_;
  /**
   * <pre>
   * Track GLES command usages
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
   * @return Whether the glesUsages field is set.
   */
  public boolean hasGlesUsages() {
    return ((bitField0_ & 0x00100000) != 0);
  }
  /**
   * <pre>
   * Track GLES command usages
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
   * @return The glesUsages.
   */
  public com.google.wireless.android.sdk.stats.EmulatorGLESUsages getGlesUsages() {
    return glesUsages_ == null ? com.google.wireless.android.sdk.stats.EmulatorGLESUsages.getDefaultInstance() : glesUsages_;
  }
  /**
   * <pre>
   * Track GLES command usages
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorGLESUsagesOrBuilder getGlesUsagesOrBuilder() {
    return glesUsages_ == null ? com.google.wireless.android.sdk.stats.EmulatorGLESUsages.getDefaultInstance() : glesUsages_;
  }

  public static final int SNAPSHOT_LOADS_FIELD_NUMBER = 24;
  private java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> snapshotLoads_;
  /**
   * <pre>
   * Metrics on all generic emulator snapshot saves and loads.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
   */
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> getSnapshotLoadsList() {
    return snapshotLoads_;
  }
  /**
   * <pre>
   * Metrics on all generic emulator snapshot saves and loads.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
   */
  public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>
      getSnapshotLoadsOrBuilderList() {
    return snapshotLoads_;
  }
  /**
   * <pre>
   * Metrics on all generic emulator snapshot saves and loads.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
   */
  public int getSnapshotLoadsCount() {
    return snapshotLoads_.size();
  }
  /**
   * <pre>
   * Metrics on all generic emulator snapshot saves and loads.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshotLoads(int index) {
    return snapshotLoads_.get(index);
  }
  /**
   * <pre>
   * Metrics on all generic emulator snapshot saves and loads.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotLoadsOrBuilder(
      int index) {
    return snapshotLoads_.get(index);
  }

  public static final int SNAPSHOT_SAVES_FIELD_NUMBER = 25;
  private java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> snapshotSaves_;
  /**
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
   */
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> getSnapshotSavesList() {
    return snapshotSaves_;
  }
  /**
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
   */
  public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>
      getSnapshotSavesOrBuilderList() {
    return snapshotSaves_;
  }
  /**
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
   */
  public int getSnapshotSavesCount() {
    return snapshotSaves_.size();
  }
  /**
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshotSaves(int index) {
    return snapshotSaves_.get(index);
  }
  /**
   * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotSavesOrBuilder(
      int index) {
    return snapshotSaves_.get(index);
  }

  public static final int SNAPSHOT_UI_COUNTS_FIELD_NUMBER = 26;
  private com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts snapshotUiCounts_;
  /**
   * <pre>
   * Metrics on all snapshot UI.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
   * @return Whether the snapshotUiCounts field is set.
   */
  public boolean hasSnapshotUiCounts() {
    return ((bitField0_ & 0x00200000) != 0);
  }
  /**
   * <pre>
   * Metrics on all snapshot UI.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
   * @return The snapshotUiCounts.
   */
  public com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts getSnapshotUiCounts() {
    return snapshotUiCounts_ == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.getDefaultInstance() : snapshotUiCounts_;
  }
  /**
   * <pre>
   * Metrics on all snapshot UI.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorSnapshotUICountsOrBuilder getSnapshotUiCountsOrBuilder() {
    return snapshotUiCounts_ == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.getDefaultInstance() : snapshotUiCounts_;
  }

  public static final int CAMERA_FIELD_NUMBER = 27;
  private com.google.wireless.android.sdk.stats.EmulatorCameraSession camera_;
  /**
   * <pre>
   * Metrics on camera usage.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
   * @return Whether the camera field is set.
   */
  public boolean hasCamera() {
    return ((bitField0_ & 0x00400000) != 0);
  }
  /**
   * <pre>
   * Metrics on camera usage.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
   * @return The camera.
   */
  public com.google.wireless.android.sdk.stats.EmulatorCameraSession getCamera() {
    return camera_ == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance() : camera_;
  }
  /**
   * <pre>
   * Metrics on camera usage.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorCameraSessionOrBuilder getCameraOrBuilder() {
    return camera_ == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance() : camera_;
  }

  public static final int VIRTUAL_SCENE_FIELD_NUMBER = 28;
  private com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession virtualScene_;
  /**
   * <pre>
   * Metrics for virtual scene camera sessions.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
   * @return Whether the virtualScene field is set.
   */
  public boolean hasVirtualScene() {
    return ((bitField0_ & 0x00800000) != 0);
  }
  /**
   * <pre>
   * Metrics for virtual scene camera sessions.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
   * @return The virtualScene.
   */
  public com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession getVirtualScene() {
    return virtualScene_ == null ? com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.getDefaultInstance() : virtualScene_;
  }
  /**
   * <pre>
   * Metrics for virtual scene camera sessions.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSessionOrBuilder getVirtualSceneOrBuilder() {
    return virtualScene_ == null ? com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.getDefaultInstance() : virtualScene_;
  }

  public static final int BOOT_INFO_FIELD_NUMBER = 29;
  private com.google.wireless.android.sdk.stats.EmulatorBootInfo bootInfo_;
  /**
   * <pre>
   * Metrics for emulator boot status and time.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
   * @return Whether the bootInfo field is set.
   */
  public boolean hasBootInfo() {
    return ((bitField0_ & 0x01000000) != 0);
  }
  /**
   * <pre>
   * Metrics for emulator boot status and time.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
   * @return The bootInfo.
   */
  public com.google.wireless.android.sdk.stats.EmulatorBootInfo getBootInfo() {
    return bootInfo_ == null ? com.google.wireless.android.sdk.stats.EmulatorBootInfo.getDefaultInstance() : bootInfo_;
  }
  /**
   * <pre>
   * Metrics for emulator boot status and time.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorBootInfoOrBuilder getBootInfoOrBuilder() {
    return bootInfo_ == null ? com.google.wireless.android.sdk.stats.EmulatorBootInfo.getDefaultInstance() : bootInfo_;
  }

  public static final int AUTOMATION_FIELD_NUMBER = 30;
  private com.google.wireless.android.sdk.stats.EmulatorAutomation automation_;
  /**
   * <pre>
   * Metrics for automation/macros.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
   * @return Whether the automation field is set.
   */
  public boolean hasAutomation() {
    return ((bitField0_ & 0x02000000) != 0);
  }
  /**
   * <pre>
   * Metrics for automation/macros.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
   * @return The automation.
   */
  public com.google.wireless.android.sdk.stats.EmulatorAutomation getAutomation() {
    return automation_ == null ? com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance() : automation_;
  }
  /**
   * <pre>
   * Metrics for automation/macros.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorAutomationOrBuilder getAutomationOrBuilder() {
    return automation_ == null ? com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance() : automation_;
  }

  public static final int MULTI_DISPLAY_FIELD_NUMBER = 31;
  private com.google.wireless.android.sdk.stats.EmulatorMultiDisplay multiDisplay_;
  /**
   * <pre>
   * Metrics for multi-display
   * </pre>
   *
   * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
   * @return Whether the multiDisplay field is set.
   */
  public boolean hasMultiDisplay() {
    return ((bitField0_ & 0x04000000) != 0);
  }
  /**
   * <pre>
   * Metrics for multi-display
   * </pre>
   *
   * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
   * @return The multiDisplay.
   */
  public com.google.wireless.android.sdk.stats.EmulatorMultiDisplay getMultiDisplay() {
    return multiDisplay_ == null ? com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.getDefaultInstance() : multiDisplay_;
  }
  /**
   * <pre>
   * Metrics for multi-display
   * </pre>
   *
   * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorMultiDisplayOrBuilder getMultiDisplayOrBuilder() {
    return multiDisplay_ == null ? com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.getDefaultInstance() : multiDisplay_;
  }

  public static final int GRPC_FIELD_NUMBER = 32;
  private com.google.wireless.android.sdk.stats.EmulatorGrpc grpc_;
  /**
   * <pre>
   * Metrics for gRPC invocation
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
   * @return Whether the grpc field is set.
   */
  public boolean hasGrpc() {
    return ((bitField0_ & 0x08000000) != 0);
  }
  /**
   * <pre>
   * Metrics for gRPC invocation
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
   * @return The grpc.
   */
  public com.google.wireless.android.sdk.stats.EmulatorGrpc getGrpc() {
    return grpc_ == null ? com.google.wireless.android.sdk.stats.EmulatorGrpc.getDefaultInstance() : grpc_;
  }
  /**
   * <pre>
   * Metrics for gRPC invocation
   * </pre>
   *
   * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorGrpcOrBuilder getGrpcOrBuilder() {
    return grpc_ == null ? com.google.wireless.android.sdk.stats.EmulatorGrpc.getDefaultInstance() : grpc_;
  }

  public static final int LOCATION_V2_FIELD_NUMBER = 33;
  private com.google.wireless.android.sdk.stats.EmulatorLocationV2 locationV2_;
  /**
   * <pre>
   * Metrics for LocationUiV2
   * </pre>
   *
   * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
   * @return Whether the locationV2 field is set.
   */
  public boolean hasLocationV2() {
    return ((bitField0_ & 0x10000000) != 0);
  }
  /**
   * <pre>
   * Metrics for LocationUiV2
   * </pre>
   *
   * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
   * @return The locationV2.
   */
  public com.google.wireless.android.sdk.stats.EmulatorLocationV2 getLocationV2() {
    return locationV2_ == null ? com.google.wireless.android.sdk.stats.EmulatorLocationV2.getDefaultInstance() : locationV2_;
  }
  /**
   * <pre>
   * Metrics for LocationUiV2
   * </pre>
   *
   * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorLocationV2OrBuilder getLocationV2OrBuilder() {
    return locationV2_ == null ? com.google.wireless.android.sdk.stats.EmulatorLocationV2.getDefaultInstance() : locationV2_;
  }

  public static final int SCREENSHOT_FIELD_NUMBER = 34;
  private com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot screenshot_;
  /**
   * <pre>
   * Metrics for streamScreenshot
   * </pre>
   *
   * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
   * @return Whether the screenshot field is set.
   */
  public boolean hasScreenshot() {
    return ((bitField0_ & 0x20000000) != 0);
  }
  /**
   * <pre>
   * Metrics for streamScreenshot
   * </pre>
   *
   * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
   * @return The screenshot.
   */
  public com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot getScreenshot() {
    return screenshot_ == null ? com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.getDefaultInstance() : screenshot_;
  }
  /**
   * <pre>
   * Metrics for streamScreenshot
   * </pre>
   *
   * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorStreamScreenshotOrBuilder getScreenshotOrBuilder() {
    return screenshot_ == null ? com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.getDefaultInstance() : screenshot_;
  }

  public static final int ICEBOX_FIELD_NUMBER = 35;
  private java.util.List<com.google.wireless.android.sdk.stats.EmulatorIcebox> icebox_;
  /**
   * <pre>
   * Metrics for Icebox
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
   */
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorIcebox> getIceboxList() {
    return icebox_;
  }
  /**
   * <pre>
   * Metrics for Icebox
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
   */
  public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder>
      getIceboxOrBuilderList() {
    return icebox_;
  }
  /**
   * <pre>
   * Metrics for Icebox
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
   */
  public int getIceboxCount() {
    return icebox_.size();
  }
  /**
   * <pre>
   * Metrics for Icebox
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorIcebox getIcebox(int index) {
    return icebox_.get(index);
  }
  /**
   * <pre>
   * Metrics for Icebox
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
   */
  public com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder getIceboxOrBuilder(
      int index) {
    return icebox_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, guestArch_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(2, systemTime_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt64(3, userTime_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(4, crashes_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt64(5, wallTime_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeBool(6, exitStarted_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeInt64(7, guestApiLevel_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(8, guestGpuEnabled_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeBool(10, isOpenglAlive_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeEnum(11, adbLiveness_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeMessage(12, getGuestGl());
    }
    for (int i = 0; i < hostGpu_.size(); i++) {
      output.writeMessage(13, hostGpu_.get(i));
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeEnum(14, sessionPhase_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, coreVersion_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      output.writeEnum(16, renderer_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      output.writeMessage(17, getUsedFeatures());
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      output.writeMessage(18, getAvdInfo());
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      output.writeMessage(19, getFeatureFlagState());
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      output.writeEnum(20, hypervisor_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      output.writeMessage(21, getQuickbootLoad());
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      output.writeMessage(22, getQuickbootSave());
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      output.writeMessage(23, getGlesUsages());
    }
    for (int i = 0; i < snapshotLoads_.size(); i++) {
      output.writeMessage(24, snapshotLoads_.get(i));
    }
    for (int i = 0; i < snapshotSaves_.size(); i++) {
      output.writeMessage(25, snapshotSaves_.get(i));
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      output.writeMessage(26, getSnapshotUiCounts());
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      output.writeMessage(27, getCamera());
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      output.writeMessage(28, getVirtualScene());
    }
    if (((bitField0_ & 0x01000000) != 0)) {
      output.writeMessage(29, getBootInfo());
    }
    if (((bitField0_ & 0x02000000) != 0)) {
      output.writeMessage(30, getAutomation());
    }
    if (((bitField0_ & 0x04000000) != 0)) {
      output.writeMessage(31, getMultiDisplay());
    }
    if (((bitField0_ & 0x08000000) != 0)) {
      output.writeMessage(32, getGrpc());
    }
    if (((bitField0_ & 0x10000000) != 0)) {
      output.writeMessage(33, getLocationV2());
    }
    if (((bitField0_ & 0x20000000) != 0)) {
      output.writeMessage(34, getScreenshot());
    }
    for (int i = 0; i < icebox_.size(); i++) {
      output.writeMessage(35, icebox_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, guestArch_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, systemTime_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, userTime_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, crashes_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, wallTime_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, exitStarted_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, guestApiLevel_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, guestGpuEnabled_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, isOpenglAlive_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, adbLiveness_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getGuestGl());
    }
    for (int i = 0; i < hostGpu_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, hostGpu_.get(i));
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(14, sessionPhase_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, coreVersion_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(16, renderer_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getUsedFeatures());
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getAvdInfo());
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getFeatureFlagState());
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(20, hypervisor_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getQuickbootLoad());
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, getQuickbootSave());
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, getGlesUsages());
    }
    for (int i = 0; i < snapshotLoads_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, snapshotLoads_.get(i));
    }
    for (int i = 0; i < snapshotSaves_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(25, snapshotSaves_.get(i));
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(26, getSnapshotUiCounts());
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(27, getCamera());
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(28, getVirtualScene());
    }
    if (((bitField0_ & 0x01000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(29, getBootInfo());
    }
    if (((bitField0_ & 0x02000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(30, getAutomation());
    }
    if (((bitField0_ & 0x04000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, getMultiDisplay());
    }
    if (((bitField0_ & 0x08000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(32, getGrpc());
    }
    if (((bitField0_ & 0x10000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(33, getLocationV2());
    }
    if (((bitField0_ & 0x20000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(34, getScreenshot());
    }
    for (int i = 0; i < icebox_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(35, icebox_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorDetails)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorDetails other = (com.google.wireless.android.sdk.stats.EmulatorDetails) obj;

    if (hasGuestArch() != other.hasGuestArch()) return false;
    if (hasGuestArch()) {
      if (guestArch_ != other.guestArch_) return false;
    }
    if (hasSystemTime() != other.hasSystemTime()) return false;
    if (hasSystemTime()) {
      if (getSystemTime()
          != other.getSystemTime()) return false;
    }
    if (hasUserTime() != other.hasUserTime()) return false;
    if (hasUserTime()) {
      if (getUserTime()
          != other.getUserTime()) return false;
    }
    if (hasCrashes() != other.hasCrashes()) return false;
    if (hasCrashes()) {
      if (getCrashes()
          != other.getCrashes()) return false;
    }
    if (hasWallTime() != other.hasWallTime()) return false;
    if (hasWallTime()) {
      if (getWallTime()
          != other.getWallTime()) return false;
    }
    if (hasExitStarted() != other.hasExitStarted()) return false;
    if (hasExitStarted()) {
      if (getExitStarted()
          != other.getExitStarted()) return false;
    }
    if (hasGuestApiLevel() != other.hasGuestApiLevel()) return false;
    if (hasGuestApiLevel()) {
      if (getGuestApiLevel()
          != other.getGuestApiLevel()) return false;
    }
    if (hasGuestGpuEnabled() != other.hasGuestGpuEnabled()) return false;
    if (hasGuestGpuEnabled()) {
      if (getGuestGpuEnabled()
          != other.getGuestGpuEnabled()) return false;
    }
    if (hasIsOpenglAlive() != other.hasIsOpenglAlive()) return false;
    if (hasIsOpenglAlive()) {
      if (getIsOpenglAlive()
          != other.getIsOpenglAlive()) return false;
    }
    if (hasAdbLiveness() != other.hasAdbLiveness()) return false;
    if (hasAdbLiveness()) {
      if (adbLiveness_ != other.adbLiveness_) return false;
    }
    if (hasGuestGl() != other.hasGuestGl()) return false;
    if (hasGuestGl()) {
      if (!getGuestGl()
          .equals(other.getGuestGl())) return false;
    }
    if (!getHostGpuList()
        .equals(other.getHostGpuList())) return false;
    if (hasSessionPhase() != other.hasSessionPhase()) return false;
    if (hasSessionPhase()) {
      if (sessionPhase_ != other.sessionPhase_) return false;
    }
    if (hasCoreVersion() != other.hasCoreVersion()) return false;
    if (hasCoreVersion()) {
      if (!getCoreVersion()
          .equals(other.getCoreVersion())) return false;
    }
    if (hasRenderer() != other.hasRenderer()) return false;
    if (hasRenderer()) {
      if (renderer_ != other.renderer_) return false;
    }
    if (hasUsedFeatures() != other.hasUsedFeatures()) return false;
    if (hasUsedFeatures()) {
      if (!getUsedFeatures()
          .equals(other.getUsedFeatures())) return false;
    }
    if (hasAvdInfo() != other.hasAvdInfo()) return false;
    if (hasAvdInfo()) {
      if (!getAvdInfo()
          .equals(other.getAvdInfo())) return false;
    }
    if (hasFeatureFlagState() != other.hasFeatureFlagState()) return false;
    if (hasFeatureFlagState()) {
      if (!getFeatureFlagState()
          .equals(other.getFeatureFlagState())) return false;
    }
    if (hasHypervisor() != other.hasHypervisor()) return false;
    if (hasHypervisor()) {
      if (hypervisor_ != other.hypervisor_) return false;
    }
    if (hasQuickbootLoad() != other.hasQuickbootLoad()) return false;
    if (hasQuickbootLoad()) {
      if (!getQuickbootLoad()
          .equals(other.getQuickbootLoad())) return false;
    }
    if (hasQuickbootSave() != other.hasQuickbootSave()) return false;
    if (hasQuickbootSave()) {
      if (!getQuickbootSave()
          .equals(other.getQuickbootSave())) return false;
    }
    if (hasGlesUsages() != other.hasGlesUsages()) return false;
    if (hasGlesUsages()) {
      if (!getGlesUsages()
          .equals(other.getGlesUsages())) return false;
    }
    if (!getSnapshotLoadsList()
        .equals(other.getSnapshotLoadsList())) return false;
    if (!getSnapshotSavesList()
        .equals(other.getSnapshotSavesList())) return false;
    if (hasSnapshotUiCounts() != other.hasSnapshotUiCounts()) return false;
    if (hasSnapshotUiCounts()) {
      if (!getSnapshotUiCounts()
          .equals(other.getSnapshotUiCounts())) return false;
    }
    if (hasCamera() != other.hasCamera()) return false;
    if (hasCamera()) {
      if (!getCamera()
          .equals(other.getCamera())) return false;
    }
    if (hasVirtualScene() != other.hasVirtualScene()) return false;
    if (hasVirtualScene()) {
      if (!getVirtualScene()
          .equals(other.getVirtualScene())) return false;
    }
    if (hasBootInfo() != other.hasBootInfo()) return false;
    if (hasBootInfo()) {
      if (!getBootInfo()
          .equals(other.getBootInfo())) return false;
    }
    if (hasAutomation() != other.hasAutomation()) return false;
    if (hasAutomation()) {
      if (!getAutomation()
          .equals(other.getAutomation())) return false;
    }
    if (hasMultiDisplay() != other.hasMultiDisplay()) return false;
    if (hasMultiDisplay()) {
      if (!getMultiDisplay()
          .equals(other.getMultiDisplay())) return false;
    }
    if (hasGrpc() != other.hasGrpc()) return false;
    if (hasGrpc()) {
      if (!getGrpc()
          .equals(other.getGrpc())) return false;
    }
    if (hasLocationV2() != other.hasLocationV2()) return false;
    if (hasLocationV2()) {
      if (!getLocationV2()
          .equals(other.getLocationV2())) return false;
    }
    if (hasScreenshot() != other.hasScreenshot()) return false;
    if (hasScreenshot()) {
      if (!getScreenshot()
          .equals(other.getScreenshot())) return false;
    }
    if (!getIceboxList()
        .equals(other.getIceboxList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasGuestArch()) {
      hash = (37 * hash) + GUEST_ARCH_FIELD_NUMBER;
      hash = (53 * hash) + guestArch_;
    }
    if (hasSystemTime()) {
      hash = (37 * hash) + SYSTEM_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSystemTime());
    }
    if (hasUserTime()) {
      hash = (37 * hash) + USER_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUserTime());
    }
    if (hasCrashes()) {
      hash = (37 * hash) + CRASHES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCrashes());
    }
    if (hasWallTime()) {
      hash = (37 * hash) + WALL_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getWallTime());
    }
    if (hasExitStarted()) {
      hash = (37 * hash) + EXIT_STARTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getExitStarted());
    }
    if (hasGuestApiLevel()) {
      hash = (37 * hash) + GUEST_API_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGuestApiLevel());
    }
    if (hasGuestGpuEnabled()) {
      hash = (37 * hash) + GUEST_GPU_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGuestGpuEnabled());
    }
    if (hasIsOpenglAlive()) {
      hash = (37 * hash) + IS_OPENGL_ALIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsOpenglAlive());
    }
    if (hasAdbLiveness()) {
      hash = (37 * hash) + ADB_LIVENESS_FIELD_NUMBER;
      hash = (53 * hash) + adbLiveness_;
    }
    if (hasGuestGl()) {
      hash = (37 * hash) + GUEST_GL_FIELD_NUMBER;
      hash = (53 * hash) + getGuestGl().hashCode();
    }
    if (getHostGpuCount() > 0) {
      hash = (37 * hash) + HOST_GPU_FIELD_NUMBER;
      hash = (53 * hash) + getHostGpuList().hashCode();
    }
    if (hasSessionPhase()) {
      hash = (37 * hash) + SESSION_PHASE_FIELD_NUMBER;
      hash = (53 * hash) + sessionPhase_;
    }
    if (hasCoreVersion()) {
      hash = (37 * hash) + CORE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getCoreVersion().hashCode();
    }
    if (hasRenderer()) {
      hash = (37 * hash) + RENDERER_FIELD_NUMBER;
      hash = (53 * hash) + renderer_;
    }
    if (hasUsedFeatures()) {
      hash = (37 * hash) + USED_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getUsedFeatures().hashCode();
    }
    if (hasAvdInfo()) {
      hash = (37 * hash) + AVD_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getAvdInfo().hashCode();
    }
    if (hasFeatureFlagState()) {
      hash = (37 * hash) + FEATURE_FLAG_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureFlagState().hashCode();
    }
    if (hasHypervisor()) {
      hash = (37 * hash) + HYPERVISOR_FIELD_NUMBER;
      hash = (53 * hash) + hypervisor_;
    }
    if (hasQuickbootLoad()) {
      hash = (37 * hash) + QUICKBOOT_LOAD_FIELD_NUMBER;
      hash = (53 * hash) + getQuickbootLoad().hashCode();
    }
    if (hasQuickbootSave()) {
      hash = (37 * hash) + QUICKBOOT_SAVE_FIELD_NUMBER;
      hash = (53 * hash) + getQuickbootSave().hashCode();
    }
    if (hasGlesUsages()) {
      hash = (37 * hash) + GLES_USAGES_FIELD_NUMBER;
      hash = (53 * hash) + getGlesUsages().hashCode();
    }
    if (getSnapshotLoadsCount() > 0) {
      hash = (37 * hash) + SNAPSHOT_LOADS_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshotLoadsList().hashCode();
    }
    if (getSnapshotSavesCount() > 0) {
      hash = (37 * hash) + SNAPSHOT_SAVES_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshotSavesList().hashCode();
    }
    if (hasSnapshotUiCounts()) {
      hash = (37 * hash) + SNAPSHOT_UI_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshotUiCounts().hashCode();
    }
    if (hasCamera()) {
      hash = (37 * hash) + CAMERA_FIELD_NUMBER;
      hash = (53 * hash) + getCamera().hashCode();
    }
    if (hasVirtualScene()) {
      hash = (37 * hash) + VIRTUAL_SCENE_FIELD_NUMBER;
      hash = (53 * hash) + getVirtualScene().hashCode();
    }
    if (hasBootInfo()) {
      hash = (37 * hash) + BOOT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getBootInfo().hashCode();
    }
    if (hasAutomation()) {
      hash = (37 * hash) + AUTOMATION_FIELD_NUMBER;
      hash = (53 * hash) + getAutomation().hashCode();
    }
    if (hasMultiDisplay()) {
      hash = (37 * hash) + MULTI_DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getMultiDisplay().hashCode();
    }
    if (hasGrpc()) {
      hash = (37 * hash) + GRPC_FIELD_NUMBER;
      hash = (53 * hash) + getGrpc().hashCode();
    }
    if (hasLocationV2()) {
      hash = (37 * hash) + LOCATION_V2_FIELD_NUMBER;
      hash = (53 * hash) + getLocationV2().hashCode();
    }
    if (hasScreenshot()) {
      hash = (37 * hash) + SCREENSHOT_FIELD_NUMBER;
      hash = (53 * hash) + getScreenshot().hashCode();
    }
    if (getIceboxCount() > 0) {
      hash = (37 * hash) + ICEBOX_FIELD_NUMBER;
      hash = (53 * hash) + getIceboxList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorDetails parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorDetails prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Metrics related to the Emulator.
   * </pre>
   *
   * Protobuf type {@code android_studio.EmulatorDetails}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorDetails)
      com.google.wireless.android.sdk.stats.EmulatorDetailsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorDetails.class, com.google.wireless.android.sdk.stats.EmulatorDetails.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorDetails.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getGuestGlFieldBuilder();
        getHostGpuFieldBuilder();
        getUsedFeaturesFieldBuilder();
        getAvdInfoFieldBuilder();
        getFeatureFlagStateFieldBuilder();
        getQuickbootLoadFieldBuilder();
        getQuickbootSaveFieldBuilder();
        getGlesUsagesFieldBuilder();
        getSnapshotLoadsFieldBuilder();
        getSnapshotSavesFieldBuilder();
        getSnapshotUiCountsFieldBuilder();
        getCameraFieldBuilder();
        getVirtualSceneFieldBuilder();
        getBootInfoFieldBuilder();
        getAutomationFieldBuilder();
        getMultiDisplayFieldBuilder();
        getGrpcFieldBuilder();
        getLocationV2FieldBuilder();
        getScreenshotFieldBuilder();
        getIceboxFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      guestArch_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      systemTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      userTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      crashes_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      wallTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      exitStarted_ = false;
      bitField0_ = (bitField0_ & ~0x00000020);
      guestApiLevel_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      guestGpuEnabled_ = false;
      bitField0_ = (bitField0_ & ~0x00000080);
      isOpenglAlive_ = false;
      bitField0_ = (bitField0_ & ~0x00000100);
      adbLiveness_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      if (guestGlBuilder_ == null) {
        guestGl_ = null;
      } else {
        guestGlBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      if (hostGpuBuilder_ == null) {
        hostGpu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
      } else {
        hostGpuBuilder_.clear();
      }
      sessionPhase_ = 0;
      bitField0_ = (bitField0_ & ~0x00001000);
      coreVersion_ = "";
      bitField0_ = (bitField0_ & ~0x00002000);
      renderer_ = 0;
      bitField0_ = (bitField0_ & ~0x00004000);
      if (usedFeaturesBuilder_ == null) {
        usedFeatures_ = null;
      } else {
        usedFeaturesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      if (avdInfoBuilder_ == null) {
        avdInfo_ = null;
      } else {
        avdInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      if (featureFlagStateBuilder_ == null) {
        featureFlagState_ = null;
      } else {
        featureFlagStateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      hypervisor_ = 0;
      bitField0_ = (bitField0_ & ~0x00040000);
      if (quickbootLoadBuilder_ == null) {
        quickbootLoad_ = null;
      } else {
        quickbootLoadBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00080000);
      if (quickbootSaveBuilder_ == null) {
        quickbootSave_ = null;
      } else {
        quickbootSaveBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      if (glesUsagesBuilder_ == null) {
        glesUsages_ = null;
      } else {
        glesUsagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00200000);
      if (snapshotLoadsBuilder_ == null) {
        snapshotLoads_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
      } else {
        snapshotLoadsBuilder_.clear();
      }
      if (snapshotSavesBuilder_ == null) {
        snapshotSaves_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
      } else {
        snapshotSavesBuilder_.clear();
      }
      if (snapshotUiCountsBuilder_ == null) {
        snapshotUiCounts_ = null;
      } else {
        snapshotUiCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x01000000);
      if (cameraBuilder_ == null) {
        camera_ = null;
      } else {
        cameraBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x02000000);
      if (virtualSceneBuilder_ == null) {
        virtualScene_ = null;
      } else {
        virtualSceneBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x04000000);
      if (bootInfoBuilder_ == null) {
        bootInfo_ = null;
      } else {
        bootInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x08000000);
      if (automationBuilder_ == null) {
        automation_ = null;
      } else {
        automationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x10000000);
      if (multiDisplayBuilder_ == null) {
        multiDisplay_ = null;
      } else {
        multiDisplayBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x20000000);
      if (grpcBuilder_ == null) {
        grpc_ = null;
      } else {
        grpcBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x40000000);
      if (locationV2Builder_ == null) {
        locationV2_ = null;
      } else {
        locationV2Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x80000000);
      if (screenshotBuilder_ == null) {
        screenshot_ = null;
      } else {
        screenshotBuilder_.clear();
      }
      bitField1_ = (bitField1_ & ~0x00000001);
      if (iceboxBuilder_ == null) {
        icebox_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000002);
      } else {
        iceboxBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorDetails_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorDetails getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorDetails.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorDetails build() {
      com.google.wireless.android.sdk.stats.EmulatorDetails result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorDetails buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorDetails result = new com.google.wireless.android.sdk.stats.EmulatorDetails(this);
      int from_bitField0_ = bitField0_;
      int from_bitField1_ = bitField1_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.guestArch_ = guestArch_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.systemTime_ = systemTime_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.userTime_ = userTime_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.crashes_ = crashes_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.wallTime_ = wallTime_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.exitStarted_ = exitStarted_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.guestApiLevel_ = guestApiLevel_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.guestGpuEnabled_ = guestGpuEnabled_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.isOpenglAlive_ = isOpenglAlive_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        to_bitField0_ |= 0x00000200;
      }
      result.adbLiveness_ = adbLiveness_;
      if (((from_bitField0_ & 0x00000400) != 0)) {
        if (guestGlBuilder_ == null) {
          result.guestGl_ = guestGl_;
        } else {
          result.guestGl_ = guestGlBuilder_.build();
        }
        to_bitField0_ |= 0x00000400;
      }
      if (hostGpuBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          hostGpu_ = java.util.Collections.unmodifiableList(hostGpu_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.hostGpu_ = hostGpu_;
      } else {
        result.hostGpu_ = hostGpuBuilder_.build();
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        to_bitField0_ |= 0x00000800;
      }
      result.sessionPhase_ = sessionPhase_;
      if (((from_bitField0_ & 0x00002000) != 0)) {
        to_bitField0_ |= 0x00001000;
      }
      result.coreVersion_ = coreVersion_;
      if (((from_bitField0_ & 0x00004000) != 0)) {
        to_bitField0_ |= 0x00002000;
      }
      result.renderer_ = renderer_;
      if (((from_bitField0_ & 0x00008000) != 0)) {
        if (usedFeaturesBuilder_ == null) {
          result.usedFeatures_ = usedFeatures_;
        } else {
          result.usedFeatures_ = usedFeaturesBuilder_.build();
        }
        to_bitField0_ |= 0x00004000;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        if (avdInfoBuilder_ == null) {
          result.avdInfo_ = avdInfo_;
        } else {
          result.avdInfo_ = avdInfoBuilder_.build();
        }
        to_bitField0_ |= 0x00008000;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        if (featureFlagStateBuilder_ == null) {
          result.featureFlagState_ = featureFlagState_;
        } else {
          result.featureFlagState_ = featureFlagStateBuilder_.build();
        }
        to_bitField0_ |= 0x00010000;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        to_bitField0_ |= 0x00020000;
      }
      result.hypervisor_ = hypervisor_;
      if (((from_bitField0_ & 0x00080000) != 0)) {
        if (quickbootLoadBuilder_ == null) {
          result.quickbootLoad_ = quickbootLoad_;
        } else {
          result.quickbootLoad_ = quickbootLoadBuilder_.build();
        }
        to_bitField0_ |= 0x00040000;
      }
      if (((from_bitField0_ & 0x00100000) != 0)) {
        if (quickbootSaveBuilder_ == null) {
          result.quickbootSave_ = quickbootSave_;
        } else {
          result.quickbootSave_ = quickbootSaveBuilder_.build();
        }
        to_bitField0_ |= 0x00080000;
      }
      if (((from_bitField0_ & 0x00200000) != 0)) {
        if (glesUsagesBuilder_ == null) {
          result.glesUsages_ = glesUsages_;
        } else {
          result.glesUsages_ = glesUsagesBuilder_.build();
        }
        to_bitField0_ |= 0x00100000;
      }
      if (snapshotLoadsBuilder_ == null) {
        if (((bitField0_ & 0x00400000) != 0)) {
          snapshotLoads_ = java.util.Collections.unmodifiableList(snapshotLoads_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.snapshotLoads_ = snapshotLoads_;
      } else {
        result.snapshotLoads_ = snapshotLoadsBuilder_.build();
      }
      if (snapshotSavesBuilder_ == null) {
        if (((bitField0_ & 0x00800000) != 0)) {
          snapshotSaves_ = java.util.Collections.unmodifiableList(snapshotSaves_);
          bitField0_ = (bitField0_ & ~0x00800000);
        }
        result.snapshotSaves_ = snapshotSaves_;
      } else {
        result.snapshotSaves_ = snapshotSavesBuilder_.build();
      }
      if (((from_bitField0_ & 0x01000000) != 0)) {
        if (snapshotUiCountsBuilder_ == null) {
          result.snapshotUiCounts_ = snapshotUiCounts_;
        } else {
          result.snapshotUiCounts_ = snapshotUiCountsBuilder_.build();
        }
        to_bitField0_ |= 0x00200000;
      }
      if (((from_bitField0_ & 0x02000000) != 0)) {
        if (cameraBuilder_ == null) {
          result.camera_ = camera_;
        } else {
          result.camera_ = cameraBuilder_.build();
        }
        to_bitField0_ |= 0x00400000;
      }
      if (((from_bitField0_ & 0x04000000) != 0)) {
        if (virtualSceneBuilder_ == null) {
          result.virtualScene_ = virtualScene_;
        } else {
          result.virtualScene_ = virtualSceneBuilder_.build();
        }
        to_bitField0_ |= 0x00800000;
      }
      if (((from_bitField0_ & 0x08000000) != 0)) {
        if (bootInfoBuilder_ == null) {
          result.bootInfo_ = bootInfo_;
        } else {
          result.bootInfo_ = bootInfoBuilder_.build();
        }
        to_bitField0_ |= 0x01000000;
      }
      if (((from_bitField0_ & 0x10000000) != 0)) {
        if (automationBuilder_ == null) {
          result.automation_ = automation_;
        } else {
          result.automation_ = automationBuilder_.build();
        }
        to_bitField0_ |= 0x02000000;
      }
      if (((from_bitField0_ & 0x20000000) != 0)) {
        if (multiDisplayBuilder_ == null) {
          result.multiDisplay_ = multiDisplay_;
        } else {
          result.multiDisplay_ = multiDisplayBuilder_.build();
        }
        to_bitField0_ |= 0x04000000;
      }
      if (((from_bitField0_ & 0x40000000) != 0)) {
        if (grpcBuilder_ == null) {
          result.grpc_ = grpc_;
        } else {
          result.grpc_ = grpcBuilder_.build();
        }
        to_bitField0_ |= 0x08000000;
      }
      if (((from_bitField0_ & 0x80000000) != 0)) {
        if (locationV2Builder_ == null) {
          result.locationV2_ = locationV2_;
        } else {
          result.locationV2_ = locationV2Builder_.build();
        }
        to_bitField0_ |= 0x10000000;
      }
      if (((from_bitField1_ & 0x00000001) != 0)) {
        if (screenshotBuilder_ == null) {
          result.screenshot_ = screenshot_;
        } else {
          result.screenshot_ = screenshotBuilder_.build();
        }
        to_bitField0_ |= 0x20000000;
      }
      if (iceboxBuilder_ == null) {
        if (((bitField1_ & 0x00000002) != 0)) {
          icebox_ = java.util.Collections.unmodifiableList(icebox_);
          bitField1_ = (bitField1_ & ~0x00000002);
        }
        result.icebox_ = icebox_;
      } else {
        result.icebox_ = iceboxBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorDetails) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorDetails)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorDetails other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorDetails.getDefaultInstance()) return this;
      if (other.hasGuestArch()) {
        setGuestArch(other.getGuestArch());
      }
      if (other.hasSystemTime()) {
        setSystemTime(other.getSystemTime());
      }
      if (other.hasUserTime()) {
        setUserTime(other.getUserTime());
      }
      if (other.hasCrashes()) {
        setCrashes(other.getCrashes());
      }
      if (other.hasWallTime()) {
        setWallTime(other.getWallTime());
      }
      if (other.hasExitStarted()) {
        setExitStarted(other.getExitStarted());
      }
      if (other.hasGuestApiLevel()) {
        setGuestApiLevel(other.getGuestApiLevel());
      }
      if (other.hasGuestGpuEnabled()) {
        setGuestGpuEnabled(other.getGuestGpuEnabled());
      }
      if (other.hasIsOpenglAlive()) {
        setIsOpenglAlive(other.getIsOpenglAlive());
      }
      if (other.hasAdbLiveness()) {
        setAdbLiveness(other.getAdbLiveness());
      }
      if (other.hasGuestGl()) {
        mergeGuestGl(other.getGuestGl());
      }
      if (hostGpuBuilder_ == null) {
        if (!other.hostGpu_.isEmpty()) {
          if (hostGpu_.isEmpty()) {
            hostGpu_ = other.hostGpu_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureHostGpuIsMutable();
            hostGpu_.addAll(other.hostGpu_);
          }
          onChanged();
        }
      } else {
        if (!other.hostGpu_.isEmpty()) {
          if (hostGpuBuilder_.isEmpty()) {
            hostGpuBuilder_.dispose();
            hostGpuBuilder_ = null;
            hostGpu_ = other.hostGpu_;
            bitField0_ = (bitField0_ & ~0x00000800);
            hostGpuBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHostGpuFieldBuilder() : null;
          } else {
            hostGpuBuilder_.addAllMessages(other.hostGpu_);
          }
        }
      }
      if (other.hasSessionPhase()) {
        setSessionPhase(other.getSessionPhase());
      }
      if (other.hasCoreVersion()) {
        bitField0_ |= 0x00002000;
        coreVersion_ = other.coreVersion_;
        onChanged();
      }
      if (other.hasRenderer()) {
        setRenderer(other.getRenderer());
      }
      if (other.hasUsedFeatures()) {
        mergeUsedFeatures(other.getUsedFeatures());
      }
      if (other.hasAvdInfo()) {
        mergeAvdInfo(other.getAvdInfo());
      }
      if (other.hasFeatureFlagState()) {
        mergeFeatureFlagState(other.getFeatureFlagState());
      }
      if (other.hasHypervisor()) {
        setHypervisor(other.getHypervisor());
      }
      if (other.hasQuickbootLoad()) {
        mergeQuickbootLoad(other.getQuickbootLoad());
      }
      if (other.hasQuickbootSave()) {
        mergeQuickbootSave(other.getQuickbootSave());
      }
      if (other.hasGlesUsages()) {
        mergeGlesUsages(other.getGlesUsages());
      }
      if (snapshotLoadsBuilder_ == null) {
        if (!other.snapshotLoads_.isEmpty()) {
          if (snapshotLoads_.isEmpty()) {
            snapshotLoads_ = other.snapshotLoads_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureSnapshotLoadsIsMutable();
            snapshotLoads_.addAll(other.snapshotLoads_);
          }
          onChanged();
        }
      } else {
        if (!other.snapshotLoads_.isEmpty()) {
          if (snapshotLoadsBuilder_.isEmpty()) {
            snapshotLoadsBuilder_.dispose();
            snapshotLoadsBuilder_ = null;
            snapshotLoads_ = other.snapshotLoads_;
            bitField0_ = (bitField0_ & ~0x00400000);
            snapshotLoadsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSnapshotLoadsFieldBuilder() : null;
          } else {
            snapshotLoadsBuilder_.addAllMessages(other.snapshotLoads_);
          }
        }
      }
      if (snapshotSavesBuilder_ == null) {
        if (!other.snapshotSaves_.isEmpty()) {
          if (snapshotSaves_.isEmpty()) {
            snapshotSaves_ = other.snapshotSaves_;
            bitField0_ = (bitField0_ & ~0x00800000);
          } else {
            ensureSnapshotSavesIsMutable();
            snapshotSaves_.addAll(other.snapshotSaves_);
          }
          onChanged();
        }
      } else {
        if (!other.snapshotSaves_.isEmpty()) {
          if (snapshotSavesBuilder_.isEmpty()) {
            snapshotSavesBuilder_.dispose();
            snapshotSavesBuilder_ = null;
            snapshotSaves_ = other.snapshotSaves_;
            bitField0_ = (bitField0_ & ~0x00800000);
            snapshotSavesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSnapshotSavesFieldBuilder() : null;
          } else {
            snapshotSavesBuilder_.addAllMessages(other.snapshotSaves_);
          }
        }
      }
      if (other.hasSnapshotUiCounts()) {
        mergeSnapshotUiCounts(other.getSnapshotUiCounts());
      }
      if (other.hasCamera()) {
        mergeCamera(other.getCamera());
      }
      if (other.hasVirtualScene()) {
        mergeVirtualScene(other.getVirtualScene());
      }
      if (other.hasBootInfo()) {
        mergeBootInfo(other.getBootInfo());
      }
      if (other.hasAutomation()) {
        mergeAutomation(other.getAutomation());
      }
      if (other.hasMultiDisplay()) {
        mergeMultiDisplay(other.getMultiDisplay());
      }
      if (other.hasGrpc()) {
        mergeGrpc(other.getGrpc());
      }
      if (other.hasLocationV2()) {
        mergeLocationV2(other.getLocationV2());
      }
      if (other.hasScreenshot()) {
        mergeScreenshot(other.getScreenshot());
      }
      if (iceboxBuilder_ == null) {
        if (!other.icebox_.isEmpty()) {
          if (icebox_.isEmpty()) {
            icebox_ = other.icebox_;
            bitField1_ = (bitField1_ & ~0x00000002);
          } else {
            ensureIceboxIsMutable();
            icebox_.addAll(other.icebox_);
          }
          onChanged();
        }
      } else {
        if (!other.icebox_.isEmpty()) {
          if (iceboxBuilder_.isEmpty()) {
            iceboxBuilder_.dispose();
            iceboxBuilder_ = null;
            icebox_ = other.icebox_;
            bitField1_ = (bitField1_ & ~0x00000002);
            iceboxBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIceboxFieldBuilder() : null;
          } else {
            iceboxBuilder_.addAllMessages(other.icebox_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.EmulatorDetails parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.EmulatorDetails) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;
    private int bitField1_;

    private int guestArch_ = 0;
    /**
     * <pre>
     * Cpu architecture of the guest.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.GuestCpuArchitecture guest_arch = 1;</code>
     * @return Whether the guestArch field is set.
     */
    public boolean hasGuestArch() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cpu architecture of the guest.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.GuestCpuArchitecture guest_arch = 1;</code>
     * @return The guestArch.
     */
    public com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture getGuestArch() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture result = com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture.valueOf(guestArch_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture.UNKNOWN_GUEST_CPU_ARCHITECTURE : result;
    }
    /**
     * <pre>
     * Cpu architecture of the guest.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.GuestCpuArchitecture guest_arch = 1;</code>
     * @param value The guestArch to set.
     * @return This builder for chaining.
     */
    public Builder setGuestArch(com.google.wireless.android.sdk.stats.EmulatorDetails.GuestCpuArchitecture value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      guestArch_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cpu architecture of the guest.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.GuestCpuArchitecture guest_arch = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearGuestArch() {
      bitField0_ = (bitField0_ & ~0x00000001);
      guestArch_ = 0;
      onChanged();
      return this;
    }

    private long systemTime_ ;
    /**
     * <pre>
     * cpu time spent in kernel mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 system_time = 2;</code>
     * @return Whether the systemTime field is set.
     */
    public boolean hasSystemTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * cpu time spent in kernel mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 system_time = 2;</code>
     * @return The systemTime.
     */
    public long getSystemTime() {
      return systemTime_;
    }
    /**
     * <pre>
     * cpu time spent in kernel mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 system_time = 2;</code>
     * @param value The systemTime to set.
     * @return This builder for chaining.
     */
    public Builder setSystemTime(long value) {
      bitField0_ |= 0x00000002;
      systemTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * cpu time spent in kernel mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 system_time = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSystemTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      systemTime_ = 0L;
      onChanged();
      return this;
    }

    private long userTime_ ;
    /**
     * <pre>
     * cpu time spent in user mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 user_time = 3;</code>
     * @return Whether the userTime field is set.
     */
    public boolean hasUserTime() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * cpu time spent in user mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 user_time = 3;</code>
     * @return The userTime.
     */
    public long getUserTime() {
      return userTime_;
    }
    /**
     * <pre>
     * cpu time spent in user mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 user_time = 3;</code>
     * @param value The userTime to set.
     * @return This builder for chaining.
     */
    public Builder setUserTime(long value) {
      bitField0_ |= 0x00000004;
      userTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * cpu time spent in user mode in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 user_time = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      userTime_ = 0L;
      onChanged();
      return this;
    }

    private long crashes_ ;
    /**
     * <pre>
     * number of crashes since last metrics report.
     * </pre>
     *
     * <code>optional int64 crashes = 4;</code>
     * @return Whether the crashes field is set.
     */
    public boolean hasCrashes() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * number of crashes since last metrics report.
     * </pre>
     *
     * <code>optional int64 crashes = 4;</code>
     * @return The crashes.
     */
    public long getCrashes() {
      return crashes_;
    }
    /**
     * <pre>
     * number of crashes since last metrics report.
     * </pre>
     *
     * <code>optional int64 crashes = 4;</code>
     * @param value The crashes to set.
     * @return This builder for chaining.
     */
    public Builder setCrashes(long value) {
      bitField0_ |= 0x00000008;
      crashes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * number of crashes since last metrics report.
     * </pre>
     *
     * <code>optional int64 crashes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCrashes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      crashes_ = 0L;
      onChanged();
      return this;
    }

    private long wallTime_ ;
    /**
     * <pre>
     * real time in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 wall_time = 5;</code>
     * @return Whether the wallTime field is set.
     */
    public boolean hasWallTime() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * real time in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 wall_time = 5;</code>
     * @return The wallTime.
     */
    public long getWallTime() {
      return wallTime_;
    }
    /**
     * <pre>
     * real time in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 wall_time = 5;</code>
     * @param value The wallTime to set.
     * @return This builder for chaining.
     */
    public Builder setWallTime(long value) {
      bitField0_ |= 0x00000010;
      wallTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * real time in milliseconds since last metrics report.
     * </pre>
     *
     * <code>optional int64 wall_time = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearWallTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      wallTime_ = 0L;
      onChanged();
      return this;
    }

    private boolean exitStarted_ ;
    /**
     * <pre>
     * True iff a crash occurred while process started its exit routines.
     * </pre>
     *
     * <code>optional bool exit_started = 6;</code>
     * @return Whether the exitStarted field is set.
     */
    public boolean hasExitStarted() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * True iff a crash occurred while process started its exit routines.
     * </pre>
     *
     * <code>optional bool exit_started = 6;</code>
     * @return The exitStarted.
     */
    public boolean getExitStarted() {
      return exitStarted_;
    }
    /**
     * <pre>
     * True iff a crash occurred while process started its exit routines.
     * </pre>
     *
     * <code>optional bool exit_started = 6;</code>
     * @param value The exitStarted to set.
     * @return This builder for chaining.
     */
    public Builder setExitStarted(boolean value) {
      bitField0_ |= 0x00000020;
      exitStarted_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True iff a crash occurred while process started its exit routines.
     * </pre>
     *
     * <code>optional bool exit_started = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearExitStarted() {
      bitField0_ = (bitField0_ & ~0x00000020);
      exitStarted_ = false;
      onChanged();
      return this;
    }

    private long guestApiLevel_ ;
    /**
     * <pre>
     * The API level of the running guest image.
     * </pre>
     *
     * <code>optional int64 guest_api_level = 7;</code>
     * @return Whether the guestApiLevel field is set.
     */
    public boolean hasGuestApiLevel() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The API level of the running guest image.
     * </pre>
     *
     * <code>optional int64 guest_api_level = 7;</code>
     * @return The guestApiLevel.
     */
    public long getGuestApiLevel() {
      return guestApiLevel_;
    }
    /**
     * <pre>
     * The API level of the running guest image.
     * </pre>
     *
     * <code>optional int64 guest_api_level = 7;</code>
     * @param value The guestApiLevel to set.
     * @return This builder for chaining.
     */
    public Builder setGuestApiLevel(long value) {
      bitField0_ |= 0x00000040;
      guestApiLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The API level of the running guest image.
     * </pre>
     *
     * <code>optional int64 guest_api_level = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearGuestApiLevel() {
      bitField0_ = (bitField0_ & ~0x00000040);
      guestApiLevel_ = 0L;
      onChanged();
      return this;
    }

    private boolean guestGpuEnabled_ ;
    /**
     * <pre>
     * The value of guest gpu option (ro.kernel.qemu.gles)
     * </pre>
     *
     * <code>optional bool guest_gpu_enabled = 8;</code>
     * @return Whether the guestGpuEnabled field is set.
     */
    public boolean hasGuestGpuEnabled() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The value of guest gpu option (ro.kernel.qemu.gles)
     * </pre>
     *
     * <code>optional bool guest_gpu_enabled = 8;</code>
     * @return The guestGpuEnabled.
     */
    public boolean getGuestGpuEnabled() {
      return guestGpuEnabled_;
    }
    /**
     * <pre>
     * The value of guest gpu option (ro.kernel.qemu.gles)
     * </pre>
     *
     * <code>optional bool guest_gpu_enabled = 8;</code>
     * @param value The guestGpuEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setGuestGpuEnabled(boolean value) {
      bitField0_ |= 0x00000080;
      guestGpuEnabled_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of guest gpu option (ro.kernel.qemu.gles)
     * </pre>
     *
     * <code>optional bool guest_gpu_enabled = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearGuestGpuEnabled() {
      bitField0_ = (bitField0_ & ~0x00000080);
      guestGpuEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean isOpenglAlive_ ;
    /**
     * <pre>
     * True if we were able to correctly initialize opengl on the host.
     * </pre>
     *
     * <code>optional bool is_opengl_alive = 10;</code>
     * @return Whether the isOpenglAlive field is set.
     */
    public boolean hasIsOpenglAlive() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * True if we were able to correctly initialize opengl on the host.
     * </pre>
     *
     * <code>optional bool is_opengl_alive = 10;</code>
     * @return The isOpenglAlive.
     */
    public boolean getIsOpenglAlive() {
      return isOpenglAlive_;
    }
    /**
     * <pre>
     * True if we were able to correctly initialize opengl on the host.
     * </pre>
     *
     * <code>optional bool is_opengl_alive = 10;</code>
     * @param value The isOpenglAlive to set.
     * @return This builder for chaining.
     */
    public Builder setIsOpenglAlive(boolean value) {
      bitField0_ |= 0x00000100;
      isOpenglAlive_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if we were able to correctly initialize opengl on the host.
     * </pre>
     *
     * <code>optional bool is_opengl_alive = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsOpenglAlive() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isOpenglAlive_ = false;
      onChanged();
      return this;
    }

    private int adbLiveness_ = 0;
    /**
     * <pre>
     * Connectivity from adb of the running emulator instance.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorAdbLiveness adb_liveness = 11;</code>
     * @return Whether the adbLiveness field is set.
     */
    public boolean hasAdbLiveness() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Connectivity from adb of the running emulator instance.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorAdbLiveness adb_liveness = 11;</code>
     * @return The adbLiveness.
     */
    public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness getAdbLiveness() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness.valueOf(adbLiveness_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness.UNKNOWN_EMULATOR_ADB_LIVENESS : result;
    }
    /**
     * <pre>
     * Connectivity from adb of the running emulator instance.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorAdbLiveness adb_liveness = 11;</code>
     * @param value The adbLiveness to set.
     * @return This builder for chaining.
     */
    public Builder setAdbLiveness(com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorAdbLiveness value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      adbLiveness_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connectivity from adb of the running emulator instance.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorAdbLiveness adb_liveness = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearAdbLiveness() {
      bitField0_ = (bitField0_ & ~0x00000200);
      adbLiveness_ = 0;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo guestGl_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo, com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorGuestGlInfoOrBuilder> guestGlBuilder_;
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     * @return Whether the guestGl field is set.
     */
    public boolean hasGuestGl() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     * @return The guestGl.
     */
    public com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo getGuestGl() {
      if (guestGlBuilder_ == null) {
        return guestGl_ == null ? com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.getDefaultInstance() : guestGl_;
      } else {
        return guestGlBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    public Builder setGuestGl(com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo value) {
      if (guestGlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        guestGl_ = value;
        onChanged();
      } else {
        guestGlBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    public Builder setGuestGl(
        com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.Builder builderForValue) {
      if (guestGlBuilder_ == null) {
        guestGl_ = builderForValue.build();
        onChanged();
      } else {
        guestGlBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    public Builder mergeGuestGl(com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo value) {
      if (guestGlBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0) &&
            guestGl_ != null &&
            guestGl_ != com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.getDefaultInstance()) {
          guestGl_ =
            com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.newBuilder(guestGl_).mergeFrom(value).buildPartial();
        } else {
          guestGl_ = value;
        }
        onChanged();
      } else {
        guestGlBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    public Builder clearGuestGl() {
      if (guestGlBuilder_ == null) {
        guestGl_ = null;
        onChanged();
      } else {
        guestGlBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.Builder getGuestGlBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getGuestGlFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGuestGlInfoOrBuilder getGuestGlOrBuilder() {
      if (guestGlBuilder_ != null) {
        return guestGlBuilder_.getMessageOrBuilder();
      } else {
        return guestGl_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.getDefaultInstance() : guestGl_;
      }
    }
    /**
     * <pre>
     * Information about the gl implementation in the guest image.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGuestGlInfo guest_gl = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo, com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorGuestGlInfoOrBuilder>
        getGuestGlFieldBuilder() {
      if (guestGlBuilder_ == null) {
        guestGlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo, com.google.wireless.android.sdk.stats.EmulatorGuestGlInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorGuestGlInfoOrBuilder>(
                getGuestGl(),
                getParentForChildren(),
                isClean());
        guestGl_ = null;
      }
      return guestGlBuilder_;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.EmulatorGpuInfo> hostGpu_ =
      java.util.Collections.emptyList();
    private void ensureHostGpuIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        hostGpu_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorGpuInfo>(hostGpu_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGpuInfo, com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder> hostGpuBuilder_;

    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorGpuInfo> getHostGpuList() {
      if (hostGpuBuilder_ == null) {
        return java.util.Collections.unmodifiableList(hostGpu_);
      } else {
        return hostGpuBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public int getHostGpuCount() {
      if (hostGpuBuilder_ == null) {
        return hostGpu_.size();
      } else {
        return hostGpuBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGpuInfo getHostGpu(int index) {
      if (hostGpuBuilder_ == null) {
        return hostGpu_.get(index);
      } else {
        return hostGpuBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder setHostGpu(
        int index, com.google.wireless.android.sdk.stats.EmulatorGpuInfo value) {
      if (hostGpuBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHostGpuIsMutable();
        hostGpu_.set(index, value);
        onChanged();
      } else {
        hostGpuBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder setHostGpu(
        int index, com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder builderForValue) {
      if (hostGpuBuilder_ == null) {
        ensureHostGpuIsMutable();
        hostGpu_.set(index, builderForValue.build());
        onChanged();
      } else {
        hostGpuBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder addHostGpu(com.google.wireless.android.sdk.stats.EmulatorGpuInfo value) {
      if (hostGpuBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHostGpuIsMutable();
        hostGpu_.add(value);
        onChanged();
      } else {
        hostGpuBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder addHostGpu(
        int index, com.google.wireless.android.sdk.stats.EmulatorGpuInfo value) {
      if (hostGpuBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHostGpuIsMutable();
        hostGpu_.add(index, value);
        onChanged();
      } else {
        hostGpuBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder addHostGpu(
        com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder builderForValue) {
      if (hostGpuBuilder_ == null) {
        ensureHostGpuIsMutable();
        hostGpu_.add(builderForValue.build());
        onChanged();
      } else {
        hostGpuBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder addHostGpu(
        int index, com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder builderForValue) {
      if (hostGpuBuilder_ == null) {
        ensureHostGpuIsMutable();
        hostGpu_.add(index, builderForValue.build());
        onChanged();
      } else {
        hostGpuBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder addAllHostGpu(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorGpuInfo> values) {
      if (hostGpuBuilder_ == null) {
        ensureHostGpuIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hostGpu_);
        onChanged();
      } else {
        hostGpuBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder clearHostGpu() {
      if (hostGpuBuilder_ == null) {
        hostGpu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        hostGpuBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public Builder removeHostGpu(int index) {
      if (hostGpuBuilder_ == null) {
        ensureHostGpuIsMutable();
        hostGpu_.remove(index);
        onChanged();
      } else {
        hostGpuBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder getHostGpuBuilder(
        int index) {
      return getHostGpuFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder getHostGpuOrBuilder(
        int index) {
      if (hostGpuBuilder_ == null) {
        return hostGpu_.get(index);  } else {
        return hostGpuBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder>
         getHostGpuOrBuilderList() {
      if (hostGpuBuilder_ != null) {
        return hostGpuBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(hostGpu_);
      }
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder addHostGpuBuilder() {
      return getHostGpuFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.EmulatorGpuInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder addHostGpuBuilder(
        int index) {
      return getHostGpuFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.EmulatorGpuInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Information about the host GPUs (one per GPU).
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorGpuInfo host_gpu = 13;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder>
         getHostGpuBuilderList() {
      return getHostGpuFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGpuInfo, com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder>
        getHostGpuFieldBuilder() {
      if (hostGpuBuilder_ == null) {
        hostGpuBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorGpuInfo, com.google.wireless.android.sdk.stats.EmulatorGpuInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorGpuInfoOrBuilder>(
                hostGpu_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        hostGpu_ = null;
      }
      return hostGpuBuilder_;
    }

    private int sessionPhase_ = 0;
    /**
     * <pre>
     * The "phase" of an emulator session where crash happened.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorSessionPhase session_phase = 14;</code>
     * @return Whether the sessionPhase field is set.
     */
    public boolean hasSessionPhase() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The "phase" of an emulator session where crash happened.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorSessionPhase session_phase = 14;</code>
     * @return The sessionPhase.
     */
    public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase getSessionPhase() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase.valueOf(sessionPhase_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase.UNKNOWN_EMULATOR_SESSION_PHASE : result;
    }
    /**
     * <pre>
     * The "phase" of an emulator session where crash happened.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorSessionPhase session_phase = 14;</code>
     * @param value The sessionPhase to set.
     * @return This builder for chaining.
     */
    public Builder setSessionPhase(com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorSessionPhase value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00001000;
      sessionPhase_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The "phase" of an emulator session where crash happened.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorSessionPhase session_phase = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionPhase() {
      bitField0_ = (bitField0_ & ~0x00001000);
      sessionPhase_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object coreVersion_ = "";
    /**
     * <pre>
     * The emulator core version (e.g. QEMU engine's version).
     * </pre>
     *
     * <code>optional string core_version = 15;</code>
     * @return Whether the coreVersion field is set.
     */
    public boolean hasCoreVersion() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * The emulator core version (e.g. QEMU engine's version).
     * </pre>
     *
     * <code>optional string core_version = 15;</code>
     * @return The coreVersion.
     */
    public java.lang.String getCoreVersion() {
      java.lang.Object ref = coreVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          coreVersion_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The emulator core version (e.g. QEMU engine's version).
     * </pre>
     *
     * <code>optional string core_version = 15;</code>
     * @return The bytes for coreVersion.
     */
    public com.google.protobuf.ByteString
        getCoreVersionBytes() {
      java.lang.Object ref = coreVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coreVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The emulator core version (e.g. QEMU engine's version).
     * </pre>
     *
     * <code>optional string core_version = 15;</code>
     * @param value The coreVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCoreVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      coreVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The emulator core version (e.g. QEMU engine's version).
     * </pre>
     *
     * <code>optional string core_version = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearCoreVersion() {
      bitField0_ = (bitField0_ & ~0x00002000);
      coreVersion_ = getDefaultInstance().getCoreVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The emulator core version (e.g. QEMU engine's version).
     * </pre>
     *
     * <code>optional string core_version = 15;</code>
     * @param value The bytes for coreVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCoreVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      coreVersion_ = value;
      onChanged();
      return this;
    }

    private int renderer_ = 0;
    /**
     * <pre>
     * Renderer of the current emulator session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorRenderer renderer = 16;</code>
     * @return Whether the renderer field is set.
     */
    public boolean hasRenderer() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * Renderer of the current emulator session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorRenderer renderer = 16;</code>
     * @return The renderer.
     */
    public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer getRenderer() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer.valueOf(renderer_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer.UNKNOWN_EMULATOR_RENDERER : result;
    }
    /**
     * <pre>
     * Renderer of the current emulator session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorRenderer renderer = 16;</code>
     * @param value The renderer to set.
     * @return This builder for chaining.
     */
    public Builder setRenderer(com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorRenderer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00004000;
      renderer_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Renderer of the current emulator session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorRenderer renderer = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearRenderer() {
      bitField0_ = (bitField0_ & ~0x00004000);
      renderer_ = 0;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.EmulatorFeatures usedFeatures_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorFeatures, com.google.wireless.android.sdk.stats.EmulatorFeatures.Builder, com.google.wireless.android.sdk.stats.EmulatorFeaturesOrBuilder> usedFeaturesBuilder_;
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     * @return Whether the usedFeatures field is set.
     */
    public boolean hasUsedFeatures() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     * @return The usedFeatures.
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatures getUsedFeatures() {
      if (usedFeaturesBuilder_ == null) {
        return usedFeatures_ == null ? com.google.wireless.android.sdk.stats.EmulatorFeatures.getDefaultInstance() : usedFeatures_;
      } else {
        return usedFeaturesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    public Builder setUsedFeatures(com.google.wireless.android.sdk.stats.EmulatorFeatures value) {
      if (usedFeaturesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        usedFeatures_ = value;
        onChanged();
      } else {
        usedFeaturesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    public Builder setUsedFeatures(
        com.google.wireless.android.sdk.stats.EmulatorFeatures.Builder builderForValue) {
      if (usedFeaturesBuilder_ == null) {
        usedFeatures_ = builderForValue.build();
        onChanged();
      } else {
        usedFeaturesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    public Builder mergeUsedFeatures(com.google.wireless.android.sdk.stats.EmulatorFeatures value) {
      if (usedFeaturesBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0) &&
            usedFeatures_ != null &&
            usedFeatures_ != com.google.wireless.android.sdk.stats.EmulatorFeatures.getDefaultInstance()) {
          usedFeatures_ =
            com.google.wireless.android.sdk.stats.EmulatorFeatures.newBuilder(usedFeatures_).mergeFrom(value).buildPartial();
        } else {
          usedFeatures_ = value;
        }
        onChanged();
      } else {
        usedFeaturesBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    public Builder clearUsedFeatures() {
      if (usedFeaturesBuilder_ == null) {
        usedFeatures_ = null;
        onChanged();
      } else {
        usedFeaturesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      return this;
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatures.Builder getUsedFeaturesBuilder() {
      bitField0_ |= 0x00008000;
      onChanged();
      return getUsedFeaturesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeaturesOrBuilder getUsedFeaturesOrBuilder() {
      if (usedFeaturesBuilder_ != null) {
        return usedFeaturesBuilder_.getMessageOrBuilder();
      } else {
        return usedFeatures_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorFeatures.getDefaultInstance() : usedFeatures_;
      }
    }
    /**
     * <pre>
     * Flags for the used UI features.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatures used_features = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorFeatures, com.google.wireless.android.sdk.stats.EmulatorFeatures.Builder, com.google.wireless.android.sdk.stats.EmulatorFeaturesOrBuilder>
        getUsedFeaturesFieldBuilder() {
      if (usedFeaturesBuilder_ == null) {
        usedFeaturesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorFeatures, com.google.wireless.android.sdk.stats.EmulatorFeatures.Builder, com.google.wireless.android.sdk.stats.EmulatorFeaturesOrBuilder>(
                getUsedFeatures(),
                getParentForChildren(),
                isClean());
        usedFeatures_ = null;
      }
      return usedFeaturesBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorAvdInfo avdInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorAvdInfo, com.google.wireless.android.sdk.stats.EmulatorAvdInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorAvdInfoOrBuilder> avdInfoBuilder_;
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     * @return Whether the avdInfo field is set.
     */
    public boolean hasAvdInfo() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     * @return The avdInfo.
     */
    public com.google.wireless.android.sdk.stats.EmulatorAvdInfo getAvdInfo() {
      if (avdInfoBuilder_ == null) {
        return avdInfo_ == null ? com.google.wireless.android.sdk.stats.EmulatorAvdInfo.getDefaultInstance() : avdInfo_;
      } else {
        return avdInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    public Builder setAvdInfo(com.google.wireless.android.sdk.stats.EmulatorAvdInfo value) {
      if (avdInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        avdInfo_ = value;
        onChanged();
      } else {
        avdInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    public Builder setAvdInfo(
        com.google.wireless.android.sdk.stats.EmulatorAvdInfo.Builder builderForValue) {
      if (avdInfoBuilder_ == null) {
        avdInfo_ = builderForValue.build();
        onChanged();
      } else {
        avdInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    public Builder mergeAvdInfo(com.google.wireless.android.sdk.stats.EmulatorAvdInfo value) {
      if (avdInfoBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0) &&
            avdInfo_ != null &&
            avdInfo_ != com.google.wireless.android.sdk.stats.EmulatorAvdInfo.getDefaultInstance()) {
          avdInfo_ =
            com.google.wireless.android.sdk.stats.EmulatorAvdInfo.newBuilder(avdInfo_).mergeFrom(value).buildPartial();
        } else {
          avdInfo_ = value;
        }
        onChanged();
      } else {
        avdInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    public Builder clearAvdInfo() {
      if (avdInfoBuilder_ == null) {
        avdInfo_ = null;
        onChanged();
      } else {
        avdInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      return this;
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorAvdInfo.Builder getAvdInfoBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getAvdInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorAvdInfoOrBuilder getAvdInfoOrBuilder() {
      if (avdInfoBuilder_ != null) {
        return avdInfoBuilder_.getMessageOrBuilder();
      } else {
        return avdInfo_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorAvdInfo.getDefaultInstance() : avdInfo_;
      }
    }
    /**
     * <pre>
     * Information about the currently loaded AVD.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAvdInfo avd_info = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorAvdInfo, com.google.wireless.android.sdk.stats.EmulatorAvdInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorAvdInfoOrBuilder>
        getAvdInfoFieldBuilder() {
      if (avdInfoBuilder_ == null) {
        avdInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorAvdInfo, com.google.wireless.android.sdk.stats.EmulatorAvdInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorAvdInfoOrBuilder>(
                getAvdInfo(),
                getParentForChildren(),
                isClean());
        avdInfo_ = null;
      }
      return avdInfoBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState featureFlagState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagStateOrBuilder> featureFlagStateBuilder_;
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     * @return Whether the featureFlagState field is set.
     */
    public boolean hasFeatureFlagState() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     * @return The featureFlagState.
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState getFeatureFlagState() {
      if (featureFlagStateBuilder_ == null) {
        return featureFlagState_ == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance() : featureFlagState_;
      } else {
        return featureFlagStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    public Builder setFeatureFlagState(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState value) {
      if (featureFlagStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        featureFlagState_ = value;
        onChanged();
      } else {
        featureFlagStateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    public Builder setFeatureFlagState(
        com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder builderForValue) {
      if (featureFlagStateBuilder_ == null) {
        featureFlagState_ = builderForValue.build();
        onChanged();
      } else {
        featureFlagStateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    public Builder mergeFeatureFlagState(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState value) {
      if (featureFlagStateBuilder_ == null) {
        if (((bitField0_ & 0x00020000) != 0) &&
            featureFlagState_ != null &&
            featureFlagState_ != com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance()) {
          featureFlagState_ =
            com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.newBuilder(featureFlagState_).mergeFrom(value).buildPartial();
        } else {
          featureFlagState_ = value;
        }
        onChanged();
      } else {
        featureFlagStateBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    public Builder clearFeatureFlagState() {
      if (featureFlagStateBuilder_ == null) {
        featureFlagState_ = null;
        onChanged();
      } else {
        featureFlagStateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      return this;
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder getFeatureFlagStateBuilder() {
      bitField0_ |= 0x00020000;
      onChanged();
      return getFeatureFlagStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagStateOrBuilder getFeatureFlagStateOrBuilder() {
      if (featureFlagStateBuilder_ != null) {
        return featureFlagStateBuilder_.getMessageOrBuilder();
      } else {
        return featureFlagState_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance() : featureFlagState_;
      }
    }
    /**
     * <pre>
     * State tracking emulator feature flag enable/disable.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorFeatureFlagState feature_flag_state = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagStateOrBuilder>
        getFeatureFlagStateFieldBuilder() {
      if (featureFlagStateBuilder_ == null) {
        featureFlagStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagStateOrBuilder>(
                getFeatureFlagState(),
                getParentForChildren(),
                isClean());
        featureFlagState_ = null;
      }
      return featureFlagStateBuilder_;
    }

    private int hypervisor_ = 0;
    /**
     * <pre>
     * Hypervisor used in current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorHypervisor hypervisor = 20;</code>
     * @return Whether the hypervisor field is set.
     */
    public boolean hasHypervisor() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * Hypervisor used in current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorHypervisor hypervisor = 20;</code>
     * @return The hypervisor.
     */
    public com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor getHypervisor() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor result = com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor.valueOf(hypervisor_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor.UNKNOWN_HYPERVISOR : result;
    }
    /**
     * <pre>
     * Hypervisor used in current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorHypervisor hypervisor = 20;</code>
     * @param value The hypervisor to set.
     * @return This builder for chaining.
     */
    public Builder setHypervisor(com.google.wireless.android.sdk.stats.EmulatorDetails.EmulatorHypervisor value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00040000;
      hypervisor_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Hypervisor used in current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorDetails.EmulatorHypervisor hypervisor = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearHypervisor() {
      bitField0_ = (bitField0_ & ~0x00040000);
      hypervisor_ = 0;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad quickbootLoad_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoadOrBuilder> quickbootLoadBuilder_;
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     * @return Whether the quickbootLoad field is set.
     */
    public boolean hasQuickbootLoad() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     * @return The quickbootLoad.
     */
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad getQuickbootLoad() {
      if (quickbootLoadBuilder_ == null) {
        return quickbootLoad_ == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance() : quickbootLoad_;
      } else {
        return quickbootLoadBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    public Builder setQuickbootLoad(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad value) {
      if (quickbootLoadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quickbootLoad_ = value;
        onChanged();
      } else {
        quickbootLoadBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00080000;
      return this;
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    public Builder setQuickbootLoad(
        com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder builderForValue) {
      if (quickbootLoadBuilder_ == null) {
        quickbootLoad_ = builderForValue.build();
        onChanged();
      } else {
        quickbootLoadBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00080000;
      return this;
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    public Builder mergeQuickbootLoad(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad value) {
      if (quickbootLoadBuilder_ == null) {
        if (((bitField0_ & 0x00080000) != 0) &&
            quickbootLoad_ != null &&
            quickbootLoad_ != com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance()) {
          quickbootLoad_ =
            com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.newBuilder(quickbootLoad_).mergeFrom(value).buildPartial();
        } else {
          quickbootLoad_ = value;
        }
        onChanged();
      } else {
        quickbootLoadBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00080000;
      return this;
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    public Builder clearQuickbootLoad() {
      if (quickbootLoadBuilder_ == null) {
        quickbootLoad_ = null;
        onChanged();
      } else {
        quickbootLoadBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00080000);
      return this;
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder getQuickbootLoadBuilder() {
      bitField0_ |= 0x00080000;
      onChanged();
      return getQuickbootLoadFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoadOrBuilder getQuickbootLoadOrBuilder() {
      if (quickbootLoadBuilder_ != null) {
        return quickbootLoadBuilder_.getMessageOrBuilder();
      } else {
        return quickbootLoad_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance() : quickbootLoad_;
      }
    }
    /**
     * <pre>
     * Information about quickboot status of the current session.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad quickboot_load = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoadOrBuilder>
        getQuickbootLoadFieldBuilder() {
      if (quickbootLoadBuilder_ == null) {
        quickbootLoadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoadOrBuilder>(
                getQuickbootLoad(),
                getParentForChildren(),
                isClean());
        quickbootLoad_ = null;
      }
      return quickbootLoadBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorQuickbootSave quickbootSave_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorQuickbootSave, com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.Builder, com.google.wireless.android.sdk.stats.EmulatorQuickbootSaveOrBuilder> quickbootSaveBuilder_;
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     * @return Whether the quickbootSave field is set.
     */
    public boolean hasQuickbootSave() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     * @return The quickbootSave.
     */
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootSave getQuickbootSave() {
      if (quickbootSaveBuilder_ == null) {
        return quickbootSave_ == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.getDefaultInstance() : quickbootSave_;
      } else {
        return quickbootSaveBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    public Builder setQuickbootSave(com.google.wireless.android.sdk.stats.EmulatorQuickbootSave value) {
      if (quickbootSaveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quickbootSave_ = value;
        onChanged();
      } else {
        quickbootSaveBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    public Builder setQuickbootSave(
        com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.Builder builderForValue) {
      if (quickbootSaveBuilder_ == null) {
        quickbootSave_ = builderForValue.build();
        onChanged();
      } else {
        quickbootSaveBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    public Builder mergeQuickbootSave(com.google.wireless.android.sdk.stats.EmulatorQuickbootSave value) {
      if (quickbootSaveBuilder_ == null) {
        if (((bitField0_ & 0x00100000) != 0) &&
            quickbootSave_ != null &&
            quickbootSave_ != com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.getDefaultInstance()) {
          quickbootSave_ =
            com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.newBuilder(quickbootSave_).mergeFrom(value).buildPartial();
        } else {
          quickbootSave_ = value;
        }
        onChanged();
      } else {
        quickbootSaveBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    public Builder clearQuickbootSave() {
      if (quickbootSaveBuilder_ == null) {
        quickbootSave_ = null;
        onChanged();
      } else {
        quickbootSaveBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      return this;
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.Builder getQuickbootSaveBuilder() {
      bitField0_ |= 0x00100000;
      onChanged();
      return getQuickbootSaveFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootSaveOrBuilder getQuickbootSaveOrBuilder() {
      if (quickbootSaveBuilder_ != null) {
        return quickbootSaveBuilder_.getMessageOrBuilder();
      } else {
        return quickbootSave_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.getDefaultInstance() : quickbootSave_;
      }
    }
    /**
     * <code>optional .android_studio.EmulatorQuickbootSave quickboot_save = 22;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorQuickbootSave, com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.Builder, com.google.wireless.android.sdk.stats.EmulatorQuickbootSaveOrBuilder>
        getQuickbootSaveFieldBuilder() {
      if (quickbootSaveBuilder_ == null) {
        quickbootSaveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorQuickbootSave, com.google.wireless.android.sdk.stats.EmulatorQuickbootSave.Builder, com.google.wireless.android.sdk.stats.EmulatorQuickbootSaveOrBuilder>(
                getQuickbootSave(),
                getParentForChildren(),
                isClean());
        quickbootSave_ = null;
      }
      return quickbootSaveBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorGLESUsages glesUsages_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGLESUsages, com.google.wireless.android.sdk.stats.EmulatorGLESUsages.Builder, com.google.wireless.android.sdk.stats.EmulatorGLESUsagesOrBuilder> glesUsagesBuilder_;
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     * @return Whether the glesUsages field is set.
     */
    public boolean hasGlesUsages() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     * @return The glesUsages.
     */
    public com.google.wireless.android.sdk.stats.EmulatorGLESUsages getGlesUsages() {
      if (glesUsagesBuilder_ == null) {
        return glesUsages_ == null ? com.google.wireless.android.sdk.stats.EmulatorGLESUsages.getDefaultInstance() : glesUsages_;
      } else {
        return glesUsagesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    public Builder setGlesUsages(com.google.wireless.android.sdk.stats.EmulatorGLESUsages value) {
      if (glesUsagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        glesUsages_ = value;
        onChanged();
      } else {
        glesUsagesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00200000;
      return this;
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    public Builder setGlesUsages(
        com.google.wireless.android.sdk.stats.EmulatorGLESUsages.Builder builderForValue) {
      if (glesUsagesBuilder_ == null) {
        glesUsages_ = builderForValue.build();
        onChanged();
      } else {
        glesUsagesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00200000;
      return this;
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    public Builder mergeGlesUsages(com.google.wireless.android.sdk.stats.EmulatorGLESUsages value) {
      if (glesUsagesBuilder_ == null) {
        if (((bitField0_ & 0x00200000) != 0) &&
            glesUsages_ != null &&
            glesUsages_ != com.google.wireless.android.sdk.stats.EmulatorGLESUsages.getDefaultInstance()) {
          glesUsages_ =
            com.google.wireless.android.sdk.stats.EmulatorGLESUsages.newBuilder(glesUsages_).mergeFrom(value).buildPartial();
        } else {
          glesUsages_ = value;
        }
        onChanged();
      } else {
        glesUsagesBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00200000;
      return this;
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    public Builder clearGlesUsages() {
      if (glesUsagesBuilder_ == null) {
        glesUsages_ = null;
        onChanged();
      } else {
        glesUsagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00200000);
      return this;
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGLESUsages.Builder getGlesUsagesBuilder() {
      bitField0_ |= 0x00200000;
      onChanged();
      return getGlesUsagesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGLESUsagesOrBuilder getGlesUsagesOrBuilder() {
      if (glesUsagesBuilder_ != null) {
        return glesUsagesBuilder_.getMessageOrBuilder();
      } else {
        return glesUsages_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorGLESUsages.getDefaultInstance() : glesUsages_;
      }
    }
    /**
     * <pre>
     * Track GLES command usages
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGLESUsages gles_usages = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGLESUsages, com.google.wireless.android.sdk.stats.EmulatorGLESUsages.Builder, com.google.wireless.android.sdk.stats.EmulatorGLESUsagesOrBuilder>
        getGlesUsagesFieldBuilder() {
      if (glesUsagesBuilder_ == null) {
        glesUsagesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorGLESUsages, com.google.wireless.android.sdk.stats.EmulatorGLESUsages.Builder, com.google.wireless.android.sdk.stats.EmulatorGLESUsagesOrBuilder>(
                getGlesUsages(),
                getParentForChildren(),
                isClean());
        glesUsages_ = null;
      }
      return glesUsagesBuilder_;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> snapshotLoads_ =
      java.util.Collections.emptyList();
    private void ensureSnapshotLoadsIsMutable() {
      if (!((bitField0_ & 0x00400000) != 0)) {
        snapshotLoads_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorSnapshot>(snapshotLoads_);
        bitField0_ |= 0x00400000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder> snapshotLoadsBuilder_;

    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> getSnapshotLoadsList() {
      if (snapshotLoadsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(snapshotLoads_);
      } else {
        return snapshotLoadsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public int getSnapshotLoadsCount() {
      if (snapshotLoadsBuilder_ == null) {
        return snapshotLoads_.size();
      } else {
        return snapshotLoadsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshotLoads(int index) {
      if (snapshotLoadsBuilder_ == null) {
        return snapshotLoads_.get(index);
      } else {
        return snapshotLoadsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder setSnapshotLoads(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotLoadsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.set(index, value);
        onChanged();
      } else {
        snapshotLoadsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder setSnapshotLoads(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotLoadsBuilder_ == null) {
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.set(index, builderForValue.build());
        onChanged();
      } else {
        snapshotLoadsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder addSnapshotLoads(com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotLoadsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.add(value);
        onChanged();
      } else {
        snapshotLoadsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder addSnapshotLoads(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotLoadsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.add(index, value);
        onChanged();
      } else {
        snapshotLoadsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder addSnapshotLoads(
        com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotLoadsBuilder_ == null) {
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.add(builderForValue.build());
        onChanged();
      } else {
        snapshotLoadsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder addSnapshotLoads(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotLoadsBuilder_ == null) {
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.add(index, builderForValue.build());
        onChanged();
      } else {
        snapshotLoadsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder addAllSnapshotLoads(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorSnapshot> values) {
      if (snapshotLoadsBuilder_ == null) {
        ensureSnapshotLoadsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, snapshotLoads_);
        onChanged();
      } else {
        snapshotLoadsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder clearSnapshotLoads() {
      if (snapshotLoadsBuilder_ == null) {
        snapshotLoads_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
      } else {
        snapshotLoadsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public Builder removeSnapshotLoads(int index) {
      if (snapshotLoadsBuilder_ == null) {
        ensureSnapshotLoadsIsMutable();
        snapshotLoads_.remove(index);
        onChanged();
      } else {
        snapshotLoadsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder getSnapshotLoadsBuilder(
        int index) {
      return getSnapshotLoadsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotLoadsOrBuilder(
        int index) {
      if (snapshotLoadsBuilder_ == null) {
        return snapshotLoads_.get(index);  } else {
        return snapshotLoadsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>
         getSnapshotLoadsOrBuilderList() {
      if (snapshotLoadsBuilder_ != null) {
        return snapshotLoadsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(snapshotLoads_);
      }
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder addSnapshotLoadsBuilder() {
      return getSnapshotLoadsFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance());
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder addSnapshotLoadsBuilder(
        int index) {
      return getSnapshotLoadsFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance());
    }
    /**
     * <pre>
     * Metrics on all generic emulator snapshot saves and loads.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_loads = 24;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder>
         getSnapshotLoadsBuilderList() {
      return getSnapshotLoadsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>
        getSnapshotLoadsFieldBuilder() {
      if (snapshotLoadsBuilder_ == null) {
        snapshotLoadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>(
                snapshotLoads_,
                ((bitField0_ & 0x00400000) != 0),
                getParentForChildren(),
                isClean());
        snapshotLoads_ = null;
      }
      return snapshotLoadsBuilder_;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> snapshotSaves_ =
      java.util.Collections.emptyList();
    private void ensureSnapshotSavesIsMutable() {
      if (!((bitField0_ & 0x00800000) != 0)) {
        snapshotSaves_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorSnapshot>(snapshotSaves_);
        bitField0_ |= 0x00800000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder> snapshotSavesBuilder_;

    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot> getSnapshotSavesList() {
      if (snapshotSavesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(snapshotSaves_);
      } else {
        return snapshotSavesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public int getSnapshotSavesCount() {
      if (snapshotSavesBuilder_ == null) {
        return snapshotSaves_.size();
      } else {
        return snapshotSavesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshotSaves(int index) {
      if (snapshotSavesBuilder_ == null) {
        return snapshotSaves_.get(index);
      } else {
        return snapshotSavesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder setSnapshotSaves(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotSavesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.set(index, value);
        onChanged();
      } else {
        snapshotSavesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder setSnapshotSaves(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotSavesBuilder_ == null) {
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.set(index, builderForValue.build());
        onChanged();
      } else {
        snapshotSavesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder addSnapshotSaves(com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotSavesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.add(value);
        onChanged();
      } else {
        snapshotSavesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder addSnapshotSaves(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotSavesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.add(index, value);
        onChanged();
      } else {
        snapshotSavesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder addSnapshotSaves(
        com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotSavesBuilder_ == null) {
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.add(builderForValue.build());
        onChanged();
      } else {
        snapshotSavesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder addSnapshotSaves(
        int index, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotSavesBuilder_ == null) {
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.add(index, builderForValue.build());
        onChanged();
      } else {
        snapshotSavesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder addAllSnapshotSaves(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorSnapshot> values) {
      if (snapshotSavesBuilder_ == null) {
        ensureSnapshotSavesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, snapshotSaves_);
        onChanged();
      } else {
        snapshotSavesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder clearSnapshotSaves() {
      if (snapshotSavesBuilder_ == null) {
        snapshotSaves_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
      } else {
        snapshotSavesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public Builder removeSnapshotSaves(int index) {
      if (snapshotSavesBuilder_ == null) {
        ensureSnapshotSavesIsMutable();
        snapshotSaves_.remove(index);
        onChanged();
      } else {
        snapshotSavesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder getSnapshotSavesBuilder(
        int index) {
      return getSnapshotSavesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotSavesOrBuilder(
        int index) {
      if (snapshotSavesBuilder_ == null) {
        return snapshotSaves_.get(index);  } else {
        return snapshotSavesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>
         getSnapshotSavesOrBuilderList() {
      if (snapshotSavesBuilder_ != null) {
        return snapshotSavesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(snapshotSaves_);
      }
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder addSnapshotSavesBuilder() {
      return getSnapshotSavesFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance());
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder addSnapshotSavesBuilder(
        int index) {
      return getSnapshotSavesFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance());
    }
    /**
     * <code>repeated .android_studio.EmulatorSnapshot snapshot_saves = 25;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder>
         getSnapshotSavesBuilderList() {
      return getSnapshotSavesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>
        getSnapshotSavesFieldBuilder() {
      if (snapshotSavesBuilder_ == null) {
        snapshotSavesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>(
                snapshotSaves_,
                ((bitField0_ & 0x00800000) != 0),
                getParentForChildren(),
                isClean());
        snapshotSaves_ = null;
      }
      return snapshotSavesBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts snapshotUiCounts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts, com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotUICountsOrBuilder> snapshotUiCountsBuilder_;
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     * @return Whether the snapshotUiCounts field is set.
     */
    public boolean hasSnapshotUiCounts() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     * @return The snapshotUiCounts.
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts getSnapshotUiCounts() {
      if (snapshotUiCountsBuilder_ == null) {
        return snapshotUiCounts_ == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.getDefaultInstance() : snapshotUiCounts_;
      } else {
        return snapshotUiCountsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    public Builder setSnapshotUiCounts(com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts value) {
      if (snapshotUiCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snapshotUiCounts_ = value;
        onChanged();
      } else {
        snapshotUiCountsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x01000000;
      return this;
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    public Builder setSnapshotUiCounts(
        com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.Builder builderForValue) {
      if (snapshotUiCountsBuilder_ == null) {
        snapshotUiCounts_ = builderForValue.build();
        onChanged();
      } else {
        snapshotUiCountsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x01000000;
      return this;
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    public Builder mergeSnapshotUiCounts(com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts value) {
      if (snapshotUiCountsBuilder_ == null) {
        if (((bitField0_ & 0x01000000) != 0) &&
            snapshotUiCounts_ != null &&
            snapshotUiCounts_ != com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.getDefaultInstance()) {
          snapshotUiCounts_ =
            com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.newBuilder(snapshotUiCounts_).mergeFrom(value).buildPartial();
        } else {
          snapshotUiCounts_ = value;
        }
        onChanged();
      } else {
        snapshotUiCountsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x01000000;
      return this;
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    public Builder clearSnapshotUiCounts() {
      if (snapshotUiCountsBuilder_ == null) {
        snapshotUiCounts_ = null;
        onChanged();
      } else {
        snapshotUiCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x01000000);
      return this;
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.Builder getSnapshotUiCountsBuilder() {
      bitField0_ |= 0x01000000;
      onChanged();
      return getSnapshotUiCountsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshotUICountsOrBuilder getSnapshotUiCountsOrBuilder() {
      if (snapshotUiCountsBuilder_ != null) {
        return snapshotUiCountsBuilder_.getMessageOrBuilder();
      } else {
        return snapshotUiCounts_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.getDefaultInstance() : snapshotUiCounts_;
      }
    }
    /**
     * <pre>
     * Metrics on all snapshot UI.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotUICounts snapshot_ui_counts = 26;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts, com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotUICountsOrBuilder>
        getSnapshotUiCountsFieldBuilder() {
      if (snapshotUiCountsBuilder_ == null) {
        snapshotUiCountsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts, com.google.wireless.android.sdk.stats.EmulatorSnapshotUICounts.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotUICountsOrBuilder>(
                getSnapshotUiCounts(),
                getParentForChildren(),
                isClean());
        snapshotUiCounts_ = null;
      }
      return snapshotUiCountsBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorCameraSession camera_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorCameraSession, com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder, com.google.wireless.android.sdk.stats.EmulatorCameraSessionOrBuilder> cameraBuilder_;
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     * @return Whether the camera field is set.
     */
    public boolean hasCamera() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     * @return The camera.
     */
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession getCamera() {
      if (cameraBuilder_ == null) {
        return camera_ == null ? com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance() : camera_;
      } else {
        return cameraBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    public Builder setCamera(com.google.wireless.android.sdk.stats.EmulatorCameraSession value) {
      if (cameraBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        camera_ = value;
        onChanged();
      } else {
        cameraBuilder_.setMessage(value);
      }
      bitField0_ |= 0x02000000;
      return this;
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    public Builder setCamera(
        com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder builderForValue) {
      if (cameraBuilder_ == null) {
        camera_ = builderForValue.build();
        onChanged();
      } else {
        cameraBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x02000000;
      return this;
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    public Builder mergeCamera(com.google.wireless.android.sdk.stats.EmulatorCameraSession value) {
      if (cameraBuilder_ == null) {
        if (((bitField0_ & 0x02000000) != 0) &&
            camera_ != null &&
            camera_ != com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance()) {
          camera_ =
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.newBuilder(camera_).mergeFrom(value).buildPartial();
        } else {
          camera_ = value;
        }
        onChanged();
      } else {
        cameraBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x02000000;
      return this;
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    public Builder clearCamera() {
      if (cameraBuilder_ == null) {
        camera_ = null;
        onChanged();
      } else {
        cameraBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x02000000);
      return this;
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder getCameraBuilder() {
      bitField0_ |= 0x02000000;
      onChanged();
      return getCameraFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorCameraSessionOrBuilder getCameraOrBuilder() {
      if (cameraBuilder_ != null) {
        return cameraBuilder_.getMessageOrBuilder();
      } else {
        return camera_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorCameraSession.getDefaultInstance() : camera_;
      }
    }
    /**
     * <pre>
     * Metrics on camera usage.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorCameraSession camera = 27;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorCameraSession, com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder, com.google.wireless.android.sdk.stats.EmulatorCameraSessionOrBuilder>
        getCameraFieldBuilder() {
      if (cameraBuilder_ == null) {
        cameraBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorCameraSession, com.google.wireless.android.sdk.stats.EmulatorCameraSession.Builder, com.google.wireless.android.sdk.stats.EmulatorCameraSessionOrBuilder>(
                getCamera(),
                getParentForChildren(),
                isClean());
        camera_ = null;
      }
      return cameraBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession virtualScene_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession, com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.Builder, com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSessionOrBuilder> virtualSceneBuilder_;
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     * @return Whether the virtualScene field is set.
     */
    public boolean hasVirtualScene() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     * @return The virtualScene.
     */
    public com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession getVirtualScene() {
      if (virtualSceneBuilder_ == null) {
        return virtualScene_ == null ? com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.getDefaultInstance() : virtualScene_;
      } else {
        return virtualSceneBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    public Builder setVirtualScene(com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession value) {
      if (virtualSceneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        virtualScene_ = value;
        onChanged();
      } else {
        virtualSceneBuilder_.setMessage(value);
      }
      bitField0_ |= 0x04000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    public Builder setVirtualScene(
        com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.Builder builderForValue) {
      if (virtualSceneBuilder_ == null) {
        virtualScene_ = builderForValue.build();
        onChanged();
      } else {
        virtualSceneBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x04000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    public Builder mergeVirtualScene(com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession value) {
      if (virtualSceneBuilder_ == null) {
        if (((bitField0_ & 0x04000000) != 0) &&
            virtualScene_ != null &&
            virtualScene_ != com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.getDefaultInstance()) {
          virtualScene_ =
            com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.newBuilder(virtualScene_).mergeFrom(value).buildPartial();
        } else {
          virtualScene_ = value;
        }
        onChanged();
      } else {
        virtualSceneBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x04000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    public Builder clearVirtualScene() {
      if (virtualSceneBuilder_ == null) {
        virtualScene_ = null;
        onChanged();
      } else {
        virtualSceneBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x04000000);
      return this;
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.Builder getVirtualSceneBuilder() {
      bitField0_ |= 0x04000000;
      onChanged();
      return getVirtualSceneFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSessionOrBuilder getVirtualSceneOrBuilder() {
      if (virtualSceneBuilder_ != null) {
        return virtualSceneBuilder_.getMessageOrBuilder();
      } else {
        return virtualScene_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.getDefaultInstance() : virtualScene_;
      }
    }
    /**
     * <pre>
     * Metrics for virtual scene camera sessions.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorVirtualSceneSession virtual_scene = 28;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession, com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.Builder, com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSessionOrBuilder>
        getVirtualSceneFieldBuilder() {
      if (virtualSceneBuilder_ == null) {
        virtualSceneBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession, com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSession.Builder, com.google.wireless.android.sdk.stats.EmulatorVirtualSceneSessionOrBuilder>(
                getVirtualScene(),
                getParentForChildren(),
                isClean());
        virtualScene_ = null;
      }
      return virtualSceneBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorBootInfo bootInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorBootInfo, com.google.wireless.android.sdk.stats.EmulatorBootInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorBootInfoOrBuilder> bootInfoBuilder_;
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     * @return Whether the bootInfo field is set.
     */
    public boolean hasBootInfo() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     * @return The bootInfo.
     */
    public com.google.wireless.android.sdk.stats.EmulatorBootInfo getBootInfo() {
      if (bootInfoBuilder_ == null) {
        return bootInfo_ == null ? com.google.wireless.android.sdk.stats.EmulatorBootInfo.getDefaultInstance() : bootInfo_;
      } else {
        return bootInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    public Builder setBootInfo(com.google.wireless.android.sdk.stats.EmulatorBootInfo value) {
      if (bootInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bootInfo_ = value;
        onChanged();
      } else {
        bootInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x08000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    public Builder setBootInfo(
        com.google.wireless.android.sdk.stats.EmulatorBootInfo.Builder builderForValue) {
      if (bootInfoBuilder_ == null) {
        bootInfo_ = builderForValue.build();
        onChanged();
      } else {
        bootInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x08000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    public Builder mergeBootInfo(com.google.wireless.android.sdk.stats.EmulatorBootInfo value) {
      if (bootInfoBuilder_ == null) {
        if (((bitField0_ & 0x08000000) != 0) &&
            bootInfo_ != null &&
            bootInfo_ != com.google.wireless.android.sdk.stats.EmulatorBootInfo.getDefaultInstance()) {
          bootInfo_ =
            com.google.wireless.android.sdk.stats.EmulatorBootInfo.newBuilder(bootInfo_).mergeFrom(value).buildPartial();
        } else {
          bootInfo_ = value;
        }
        onChanged();
      } else {
        bootInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x08000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    public Builder clearBootInfo() {
      if (bootInfoBuilder_ == null) {
        bootInfo_ = null;
        onChanged();
      } else {
        bootInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x08000000);
      return this;
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorBootInfo.Builder getBootInfoBuilder() {
      bitField0_ |= 0x08000000;
      onChanged();
      return getBootInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorBootInfoOrBuilder getBootInfoOrBuilder() {
      if (bootInfoBuilder_ != null) {
        return bootInfoBuilder_.getMessageOrBuilder();
      } else {
        return bootInfo_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorBootInfo.getDefaultInstance() : bootInfo_;
      }
    }
    /**
     * <pre>
     * Metrics for emulator boot status and time.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorBootInfo boot_info = 29;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorBootInfo, com.google.wireless.android.sdk.stats.EmulatorBootInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorBootInfoOrBuilder>
        getBootInfoFieldBuilder() {
      if (bootInfoBuilder_ == null) {
        bootInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorBootInfo, com.google.wireless.android.sdk.stats.EmulatorBootInfo.Builder, com.google.wireless.android.sdk.stats.EmulatorBootInfoOrBuilder>(
                getBootInfo(),
                getParentForChildren(),
                isClean());
        bootInfo_ = null;
      }
      return bootInfoBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorAutomation automation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorAutomation, com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder, com.google.wireless.android.sdk.stats.EmulatorAutomationOrBuilder> automationBuilder_;
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     * @return Whether the automation field is set.
     */
    public boolean hasAutomation() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     * @return The automation.
     */
    public com.google.wireless.android.sdk.stats.EmulatorAutomation getAutomation() {
      if (automationBuilder_ == null) {
        return automation_ == null ? com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance() : automation_;
      } else {
        return automationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    public Builder setAutomation(com.google.wireless.android.sdk.stats.EmulatorAutomation value) {
      if (automationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        automation_ = value;
        onChanged();
      } else {
        automationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x10000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    public Builder setAutomation(
        com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder builderForValue) {
      if (automationBuilder_ == null) {
        automation_ = builderForValue.build();
        onChanged();
      } else {
        automationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x10000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    public Builder mergeAutomation(com.google.wireless.android.sdk.stats.EmulatorAutomation value) {
      if (automationBuilder_ == null) {
        if (((bitField0_ & 0x10000000) != 0) &&
            automation_ != null &&
            automation_ != com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance()) {
          automation_ =
            com.google.wireless.android.sdk.stats.EmulatorAutomation.newBuilder(automation_).mergeFrom(value).buildPartial();
        } else {
          automation_ = value;
        }
        onChanged();
      } else {
        automationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x10000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    public Builder clearAutomation() {
      if (automationBuilder_ == null) {
        automation_ = null;
        onChanged();
      } else {
        automationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x10000000);
      return this;
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder getAutomationBuilder() {
      bitField0_ |= 0x10000000;
      onChanged();
      return getAutomationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorAutomationOrBuilder getAutomationOrBuilder() {
      if (automationBuilder_ != null) {
        return automationBuilder_.getMessageOrBuilder();
      } else {
        return automation_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance() : automation_;
      }
    }
    /**
     * <pre>
     * Metrics for automation/macros.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorAutomation automation = 30;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorAutomation, com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder, com.google.wireless.android.sdk.stats.EmulatorAutomationOrBuilder>
        getAutomationFieldBuilder() {
      if (automationBuilder_ == null) {
        automationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorAutomation, com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder, com.google.wireless.android.sdk.stats.EmulatorAutomationOrBuilder>(
                getAutomation(),
                getParentForChildren(),
                isClean());
        automation_ = null;
      }
      return automationBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorMultiDisplay multiDisplay_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorMultiDisplay, com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.Builder, com.google.wireless.android.sdk.stats.EmulatorMultiDisplayOrBuilder> multiDisplayBuilder_;
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     * @return Whether the multiDisplay field is set.
     */
    public boolean hasMultiDisplay() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     * @return The multiDisplay.
     */
    public com.google.wireless.android.sdk.stats.EmulatorMultiDisplay getMultiDisplay() {
      if (multiDisplayBuilder_ == null) {
        return multiDisplay_ == null ? com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.getDefaultInstance() : multiDisplay_;
      } else {
        return multiDisplayBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    public Builder setMultiDisplay(com.google.wireless.android.sdk.stats.EmulatorMultiDisplay value) {
      if (multiDisplayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        multiDisplay_ = value;
        onChanged();
      } else {
        multiDisplayBuilder_.setMessage(value);
      }
      bitField0_ |= 0x20000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    public Builder setMultiDisplay(
        com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.Builder builderForValue) {
      if (multiDisplayBuilder_ == null) {
        multiDisplay_ = builderForValue.build();
        onChanged();
      } else {
        multiDisplayBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x20000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    public Builder mergeMultiDisplay(com.google.wireless.android.sdk.stats.EmulatorMultiDisplay value) {
      if (multiDisplayBuilder_ == null) {
        if (((bitField0_ & 0x20000000) != 0) &&
            multiDisplay_ != null &&
            multiDisplay_ != com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.getDefaultInstance()) {
          multiDisplay_ =
            com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.newBuilder(multiDisplay_).mergeFrom(value).buildPartial();
        } else {
          multiDisplay_ = value;
        }
        onChanged();
      } else {
        multiDisplayBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x20000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    public Builder clearMultiDisplay() {
      if (multiDisplayBuilder_ == null) {
        multiDisplay_ = null;
        onChanged();
      } else {
        multiDisplayBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x20000000);
      return this;
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.Builder getMultiDisplayBuilder() {
      bitField0_ |= 0x20000000;
      onChanged();
      return getMultiDisplayFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorMultiDisplayOrBuilder getMultiDisplayOrBuilder() {
      if (multiDisplayBuilder_ != null) {
        return multiDisplayBuilder_.getMessageOrBuilder();
      } else {
        return multiDisplay_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.getDefaultInstance() : multiDisplay_;
      }
    }
    /**
     * <pre>
     * Metrics for multi-display
     * </pre>
     *
     * <code>optional .android_studio.EmulatorMultiDisplay multi_display = 31;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorMultiDisplay, com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.Builder, com.google.wireless.android.sdk.stats.EmulatorMultiDisplayOrBuilder>
        getMultiDisplayFieldBuilder() {
      if (multiDisplayBuilder_ == null) {
        multiDisplayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorMultiDisplay, com.google.wireless.android.sdk.stats.EmulatorMultiDisplay.Builder, com.google.wireless.android.sdk.stats.EmulatorMultiDisplayOrBuilder>(
                getMultiDisplay(),
                getParentForChildren(),
                isClean());
        multiDisplay_ = null;
      }
      return multiDisplayBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorGrpc grpc_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGrpc, com.google.wireless.android.sdk.stats.EmulatorGrpc.Builder, com.google.wireless.android.sdk.stats.EmulatorGrpcOrBuilder> grpcBuilder_;
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     * @return Whether the grpc field is set.
     */
    public boolean hasGrpc() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     * @return The grpc.
     */
    public com.google.wireless.android.sdk.stats.EmulatorGrpc getGrpc() {
      if (grpcBuilder_ == null) {
        return grpc_ == null ? com.google.wireless.android.sdk.stats.EmulatorGrpc.getDefaultInstance() : grpc_;
      } else {
        return grpcBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    public Builder setGrpc(com.google.wireless.android.sdk.stats.EmulatorGrpc value) {
      if (grpcBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        grpc_ = value;
        onChanged();
      } else {
        grpcBuilder_.setMessage(value);
      }
      bitField0_ |= 0x40000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    public Builder setGrpc(
        com.google.wireless.android.sdk.stats.EmulatorGrpc.Builder builderForValue) {
      if (grpcBuilder_ == null) {
        grpc_ = builderForValue.build();
        onChanged();
      } else {
        grpcBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x40000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    public Builder mergeGrpc(com.google.wireless.android.sdk.stats.EmulatorGrpc value) {
      if (grpcBuilder_ == null) {
        if (((bitField0_ & 0x40000000) != 0) &&
            grpc_ != null &&
            grpc_ != com.google.wireless.android.sdk.stats.EmulatorGrpc.getDefaultInstance()) {
          grpc_ =
            com.google.wireless.android.sdk.stats.EmulatorGrpc.newBuilder(grpc_).mergeFrom(value).buildPartial();
        } else {
          grpc_ = value;
        }
        onChanged();
      } else {
        grpcBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x40000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    public Builder clearGrpc() {
      if (grpcBuilder_ == null) {
        grpc_ = null;
        onChanged();
      } else {
        grpcBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x40000000);
      return this;
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGrpc.Builder getGrpcBuilder() {
      bitField0_ |= 0x40000000;
      onChanged();
      return getGrpcFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorGrpcOrBuilder getGrpcOrBuilder() {
      if (grpcBuilder_ != null) {
        return grpcBuilder_.getMessageOrBuilder();
      } else {
        return grpc_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorGrpc.getDefaultInstance() : grpc_;
      }
    }
    /**
     * <pre>
     * Metrics for gRPC invocation
     * </pre>
     *
     * <code>optional .android_studio.EmulatorGrpc grpc = 32;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorGrpc, com.google.wireless.android.sdk.stats.EmulatorGrpc.Builder, com.google.wireless.android.sdk.stats.EmulatorGrpcOrBuilder>
        getGrpcFieldBuilder() {
      if (grpcBuilder_ == null) {
        grpcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorGrpc, com.google.wireless.android.sdk.stats.EmulatorGrpc.Builder, com.google.wireless.android.sdk.stats.EmulatorGrpcOrBuilder>(
                getGrpc(),
                getParentForChildren(),
                isClean());
        grpc_ = null;
      }
      return grpcBuilder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorLocationV2 locationV2_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorLocationV2, com.google.wireless.android.sdk.stats.EmulatorLocationV2.Builder, com.google.wireless.android.sdk.stats.EmulatorLocationV2OrBuilder> locationV2Builder_;
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     * @return Whether the locationV2 field is set.
     */
    public boolean hasLocationV2() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     * @return The locationV2.
     */
    public com.google.wireless.android.sdk.stats.EmulatorLocationV2 getLocationV2() {
      if (locationV2Builder_ == null) {
        return locationV2_ == null ? com.google.wireless.android.sdk.stats.EmulatorLocationV2.getDefaultInstance() : locationV2_;
      } else {
        return locationV2Builder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    public Builder setLocationV2(com.google.wireless.android.sdk.stats.EmulatorLocationV2 value) {
      if (locationV2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationV2_ = value;
        onChanged();
      } else {
        locationV2Builder_.setMessage(value);
      }
      bitField0_ |= 0x80000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    public Builder setLocationV2(
        com.google.wireless.android.sdk.stats.EmulatorLocationV2.Builder builderForValue) {
      if (locationV2Builder_ == null) {
        locationV2_ = builderForValue.build();
        onChanged();
      } else {
        locationV2Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x80000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    public Builder mergeLocationV2(com.google.wireless.android.sdk.stats.EmulatorLocationV2 value) {
      if (locationV2Builder_ == null) {
        if (((bitField0_ & 0x80000000) != 0) &&
            locationV2_ != null &&
            locationV2_ != com.google.wireless.android.sdk.stats.EmulatorLocationV2.getDefaultInstance()) {
          locationV2_ =
            com.google.wireless.android.sdk.stats.EmulatorLocationV2.newBuilder(locationV2_).mergeFrom(value).buildPartial();
        } else {
          locationV2_ = value;
        }
        onChanged();
      } else {
        locationV2Builder_.mergeFrom(value);
      }
      bitField0_ |= 0x80000000;
      return this;
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    public Builder clearLocationV2() {
      if (locationV2Builder_ == null) {
        locationV2_ = null;
        onChanged();
      } else {
        locationV2Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x80000000);
      return this;
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorLocationV2.Builder getLocationV2Builder() {
      bitField0_ |= 0x80000000;
      onChanged();
      return getLocationV2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorLocationV2OrBuilder getLocationV2OrBuilder() {
      if (locationV2Builder_ != null) {
        return locationV2Builder_.getMessageOrBuilder();
      } else {
        return locationV2_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorLocationV2.getDefaultInstance() : locationV2_;
      }
    }
    /**
     * <pre>
     * Metrics for LocationUiV2
     * </pre>
     *
     * <code>optional .android_studio.EmulatorLocationV2 location_v2 = 33;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorLocationV2, com.google.wireless.android.sdk.stats.EmulatorLocationV2.Builder, com.google.wireless.android.sdk.stats.EmulatorLocationV2OrBuilder>
        getLocationV2FieldBuilder() {
      if (locationV2Builder_ == null) {
        locationV2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorLocationV2, com.google.wireless.android.sdk.stats.EmulatorLocationV2.Builder, com.google.wireless.android.sdk.stats.EmulatorLocationV2OrBuilder>(
                getLocationV2(),
                getParentForChildren(),
                isClean());
        locationV2_ = null;
      }
      return locationV2Builder_;
    }

    private com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot screenshot_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot, com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.Builder, com.google.wireless.android.sdk.stats.EmulatorStreamScreenshotOrBuilder> screenshotBuilder_;
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     * @return Whether the screenshot field is set.
     */
    public boolean hasScreenshot() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     * @return The screenshot.
     */
    public com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot getScreenshot() {
      if (screenshotBuilder_ == null) {
        return screenshot_ == null ? com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.getDefaultInstance() : screenshot_;
      } else {
        return screenshotBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    public Builder setScreenshot(com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot value) {
      if (screenshotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        screenshot_ = value;
        onChanged();
      } else {
        screenshotBuilder_.setMessage(value);
      }
      bitField1_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    public Builder setScreenshot(
        com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.Builder builderForValue) {
      if (screenshotBuilder_ == null) {
        screenshot_ = builderForValue.build();
        onChanged();
      } else {
        screenshotBuilder_.setMessage(builderForValue.build());
      }
      bitField1_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    public Builder mergeScreenshot(com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot value) {
      if (screenshotBuilder_ == null) {
        if (((bitField1_ & 0x00000001) != 0) &&
            screenshot_ != null &&
            screenshot_ != com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.getDefaultInstance()) {
          screenshot_ =
            com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.newBuilder(screenshot_).mergeFrom(value).buildPartial();
        } else {
          screenshot_ = value;
        }
        onChanged();
      } else {
        screenshotBuilder_.mergeFrom(value);
      }
      bitField1_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    public Builder clearScreenshot() {
      if (screenshotBuilder_ == null) {
        screenshot_ = null;
        onChanged();
      } else {
        screenshotBuilder_.clear();
      }
      bitField1_ = (bitField1_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.Builder getScreenshotBuilder() {
      bitField1_ |= 0x00000001;
      onChanged();
      return getScreenshotFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorStreamScreenshotOrBuilder getScreenshotOrBuilder() {
      if (screenshotBuilder_ != null) {
        return screenshotBuilder_.getMessageOrBuilder();
      } else {
        return screenshot_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.getDefaultInstance() : screenshot_;
      }
    }
    /**
     * <pre>
     * Metrics for streamScreenshot
     * </pre>
     *
     * <code>optional .android_studio.EmulatorStreamScreenshot screenshot = 34;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot, com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.Builder, com.google.wireless.android.sdk.stats.EmulatorStreamScreenshotOrBuilder>
        getScreenshotFieldBuilder() {
      if (screenshotBuilder_ == null) {
        screenshotBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot, com.google.wireless.android.sdk.stats.EmulatorStreamScreenshot.Builder, com.google.wireless.android.sdk.stats.EmulatorStreamScreenshotOrBuilder>(
                getScreenshot(),
                getParentForChildren(),
                isClean());
        screenshot_ = null;
      }
      return screenshotBuilder_;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.EmulatorIcebox> icebox_ =
      java.util.Collections.emptyList();
    private void ensureIceboxIsMutable() {
      if (!((bitField1_ & 0x00000002) != 0)) {
        icebox_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.EmulatorIcebox>(icebox_);
        bitField1_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorIcebox, com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder, com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder> iceboxBuilder_;

    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorIcebox> getIceboxList() {
      if (iceboxBuilder_ == null) {
        return java.util.Collections.unmodifiableList(icebox_);
      } else {
        return iceboxBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public int getIceboxCount() {
      if (iceboxBuilder_ == null) {
        return icebox_.size();
      } else {
        return iceboxBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorIcebox getIcebox(int index) {
      if (iceboxBuilder_ == null) {
        return icebox_.get(index);
      } else {
        return iceboxBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder setIcebox(
        int index, com.google.wireless.android.sdk.stats.EmulatorIcebox value) {
      if (iceboxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIceboxIsMutable();
        icebox_.set(index, value);
        onChanged();
      } else {
        iceboxBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder setIcebox(
        int index, com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder builderForValue) {
      if (iceboxBuilder_ == null) {
        ensureIceboxIsMutable();
        icebox_.set(index, builderForValue.build());
        onChanged();
      } else {
        iceboxBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder addIcebox(com.google.wireless.android.sdk.stats.EmulatorIcebox value) {
      if (iceboxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIceboxIsMutable();
        icebox_.add(value);
        onChanged();
      } else {
        iceboxBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder addIcebox(
        int index, com.google.wireless.android.sdk.stats.EmulatorIcebox value) {
      if (iceboxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIceboxIsMutable();
        icebox_.add(index, value);
        onChanged();
      } else {
        iceboxBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder addIcebox(
        com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder builderForValue) {
      if (iceboxBuilder_ == null) {
        ensureIceboxIsMutable();
        icebox_.add(builderForValue.build());
        onChanged();
      } else {
        iceboxBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder addIcebox(
        int index, com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder builderForValue) {
      if (iceboxBuilder_ == null) {
        ensureIceboxIsMutable();
        icebox_.add(index, builderForValue.build());
        onChanged();
      } else {
        iceboxBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder addAllIcebox(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorIcebox> values) {
      if (iceboxBuilder_ == null) {
        ensureIceboxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, icebox_);
        onChanged();
      } else {
        iceboxBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder clearIcebox() {
      if (iceboxBuilder_ == null) {
        icebox_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000002);
        onChanged();
      } else {
        iceboxBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public Builder removeIcebox(int index) {
      if (iceboxBuilder_ == null) {
        ensureIceboxIsMutable();
        icebox_.remove(index);
        onChanged();
      } else {
        iceboxBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder getIceboxBuilder(
        int index) {
      return getIceboxFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder getIceboxOrBuilder(
        int index) {
      if (iceboxBuilder_ == null) {
        return icebox_.get(index);  } else {
        return iceboxBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder>
         getIceboxOrBuilderList() {
      if (iceboxBuilder_ != null) {
        return iceboxBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(icebox_);
      }
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder addIceboxBuilder() {
      return getIceboxFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.EmulatorIcebox.getDefaultInstance());
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder addIceboxBuilder(
        int index) {
      return getIceboxFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.EmulatorIcebox.getDefaultInstance());
    }
    /**
     * <pre>
     * Metrics for Icebox
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorIcebox icebox = 35;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder>
         getIceboxBuilderList() {
      return getIceboxFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorIcebox, com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder, com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder>
        getIceboxFieldBuilder() {
      if (iceboxBuilder_ == null) {
        iceboxBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorIcebox, com.google.wireless.android.sdk.stats.EmulatorIcebox.Builder, com.google.wireless.android.sdk.stats.EmulatorIceboxOrBuilder>(
                icebox_,
                ((bitField1_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        icebox_ = null;
      }
      return iceboxBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorDetails)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorDetails)
  private static final com.google.wireless.android.sdk.stats.EmulatorDetails DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorDetails();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorDetails>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorDetails>() {
    @java.lang.Override
    public EmulatorDetails parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EmulatorDetails(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EmulatorDetails> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorDetails> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorDetails getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

