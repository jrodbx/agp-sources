// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Data associated with capturing a CPU method trace
 * </pre>
 *
 * Protobuf type {@code android_studio.CpuCaptureMetadata}
 */
public  final class CpuCaptureMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.CpuCaptureMetadata)
    CpuCaptureMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CpuCaptureMetadata.newBuilder() to construct.
  private CpuCaptureMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CpuCaptureMetadata() {
    captureStatus_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CpuCaptureMetadata();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CpuCaptureMetadata(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus value = com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              captureStatus_ = rawValue;
            }
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            captureDurationMs_ = input.readUInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            recordDurationMs_ = input.readUInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            traceFileSizeBytes_ = input.readUInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            parsingTimeMs_ = input.readUInt64();
            break;
          }
          case 50: {
            com.google.wireless.android.sdk.stats.CpuProfilingConfig.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) != 0)) {
              subBuilder = profilingConfig_.toBuilder();
            }
            profilingConfig_ = input.readMessage(com.google.wireless.android.sdk.stats.CpuProfilingConfig.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(profilingConfig_);
              profilingConfig_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            artStopTimeoutSec_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            stoppingTimeMs_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuCaptureMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuCaptureMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.CpuCaptureMetadata.class, com.google.wireless.android.sdk.stats.CpuCaptureMetadata.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.CpuCaptureMetadata.CaptureStatus}
   */
  public enum CaptureStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    UNKNOWN_STATUS(0),
    /**
     * <pre>
     * The capture was successful
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    SUCCESS(1),
    /**
     * <pre>
     * The device responded to our request for a capture with an error
     * Deprecated by STOP_FAILED_* enum constants.
     * </pre>
     *
     * <code>STOP_CAPTURING_FAILURE = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    STOP_CAPTURING_FAILURE(2),
    /**
     * <pre>
     * Deprecated by PARSING_FAILED_* enum constants.
     * </pre>
     *
     * <code>PARSING_FAILURE = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    PARSING_FAILURE(3),
    /**
     * <pre>
     * User aborted parsing the trace after being notified it was too large
     * </pre>
     *
     * <code>USER_ABORTED_PARSING = 4;</code>
     */
    USER_ABORTED_PARSING(4),
    /**
     * <pre>
     * There was an error while preprocessing the trace file
     * </pre>
     *
     * <code>PREPROCESS_FAILURE = 5;</code>
     */
    PREPROCESS_FAILURE(5),
    /**
     * <pre>
     * There was no ongoing capture to stop.
     * </pre>
     *
     * <code>STOP_FAILED_NO_GOING_PROFILING = 6;</code>
     */
    STOP_FAILED_NO_GOING_PROFILING(6),
    /**
     * <pre>
     * The profiled app process died.
     * </pre>
     *
     * <code>STOP_FAILED_APP_PROCESS_DIED = 7;</code>
     */
    STOP_FAILED_APP_PROCESS_DIED(7),
    /**
     * <pre>
     * The PID of the profiled app process changed (it's another process).
     * </pre>
     *
     * <code>STOP_FAILED_APP_PID_CHANGED = 8;</code>
     */
    STOP_FAILED_APP_PID_CHANGED(8),
    /**
     * <pre>
     * The profiler process (e.g., simpleperf process) died.
     * </pre>
     *
     * <code>STOP_FAILED_PROFILER_PROCESS_DIED = 9;</code>
     */
    STOP_FAILED_PROFILER_PROCESS_DIED(9),
    /**
     * <pre>
     * The shell/DDMS command to stop capture didn't return successfully.
     * </pre>
     *
     * <code>STOP_FAILED_STOP_COMMAND_FAILED = 10;</code>
     */
    STOP_FAILED_STOP_COMMAND_FAILED(10),
    /**
     * <pre>
     * The capture didn't stop after the stop command.
     * </pre>
     *
     * <code>STOP_FAILED_STILL_PROFILING_AFTER_STOP = 11;</code>
     */
    STOP_FAILED_STILL_PROFILING_AFTER_STOP(11),
    /**
     * <pre>
     * The wait for the trace file to complete couldn't be initiated.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_START_WAITING = 12;</code>
     */
    STOP_FAILED_CANNOT_START_WAITING(12),
    /**
     * <pre>
     * The wait for the trace file to complete timed out.
     * </pre>
     *
     * <code>STOP_FAILED_WAIT_TIMEOUT = 13;</code>
     */
    STOP_FAILED_WAIT_TIMEOUT(13),
    /**
     * <pre>
     * The wait for the trace file to complete had unspecified failure.
     * </pre>
     *
     * <code>STOP_FAILED_WAIT_FAILED = 14;</code>
     */
    STOP_FAILED_WAIT_FAILED(14),
    /**
     * <pre>
     * Couldn't read events while waiting for the trace file to complete.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_READ_WAIT_EVENT = 15;</code>
     */
    STOP_FAILED_CANNOT_READ_WAIT_EVENT(15),
    /**
     * <pre>
     * Couldn't copy/move the trace file within the device.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_COPY_FILE = 16;</code>
     */
    STOP_FAILED_CANNOT_COPY_FILE(16),
    /**
     * <pre>
     * Couldn't form the trace file into the format expected by Studio.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_FORM_FILE = 17;</code>
     */
    STOP_FAILED_CANNOT_FORM_FILE(17),
    /**
     * <pre>
     * Couldn't read the content of the trace file.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_READ_FILE = 18;</code>
     */
    STOP_FAILED_CANNOT_READ_FILE(18),
    /**
     * <pre>
     * The trace file doesn't exist or is a directory.
     * </pre>
     *
     * <code>PARSING_FAILED_PATH_INVALID = 19;</code>
     */
    PARSING_FAILED_PATH_INVALID(19),
    /**
     * <pre>
     * The trace file cannot be read.
     * </pre>
     *
     * <code>PARSING_FAILED_READ_ERROR = 20;</code>
     */
    PARSING_FAILED_READ_ERROR(20),
    /**
     * <pre>
     * Couldn't identify correct parser for the trace file.
     * </pre>
     *
     * <code>PARSING_FAILED_PARSER_UNKNOWN = 21;</code>
     */
    PARSING_FAILED_PARSER_UNKNOWN(21),
    /**
     * <pre>
     * The trace file failed file header verification.
     * </pre>
     *
     * <code>PARSING_FAILED_FILE_HEADER_ERROR = 22;</code>
     */
    PARSING_FAILED_FILE_HEADER_ERROR(22),
    /**
     * <pre>
     * The trace file cannot be parsed by the identified parser, e.g. ART parser
     * for Java method traces.
     * </pre>
     *
     * <code>PARSING_FAILED_PARSER_ERROR = 23;</code>
     */
    PARSING_FAILED_PARSER_ERROR(23),
    /**
     * <pre>
     * The trace file failed to be parsed due to unknown reasons.
     * </pre>
     *
     * <code>PARSING_FAILED_CAUSE_UNKNOWN = 24;</code>
     */
    PARSING_FAILED_CAUSE_UNKNOWN(24),
    ;

    /**
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    public static final int UNKNOWN_STATUS_VALUE = 0;
    /**
     * <pre>
     * The capture was successful
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <pre>
     * The device responded to our request for a capture with an error
     * Deprecated by STOP_FAILED_* enum constants.
     * </pre>
     *
     * <code>STOP_CAPTURING_FAILURE = 2 [deprecated = true];</code>
     */
    public static final int STOP_CAPTURING_FAILURE_VALUE = 2;
    /**
     * <pre>
     * Deprecated by PARSING_FAILED_* enum constants.
     * </pre>
     *
     * <code>PARSING_FAILURE = 3 [deprecated = true];</code>
     */
    public static final int PARSING_FAILURE_VALUE = 3;
    /**
     * <pre>
     * User aborted parsing the trace after being notified it was too large
     * </pre>
     *
     * <code>USER_ABORTED_PARSING = 4;</code>
     */
    public static final int USER_ABORTED_PARSING_VALUE = 4;
    /**
     * <pre>
     * There was an error while preprocessing the trace file
     * </pre>
     *
     * <code>PREPROCESS_FAILURE = 5;</code>
     */
    public static final int PREPROCESS_FAILURE_VALUE = 5;
    /**
     * <pre>
     * There was no ongoing capture to stop.
     * </pre>
     *
     * <code>STOP_FAILED_NO_GOING_PROFILING = 6;</code>
     */
    public static final int STOP_FAILED_NO_GOING_PROFILING_VALUE = 6;
    /**
     * <pre>
     * The profiled app process died.
     * </pre>
     *
     * <code>STOP_FAILED_APP_PROCESS_DIED = 7;</code>
     */
    public static final int STOP_FAILED_APP_PROCESS_DIED_VALUE = 7;
    /**
     * <pre>
     * The PID of the profiled app process changed (it's another process).
     * </pre>
     *
     * <code>STOP_FAILED_APP_PID_CHANGED = 8;</code>
     */
    public static final int STOP_FAILED_APP_PID_CHANGED_VALUE = 8;
    /**
     * <pre>
     * The profiler process (e.g., simpleperf process) died.
     * </pre>
     *
     * <code>STOP_FAILED_PROFILER_PROCESS_DIED = 9;</code>
     */
    public static final int STOP_FAILED_PROFILER_PROCESS_DIED_VALUE = 9;
    /**
     * <pre>
     * The shell/DDMS command to stop capture didn't return successfully.
     * </pre>
     *
     * <code>STOP_FAILED_STOP_COMMAND_FAILED = 10;</code>
     */
    public static final int STOP_FAILED_STOP_COMMAND_FAILED_VALUE = 10;
    /**
     * <pre>
     * The capture didn't stop after the stop command.
     * </pre>
     *
     * <code>STOP_FAILED_STILL_PROFILING_AFTER_STOP = 11;</code>
     */
    public static final int STOP_FAILED_STILL_PROFILING_AFTER_STOP_VALUE = 11;
    /**
     * <pre>
     * The wait for the trace file to complete couldn't be initiated.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_START_WAITING = 12;</code>
     */
    public static final int STOP_FAILED_CANNOT_START_WAITING_VALUE = 12;
    /**
     * <pre>
     * The wait for the trace file to complete timed out.
     * </pre>
     *
     * <code>STOP_FAILED_WAIT_TIMEOUT = 13;</code>
     */
    public static final int STOP_FAILED_WAIT_TIMEOUT_VALUE = 13;
    /**
     * <pre>
     * The wait for the trace file to complete had unspecified failure.
     * </pre>
     *
     * <code>STOP_FAILED_WAIT_FAILED = 14;</code>
     */
    public static final int STOP_FAILED_WAIT_FAILED_VALUE = 14;
    /**
     * <pre>
     * Couldn't read events while waiting for the trace file to complete.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_READ_WAIT_EVENT = 15;</code>
     */
    public static final int STOP_FAILED_CANNOT_READ_WAIT_EVENT_VALUE = 15;
    /**
     * <pre>
     * Couldn't copy/move the trace file within the device.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_COPY_FILE = 16;</code>
     */
    public static final int STOP_FAILED_CANNOT_COPY_FILE_VALUE = 16;
    /**
     * <pre>
     * Couldn't form the trace file into the format expected by Studio.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_FORM_FILE = 17;</code>
     */
    public static final int STOP_FAILED_CANNOT_FORM_FILE_VALUE = 17;
    /**
     * <pre>
     * Couldn't read the content of the trace file.
     * </pre>
     *
     * <code>STOP_FAILED_CANNOT_READ_FILE = 18;</code>
     */
    public static final int STOP_FAILED_CANNOT_READ_FILE_VALUE = 18;
    /**
     * <pre>
     * The trace file doesn't exist or is a directory.
     * </pre>
     *
     * <code>PARSING_FAILED_PATH_INVALID = 19;</code>
     */
    public static final int PARSING_FAILED_PATH_INVALID_VALUE = 19;
    /**
     * <pre>
     * The trace file cannot be read.
     * </pre>
     *
     * <code>PARSING_FAILED_READ_ERROR = 20;</code>
     */
    public static final int PARSING_FAILED_READ_ERROR_VALUE = 20;
    /**
     * <pre>
     * Couldn't identify correct parser for the trace file.
     * </pre>
     *
     * <code>PARSING_FAILED_PARSER_UNKNOWN = 21;</code>
     */
    public static final int PARSING_FAILED_PARSER_UNKNOWN_VALUE = 21;
    /**
     * <pre>
     * The trace file failed file header verification.
     * </pre>
     *
     * <code>PARSING_FAILED_FILE_HEADER_ERROR = 22;</code>
     */
    public static final int PARSING_FAILED_FILE_HEADER_ERROR_VALUE = 22;
    /**
     * <pre>
     * The trace file cannot be parsed by the identified parser, e.g. ART parser
     * for Java method traces.
     * </pre>
     *
     * <code>PARSING_FAILED_PARSER_ERROR = 23;</code>
     */
    public static final int PARSING_FAILED_PARSER_ERROR_VALUE = 23;
    /**
     * <pre>
     * The trace file failed to be parsed due to unknown reasons.
     * </pre>
     *
     * <code>PARSING_FAILED_CAUSE_UNKNOWN = 24;</code>
     */
    public static final int PARSING_FAILED_CAUSE_UNKNOWN_VALUE = 24;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CaptureStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CaptureStatus forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_STATUS;
        case 1: return SUCCESS;
        case 2: return STOP_CAPTURING_FAILURE;
        case 3: return PARSING_FAILURE;
        case 4: return USER_ABORTED_PARSING;
        case 5: return PREPROCESS_FAILURE;
        case 6: return STOP_FAILED_NO_GOING_PROFILING;
        case 7: return STOP_FAILED_APP_PROCESS_DIED;
        case 8: return STOP_FAILED_APP_PID_CHANGED;
        case 9: return STOP_FAILED_PROFILER_PROCESS_DIED;
        case 10: return STOP_FAILED_STOP_COMMAND_FAILED;
        case 11: return STOP_FAILED_STILL_PROFILING_AFTER_STOP;
        case 12: return STOP_FAILED_CANNOT_START_WAITING;
        case 13: return STOP_FAILED_WAIT_TIMEOUT;
        case 14: return STOP_FAILED_WAIT_FAILED;
        case 15: return STOP_FAILED_CANNOT_READ_WAIT_EVENT;
        case 16: return STOP_FAILED_CANNOT_COPY_FILE;
        case 17: return STOP_FAILED_CANNOT_FORM_FILE;
        case 18: return STOP_FAILED_CANNOT_READ_FILE;
        case 19: return PARSING_FAILED_PATH_INVALID;
        case 20: return PARSING_FAILED_READ_ERROR;
        case 21: return PARSING_FAILED_PARSER_UNKNOWN;
        case 22: return PARSING_FAILED_FILE_HEADER_ERROR;
        case 23: return PARSING_FAILED_PARSER_ERROR;
        case 24: return PARSING_FAILED_CAUSE_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CaptureStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CaptureStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CaptureStatus>() {
            public CaptureStatus findValueByNumber(int number) {
              return CaptureStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.CpuCaptureMetadata.getDescriptor().getEnumTypes().get(0);
    }

    private static final CaptureStatus[] VALUES = values();

    public static CaptureStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CaptureStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.CpuCaptureMetadata.CaptureStatus)
  }

  private int bitField0_;
  public static final int CAPTURE_STATUS_FIELD_NUMBER = 1;
  private int captureStatus_;
  /**
   * <pre>
   * The result of a CPU capture
   * </pre>
   *
   * <code>optional .android_studio.CpuCaptureMetadata.CaptureStatus capture_status = 1;</code>
   * @return Whether the captureStatus field is set.
   */
  public boolean hasCaptureStatus() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The result of a CPU capture
   * </pre>
   *
   * <code>optional .android_studio.CpuCaptureMetadata.CaptureStatus capture_status = 1;</code>
   * @return The captureStatus.
   */
  public com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus getCaptureStatus() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus result = com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus.valueOf(captureStatus_);
    return result == null ? com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus.UNKNOWN_STATUS : result;
  }

  public static final int CAPTURE_DURATION_MS_FIELD_NUMBER = 2;
  private long captureDurationMs_;
  /**
   * <pre>
   * Duration from user pressing "Record" to pressing "Stop"
   * Not set if |capture_status| is not set to |SUCCESS|
   * </pre>
   *
   * <code>optional uint64 capture_duration_ms = 2;</code>
   * @return Whether the captureDurationMs field is set.
   */
  public boolean hasCaptureDurationMs() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Duration from user pressing "Record" to pressing "Stop"
   * Not set if |capture_status| is not set to |SUCCESS|
   * </pre>
   *
   * <code>optional uint64 capture_duration_ms = 2;</code>
   * @return The captureDurationMs.
   */
  public long getCaptureDurationMs() {
    return captureDurationMs_;
  }

  public static final int RECORD_DURATION_MS_FIELD_NUMBER = 3;
  private long recordDurationMs_;
  /**
   * <pre>
   * Duration from the first trace data timestamp to the last one.
   * Not set if |capture_status| is not set to |SUCCESS|
   * </pre>
   *
   * <code>optional uint64 record_duration_ms = 3;</code>
   * @return Whether the recordDurationMs field is set.
   */
  public boolean hasRecordDurationMs() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Duration from the first trace data timestamp to the last one.
   * Not set if |capture_status| is not set to |SUCCESS|
   * </pre>
   *
   * <code>optional uint64 record_duration_ms = 3;</code>
   * @return The recordDurationMs.
   */
  public long getRecordDurationMs() {
    return recordDurationMs_;
  }

  public static final int TRACE_FILE_SIZE_BYTES_FIELD_NUMBER = 4;
  private int traceFileSizeBytes_;
  /**
   * <pre>
   * Size of the trace file generated by the capture.
   * Not set if |capture_status| is set to |STOP_CAPTURING_FAILURE|
   * </pre>
   *
   * <code>optional uint32 trace_file_size_bytes = 4;</code>
   * @return Whether the traceFileSizeBytes field is set.
   */
  public boolean hasTraceFileSizeBytes() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Size of the trace file generated by the capture.
   * Not set if |capture_status| is set to |STOP_CAPTURING_FAILURE|
   * </pre>
   *
   * <code>optional uint32 trace_file_size_bytes = 4;</code>
   * @return The traceFileSizeBytes.
   */
  public int getTraceFileSizeBytes() {
    return traceFileSizeBytes_;
  }

  public static final int PARSING_TIME_MS_FIELD_NUMBER = 5;
  private long parsingTimeMs_;
  /**
   * <pre>
   * How much time it took to parse the trace file
   * Not set if |capture_status| is not set to |SUCCESS|
   * </pre>
   *
   * <code>optional uint64 parsing_time_ms = 5;</code>
   * @return Whether the parsingTimeMs field is set.
   */
  public boolean hasParsingTimeMs() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * How much time it took to parse the trace file
   * Not set if |capture_status| is not set to |SUCCESS|
   * </pre>
   *
   * <code>optional uint64 parsing_time_ms = 5;</code>
   * @return The parsingTimeMs.
   */
  public long getParsingTimeMs() {
    return parsingTimeMs_;
  }

  public static final int PROFILING_CONFIG_FIELD_NUMBER = 6;
  private com.google.wireless.android.sdk.stats.CpuProfilingConfig profilingConfig_;
  /**
   * <pre>
   * The user's configuration used to generate this capture
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
   * @return Whether the profilingConfig field is set.
   */
  public boolean hasProfilingConfig() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The user's configuration used to generate this capture
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
   * @return The profilingConfig.
   */
  public com.google.wireless.android.sdk.stats.CpuProfilingConfig getProfilingConfig() {
    return profilingConfig_ == null ? com.google.wireless.android.sdk.stats.CpuProfilingConfig.getDefaultInstance() : profilingConfig_;
  }
  /**
   * <pre>
   * The user's configuration used to generate this capture
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
   */
  public com.google.wireless.android.sdk.stats.CpuProfilingConfigOrBuilder getProfilingConfigOrBuilder() {
    return profilingConfig_ == null ? com.google.wireless.android.sdk.stats.CpuProfilingConfig.getDefaultInstance() : profilingConfig_;
  }

  public static final int ART_STOP_TIMEOUT_SEC_FIELD_NUMBER = 7;
  private int artStopTimeoutSec_;
  /**
   * <pre>
   * Timeout set by the user for the system "profiler.cpu.art.stop.timeout.sec"
   * property. Set if |profiling_config.type| is |ART|.
   * </pre>
   *
   * <code>optional int32 art_stop_timeout_sec = 7;</code>
   * @return Whether the artStopTimeoutSec field is set.
   */
  public boolean hasArtStopTimeoutSec() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Timeout set by the user for the system "profiler.cpu.art.stop.timeout.sec"
   * property. Set if |profiling_config.type| is |ART|.
   * </pre>
   *
   * <code>optional int32 art_stop_timeout_sec = 7;</code>
   * @return The artStopTimeoutSec.
   */
  public int getArtStopTimeoutSec() {
    return artStopTimeoutSec_;
  }

  public static final int STOPPING_TIME_MS_FIELD_NUMBER = 8;
  private int stoppingTimeMs_;
  /**
   * <pre>
   * How much time it took to stop CPU recording.
   * </pre>
   *
   * <code>optional int32 stopping_time_ms = 8;</code>
   * @return Whether the stoppingTimeMs field is set.
   */
  public boolean hasStoppingTimeMs() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * How much time it took to stop CPU recording.
   * </pre>
   *
   * <code>optional int32 stopping_time_ms = 8;</code>
   * @return The stoppingTimeMs.
   */
  public int getStoppingTimeMs() {
    return stoppingTimeMs_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, captureStatus_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt64(2, captureDurationMs_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt64(3, recordDurationMs_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt32(4, traceFileSizeBytes_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeUInt64(5, parsingTimeMs_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(6, getProfilingConfig());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeInt32(7, artStopTimeoutSec_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeInt32(8, stoppingTimeMs_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, captureStatus_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, captureDurationMs_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, recordDurationMs_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, traceFileSizeBytes_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, parsingTimeMs_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getProfilingConfig());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, artStopTimeoutSec_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, stoppingTimeMs_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.CpuCaptureMetadata)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.CpuCaptureMetadata other = (com.google.wireless.android.sdk.stats.CpuCaptureMetadata) obj;

    if (hasCaptureStatus() != other.hasCaptureStatus()) return false;
    if (hasCaptureStatus()) {
      if (captureStatus_ != other.captureStatus_) return false;
    }
    if (hasCaptureDurationMs() != other.hasCaptureDurationMs()) return false;
    if (hasCaptureDurationMs()) {
      if (getCaptureDurationMs()
          != other.getCaptureDurationMs()) return false;
    }
    if (hasRecordDurationMs() != other.hasRecordDurationMs()) return false;
    if (hasRecordDurationMs()) {
      if (getRecordDurationMs()
          != other.getRecordDurationMs()) return false;
    }
    if (hasTraceFileSizeBytes() != other.hasTraceFileSizeBytes()) return false;
    if (hasTraceFileSizeBytes()) {
      if (getTraceFileSizeBytes()
          != other.getTraceFileSizeBytes()) return false;
    }
    if (hasParsingTimeMs() != other.hasParsingTimeMs()) return false;
    if (hasParsingTimeMs()) {
      if (getParsingTimeMs()
          != other.getParsingTimeMs()) return false;
    }
    if (hasProfilingConfig() != other.hasProfilingConfig()) return false;
    if (hasProfilingConfig()) {
      if (!getProfilingConfig()
          .equals(other.getProfilingConfig())) return false;
    }
    if (hasArtStopTimeoutSec() != other.hasArtStopTimeoutSec()) return false;
    if (hasArtStopTimeoutSec()) {
      if (getArtStopTimeoutSec()
          != other.getArtStopTimeoutSec()) return false;
    }
    if (hasStoppingTimeMs() != other.hasStoppingTimeMs()) return false;
    if (hasStoppingTimeMs()) {
      if (getStoppingTimeMs()
          != other.getStoppingTimeMs()) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCaptureStatus()) {
      hash = (37 * hash) + CAPTURE_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + captureStatus_;
    }
    if (hasCaptureDurationMs()) {
      hash = (37 * hash) + CAPTURE_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCaptureDurationMs());
    }
    if (hasRecordDurationMs()) {
      hash = (37 * hash) + RECORD_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecordDurationMs());
    }
    if (hasTraceFileSizeBytes()) {
      hash = (37 * hash) + TRACE_FILE_SIZE_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getTraceFileSizeBytes();
    }
    if (hasParsingTimeMs()) {
      hash = (37 * hash) + PARSING_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getParsingTimeMs());
    }
    if (hasProfilingConfig()) {
      hash = (37 * hash) + PROFILING_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getProfilingConfig().hashCode();
    }
    if (hasArtStopTimeoutSec()) {
      hash = (37 * hash) + ART_STOP_TIMEOUT_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getArtStopTimeoutSec();
    }
    if (hasStoppingTimeMs()) {
      hash = (37 * hash) + STOPPING_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + getStoppingTimeMs();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.CpuCaptureMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Data associated with capturing a CPU method trace
   * </pre>
   *
   * Protobuf type {@code android_studio.CpuCaptureMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.CpuCaptureMetadata)
      com.google.wireless.android.sdk.stats.CpuCaptureMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuCaptureMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuCaptureMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.CpuCaptureMetadata.class, com.google.wireless.android.sdk.stats.CpuCaptureMetadata.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.CpuCaptureMetadata.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getProfilingConfigFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      captureStatus_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      captureDurationMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      recordDurationMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      traceFileSizeBytes_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      parsingTimeMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      if (profilingConfigBuilder_ == null) {
        profilingConfig_ = null;
      } else {
        profilingConfigBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      artStopTimeoutSec_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      stoppingTimeMs_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuCaptureMetadata_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuCaptureMetadata getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.CpuCaptureMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuCaptureMetadata build() {
      com.google.wireless.android.sdk.stats.CpuCaptureMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuCaptureMetadata buildPartial() {
      com.google.wireless.android.sdk.stats.CpuCaptureMetadata result = new com.google.wireless.android.sdk.stats.CpuCaptureMetadata(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.captureStatus_ = captureStatus_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.captureDurationMs_ = captureDurationMs_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.recordDurationMs_ = recordDurationMs_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.traceFileSizeBytes_ = traceFileSizeBytes_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.parsingTimeMs_ = parsingTimeMs_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        if (profilingConfigBuilder_ == null) {
          result.profilingConfig_ = profilingConfig_;
        } else {
          result.profilingConfig_ = profilingConfigBuilder_.build();
        }
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.artStopTimeoutSec_ = artStopTimeoutSec_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.stoppingTimeMs_ = stoppingTimeMs_;
        to_bitField0_ |= 0x00000080;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.CpuCaptureMetadata) {
        return mergeFrom((com.google.wireless.android.sdk.stats.CpuCaptureMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.CpuCaptureMetadata other) {
      if (other == com.google.wireless.android.sdk.stats.CpuCaptureMetadata.getDefaultInstance()) return this;
      if (other.hasCaptureStatus()) {
        setCaptureStatus(other.getCaptureStatus());
      }
      if (other.hasCaptureDurationMs()) {
        setCaptureDurationMs(other.getCaptureDurationMs());
      }
      if (other.hasRecordDurationMs()) {
        setRecordDurationMs(other.getRecordDurationMs());
      }
      if (other.hasTraceFileSizeBytes()) {
        setTraceFileSizeBytes(other.getTraceFileSizeBytes());
      }
      if (other.hasParsingTimeMs()) {
        setParsingTimeMs(other.getParsingTimeMs());
      }
      if (other.hasProfilingConfig()) {
        mergeProfilingConfig(other.getProfilingConfig());
      }
      if (other.hasArtStopTimeoutSec()) {
        setArtStopTimeoutSec(other.getArtStopTimeoutSec());
      }
      if (other.hasStoppingTimeMs()) {
        setStoppingTimeMs(other.getStoppingTimeMs());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.CpuCaptureMetadata parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.CpuCaptureMetadata) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int captureStatus_ = 0;
    /**
     * <pre>
     * The result of a CPU capture
     * </pre>
     *
     * <code>optional .android_studio.CpuCaptureMetadata.CaptureStatus capture_status = 1;</code>
     * @return Whether the captureStatus field is set.
     */
    public boolean hasCaptureStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The result of a CPU capture
     * </pre>
     *
     * <code>optional .android_studio.CpuCaptureMetadata.CaptureStatus capture_status = 1;</code>
     * @return The captureStatus.
     */
    public com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus getCaptureStatus() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus result = com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus.valueOf(captureStatus_);
      return result == null ? com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus.UNKNOWN_STATUS : result;
    }
    /**
     * <pre>
     * The result of a CPU capture
     * </pre>
     *
     * <code>optional .android_studio.CpuCaptureMetadata.CaptureStatus capture_status = 1;</code>
     * @param value The captureStatus to set.
     * @return This builder for chaining.
     */
    public Builder setCaptureStatus(com.google.wireless.android.sdk.stats.CpuCaptureMetadata.CaptureStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      captureStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The result of a CPU capture
     * </pre>
     *
     * <code>optional .android_studio.CpuCaptureMetadata.CaptureStatus capture_status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCaptureStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      captureStatus_ = 0;
      onChanged();
      return this;
    }

    private long captureDurationMs_ ;
    /**
     * <pre>
     * Duration from user pressing "Record" to pressing "Stop"
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 capture_duration_ms = 2;</code>
     * @return Whether the captureDurationMs field is set.
     */
    public boolean hasCaptureDurationMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Duration from user pressing "Record" to pressing "Stop"
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 capture_duration_ms = 2;</code>
     * @return The captureDurationMs.
     */
    public long getCaptureDurationMs() {
      return captureDurationMs_;
    }
    /**
     * <pre>
     * Duration from user pressing "Record" to pressing "Stop"
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 capture_duration_ms = 2;</code>
     * @param value The captureDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setCaptureDurationMs(long value) {
      bitField0_ |= 0x00000002;
      captureDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration from user pressing "Record" to pressing "Stop"
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 capture_duration_ms = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCaptureDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      captureDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private long recordDurationMs_ ;
    /**
     * <pre>
     * Duration from the first trace data timestamp to the last one.
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 record_duration_ms = 3;</code>
     * @return Whether the recordDurationMs field is set.
     */
    public boolean hasRecordDurationMs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Duration from the first trace data timestamp to the last one.
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 record_duration_ms = 3;</code>
     * @return The recordDurationMs.
     */
    public long getRecordDurationMs() {
      return recordDurationMs_;
    }
    /**
     * <pre>
     * Duration from the first trace data timestamp to the last one.
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 record_duration_ms = 3;</code>
     * @param value The recordDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setRecordDurationMs(long value) {
      bitField0_ |= 0x00000004;
      recordDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration from the first trace data timestamp to the last one.
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 record_duration_ms = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRecordDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000004);
      recordDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private int traceFileSizeBytes_ ;
    /**
     * <pre>
     * Size of the trace file generated by the capture.
     * Not set if |capture_status| is set to |STOP_CAPTURING_FAILURE|
     * </pre>
     *
     * <code>optional uint32 trace_file_size_bytes = 4;</code>
     * @return Whether the traceFileSizeBytes field is set.
     */
    public boolean hasTraceFileSizeBytes() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Size of the trace file generated by the capture.
     * Not set if |capture_status| is set to |STOP_CAPTURING_FAILURE|
     * </pre>
     *
     * <code>optional uint32 trace_file_size_bytes = 4;</code>
     * @return The traceFileSizeBytes.
     */
    public int getTraceFileSizeBytes() {
      return traceFileSizeBytes_;
    }
    /**
     * <pre>
     * Size of the trace file generated by the capture.
     * Not set if |capture_status| is set to |STOP_CAPTURING_FAILURE|
     * </pre>
     *
     * <code>optional uint32 trace_file_size_bytes = 4;</code>
     * @param value The traceFileSizeBytes to set.
     * @return This builder for chaining.
     */
    public Builder setTraceFileSizeBytes(int value) {
      bitField0_ |= 0x00000008;
      traceFileSizeBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Size of the trace file generated by the capture.
     * Not set if |capture_status| is set to |STOP_CAPTURING_FAILURE|
     * </pre>
     *
     * <code>optional uint32 trace_file_size_bytes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceFileSizeBytes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      traceFileSizeBytes_ = 0;
      onChanged();
      return this;
    }

    private long parsingTimeMs_ ;
    /**
     * <pre>
     * How much time it took to parse the trace file
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 parsing_time_ms = 5;</code>
     * @return Whether the parsingTimeMs field is set.
     */
    public boolean hasParsingTimeMs() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * How much time it took to parse the trace file
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 parsing_time_ms = 5;</code>
     * @return The parsingTimeMs.
     */
    public long getParsingTimeMs() {
      return parsingTimeMs_;
    }
    /**
     * <pre>
     * How much time it took to parse the trace file
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 parsing_time_ms = 5;</code>
     * @param value The parsingTimeMs to set.
     * @return This builder for chaining.
     */
    public Builder setParsingTimeMs(long value) {
      bitField0_ |= 0x00000010;
      parsingTimeMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How much time it took to parse the trace file
     * Not set if |capture_status| is not set to |SUCCESS|
     * </pre>
     *
     * <code>optional uint64 parsing_time_ms = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearParsingTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000010);
      parsingTimeMs_ = 0L;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.CpuProfilingConfig profilingConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.CpuProfilingConfig, com.google.wireless.android.sdk.stats.CpuProfilingConfig.Builder, com.google.wireless.android.sdk.stats.CpuProfilingConfigOrBuilder> profilingConfigBuilder_;
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     * @return Whether the profilingConfig field is set.
     */
    public boolean hasProfilingConfig() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     * @return The profilingConfig.
     */
    public com.google.wireless.android.sdk.stats.CpuProfilingConfig getProfilingConfig() {
      if (profilingConfigBuilder_ == null) {
        return profilingConfig_ == null ? com.google.wireless.android.sdk.stats.CpuProfilingConfig.getDefaultInstance() : profilingConfig_;
      } else {
        return profilingConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    public Builder setProfilingConfig(com.google.wireless.android.sdk.stats.CpuProfilingConfig value) {
      if (profilingConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        profilingConfig_ = value;
        onChanged();
      } else {
        profilingConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    public Builder setProfilingConfig(
        com.google.wireless.android.sdk.stats.CpuProfilingConfig.Builder builderForValue) {
      if (profilingConfigBuilder_ == null) {
        profilingConfig_ = builderForValue.build();
        onChanged();
      } else {
        profilingConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    public Builder mergeProfilingConfig(com.google.wireless.android.sdk.stats.CpuProfilingConfig value) {
      if (profilingConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
            profilingConfig_ != null &&
            profilingConfig_ != com.google.wireless.android.sdk.stats.CpuProfilingConfig.getDefaultInstance()) {
          profilingConfig_ =
            com.google.wireless.android.sdk.stats.CpuProfilingConfig.newBuilder(profilingConfig_).mergeFrom(value).buildPartial();
        } else {
          profilingConfig_ = value;
        }
        onChanged();
      } else {
        profilingConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    public Builder clearProfilingConfig() {
      if (profilingConfigBuilder_ == null) {
        profilingConfig_ = null;
        onChanged();
      } else {
        profilingConfigBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    public com.google.wireless.android.sdk.stats.CpuProfilingConfig.Builder getProfilingConfigBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getProfilingConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    public com.google.wireless.android.sdk.stats.CpuProfilingConfigOrBuilder getProfilingConfigOrBuilder() {
      if (profilingConfigBuilder_ != null) {
        return profilingConfigBuilder_.getMessageOrBuilder();
      } else {
        return profilingConfig_ == null ?
            com.google.wireless.android.sdk.stats.CpuProfilingConfig.getDefaultInstance() : profilingConfig_;
      }
    }
    /**
     * <pre>
     * The user's configuration used to generate this capture
     * </pre>
     *
     * <code>optional .android_studio.CpuProfilingConfig profiling_config = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.CpuProfilingConfig, com.google.wireless.android.sdk.stats.CpuProfilingConfig.Builder, com.google.wireless.android.sdk.stats.CpuProfilingConfigOrBuilder>
        getProfilingConfigFieldBuilder() {
      if (profilingConfigBuilder_ == null) {
        profilingConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.CpuProfilingConfig, com.google.wireless.android.sdk.stats.CpuProfilingConfig.Builder, com.google.wireless.android.sdk.stats.CpuProfilingConfigOrBuilder>(
                getProfilingConfig(),
                getParentForChildren(),
                isClean());
        profilingConfig_ = null;
      }
      return profilingConfigBuilder_;
    }

    private int artStopTimeoutSec_ ;
    /**
     * <pre>
     * Timeout set by the user for the system "profiler.cpu.art.stop.timeout.sec"
     * property. Set if |profiling_config.type| is |ART|.
     * </pre>
     *
     * <code>optional int32 art_stop_timeout_sec = 7;</code>
     * @return Whether the artStopTimeoutSec field is set.
     */
    public boolean hasArtStopTimeoutSec() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Timeout set by the user for the system "profiler.cpu.art.stop.timeout.sec"
     * property. Set if |profiling_config.type| is |ART|.
     * </pre>
     *
     * <code>optional int32 art_stop_timeout_sec = 7;</code>
     * @return The artStopTimeoutSec.
     */
    public int getArtStopTimeoutSec() {
      return artStopTimeoutSec_;
    }
    /**
     * <pre>
     * Timeout set by the user for the system "profiler.cpu.art.stop.timeout.sec"
     * property. Set if |profiling_config.type| is |ART|.
     * </pre>
     *
     * <code>optional int32 art_stop_timeout_sec = 7;</code>
     * @param value The artStopTimeoutSec to set.
     * @return This builder for chaining.
     */
    public Builder setArtStopTimeoutSec(int value) {
      bitField0_ |= 0x00000040;
      artStopTimeoutSec_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timeout set by the user for the system "profiler.cpu.art.stop.timeout.sec"
     * property. Set if |profiling_config.type| is |ART|.
     * </pre>
     *
     * <code>optional int32 art_stop_timeout_sec = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearArtStopTimeoutSec() {
      bitField0_ = (bitField0_ & ~0x00000040);
      artStopTimeoutSec_ = 0;
      onChanged();
      return this;
    }

    private int stoppingTimeMs_ ;
    /**
     * <pre>
     * How much time it took to stop CPU recording.
     * </pre>
     *
     * <code>optional int32 stopping_time_ms = 8;</code>
     * @return Whether the stoppingTimeMs field is set.
     */
    public boolean hasStoppingTimeMs() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * How much time it took to stop CPU recording.
     * </pre>
     *
     * <code>optional int32 stopping_time_ms = 8;</code>
     * @return The stoppingTimeMs.
     */
    public int getStoppingTimeMs() {
      return stoppingTimeMs_;
    }
    /**
     * <pre>
     * How much time it took to stop CPU recording.
     * </pre>
     *
     * <code>optional int32 stopping_time_ms = 8;</code>
     * @param value The stoppingTimeMs to set.
     * @return This builder for chaining.
     */
    public Builder setStoppingTimeMs(int value) {
      bitField0_ |= 0x00000080;
      stoppingTimeMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How much time it took to stop CPU recording.
     * </pre>
     *
     * <code>optional int32 stopping_time_ms = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearStoppingTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000080);
      stoppingTimeMs_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.CpuCaptureMetadata)
  }

  // @@protoc_insertion_point(class_scope:android_studio.CpuCaptureMetadata)
  private static final com.google.wireless.android.sdk.stats.CpuCaptureMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.CpuCaptureMetadata();
  }

  public static com.google.wireless.android.sdk.stats.CpuCaptureMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<CpuCaptureMetadata>
      PARSER = new com.google.protobuf.AbstractParser<CpuCaptureMetadata>() {
    @java.lang.Override
    public CpuCaptureMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CpuCaptureMetadata(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CpuCaptureMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CpuCaptureMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.CpuCaptureMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

