// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface GradleTaskExecutionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.GradleTaskExecution)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The task implementing class.
   * Custom tasks are recorded as UNKNOWN_TASK_TYPE.
   * This is an enum in android git:
   * tools/analytics-library/protos/src/main/proto/analytics_enums.proto
   * </pre>
   *
   * <code>optional int32 type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The task implementing class.
   * Custom tasks are recorded as UNKNOWN_TASK_TYPE.
   * This is an enum in android git:
   * tools/analytics-library/protos/src/main/proto/analytics_enums.proto
   * </pre>
   *
   * <code>optional int32 type = 1;</code>
   * @return The type.
   */
  int getType();

  /**
   * <pre>
   * Whether the task did work (TaskState#getDidWork())
   * This is not necessarily the inverse of up_to_date: see
   * https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskState.html#getDidWork()
   * </pre>
   *
   * <code>optional bool did_work = 2;</code>
   * @return Whether the didWork field is set.
   */
  boolean hasDidWork();
  /**
   * <pre>
   * Whether the task did work (TaskState#getDidWork())
   * This is not necessarily the inverse of up_to_date: see
   * https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskState.html#getDidWork()
   * </pre>
   *
   * <code>optional bool did_work = 2;</code>
   * @return The didWork.
   */
  boolean getDidWork();

  /**
   * <pre>
   * Whether the task was skipped (TaskState#getSkipped())
   * </pre>
   *
   * <code>optional bool skipped = 3;</code>
   * @return Whether the skipped field is set.
   */
  boolean hasSkipped();
  /**
   * <pre>
   * Whether the task was skipped (TaskState#getSkipped())
   * </pre>
   *
   * <code>optional bool skipped = 3;</code>
   * @return The skipped.
   */
  boolean getSkipped();

  /**
   * <pre>
   * Whether the task was up to date (TaskState#getUpToDate())
   * </pre>
   *
   * <code>optional bool up_to_date = 4;</code>
   * @return Whether the upToDate field is set.
   */
  boolean hasUpToDate();
  /**
   * <pre>
   * Whether the task was up to date (TaskState#getUpToDate())
   * </pre>
   *
   * <code>optional bool up_to_date = 4;</code>
   * @return The upToDate.
   */
  boolean getUpToDate();

  /**
   * <pre>
   * Whether the task failed
   * </pre>
   *
   * <code>optional bool failed = 5;</code>
   * @return Whether the failed field is set.
   */
  boolean hasFailed();
  /**
   * <pre>
   * Whether the task failed
   * </pre>
   *
   * <code>optional bool failed = 5;</code>
   * @return The failed.
   */
  boolean getFailed();
}
