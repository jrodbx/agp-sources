// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Data about build attribution analyzers
 * </pre>
 *
 * Protobuf type {@code android_studio.BuildAttributionAnalyzersData}
 */
public  final class BuildAttributionAnalyzersData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.BuildAttributionAnalyzersData)
    BuildAttributionAnalyzersDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BuildAttributionAnalyzersData.newBuilder() to construct.
  private BuildAttributionAnalyzersData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BuildAttributionAnalyzersData() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BuildAttributionAnalyzersData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BuildAttributionAnalyzersData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            bitField0_ |= 0x00000001;
            totalBuildTimeMs_ = input.readInt64();
            break;
          }
          case 18: {
            com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = alwaysRunTasksAnalyzerData_.toBuilder();
            }
            alwaysRunTasksAnalyzerData_ = input.readMessage(com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(alwaysRunTasksAnalyzerData_);
              alwaysRunTasksAnalyzerData_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 26: {
            com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) != 0)) {
              subBuilder = annotationProcessorsAnalyzerData_.toBuilder();
            }
            annotationProcessorsAnalyzerData_ = input.readMessage(com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(annotationProcessorsAnalyzerData_);
              annotationProcessorsAnalyzerData_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 34: {
            com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) != 0)) {
              subBuilder = criticalPathAnalyzerData_.toBuilder();
            }
            criticalPathAnalyzerData_ = input.readMessage(com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(criticalPathAnalyzerData_);
              criticalPathAnalyzerData_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 42: {
            com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) != 0)) {
              subBuilder = projectConfigurationAnalyzerData_.toBuilder();
            }
            projectConfigurationAnalyzerData_ = input.readMessage(com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(projectConfigurationAnalyzerData_);
              projectConfigurationAnalyzerData_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 50: {
            com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) != 0)) {
              subBuilder = tasksConfigurationIssuesAnalyzerData_.toBuilder();
            }
            tasksConfigurationIssuesAnalyzerData_ = input.readMessage(com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tasksConfigurationIssuesAnalyzerData_);
              tasksConfigurationIssuesAnalyzerData_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
          case 58: {
            com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.Builder subBuilder = null;
            if (((bitField0_ & 0x00000040) != 0)) {
              subBuilder = configurationCacheCompatibilityData_.toBuilder();
            }
            configurationCacheCompatibilityData_ = input.readMessage(com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(configurationCacheCompatibilityData_);
              configurationCacheCompatibilityData_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000040;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_BuildAttributionAnalyzersData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_BuildAttributionAnalyzersData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.class, com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.Builder.class);
  }

  private int bitField0_;
  public static final int TOTAL_BUILD_TIME_MS_FIELD_NUMBER = 1;
  private long totalBuildTimeMs_;
  /**
   * <pre>
   * Total build time in microseconds
   * </pre>
   *
   * <code>optional int64 total_build_time_ms = 1;</code>
   * @return Whether the totalBuildTimeMs field is set.
   */
  public boolean hasTotalBuildTimeMs() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Total build time in microseconds
   * </pre>
   *
   * <code>optional int64 total_build_time_ms = 1;</code>
   * @return The totalBuildTimeMs.
   */
  public long getTotalBuildTimeMs() {
    return totalBuildTimeMs_;
  }

  public static final int ALWAYS_RUN_TASKS_ANALYZER_DATA_FIELD_NUMBER = 2;
  private com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData alwaysRunTasksAnalyzerData_;
  /**
   * <pre>
   * Data from the always running tasks analyzer
   * </pre>
   *
   * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
   * @return Whether the alwaysRunTasksAnalyzerData field is set.
   */
  public boolean hasAlwaysRunTasksAnalyzerData() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Data from the always running tasks analyzer
   * </pre>
   *
   * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
   * @return The alwaysRunTasksAnalyzerData.
   */
  public com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData getAlwaysRunTasksAnalyzerData() {
    return alwaysRunTasksAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.getDefaultInstance() : alwaysRunTasksAnalyzerData_;
  }
  /**
   * <pre>
   * Data from the always running tasks analyzer
   * </pre>
   *
   * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
   */
  public com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerDataOrBuilder getAlwaysRunTasksAnalyzerDataOrBuilder() {
    return alwaysRunTasksAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.getDefaultInstance() : alwaysRunTasksAnalyzerData_;
  }

  public static final int ANNOTATION_PROCESSORS_ANALYZER_DATA_FIELD_NUMBER = 3;
  private com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData annotationProcessorsAnalyzerData_;
  /**
   * <pre>
   * Data from the annotation processors analyzer
   * </pre>
   *
   * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
   * @return Whether the annotationProcessorsAnalyzerData field is set.
   */
  public boolean hasAnnotationProcessorsAnalyzerData() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Data from the annotation processors analyzer
   * </pre>
   *
   * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
   * @return The annotationProcessorsAnalyzerData.
   */
  public com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData getAnnotationProcessorsAnalyzerData() {
    return annotationProcessorsAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.getDefaultInstance() : annotationProcessorsAnalyzerData_;
  }
  /**
   * <pre>
   * Data from the annotation processors analyzer
   * </pre>
   *
   * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
   */
  public com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerDataOrBuilder getAnnotationProcessorsAnalyzerDataOrBuilder() {
    return annotationProcessorsAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.getDefaultInstance() : annotationProcessorsAnalyzerData_;
  }

  public static final int CRITICAL_PATH_ANALYZER_DATA_FIELD_NUMBER = 4;
  private com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData criticalPathAnalyzerData_;
  /**
   * <pre>
   * Data from the critical path analyzer
   * </pre>
   *
   * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
   * @return Whether the criticalPathAnalyzerData field is set.
   */
  public boolean hasCriticalPathAnalyzerData() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Data from the critical path analyzer
   * </pre>
   *
   * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
   * @return The criticalPathAnalyzerData.
   */
  public com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData getCriticalPathAnalyzerData() {
    return criticalPathAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.getDefaultInstance() : criticalPathAnalyzerData_;
  }
  /**
   * <pre>
   * Data from the critical path analyzer
   * </pre>
   *
   * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
   */
  public com.google.wireless.android.sdk.stats.CriticalPathAnalyzerDataOrBuilder getCriticalPathAnalyzerDataOrBuilder() {
    return criticalPathAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.getDefaultInstance() : criticalPathAnalyzerData_;
  }

  public static final int PROJECT_CONFIGURATION_ANALYZER_DATA_FIELD_NUMBER = 5;
  private com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData projectConfigurationAnalyzerData_;
  /**
   * <pre>
   * Data from the project configuration analyzer
   * </pre>
   *
   * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
   * @return Whether the projectConfigurationAnalyzerData field is set.
   */
  public boolean hasProjectConfigurationAnalyzerData() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Data from the project configuration analyzer
   * </pre>
   *
   * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
   * @return The projectConfigurationAnalyzerData.
   */
  public com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData getProjectConfigurationAnalyzerData() {
    return projectConfigurationAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.getDefaultInstance() : projectConfigurationAnalyzerData_;
  }
  /**
   * <pre>
   * Data from the project configuration analyzer
   * </pre>
   *
   * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
   */
  public com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerDataOrBuilder getProjectConfigurationAnalyzerDataOrBuilder() {
    return projectConfigurationAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.getDefaultInstance() : projectConfigurationAnalyzerData_;
  }

  public static final int TASKS_CONFIGURATION_ISSUES_ANALYZER_DATA_FIELD_NUMBER = 6;
  private com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData tasksConfigurationIssuesAnalyzerData_;
  /**
   * <pre>
   * Data from the tasks configuration issues analyzer
   * </pre>
   *
   * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
   * @return Whether the tasksConfigurationIssuesAnalyzerData field is set.
   */
  public boolean hasTasksConfigurationIssuesAnalyzerData() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Data from the tasks configuration issues analyzer
   * </pre>
   *
   * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
   * @return The tasksConfigurationIssuesAnalyzerData.
   */
  public com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData getTasksConfigurationIssuesAnalyzerData() {
    return tasksConfigurationIssuesAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.getDefaultInstance() : tasksConfigurationIssuesAnalyzerData_;
  }
  /**
   * <pre>
   * Data from the tasks configuration issues analyzer
   * </pre>
   *
   * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
   */
  public com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerDataOrBuilder getTasksConfigurationIssuesAnalyzerDataOrBuilder() {
    return tasksConfigurationIssuesAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.getDefaultInstance() : tasksConfigurationIssuesAnalyzerData_;
  }

  public static final int CONFIGURATION_CACHE_COMPATIBILITY_DATA_FIELD_NUMBER = 7;
  private com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData configurationCacheCompatibilityData_;
  /**
   * <pre>
   * Data from configuration caching compatibility analyzer
   * </pre>
   *
   * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
   * @return Whether the configurationCacheCompatibilityData field is set.
   */
  public boolean hasConfigurationCacheCompatibilityData() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Data from configuration caching compatibility analyzer
   * </pre>
   *
   * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
   * @return The configurationCacheCompatibilityData.
   */
  public com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData getConfigurationCacheCompatibilityData() {
    return configurationCacheCompatibilityData_ == null ? com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.getDefaultInstance() : configurationCacheCompatibilityData_;
  }
  /**
   * <pre>
   * Data from configuration caching compatibility analyzer
   * </pre>
   *
   * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
   */
  public com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityDataOrBuilder getConfigurationCacheCompatibilityDataOrBuilder() {
    return configurationCacheCompatibilityData_ == null ? com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.getDefaultInstance() : configurationCacheCompatibilityData_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, totalBuildTimeMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getAlwaysRunTasksAnalyzerData());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getAnnotationProcessorsAnalyzerData());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getCriticalPathAnalyzerData());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getProjectConfigurationAnalyzerData());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(6, getTasksConfigurationIssuesAnalyzerData());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(7, getConfigurationCacheCompatibilityData());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, totalBuildTimeMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAlwaysRunTasksAnalyzerData());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAnnotationProcessorsAnalyzerData());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCriticalPathAnalyzerData());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getProjectConfigurationAnalyzerData());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTasksConfigurationIssuesAnalyzerData());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getConfigurationCacheCompatibilityData());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData other = (com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData) obj;

    if (hasTotalBuildTimeMs() != other.hasTotalBuildTimeMs()) return false;
    if (hasTotalBuildTimeMs()) {
      if (getTotalBuildTimeMs()
          != other.getTotalBuildTimeMs()) return false;
    }
    if (hasAlwaysRunTasksAnalyzerData() != other.hasAlwaysRunTasksAnalyzerData()) return false;
    if (hasAlwaysRunTasksAnalyzerData()) {
      if (!getAlwaysRunTasksAnalyzerData()
          .equals(other.getAlwaysRunTasksAnalyzerData())) return false;
    }
    if (hasAnnotationProcessorsAnalyzerData() != other.hasAnnotationProcessorsAnalyzerData()) return false;
    if (hasAnnotationProcessorsAnalyzerData()) {
      if (!getAnnotationProcessorsAnalyzerData()
          .equals(other.getAnnotationProcessorsAnalyzerData())) return false;
    }
    if (hasCriticalPathAnalyzerData() != other.hasCriticalPathAnalyzerData()) return false;
    if (hasCriticalPathAnalyzerData()) {
      if (!getCriticalPathAnalyzerData()
          .equals(other.getCriticalPathAnalyzerData())) return false;
    }
    if (hasProjectConfigurationAnalyzerData() != other.hasProjectConfigurationAnalyzerData()) return false;
    if (hasProjectConfigurationAnalyzerData()) {
      if (!getProjectConfigurationAnalyzerData()
          .equals(other.getProjectConfigurationAnalyzerData())) return false;
    }
    if (hasTasksConfigurationIssuesAnalyzerData() != other.hasTasksConfigurationIssuesAnalyzerData()) return false;
    if (hasTasksConfigurationIssuesAnalyzerData()) {
      if (!getTasksConfigurationIssuesAnalyzerData()
          .equals(other.getTasksConfigurationIssuesAnalyzerData())) return false;
    }
    if (hasConfigurationCacheCompatibilityData() != other.hasConfigurationCacheCompatibilityData()) return false;
    if (hasConfigurationCacheCompatibilityData()) {
      if (!getConfigurationCacheCompatibilityData()
          .equals(other.getConfigurationCacheCompatibilityData())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTotalBuildTimeMs()) {
      hash = (37 * hash) + TOTAL_BUILD_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalBuildTimeMs());
    }
    if (hasAlwaysRunTasksAnalyzerData()) {
      hash = (37 * hash) + ALWAYS_RUN_TASKS_ANALYZER_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getAlwaysRunTasksAnalyzerData().hashCode();
    }
    if (hasAnnotationProcessorsAnalyzerData()) {
      hash = (37 * hash) + ANNOTATION_PROCESSORS_ANALYZER_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getAnnotationProcessorsAnalyzerData().hashCode();
    }
    if (hasCriticalPathAnalyzerData()) {
      hash = (37 * hash) + CRITICAL_PATH_ANALYZER_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getCriticalPathAnalyzerData().hashCode();
    }
    if (hasProjectConfigurationAnalyzerData()) {
      hash = (37 * hash) + PROJECT_CONFIGURATION_ANALYZER_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getProjectConfigurationAnalyzerData().hashCode();
    }
    if (hasTasksConfigurationIssuesAnalyzerData()) {
      hash = (37 * hash) + TASKS_CONFIGURATION_ISSUES_ANALYZER_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getTasksConfigurationIssuesAnalyzerData().hashCode();
    }
    if (hasConfigurationCacheCompatibilityData()) {
      hash = (37 * hash) + CONFIGURATION_CACHE_COMPATIBILITY_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getConfigurationCacheCompatibilityData().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Data about build attribution analyzers
   * </pre>
   *
   * Protobuf type {@code android_studio.BuildAttributionAnalyzersData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.BuildAttributionAnalyzersData)
      com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_BuildAttributionAnalyzersData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_BuildAttributionAnalyzersData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.class, com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAlwaysRunTasksAnalyzerDataFieldBuilder();
        getAnnotationProcessorsAnalyzerDataFieldBuilder();
        getCriticalPathAnalyzerDataFieldBuilder();
        getProjectConfigurationAnalyzerDataFieldBuilder();
        getTasksConfigurationIssuesAnalyzerDataFieldBuilder();
        getConfigurationCacheCompatibilityDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      totalBuildTimeMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        alwaysRunTasksAnalyzerData_ = null;
      } else {
        alwaysRunTasksAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        annotationProcessorsAnalyzerData_ = null;
      } else {
        annotationProcessorsAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (criticalPathAnalyzerDataBuilder_ == null) {
        criticalPathAnalyzerData_ = null;
      } else {
        criticalPathAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        projectConfigurationAnalyzerData_ = null;
      } else {
        projectConfigurationAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        tasksConfigurationIssuesAnalyzerData_ = null;
      } else {
        tasksConfigurationIssuesAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        configurationCacheCompatibilityData_ = null;
      } else {
        configurationCacheCompatibilityDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_BuildAttributionAnalyzersData_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData build() {
      com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData buildPartial() {
      com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData result = new com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.totalBuildTimeMs_ = totalBuildTimeMs_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
          result.alwaysRunTasksAnalyzerData_ = alwaysRunTasksAnalyzerData_;
        } else {
          result.alwaysRunTasksAnalyzerData_ = alwaysRunTasksAnalyzerDataBuilder_.build();
        }
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        if (annotationProcessorsAnalyzerDataBuilder_ == null) {
          result.annotationProcessorsAnalyzerData_ = annotationProcessorsAnalyzerData_;
        } else {
          result.annotationProcessorsAnalyzerData_ = annotationProcessorsAnalyzerDataBuilder_.build();
        }
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        if (criticalPathAnalyzerDataBuilder_ == null) {
          result.criticalPathAnalyzerData_ = criticalPathAnalyzerData_;
        } else {
          result.criticalPathAnalyzerData_ = criticalPathAnalyzerDataBuilder_.build();
        }
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        if (projectConfigurationAnalyzerDataBuilder_ == null) {
          result.projectConfigurationAnalyzerData_ = projectConfigurationAnalyzerData_;
        } else {
          result.projectConfigurationAnalyzerData_ = projectConfigurationAnalyzerDataBuilder_.build();
        }
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
          result.tasksConfigurationIssuesAnalyzerData_ = tasksConfigurationIssuesAnalyzerData_;
        } else {
          result.tasksConfigurationIssuesAnalyzerData_ = tasksConfigurationIssuesAnalyzerDataBuilder_.build();
        }
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        if (configurationCacheCompatibilityDataBuilder_ == null) {
          result.configurationCacheCompatibilityData_ = configurationCacheCompatibilityData_;
        } else {
          result.configurationCacheCompatibilityData_ = configurationCacheCompatibilityDataBuilder_.build();
        }
        to_bitField0_ |= 0x00000040;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData) {
        return mergeFrom((com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData other) {
      if (other == com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData.getDefaultInstance()) return this;
      if (other.hasTotalBuildTimeMs()) {
        setTotalBuildTimeMs(other.getTotalBuildTimeMs());
      }
      if (other.hasAlwaysRunTasksAnalyzerData()) {
        mergeAlwaysRunTasksAnalyzerData(other.getAlwaysRunTasksAnalyzerData());
      }
      if (other.hasAnnotationProcessorsAnalyzerData()) {
        mergeAnnotationProcessorsAnalyzerData(other.getAnnotationProcessorsAnalyzerData());
      }
      if (other.hasCriticalPathAnalyzerData()) {
        mergeCriticalPathAnalyzerData(other.getCriticalPathAnalyzerData());
      }
      if (other.hasProjectConfigurationAnalyzerData()) {
        mergeProjectConfigurationAnalyzerData(other.getProjectConfigurationAnalyzerData());
      }
      if (other.hasTasksConfigurationIssuesAnalyzerData()) {
        mergeTasksConfigurationIssuesAnalyzerData(other.getTasksConfigurationIssuesAnalyzerData());
      }
      if (other.hasConfigurationCacheCompatibilityData()) {
        mergeConfigurationCacheCompatibilityData(other.getConfigurationCacheCompatibilityData());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long totalBuildTimeMs_ ;
    /**
     * <pre>
     * Total build time in microseconds
     * </pre>
     *
     * <code>optional int64 total_build_time_ms = 1;</code>
     * @return Whether the totalBuildTimeMs field is set.
     */
    public boolean hasTotalBuildTimeMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Total build time in microseconds
     * </pre>
     *
     * <code>optional int64 total_build_time_ms = 1;</code>
     * @return The totalBuildTimeMs.
     */
    public long getTotalBuildTimeMs() {
      return totalBuildTimeMs_;
    }
    /**
     * <pre>
     * Total build time in microseconds
     * </pre>
     *
     * <code>optional int64 total_build_time_ms = 1;</code>
     * @param value The totalBuildTimeMs to set.
     * @return This builder for chaining.
     */
    public Builder setTotalBuildTimeMs(long value) {
      bitField0_ |= 0x00000001;
      totalBuildTimeMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total build time in microseconds
     * </pre>
     *
     * <code>optional int64 total_build_time_ms = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalBuildTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      totalBuildTimeMs_ = 0L;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData alwaysRunTasksAnalyzerData_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData, com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.Builder, com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerDataOrBuilder> alwaysRunTasksAnalyzerDataBuilder_;
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     * @return Whether the alwaysRunTasksAnalyzerData field is set.
     */
    public boolean hasAlwaysRunTasksAnalyzerData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     * @return The alwaysRunTasksAnalyzerData.
     */
    public com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData getAlwaysRunTasksAnalyzerData() {
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        return alwaysRunTasksAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.getDefaultInstance() : alwaysRunTasksAnalyzerData_;
      } else {
        return alwaysRunTasksAnalyzerDataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    public Builder setAlwaysRunTasksAnalyzerData(com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData value) {
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        alwaysRunTasksAnalyzerData_ = value;
        onChanged();
      } else {
        alwaysRunTasksAnalyzerDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    public Builder setAlwaysRunTasksAnalyzerData(
        com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.Builder builderForValue) {
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        alwaysRunTasksAnalyzerData_ = builderForValue.build();
        onChanged();
      } else {
        alwaysRunTasksAnalyzerDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    public Builder mergeAlwaysRunTasksAnalyzerData(com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData value) {
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
            alwaysRunTasksAnalyzerData_ != null &&
            alwaysRunTasksAnalyzerData_ != com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.getDefaultInstance()) {
          alwaysRunTasksAnalyzerData_ =
            com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.newBuilder(alwaysRunTasksAnalyzerData_).mergeFrom(value).buildPartial();
        } else {
          alwaysRunTasksAnalyzerData_ = value;
        }
        onChanged();
      } else {
        alwaysRunTasksAnalyzerDataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    public Builder clearAlwaysRunTasksAnalyzerData() {
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        alwaysRunTasksAnalyzerData_ = null;
        onChanged();
      } else {
        alwaysRunTasksAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.Builder getAlwaysRunTasksAnalyzerDataBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getAlwaysRunTasksAnalyzerDataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerDataOrBuilder getAlwaysRunTasksAnalyzerDataOrBuilder() {
      if (alwaysRunTasksAnalyzerDataBuilder_ != null) {
        return alwaysRunTasksAnalyzerDataBuilder_.getMessageOrBuilder();
      } else {
        return alwaysRunTasksAnalyzerData_ == null ?
            com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.getDefaultInstance() : alwaysRunTasksAnalyzerData_;
      }
    }
    /**
     * <pre>
     * Data from the always running tasks analyzer
     * </pre>
     *
     * <code>optional .android_studio.AlwaysRunTasksAnalyzerData always_run_tasks_analyzer_data = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData, com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.Builder, com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerDataOrBuilder>
        getAlwaysRunTasksAnalyzerDataFieldBuilder() {
      if (alwaysRunTasksAnalyzerDataBuilder_ == null) {
        alwaysRunTasksAnalyzerDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData, com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerData.Builder, com.google.wireless.android.sdk.stats.AlwaysRunTasksAnalyzerDataOrBuilder>(
                getAlwaysRunTasksAnalyzerData(),
                getParentForChildren(),
                isClean());
        alwaysRunTasksAnalyzerData_ = null;
      }
      return alwaysRunTasksAnalyzerDataBuilder_;
    }

    private com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData annotationProcessorsAnalyzerData_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData, com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.Builder, com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerDataOrBuilder> annotationProcessorsAnalyzerDataBuilder_;
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     * @return Whether the annotationProcessorsAnalyzerData field is set.
     */
    public boolean hasAnnotationProcessorsAnalyzerData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     * @return The annotationProcessorsAnalyzerData.
     */
    public com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData getAnnotationProcessorsAnalyzerData() {
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        return annotationProcessorsAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.getDefaultInstance() : annotationProcessorsAnalyzerData_;
      } else {
        return annotationProcessorsAnalyzerDataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    public Builder setAnnotationProcessorsAnalyzerData(com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData value) {
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        annotationProcessorsAnalyzerData_ = value;
        onChanged();
      } else {
        annotationProcessorsAnalyzerDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    public Builder setAnnotationProcessorsAnalyzerData(
        com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.Builder builderForValue) {
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        annotationProcessorsAnalyzerData_ = builderForValue.build();
        onChanged();
      } else {
        annotationProcessorsAnalyzerDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    public Builder mergeAnnotationProcessorsAnalyzerData(com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData value) {
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
            annotationProcessorsAnalyzerData_ != null &&
            annotationProcessorsAnalyzerData_ != com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.getDefaultInstance()) {
          annotationProcessorsAnalyzerData_ =
            com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.newBuilder(annotationProcessorsAnalyzerData_).mergeFrom(value).buildPartial();
        } else {
          annotationProcessorsAnalyzerData_ = value;
        }
        onChanged();
      } else {
        annotationProcessorsAnalyzerDataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    public Builder clearAnnotationProcessorsAnalyzerData() {
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        annotationProcessorsAnalyzerData_ = null;
        onChanged();
      } else {
        annotationProcessorsAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.Builder getAnnotationProcessorsAnalyzerDataBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getAnnotationProcessorsAnalyzerDataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerDataOrBuilder getAnnotationProcessorsAnalyzerDataOrBuilder() {
      if (annotationProcessorsAnalyzerDataBuilder_ != null) {
        return annotationProcessorsAnalyzerDataBuilder_.getMessageOrBuilder();
      } else {
        return annotationProcessorsAnalyzerData_ == null ?
            com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.getDefaultInstance() : annotationProcessorsAnalyzerData_;
      }
    }
    /**
     * <pre>
     * Data from the annotation processors analyzer
     * </pre>
     *
     * <code>optional .android_studio.AnnotationProcessorsAnalyzerData annotation_processors_analyzer_data = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData, com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.Builder, com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerDataOrBuilder>
        getAnnotationProcessorsAnalyzerDataFieldBuilder() {
      if (annotationProcessorsAnalyzerDataBuilder_ == null) {
        annotationProcessorsAnalyzerDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData, com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerData.Builder, com.google.wireless.android.sdk.stats.AnnotationProcessorsAnalyzerDataOrBuilder>(
                getAnnotationProcessorsAnalyzerData(),
                getParentForChildren(),
                isClean());
        annotationProcessorsAnalyzerData_ = null;
      }
      return annotationProcessorsAnalyzerDataBuilder_;
    }

    private com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData criticalPathAnalyzerData_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData, com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.Builder, com.google.wireless.android.sdk.stats.CriticalPathAnalyzerDataOrBuilder> criticalPathAnalyzerDataBuilder_;
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     * @return Whether the criticalPathAnalyzerData field is set.
     */
    public boolean hasCriticalPathAnalyzerData() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     * @return The criticalPathAnalyzerData.
     */
    public com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData getCriticalPathAnalyzerData() {
      if (criticalPathAnalyzerDataBuilder_ == null) {
        return criticalPathAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.getDefaultInstance() : criticalPathAnalyzerData_;
      } else {
        return criticalPathAnalyzerDataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    public Builder setCriticalPathAnalyzerData(com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData value) {
      if (criticalPathAnalyzerDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        criticalPathAnalyzerData_ = value;
        onChanged();
      } else {
        criticalPathAnalyzerDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    public Builder setCriticalPathAnalyzerData(
        com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.Builder builderForValue) {
      if (criticalPathAnalyzerDataBuilder_ == null) {
        criticalPathAnalyzerData_ = builderForValue.build();
        onChanged();
      } else {
        criticalPathAnalyzerDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    public Builder mergeCriticalPathAnalyzerData(com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData value) {
      if (criticalPathAnalyzerDataBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
            criticalPathAnalyzerData_ != null &&
            criticalPathAnalyzerData_ != com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.getDefaultInstance()) {
          criticalPathAnalyzerData_ =
            com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.newBuilder(criticalPathAnalyzerData_).mergeFrom(value).buildPartial();
        } else {
          criticalPathAnalyzerData_ = value;
        }
        onChanged();
      } else {
        criticalPathAnalyzerDataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    public Builder clearCriticalPathAnalyzerData() {
      if (criticalPathAnalyzerDataBuilder_ == null) {
        criticalPathAnalyzerData_ = null;
        onChanged();
      } else {
        criticalPathAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    public com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.Builder getCriticalPathAnalyzerDataBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getCriticalPathAnalyzerDataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    public com.google.wireless.android.sdk.stats.CriticalPathAnalyzerDataOrBuilder getCriticalPathAnalyzerDataOrBuilder() {
      if (criticalPathAnalyzerDataBuilder_ != null) {
        return criticalPathAnalyzerDataBuilder_.getMessageOrBuilder();
      } else {
        return criticalPathAnalyzerData_ == null ?
            com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.getDefaultInstance() : criticalPathAnalyzerData_;
      }
    }
    /**
     * <pre>
     * Data from the critical path analyzer
     * </pre>
     *
     * <code>optional .android_studio.CriticalPathAnalyzerData critical_path_analyzer_data = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData, com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.Builder, com.google.wireless.android.sdk.stats.CriticalPathAnalyzerDataOrBuilder>
        getCriticalPathAnalyzerDataFieldBuilder() {
      if (criticalPathAnalyzerDataBuilder_ == null) {
        criticalPathAnalyzerDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData, com.google.wireless.android.sdk.stats.CriticalPathAnalyzerData.Builder, com.google.wireless.android.sdk.stats.CriticalPathAnalyzerDataOrBuilder>(
                getCriticalPathAnalyzerData(),
                getParentForChildren(),
                isClean());
        criticalPathAnalyzerData_ = null;
      }
      return criticalPathAnalyzerDataBuilder_;
    }

    private com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData projectConfigurationAnalyzerData_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData, com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.Builder, com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerDataOrBuilder> projectConfigurationAnalyzerDataBuilder_;
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     * @return Whether the projectConfigurationAnalyzerData field is set.
     */
    public boolean hasProjectConfigurationAnalyzerData() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     * @return The projectConfigurationAnalyzerData.
     */
    public com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData getProjectConfigurationAnalyzerData() {
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        return projectConfigurationAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.getDefaultInstance() : projectConfigurationAnalyzerData_;
      } else {
        return projectConfigurationAnalyzerDataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    public Builder setProjectConfigurationAnalyzerData(com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData value) {
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        projectConfigurationAnalyzerData_ = value;
        onChanged();
      } else {
        projectConfigurationAnalyzerDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    public Builder setProjectConfigurationAnalyzerData(
        com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.Builder builderForValue) {
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        projectConfigurationAnalyzerData_ = builderForValue.build();
        onChanged();
      } else {
        projectConfigurationAnalyzerDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    public Builder mergeProjectConfigurationAnalyzerData(com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData value) {
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
            projectConfigurationAnalyzerData_ != null &&
            projectConfigurationAnalyzerData_ != com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.getDefaultInstance()) {
          projectConfigurationAnalyzerData_ =
            com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.newBuilder(projectConfigurationAnalyzerData_).mergeFrom(value).buildPartial();
        } else {
          projectConfigurationAnalyzerData_ = value;
        }
        onChanged();
      } else {
        projectConfigurationAnalyzerDataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    public Builder clearProjectConfigurationAnalyzerData() {
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        projectConfigurationAnalyzerData_ = null;
        onChanged();
      } else {
        projectConfigurationAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    public com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.Builder getProjectConfigurationAnalyzerDataBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getProjectConfigurationAnalyzerDataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    public com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerDataOrBuilder getProjectConfigurationAnalyzerDataOrBuilder() {
      if (projectConfigurationAnalyzerDataBuilder_ != null) {
        return projectConfigurationAnalyzerDataBuilder_.getMessageOrBuilder();
      } else {
        return projectConfigurationAnalyzerData_ == null ?
            com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.getDefaultInstance() : projectConfigurationAnalyzerData_;
      }
    }
    /**
     * <pre>
     * Data from the project configuration analyzer
     * </pre>
     *
     * <code>optional .android_studio.ProjectConfigurationAnalyzerData project_configuration_analyzer_data = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData, com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.Builder, com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerDataOrBuilder>
        getProjectConfigurationAnalyzerDataFieldBuilder() {
      if (projectConfigurationAnalyzerDataBuilder_ == null) {
        projectConfigurationAnalyzerDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData, com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerData.Builder, com.google.wireless.android.sdk.stats.ProjectConfigurationAnalyzerDataOrBuilder>(
                getProjectConfigurationAnalyzerData(),
                getParentForChildren(),
                isClean());
        projectConfigurationAnalyzerData_ = null;
      }
      return projectConfigurationAnalyzerDataBuilder_;
    }

    private com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData tasksConfigurationIssuesAnalyzerData_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData, com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.Builder, com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerDataOrBuilder> tasksConfigurationIssuesAnalyzerDataBuilder_;
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     * @return Whether the tasksConfigurationIssuesAnalyzerData field is set.
     */
    public boolean hasTasksConfigurationIssuesAnalyzerData() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     * @return The tasksConfigurationIssuesAnalyzerData.
     */
    public com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData getTasksConfigurationIssuesAnalyzerData() {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        return tasksConfigurationIssuesAnalyzerData_ == null ? com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.getDefaultInstance() : tasksConfigurationIssuesAnalyzerData_;
      } else {
        return tasksConfigurationIssuesAnalyzerDataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    public Builder setTasksConfigurationIssuesAnalyzerData(com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData value) {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tasksConfigurationIssuesAnalyzerData_ = value;
        onChanged();
      } else {
        tasksConfigurationIssuesAnalyzerDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    public Builder setTasksConfigurationIssuesAnalyzerData(
        com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.Builder builderForValue) {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        tasksConfigurationIssuesAnalyzerData_ = builderForValue.build();
        onChanged();
      } else {
        tasksConfigurationIssuesAnalyzerDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    public Builder mergeTasksConfigurationIssuesAnalyzerData(com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData value) {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
            tasksConfigurationIssuesAnalyzerData_ != null &&
            tasksConfigurationIssuesAnalyzerData_ != com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.getDefaultInstance()) {
          tasksConfigurationIssuesAnalyzerData_ =
            com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.newBuilder(tasksConfigurationIssuesAnalyzerData_).mergeFrom(value).buildPartial();
        } else {
          tasksConfigurationIssuesAnalyzerData_ = value;
        }
        onChanged();
      } else {
        tasksConfigurationIssuesAnalyzerDataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    public Builder clearTasksConfigurationIssuesAnalyzerData() {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        tasksConfigurationIssuesAnalyzerData_ = null;
        onChanged();
      } else {
        tasksConfigurationIssuesAnalyzerDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    public com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.Builder getTasksConfigurationIssuesAnalyzerDataBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getTasksConfigurationIssuesAnalyzerDataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    public com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerDataOrBuilder getTasksConfigurationIssuesAnalyzerDataOrBuilder() {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ != null) {
        return tasksConfigurationIssuesAnalyzerDataBuilder_.getMessageOrBuilder();
      } else {
        return tasksConfigurationIssuesAnalyzerData_ == null ?
            com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.getDefaultInstance() : tasksConfigurationIssuesAnalyzerData_;
      }
    }
    /**
     * <pre>
     * Data from the tasks configuration issues analyzer
     * </pre>
     *
     * <code>optional .android_studio.TasksConfigurationIssuesAnalyzerData tasks_configuration_issues_analyzer_data = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData, com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.Builder, com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerDataOrBuilder>
        getTasksConfigurationIssuesAnalyzerDataFieldBuilder() {
      if (tasksConfigurationIssuesAnalyzerDataBuilder_ == null) {
        tasksConfigurationIssuesAnalyzerDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData, com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerData.Builder, com.google.wireless.android.sdk.stats.TasksConfigurationIssuesAnalyzerDataOrBuilder>(
                getTasksConfigurationIssuesAnalyzerData(),
                getParentForChildren(),
                isClean());
        tasksConfigurationIssuesAnalyzerData_ = null;
      }
      return tasksConfigurationIssuesAnalyzerDataBuilder_;
    }

    private com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData configurationCacheCompatibilityData_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData, com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.Builder, com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityDataOrBuilder> configurationCacheCompatibilityDataBuilder_;
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     * @return Whether the configurationCacheCompatibilityData field is set.
     */
    public boolean hasConfigurationCacheCompatibilityData() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     * @return The configurationCacheCompatibilityData.
     */
    public com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData getConfigurationCacheCompatibilityData() {
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        return configurationCacheCompatibilityData_ == null ? com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.getDefaultInstance() : configurationCacheCompatibilityData_;
      } else {
        return configurationCacheCompatibilityDataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    public Builder setConfigurationCacheCompatibilityData(com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData value) {
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configurationCacheCompatibilityData_ = value;
        onChanged();
      } else {
        configurationCacheCompatibilityDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    public Builder setConfigurationCacheCompatibilityData(
        com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.Builder builderForValue) {
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        configurationCacheCompatibilityData_ = builderForValue.build();
        onChanged();
      } else {
        configurationCacheCompatibilityDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    public Builder mergeConfigurationCacheCompatibilityData(com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData value) {
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
            configurationCacheCompatibilityData_ != null &&
            configurationCacheCompatibilityData_ != com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.getDefaultInstance()) {
          configurationCacheCompatibilityData_ =
            com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.newBuilder(configurationCacheCompatibilityData_).mergeFrom(value).buildPartial();
        } else {
          configurationCacheCompatibilityData_ = value;
        }
        onChanged();
      } else {
        configurationCacheCompatibilityDataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    public Builder clearConfigurationCacheCompatibilityData() {
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        configurationCacheCompatibilityData_ = null;
        onChanged();
      } else {
        configurationCacheCompatibilityDataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.Builder getConfigurationCacheCompatibilityDataBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getConfigurationCacheCompatibilityDataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityDataOrBuilder getConfigurationCacheCompatibilityDataOrBuilder() {
      if (configurationCacheCompatibilityDataBuilder_ != null) {
        return configurationCacheCompatibilityDataBuilder_.getMessageOrBuilder();
      } else {
        return configurationCacheCompatibilityData_ == null ?
            com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.getDefaultInstance() : configurationCacheCompatibilityData_;
      }
    }
    /**
     * <pre>
     * Data from configuration caching compatibility analyzer
     * </pre>
     *
     * <code>optional .android_studio.ConfigurationCacheCompatibilityData configuration_cache_compatibility_data = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData, com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.Builder, com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityDataOrBuilder>
        getConfigurationCacheCompatibilityDataFieldBuilder() {
      if (configurationCacheCompatibilityDataBuilder_ == null) {
        configurationCacheCompatibilityDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData, com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityData.Builder, com.google.wireless.android.sdk.stats.ConfigurationCacheCompatibilityDataOrBuilder>(
                getConfigurationCacheCompatibilityData(),
                getParentForChildren(),
                isClean());
        configurationCacheCompatibilityData_ = null;
      }
      return configurationCacheCompatibilityDataBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.BuildAttributionAnalyzersData)
  }

  // @@protoc_insertion_point(class_scope:android_studio.BuildAttributionAnalyzersData)
  private static final com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData();
  }

  public static com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<BuildAttributionAnalyzersData>
      PARSER = new com.google.protobuf.AbstractParser<BuildAttributionAnalyzersData>() {
    @java.lang.Override
    public BuildAttributionAnalyzersData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BuildAttributionAnalyzersData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BuildAttributionAnalyzersData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BuildAttributionAnalyzersData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.BuildAttributionAnalyzersData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

