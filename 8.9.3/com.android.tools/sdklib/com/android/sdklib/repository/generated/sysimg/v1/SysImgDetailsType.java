
package com.android.sdklib.repository.generated.sysimg.v1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import com.android.sdklib.repository.IdDisplay;
import com.android.sdklib.repository.generated.common.v1.ApiDetailsType;
import com.android.sdklib.repository.generated.common.v1.IdDisplayType;
import com.android.sdklib.repository.meta.DetailsTypes;


/**
 * DO NOT EDIT
 * This file was generated by xjc from sdk-sys-img-01.xsd. Any changes will be lost upon recompilation of the schema.
 * See the schema file for instructions on running xjc.
 * 
 * 
 *                 type-details subclass including system image-specific information:
 *                 - tag, specifying the device type (tablet, tv, wear, etc.)
 *                 - vendor, the vendor for this system image (android, google, etc.)
 *                 - abi, the architecture for this image (x86, armeabi-v7a, etc.)
 *             
 * 
 * <p>Java class for sysImgDetailsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="sysImgDetailsType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://schemas.android.com/sdk/android/repo/common/01}apiDetailsType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="tag" type="{http://schemas.android.com/sdk/android/repo/common/01}idDisplayType"/&gt;
 *         &lt;element name="vendor" type="{http://schemas.android.com/sdk/android/repo/common/01}idDisplayType" minOccurs="0"/&gt;
 *         &lt;element name="abi" type="{http://schemas.android.com/sdk/android/repo/sys-img2/01}abiType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "sysImgDetailsType", propOrder = {
    "tag",
    "vendor",
    "abi"
})
@SuppressWarnings({
    "override",
    "unchecked"
})
public class SysImgDetailsType
    extends ApiDetailsType
  implements DetailsTypes.SysImgDetailsType
{

    @XmlElement(required = true)
    protected IdDisplayType tag;
    protected IdDisplayType vendor;
    @XmlElement(required = true)
    protected String abi;

    /**
     * Gets the value of the tag property.
     * 
     * @return
     *     possible object is
     *     {@link IdDisplayType }
     *     
     */
    public IdDisplayType getTag() {
        return tag;
    }

    /**
     * Sets the value of the tag property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdDisplayType }
     *     
     */
    public void setTagInternal(IdDisplayType value) {
        this.tag = value;
    }

    /**
     * Gets the value of the vendor property.
     * 
     * @return
     *     possible object is
     *     {@link IdDisplayType }
     *     
     */
    public IdDisplayType getVendor() {
        return vendor;
    }

    /**
     * Sets the value of the vendor property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdDisplayType }
     *     
     */
    public void setVendorInternal(IdDisplayType value) {
        this.vendor = value;
    }

    /**
     * Gets the value of the abi property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAbi() {
        return abi;
    }

    /**
     * Sets the value of the abi property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAbi(String value) {
        this.abi = value;
    }

    public boolean isValidAbi(String value) {
        return ((value != null)&&(value.matches("^armeabi|armeabi-v7a|arm64-v8a|x86|x86_64|mips|mips64$")));
    }

    public void setTag(IdDisplay value) {
        setTagInternal(((IdDisplayType) value));
    }

    public void setVendor(IdDisplay value) {
        setVendorInternal(((IdDisplayType) value));
    }

    public ObjectFactory createFactory() {
        return new ObjectFactory();
    }

}
