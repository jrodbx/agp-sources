// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/icebox_plugin.proto

package com.android.tools.utp.plugins.host.icebox.proto;

public final class IceboxPluginProto {
  private IceboxPluginProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Compression formats for snapshot.
   * </pre>
   *
   * Protobuf enum {@code com.android.tools.utp.plugins.host.icebox.proto.Compression}
   */
  public enum Compression
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>TARGZ = 1;</code>
     */
    TARGZ(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>TARGZ = 1;</code>
     */
    public static final int TARGZ_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Compression valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Compression forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return TARGZ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Compression>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Compression> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Compression>() {
            public Compression findValueByNumber(int number) {
              return Compression.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Compression[] VALUES = values();

    public static Compression valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Compression(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.android.tools.utp.plugins.host.icebox.proto.Compression)
  }

  /**
   * <pre>
   * The behavior of the test driver.
   * </pre>
   *
   * Protobuf enum {@code com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy}
   */
  public enum IceboxSetupStrategy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>CONNECT_BEFORE_ALL_TEST = 1;</code>
     */
    CONNECT_BEFORE_ALL_TEST(1),
    /**
     * <code>RECONNECT_BETWEEN_TEST_CASES = 2;</code>
     */
    RECONNECT_BETWEEN_TEST_CASES(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>CONNECT_BEFORE_ALL_TEST = 1;</code>
     */
    public static final int CONNECT_BEFORE_ALL_TEST_VALUE = 1;
    /**
     * <code>RECONNECT_BETWEEN_TEST_CASES = 2;</code>
     */
    public static final int RECONNECT_BETWEEN_TEST_CASES_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IceboxSetupStrategy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IceboxSetupStrategy forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return CONNECT_BEFORE_ALL_TEST;
        case 2: return RECONNECT_BETWEEN_TEST_CASES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IceboxSetupStrategy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IceboxSetupStrategy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IceboxSetupStrategy>() {
            public IceboxSetupStrategy findValueByNumber(int number) {
              return IceboxSetupStrategy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final IceboxSetupStrategy[] VALUES = values();

    public static IceboxSetupStrategy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IceboxSetupStrategy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy)
  }

  public interface IceboxPluginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Test APP package name
     * </pre>
     *
     * <code>string app_package = 1;</code>
     * @return The appPackage.
     */
    java.lang.String getAppPackage();
    /**
     * <pre>
     * Test APP package name
     * </pre>
     *
     * <code>string app_package = 1;</code>
     * @return The bytes for appPackage.
     */
    com.google.protobuf.ByteString
        getAppPackageBytes();

    /**
     * <pre>
     * The emulator gRPC address
     * </pre>
     *
     * <code>string emulator_grpc_address = 2;</code>
     * @return The emulatorGrpcAddress.
     */
    java.lang.String getEmulatorGrpcAddress();
    /**
     * <pre>
     * The emulator gRPC address
     * </pre>
     *
     * <code>string emulator_grpc_address = 2;</code>
     * @return The bytes for emulatorGrpcAddress.
     */
    com.google.protobuf.ByteString
        getEmulatorGrpcAddressBytes();

    /**
     * <pre>
     * The emulator gRPC port
     * </pre>
     *
     * <code>int32 emulator_grpc_port = 3;</code>
     * @return The emulatorGrpcPort.
     */
    int getEmulatorGrpcPort();

    /**
     * <pre>
     * Set to true to skip taking snapshots.
     * </pre>
     *
     * <code>bool skip_snapshot = 4;</code>
     * @return The skipSnapshot.
     */
    boolean getSkipSnapshot();

    /**
     * <pre>
     * Maximum number of snapshots Icebox can take. Set skip_snapshot=false and
     * max_snapshot_number=0 for unlimited snapshots. Unused when
     * skip_snapshot=true.
     * </pre>
     *
     * <code>int32 max_snapshot_number = 5;</code>
     * @return The maxSnapshotNumber.
     */
    int getMaxSnapshotNumber();

    /**
     * <pre>
     * The Android Studio ddmlib port to send the disconnect process message.
     * </pre>
     *
     * <code>int32 android_studio_ddmlib_port = 6;</code>
     * @return The androidStudioDdmlibPort.
     */
    int getAndroidStudioDdmlibPort();

    /**
     * <pre>
     * Compress the icebox snapshot or not. The compression is slow.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
     * @return The enum numeric value on the wire for snapshotCompression.
     */
    int getSnapshotCompressionValue();
    /**
     * <pre>
     * Compress the icebox snapshot or not. The compression is slow.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
     * @return The snapshotCompression.
     */
    com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression getSnapshotCompression();

    /**
     * <pre>
     * The emulator gRPC token
     * </pre>
     *
     * <code>string emulator_grpc_token = 8;</code>
     * @return The emulatorGrpcToken.
     */
    java.lang.String getEmulatorGrpcToken();
    /**
     * <pre>
     * The emulator gRPC token
     * </pre>
     *
     * <code>string emulator_grpc_token = 8;</code>
     * @return The bytes for emulatorGrpcToken.
     */
    com.google.protobuf.ByteString
        getEmulatorGrpcTokenBytes();

    /**
     * <pre>
     * The behavior of the test driver.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
     * @return The enum numeric value on the wire for setupStrategy.
     */
    int getSetupStrategyValue();
    /**
     * <pre>
     * The behavior of the test driver.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
     * @return The setupStrategy.
     */
    com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy getSetupStrategy();
  }
  /**
   * <pre>
   * Sets the following icebox args on the device. The args will be read by icebox
   * plogin. It tells icebox which package to track, as well as the emulator grpc
   * address/port.
   * </pre>
   *
   * Protobuf type {@code com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin}
   */
  public static final class IceboxPlugin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin)
      IceboxPluginOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IceboxPlugin.newBuilder() to construct.
    private IceboxPlugin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IceboxPlugin() {
      appPackage_ = "";
      emulatorGrpcAddress_ = "";
      snapshotCompression_ = 0;
      emulatorGrpcToken_ = "";
      setupStrategy_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IceboxPlugin();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.class, com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.Builder.class);
    }

    public static final int APP_PACKAGE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object appPackage_ = "";
    /**
     * <pre>
     * Test APP package name
     * </pre>
     *
     * <code>string app_package = 1;</code>
     * @return The appPackage.
     */
    @java.lang.Override
    public java.lang.String getAppPackage() {
      java.lang.Object ref = appPackage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        appPackage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Test APP package name
     * </pre>
     *
     * <code>string app_package = 1;</code>
     * @return The bytes for appPackage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAppPackageBytes() {
      java.lang.Object ref = appPackage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appPackage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMULATOR_GRPC_ADDRESS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object emulatorGrpcAddress_ = "";
    /**
     * <pre>
     * The emulator gRPC address
     * </pre>
     *
     * <code>string emulator_grpc_address = 2;</code>
     * @return The emulatorGrpcAddress.
     */
    @java.lang.Override
    public java.lang.String getEmulatorGrpcAddress() {
      java.lang.Object ref = emulatorGrpcAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        emulatorGrpcAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The emulator gRPC address
     * </pre>
     *
     * <code>string emulator_grpc_address = 2;</code>
     * @return The bytes for emulatorGrpcAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEmulatorGrpcAddressBytes() {
      java.lang.Object ref = emulatorGrpcAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        emulatorGrpcAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMULATOR_GRPC_PORT_FIELD_NUMBER = 3;
    private int emulatorGrpcPort_ = 0;
    /**
     * <pre>
     * The emulator gRPC port
     * </pre>
     *
     * <code>int32 emulator_grpc_port = 3;</code>
     * @return The emulatorGrpcPort.
     */
    @java.lang.Override
    public int getEmulatorGrpcPort() {
      return emulatorGrpcPort_;
    }

    public static final int SKIP_SNAPSHOT_FIELD_NUMBER = 4;
    private boolean skipSnapshot_ = false;
    /**
     * <pre>
     * Set to true to skip taking snapshots.
     * </pre>
     *
     * <code>bool skip_snapshot = 4;</code>
     * @return The skipSnapshot.
     */
    @java.lang.Override
    public boolean getSkipSnapshot() {
      return skipSnapshot_;
    }

    public static final int MAX_SNAPSHOT_NUMBER_FIELD_NUMBER = 5;
    private int maxSnapshotNumber_ = 0;
    /**
     * <pre>
     * Maximum number of snapshots Icebox can take. Set skip_snapshot=false and
     * max_snapshot_number=0 for unlimited snapshots. Unused when
     * skip_snapshot=true.
     * </pre>
     *
     * <code>int32 max_snapshot_number = 5;</code>
     * @return The maxSnapshotNumber.
     */
    @java.lang.Override
    public int getMaxSnapshotNumber() {
      return maxSnapshotNumber_;
    }

    public static final int ANDROID_STUDIO_DDMLIB_PORT_FIELD_NUMBER = 6;
    private int androidStudioDdmlibPort_ = 0;
    /**
     * <pre>
     * The Android Studio ddmlib port to send the disconnect process message.
     * </pre>
     *
     * <code>int32 android_studio_ddmlib_port = 6;</code>
     * @return The androidStudioDdmlibPort.
     */
    @java.lang.Override
    public int getAndroidStudioDdmlibPort() {
      return androidStudioDdmlibPort_;
    }

    public static final int SNAPSHOT_COMPRESSION_FIELD_NUMBER = 7;
    private int snapshotCompression_ = 0;
    /**
     * <pre>
     * Compress the icebox snapshot or not. The compression is slow.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
     * @return The enum numeric value on the wire for snapshotCompression.
     */
    @java.lang.Override public int getSnapshotCompressionValue() {
      return snapshotCompression_;
    }
    /**
     * <pre>
     * Compress the icebox snapshot or not. The compression is slow.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
     * @return The snapshotCompression.
     */
    @java.lang.Override public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression getSnapshotCompression() {
      com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression result = com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression.forNumber(snapshotCompression_);
      return result == null ? com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression.UNRECOGNIZED : result;
    }

    public static final int EMULATOR_GRPC_TOKEN_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object emulatorGrpcToken_ = "";
    /**
     * <pre>
     * The emulator gRPC token
     * </pre>
     *
     * <code>string emulator_grpc_token = 8;</code>
     * @return The emulatorGrpcToken.
     */
    @java.lang.Override
    public java.lang.String getEmulatorGrpcToken() {
      java.lang.Object ref = emulatorGrpcToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        emulatorGrpcToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The emulator gRPC token
     * </pre>
     *
     * <code>string emulator_grpc_token = 8;</code>
     * @return The bytes for emulatorGrpcToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEmulatorGrpcTokenBytes() {
      java.lang.Object ref = emulatorGrpcToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        emulatorGrpcToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SETUP_STRATEGY_FIELD_NUMBER = 9;
    private int setupStrategy_ = 0;
    /**
     * <pre>
     * The behavior of the test driver.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
     * @return The enum numeric value on the wire for setupStrategy.
     */
    @java.lang.Override public int getSetupStrategyValue() {
      return setupStrategy_;
    }
    /**
     * <pre>
     * The behavior of the test driver.
     * </pre>
     *
     * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
     * @return The setupStrategy.
     */
    @java.lang.Override public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy getSetupStrategy() {
      com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy result = com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy.forNumber(setupStrategy_);
      return result == null ? com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appPackage_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, appPackage_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emulatorGrpcAddress_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, emulatorGrpcAddress_);
      }
      if (emulatorGrpcPort_ != 0) {
        output.writeInt32(3, emulatorGrpcPort_);
      }
      if (skipSnapshot_ != false) {
        output.writeBool(4, skipSnapshot_);
      }
      if (maxSnapshotNumber_ != 0) {
        output.writeInt32(5, maxSnapshotNumber_);
      }
      if (androidStudioDdmlibPort_ != 0) {
        output.writeInt32(6, androidStudioDdmlibPort_);
      }
      if (snapshotCompression_ != com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression.NONE.getNumber()) {
        output.writeEnum(7, snapshotCompression_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emulatorGrpcToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, emulatorGrpcToken_);
      }
      if (setupStrategy_ != com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy.UNSPECIFIED.getNumber()) {
        output.writeEnum(9, setupStrategy_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appPackage_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, appPackage_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emulatorGrpcAddress_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, emulatorGrpcAddress_);
      }
      if (emulatorGrpcPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, emulatorGrpcPort_);
      }
      if (skipSnapshot_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, skipSnapshot_);
      }
      if (maxSnapshotNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxSnapshotNumber_);
      }
      if (androidStudioDdmlibPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, androidStudioDdmlibPort_);
      }
      if (snapshotCompression_ != com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, snapshotCompression_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emulatorGrpcToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, emulatorGrpcToken_);
      }
      if (setupStrategy_ != com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, setupStrategy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin)) {
        return super.equals(obj);
      }
      com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin other = (com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin) obj;

      if (!getAppPackage()
          .equals(other.getAppPackage())) return false;
      if (!getEmulatorGrpcAddress()
          .equals(other.getEmulatorGrpcAddress())) return false;
      if (getEmulatorGrpcPort()
          != other.getEmulatorGrpcPort()) return false;
      if (getSkipSnapshot()
          != other.getSkipSnapshot()) return false;
      if (getMaxSnapshotNumber()
          != other.getMaxSnapshotNumber()) return false;
      if (getAndroidStudioDdmlibPort()
          != other.getAndroidStudioDdmlibPort()) return false;
      if (snapshotCompression_ != other.snapshotCompression_) return false;
      if (!getEmulatorGrpcToken()
          .equals(other.getEmulatorGrpcToken())) return false;
      if (setupStrategy_ != other.setupStrategy_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + APP_PACKAGE_FIELD_NUMBER;
      hash = (53 * hash) + getAppPackage().hashCode();
      hash = (37 * hash) + EMULATOR_GRPC_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getEmulatorGrpcAddress().hashCode();
      hash = (37 * hash) + EMULATOR_GRPC_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getEmulatorGrpcPort();
      hash = (37 * hash) + SKIP_SNAPSHOT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSkipSnapshot());
      hash = (37 * hash) + MAX_SNAPSHOT_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSnapshotNumber();
      hash = (37 * hash) + ANDROID_STUDIO_DDMLIB_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getAndroidStudioDdmlibPort();
      hash = (37 * hash) + SNAPSHOT_COMPRESSION_FIELD_NUMBER;
      hash = (53 * hash) + snapshotCompression_;
      hash = (37 * hash) + EMULATOR_GRPC_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getEmulatorGrpcToken().hashCode();
      hash = (37 * hash) + SETUP_STRATEGY_FIELD_NUMBER;
      hash = (53 * hash) + setupStrategy_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Sets the following icebox args on the device. The args will be read by icebox
     * plogin. It tells icebox which package to track, as well as the emulator grpc
     * address/port.
     * </pre>
     *
     * Protobuf type {@code com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin)
        com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPluginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.class, com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.Builder.class);
      }

      // Construct using com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        appPackage_ = "";
        emulatorGrpcAddress_ = "";
        emulatorGrpcPort_ = 0;
        skipSnapshot_ = false;
        maxSnapshotNumber_ = 0;
        androidStudioDdmlibPort_ = 0;
        snapshotCompression_ = 0;
        emulatorGrpcToken_ = "";
        setupStrategy_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_descriptor;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin getDefaultInstanceForType() {
        return com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin build() {
        com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin buildPartial() {
        com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin result = new com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appPackage_ = appPackage_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.emulatorGrpcAddress_ = emulatorGrpcAddress_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.emulatorGrpcPort_ = emulatorGrpcPort_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.skipSnapshot_ = skipSnapshot_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.maxSnapshotNumber_ = maxSnapshotNumber_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.androidStudioDdmlibPort_ = androidStudioDdmlibPort_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.snapshotCompression_ = snapshotCompression_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.emulatorGrpcToken_ = emulatorGrpcToken_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.setupStrategy_ = setupStrategy_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin) {
          return mergeFrom((com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin other) {
        if (other == com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin.getDefaultInstance()) return this;
        if (!other.getAppPackage().isEmpty()) {
          appPackage_ = other.appPackage_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getEmulatorGrpcAddress().isEmpty()) {
          emulatorGrpcAddress_ = other.emulatorGrpcAddress_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getEmulatorGrpcPort() != 0) {
          setEmulatorGrpcPort(other.getEmulatorGrpcPort());
        }
        if (other.getSkipSnapshot() != false) {
          setSkipSnapshot(other.getSkipSnapshot());
        }
        if (other.getMaxSnapshotNumber() != 0) {
          setMaxSnapshotNumber(other.getMaxSnapshotNumber());
        }
        if (other.getAndroidStudioDdmlibPort() != 0) {
          setAndroidStudioDdmlibPort(other.getAndroidStudioDdmlibPort());
        }
        if (other.snapshotCompression_ != 0) {
          setSnapshotCompressionValue(other.getSnapshotCompressionValue());
        }
        if (!other.getEmulatorGrpcToken().isEmpty()) {
          emulatorGrpcToken_ = other.emulatorGrpcToken_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (other.setupStrategy_ != 0) {
          setSetupStrategyValue(other.getSetupStrategyValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                appPackage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                emulatorGrpcAddress_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                emulatorGrpcPort_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                skipSnapshot_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                maxSnapshotNumber_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                androidStudioDdmlibPort_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                snapshotCompression_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 66: {
                emulatorGrpcToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 72: {
                setupStrategy_ = input.readEnum();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object appPackage_ = "";
      /**
       * <pre>
       * Test APP package name
       * </pre>
       *
       * <code>string app_package = 1;</code>
       * @return The appPackage.
       */
      public java.lang.String getAppPackage() {
        java.lang.Object ref = appPackage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          appPackage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Test APP package name
       * </pre>
       *
       * <code>string app_package = 1;</code>
       * @return The bytes for appPackage.
       */
      public com.google.protobuf.ByteString
          getAppPackageBytes() {
        java.lang.Object ref = appPackage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appPackage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Test APP package name
       * </pre>
       *
       * <code>string app_package = 1;</code>
       * @param value The appPackage to set.
       * @return This builder for chaining.
       */
      public Builder setAppPackage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        appPackage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Test APP package name
       * </pre>
       *
       * <code>string app_package = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppPackage() {
        appPackage_ = getDefaultInstance().getAppPackage();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Test APP package name
       * </pre>
       *
       * <code>string app_package = 1;</code>
       * @param value The bytes for appPackage to set.
       * @return This builder for chaining.
       */
      public Builder setAppPackageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        appPackage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object emulatorGrpcAddress_ = "";
      /**
       * <pre>
       * The emulator gRPC address
       * </pre>
       *
       * <code>string emulator_grpc_address = 2;</code>
       * @return The emulatorGrpcAddress.
       */
      public java.lang.String getEmulatorGrpcAddress() {
        java.lang.Object ref = emulatorGrpcAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          emulatorGrpcAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The emulator gRPC address
       * </pre>
       *
       * <code>string emulator_grpc_address = 2;</code>
       * @return The bytes for emulatorGrpcAddress.
       */
      public com.google.protobuf.ByteString
          getEmulatorGrpcAddressBytes() {
        java.lang.Object ref = emulatorGrpcAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          emulatorGrpcAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The emulator gRPC address
       * </pre>
       *
       * <code>string emulator_grpc_address = 2;</code>
       * @param value The emulatorGrpcAddress to set.
       * @return This builder for chaining.
       */
      public Builder setEmulatorGrpcAddress(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        emulatorGrpcAddress_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The emulator gRPC address
       * </pre>
       *
       * <code>string emulator_grpc_address = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmulatorGrpcAddress() {
        emulatorGrpcAddress_ = getDefaultInstance().getEmulatorGrpcAddress();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The emulator gRPC address
       * </pre>
       *
       * <code>string emulator_grpc_address = 2;</code>
       * @param value The bytes for emulatorGrpcAddress to set.
       * @return This builder for chaining.
       */
      public Builder setEmulatorGrpcAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        emulatorGrpcAddress_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int emulatorGrpcPort_ ;
      /**
       * <pre>
       * The emulator gRPC port
       * </pre>
       *
       * <code>int32 emulator_grpc_port = 3;</code>
       * @return The emulatorGrpcPort.
       */
      @java.lang.Override
      public int getEmulatorGrpcPort() {
        return emulatorGrpcPort_;
      }
      /**
       * <pre>
       * The emulator gRPC port
       * </pre>
       *
       * <code>int32 emulator_grpc_port = 3;</code>
       * @param value The emulatorGrpcPort to set.
       * @return This builder for chaining.
       */
      public Builder setEmulatorGrpcPort(int value) {

        emulatorGrpcPort_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The emulator gRPC port
       * </pre>
       *
       * <code>int32 emulator_grpc_port = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmulatorGrpcPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        emulatorGrpcPort_ = 0;
        onChanged();
        return this;
      }

      private boolean skipSnapshot_ ;
      /**
       * <pre>
       * Set to true to skip taking snapshots.
       * </pre>
       *
       * <code>bool skip_snapshot = 4;</code>
       * @return The skipSnapshot.
       */
      @java.lang.Override
      public boolean getSkipSnapshot() {
        return skipSnapshot_;
      }
      /**
       * <pre>
       * Set to true to skip taking snapshots.
       * </pre>
       *
       * <code>bool skip_snapshot = 4;</code>
       * @param value The skipSnapshot to set.
       * @return This builder for chaining.
       */
      public Builder setSkipSnapshot(boolean value) {

        skipSnapshot_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true to skip taking snapshots.
       * </pre>
       *
       * <code>bool skip_snapshot = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkipSnapshot() {
        bitField0_ = (bitField0_ & ~0x00000008);
        skipSnapshot_ = false;
        onChanged();
        return this;
      }

      private int maxSnapshotNumber_ ;
      /**
       * <pre>
       * Maximum number of snapshots Icebox can take. Set skip_snapshot=false and
       * max_snapshot_number=0 for unlimited snapshots. Unused when
       * skip_snapshot=true.
       * </pre>
       *
       * <code>int32 max_snapshot_number = 5;</code>
       * @return The maxSnapshotNumber.
       */
      @java.lang.Override
      public int getMaxSnapshotNumber() {
        return maxSnapshotNumber_;
      }
      /**
       * <pre>
       * Maximum number of snapshots Icebox can take. Set skip_snapshot=false and
       * max_snapshot_number=0 for unlimited snapshots. Unused when
       * skip_snapshot=true.
       * </pre>
       *
       * <code>int32 max_snapshot_number = 5;</code>
       * @param value The maxSnapshotNumber to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSnapshotNumber(int value) {

        maxSnapshotNumber_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of snapshots Icebox can take. Set skip_snapshot=false and
       * max_snapshot_number=0 for unlimited snapshots. Unused when
       * skip_snapshot=true.
       * </pre>
       *
       * <code>int32 max_snapshot_number = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSnapshotNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxSnapshotNumber_ = 0;
        onChanged();
        return this;
      }

      private int androidStudioDdmlibPort_ ;
      /**
       * <pre>
       * The Android Studio ddmlib port to send the disconnect process message.
       * </pre>
       *
       * <code>int32 android_studio_ddmlib_port = 6;</code>
       * @return The androidStudioDdmlibPort.
       */
      @java.lang.Override
      public int getAndroidStudioDdmlibPort() {
        return androidStudioDdmlibPort_;
      }
      /**
       * <pre>
       * The Android Studio ddmlib port to send the disconnect process message.
       * </pre>
       *
       * <code>int32 android_studio_ddmlib_port = 6;</code>
       * @param value The androidStudioDdmlibPort to set.
       * @return This builder for chaining.
       */
      public Builder setAndroidStudioDdmlibPort(int value) {

        androidStudioDdmlibPort_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Android Studio ddmlib port to send the disconnect process message.
       * </pre>
       *
       * <code>int32 android_studio_ddmlib_port = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAndroidStudioDdmlibPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        androidStudioDdmlibPort_ = 0;
        onChanged();
        return this;
      }

      private int snapshotCompression_ = 0;
      /**
       * <pre>
       * Compress the icebox snapshot or not. The compression is slow.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
       * @return The enum numeric value on the wire for snapshotCompression.
       */
      @java.lang.Override public int getSnapshotCompressionValue() {
        return snapshotCompression_;
      }
      /**
       * <pre>
       * Compress the icebox snapshot or not. The compression is slow.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
       * @param value The enum numeric value on the wire for snapshotCompression to set.
       * @return This builder for chaining.
       */
      public Builder setSnapshotCompressionValue(int value) {
        snapshotCompression_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Compress the icebox snapshot or not. The compression is slow.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
       * @return The snapshotCompression.
       */
      @java.lang.Override
      public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression getSnapshotCompression() {
        com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression result = com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression.forNumber(snapshotCompression_);
        return result == null ? com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Compress the icebox snapshot or not. The compression is slow.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
       * @param value The snapshotCompression to set.
       * @return This builder for chaining.
       */
      public Builder setSnapshotCompression(com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.Compression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        snapshotCompression_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Compress the icebox snapshot or not. The compression is slow.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.Compression snapshot_compression = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnapshotCompression() {
        bitField0_ = (bitField0_ & ~0x00000040);
        snapshotCompression_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object emulatorGrpcToken_ = "";
      /**
       * <pre>
       * The emulator gRPC token
       * </pre>
       *
       * <code>string emulator_grpc_token = 8;</code>
       * @return The emulatorGrpcToken.
       */
      public java.lang.String getEmulatorGrpcToken() {
        java.lang.Object ref = emulatorGrpcToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          emulatorGrpcToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The emulator gRPC token
       * </pre>
       *
       * <code>string emulator_grpc_token = 8;</code>
       * @return The bytes for emulatorGrpcToken.
       */
      public com.google.protobuf.ByteString
          getEmulatorGrpcTokenBytes() {
        java.lang.Object ref = emulatorGrpcToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          emulatorGrpcToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The emulator gRPC token
       * </pre>
       *
       * <code>string emulator_grpc_token = 8;</code>
       * @param value The emulatorGrpcToken to set.
       * @return This builder for chaining.
       */
      public Builder setEmulatorGrpcToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        emulatorGrpcToken_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The emulator gRPC token
       * </pre>
       *
       * <code>string emulator_grpc_token = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmulatorGrpcToken() {
        emulatorGrpcToken_ = getDefaultInstance().getEmulatorGrpcToken();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The emulator gRPC token
       * </pre>
       *
       * <code>string emulator_grpc_token = 8;</code>
       * @param value The bytes for emulatorGrpcToken to set.
       * @return This builder for chaining.
       */
      public Builder setEmulatorGrpcTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        emulatorGrpcToken_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private int setupStrategy_ = 0;
      /**
       * <pre>
       * The behavior of the test driver.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
       * @return The enum numeric value on the wire for setupStrategy.
       */
      @java.lang.Override public int getSetupStrategyValue() {
        return setupStrategy_;
      }
      /**
       * <pre>
       * The behavior of the test driver.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
       * @param value The enum numeric value on the wire for setupStrategy to set.
       * @return This builder for chaining.
       */
      public Builder setSetupStrategyValue(int value) {
        setupStrategy_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The behavior of the test driver.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
       * @return The setupStrategy.
       */
      @java.lang.Override
      public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy getSetupStrategy() {
        com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy result = com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy.forNumber(setupStrategy_);
        return result == null ? com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The behavior of the test driver.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
       * @param value The setupStrategy to set.
       * @return This builder for chaining.
       */
      public Builder setSetupStrategy(com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxSetupStrategy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        setupStrategy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The behavior of the test driver.
       * </pre>
       *
       * <code>.com.android.tools.utp.plugins.host.icebox.proto.IceboxSetupStrategy setup_strategy = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSetupStrategy() {
        bitField0_ = (bitField0_ & ~0x00000100);
        setupStrategy_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin)
    }

    // @@protoc_insertion_point(class_scope:com.android.tools.utp.plugins.host.icebox.proto.IceboxPlugin)
    private static final com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin();
    }

    public static com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IceboxPlugin>
        PARSER = new com.google.protobuf.AbstractParser<IceboxPlugin>() {
      @java.lang.Override
      public IceboxPlugin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IceboxPlugin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IceboxPlugin> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.tools.utp.plugins.host.icebox.proto.IceboxPluginProto.IceboxPlugin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"src/main/proto/icebox_plugin.proto\022/co" +
      "m.android.tools.utp.plugins.host.icebox." +
      "proto\"\215\003\n\014IceboxPlugin\022\023\n\013app_package\030\001 " +
      "\001(\t\022\035\n\025emulator_grpc_address\030\002 \001(\t\022\032\n\022em" +
      "ulator_grpc_port\030\003 \001(\005\022\025\n\rskip_snapshot\030" +
      "\004 \001(\010\022\033\n\023max_snapshot_number\030\005 \001(\005\022\"\n\032an" +
      "droid_studio_ddmlib_port\030\006 \001(\005\022Z\n\024snapsh" +
      "ot_compression\030\007 \001(\0162<.com.android.tools" +
      ".utp.plugins.host.icebox.proto.Compressi" +
      "on\022\033\n\023emulator_grpc_token\030\010 \001(\t\022\\\n\016setup" +
      "_strategy\030\t \001(\0162D.com.android.tools.utp." +
      "plugins.host.icebox.proto.IceboxSetupStr" +
      "ategy*\"\n\013Compression\022\010\n\004NONE\020\000\022\t\n\005TARGZ\020" +
      "\001*e\n\023IceboxSetupStrategy\022\017\n\013UNSPECIFIED\020" +
      "\000\022\033\n\027CONNECT_BEFORE_ALL_TEST\020\001\022 \n\034RECONN" +
      "ECT_BETWEEN_TEST_CASES\020\002BD\n/com.android." +
      "tools.utp.plugins.host.icebox.protoB\021Ice" +
      "boxPluginProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_tools_utp_plugins_host_icebox_proto_IceboxPlugin_descriptor,
        new java.lang.String[] { "AppPackage", "EmulatorGrpcAddress", "EmulatorGrpcPort", "SkipSnapshot", "MaxSnapshotNumber", "AndroidStudioDdmlibPort", "SnapshotCompression", "EmulatorGrpcToken", "SetupStrategy", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
