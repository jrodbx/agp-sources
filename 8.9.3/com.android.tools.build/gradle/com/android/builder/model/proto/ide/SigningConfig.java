// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ide_models.proto

package com.android.builder.model.proto.ide;

/**
 * Protobuf type {@code SigningConfig}
 */
public final class SigningConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:SigningConfig)
    SigningConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SigningConfig.newBuilder() to construct.
  private SigningConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SigningConfig() {
    name_ = "";
    storePassword_ = "";
    keyAlias_ = "";
    keyPassword_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SigningConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_SigningConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_SigningConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.android.builder.model.proto.ide.SigningConfig.class, com.android.builder.model.proto.ide.SigningConfig.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * Returns the name of the Signing config
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Returns the name of the Signing config
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Returns the name of the Signing config
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STORE_FILE_FIELD_NUMBER = 2;
  private com.android.builder.model.proto.ide.File storeFile_;
  /**
   * <pre>
   * The keystore file.
   * </pre>
   *
   * <code>optional .File store_file = 2;</code>
   * @return Whether the storeFile field is set.
   */
  @java.lang.Override
  public boolean hasStoreFile() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The keystore file.
   * </pre>
   *
   * <code>optional .File store_file = 2;</code>
   * @return The storeFile.
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getStoreFile() {
    return storeFile_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : storeFile_;
  }
  /**
   * <pre>
   * The keystore file.
   * </pre>
   *
   * <code>optional .File store_file = 2;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getStoreFileOrBuilder() {
    return storeFile_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : storeFile_;
  }

  public static final int STORE_PASSWORD_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object storePassword_ = "";
  /**
   * <pre>
   * The keystore password.
   * </pre>
   *
   * <code>optional string store_password = 3;</code>
   * @return Whether the storePassword field is set.
   */
  @java.lang.Override
  public boolean hasStorePassword() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The keystore password.
   * </pre>
   *
   * <code>optional string store_password = 3;</code>
   * @return The storePassword.
   */
  @java.lang.Override
  public java.lang.String getStorePassword() {
    java.lang.Object ref = storePassword_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      storePassword_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The keystore password.
   * </pre>
   *
   * <code>optional string store_password = 3;</code>
   * @return The bytes for storePassword.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStorePasswordBytes() {
    java.lang.Object ref = storePassword_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      storePassword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEY_ALIAS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object keyAlias_ = "";
  /**
   * <pre>
   * The key alias name.
   * </pre>
   *
   * <code>optional string key_alias = 4;</code>
   * @return Whether the keyAlias field is set.
   */
  @java.lang.Override
  public boolean hasKeyAlias() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The key alias name.
   * </pre>
   *
   * <code>optional string key_alias = 4;</code>
   * @return The keyAlias.
   */
  @java.lang.Override
  public java.lang.String getKeyAlias() {
    java.lang.Object ref = keyAlias_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyAlias_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The key alias name.
   * </pre>
   *
   * <code>optional string key_alias = 4;</code>
   * @return The bytes for keyAlias.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyAliasBytes() {
    java.lang.Object ref = keyAlias_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyAlias_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEY_PASSWORD_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object keyPassword_ = "";
  /**
   * <pre>
   * The key password.
   * </pre>
   *
   * <code>optional string key_password = 5;</code>
   * @return Whether the keyPassword field is set.
   */
  @java.lang.Override
  public boolean hasKeyPassword() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The key password.
   * </pre>
   *
   * <code>optional string key_password = 5;</code>
   * @return The keyPassword.
   */
  @java.lang.Override
  public java.lang.String getKeyPassword() {
    java.lang.Object ref = keyPassword_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyPassword_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The key password.
   * </pre>
   *
   * <code>optional string key_password = 5;</code>
   * @return The bytes for keyPassword.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyPasswordBytes() {
    java.lang.Object ref = keyPassword_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyPassword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENABLE_V1_SIGNING_FIELD_NUMBER = 6;
  private boolean enableV1Signing_ = false;
  /**
   * <pre>
   * Signing using JAR Signature Scheme (aka v1 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v1_signing = 6;</code>
   * @return Whether the enableV1Signing field is set.
   */
  @java.lang.Override
  public boolean hasEnableV1Signing() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Signing using JAR Signature Scheme (aka v1 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v1_signing = 6;</code>
   * @return The enableV1Signing.
   */
  @java.lang.Override
  public boolean getEnableV1Signing() {
    return enableV1Signing_;
  }

  public static final int ENABLE_V2_SIGNING_FIELD_NUMBER = 7;
  private boolean enableV2Signing_ = false;
  /**
   * <pre>
   * Signing using APK Signature Scheme v2 (aka v2 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v2_signing = 7;</code>
   * @return Whether the enableV2Signing field is set.
   */
  @java.lang.Override
  public boolean hasEnableV2Signing() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Signing using APK Signature Scheme v2 (aka v2 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v2_signing = 7;</code>
   * @return The enableV2Signing.
   */
  @java.lang.Override
  public boolean getEnableV2Signing() {
    return enableV2Signing_;
  }

  public static final int ENABLE_V3_SIGNING_FIELD_NUMBER = 8;
  private boolean enableV3Signing_ = false;
  /**
   * <pre>
   * Signing using JAR Signature Scheme v3 (aka v3 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v3_signing = 8;</code>
   * @return Whether the enableV3Signing field is set.
   */
  @java.lang.Override
  public boolean hasEnableV3Signing() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Signing using JAR Signature Scheme v3 (aka v3 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v3_signing = 8;</code>
   * @return The enableV3Signing.
   */
  @java.lang.Override
  public boolean getEnableV3Signing() {
    return enableV3Signing_;
  }

  public static final int ENABLE_V4_SIGNING_FIELD_NUMBER = 9;
  private boolean enableV4Signing_ = false;
  /**
   * <pre>
   * Signing using JAR Signature Scheme v4 (aka v4 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v4_signing = 9;</code>
   * @return Whether the enableV4Signing field is set.
   */
  @java.lang.Override
  public boolean hasEnableV4Signing() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Signing using JAR Signature Scheme v4 (aka v4 scheme) is enabled.
   * </pre>
   *
   * <code>optional bool enable_v4_signing = 9;</code>
   * @return The enableV4Signing.
   */
  @java.lang.Override
  public boolean getEnableV4Signing() {
    return enableV4Signing_;
  }

  public static final int IS_SIGNING_READY_FIELD_NUMBER = 10;
  private boolean isSigningReady_ = false;
  /**
   * <pre>
   * Whether the config is fully configured for signing.
   * i.e. all the required information are present.
   * </pre>
   *
   * <code>bool is_signing_ready = 10;</code>
   * @return The isSigningReady.
   */
  @java.lang.Override
  public boolean getIsSigningReady() {
    return isSigningReady_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getStoreFile());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, storePassword_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, keyAlias_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, keyPassword_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeBool(6, enableV1Signing_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeBool(7, enableV2Signing_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(8, enableV3Signing_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeBool(9, enableV4Signing_);
    }
    if (isSigningReady_ != false) {
      output.writeBool(10, isSigningReady_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getStoreFile());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, storePassword_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, keyAlias_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, keyPassword_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, enableV1Signing_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, enableV2Signing_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, enableV3Signing_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, enableV4Signing_);
    }
    if (isSigningReady_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, isSigningReady_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.android.builder.model.proto.ide.SigningConfig)) {
      return super.equals(obj);
    }
    com.android.builder.model.proto.ide.SigningConfig other = (com.android.builder.model.proto.ide.SigningConfig) obj;

    if (hasName() != other.hasName()) return false;
    if (hasName()) {
      if (!getName()
          .equals(other.getName())) return false;
    }
    if (hasStoreFile() != other.hasStoreFile()) return false;
    if (hasStoreFile()) {
      if (!getStoreFile()
          .equals(other.getStoreFile())) return false;
    }
    if (hasStorePassword() != other.hasStorePassword()) return false;
    if (hasStorePassword()) {
      if (!getStorePassword()
          .equals(other.getStorePassword())) return false;
    }
    if (hasKeyAlias() != other.hasKeyAlias()) return false;
    if (hasKeyAlias()) {
      if (!getKeyAlias()
          .equals(other.getKeyAlias())) return false;
    }
    if (hasKeyPassword() != other.hasKeyPassword()) return false;
    if (hasKeyPassword()) {
      if (!getKeyPassword()
          .equals(other.getKeyPassword())) return false;
    }
    if (hasEnableV1Signing() != other.hasEnableV1Signing()) return false;
    if (hasEnableV1Signing()) {
      if (getEnableV1Signing()
          != other.getEnableV1Signing()) return false;
    }
    if (hasEnableV2Signing() != other.hasEnableV2Signing()) return false;
    if (hasEnableV2Signing()) {
      if (getEnableV2Signing()
          != other.getEnableV2Signing()) return false;
    }
    if (hasEnableV3Signing() != other.hasEnableV3Signing()) return false;
    if (hasEnableV3Signing()) {
      if (getEnableV3Signing()
          != other.getEnableV3Signing()) return false;
    }
    if (hasEnableV4Signing() != other.hasEnableV4Signing()) return false;
    if (hasEnableV4Signing()) {
      if (getEnableV4Signing()
          != other.getEnableV4Signing()) return false;
    }
    if (getIsSigningReady()
        != other.getIsSigningReady()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (hasStoreFile()) {
      hash = (37 * hash) + STORE_FILE_FIELD_NUMBER;
      hash = (53 * hash) + getStoreFile().hashCode();
    }
    if (hasStorePassword()) {
      hash = (37 * hash) + STORE_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getStorePassword().hashCode();
    }
    if (hasKeyAlias()) {
      hash = (37 * hash) + KEY_ALIAS_FIELD_NUMBER;
      hash = (53 * hash) + getKeyAlias().hashCode();
    }
    if (hasKeyPassword()) {
      hash = (37 * hash) + KEY_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getKeyPassword().hashCode();
    }
    if (hasEnableV1Signing()) {
      hash = (37 * hash) + ENABLE_V1_SIGNING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableV1Signing());
    }
    if (hasEnableV2Signing()) {
      hash = (37 * hash) + ENABLE_V2_SIGNING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableV2Signing());
    }
    if (hasEnableV3Signing()) {
      hash = (37 * hash) + ENABLE_V3_SIGNING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableV3Signing());
    }
    if (hasEnableV4Signing()) {
      hash = (37 * hash) + ENABLE_V4_SIGNING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableV4Signing());
    }
    hash = (37 * hash) + IS_SIGNING_READY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsSigningReady());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.builder.model.proto.ide.SigningConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.android.builder.model.proto.ide.SigningConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code SigningConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SigningConfig)
      com.android.builder.model.proto.ide.SigningConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_SigningConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_SigningConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.builder.model.proto.ide.SigningConfig.class, com.android.builder.model.proto.ide.SigningConfig.Builder.class);
    }

    // Construct using com.android.builder.model.proto.ide.SigningConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getStoreFileFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      storeFile_ = null;
      if (storeFileBuilder_ != null) {
        storeFileBuilder_.dispose();
        storeFileBuilder_ = null;
      }
      storePassword_ = "";
      keyAlias_ = "";
      keyPassword_ = "";
      enableV1Signing_ = false;
      enableV2Signing_ = false;
      enableV3Signing_ = false;
      enableV4Signing_ = false;
      isSigningReady_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_SigningConfig_descriptor;
    }

    @java.lang.Override
    public com.android.builder.model.proto.ide.SigningConfig getDefaultInstanceForType() {
      return com.android.builder.model.proto.ide.SigningConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.android.builder.model.proto.ide.SigningConfig build() {
      com.android.builder.model.proto.ide.SigningConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.android.builder.model.proto.ide.SigningConfig buildPartial() {
      com.android.builder.model.proto.ide.SigningConfig result = new com.android.builder.model.proto.ide.SigningConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.android.builder.model.proto.ide.SigningConfig result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.storeFile_ = storeFileBuilder_ == null
            ? storeFile_
            : storeFileBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.storePassword_ = storePassword_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.keyAlias_ = keyAlias_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.keyPassword_ = keyPassword_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.enableV1Signing_ = enableV1Signing_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.enableV2Signing_ = enableV2Signing_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.enableV3Signing_ = enableV3Signing_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.enableV4Signing_ = enableV4Signing_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.isSigningReady_ = isSigningReady_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.android.builder.model.proto.ide.SigningConfig) {
        return mergeFrom((com.android.builder.model.proto.ide.SigningConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.android.builder.model.proto.ide.SigningConfig other) {
      if (other == com.android.builder.model.proto.ide.SigningConfig.getDefaultInstance()) return this;
      if (other.hasName()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasStoreFile()) {
        mergeStoreFile(other.getStoreFile());
      }
      if (other.hasStorePassword()) {
        storePassword_ = other.storePassword_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasKeyAlias()) {
        keyAlias_ = other.keyAlias_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasKeyPassword()) {
        keyPassword_ = other.keyPassword_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasEnableV1Signing()) {
        setEnableV1Signing(other.getEnableV1Signing());
      }
      if (other.hasEnableV2Signing()) {
        setEnableV2Signing(other.getEnableV2Signing());
      }
      if (other.hasEnableV3Signing()) {
        setEnableV3Signing(other.getEnableV3Signing());
      }
      if (other.hasEnableV4Signing()) {
        setEnableV4Signing(other.getEnableV4Signing());
      }
      if (other.getIsSigningReady() != false) {
        setIsSigningReady(other.getIsSigningReady());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getStoreFileFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              storePassword_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              keyAlias_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              keyPassword_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              enableV1Signing_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              enableV2Signing_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              enableV3Signing_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              enableV4Signing_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              isSigningReady_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Returns the name of the Signing config
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Returns the name of the Signing config
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Returns the name of the Signing config
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Returns the name of the Signing config
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Returns the name of the Signing config
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Returns the name of the Signing config
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.android.builder.model.proto.ide.File storeFile_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> storeFileBuilder_;
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     * @return Whether the storeFile field is set.
     */
    public boolean hasStoreFile() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     * @return The storeFile.
     */
    public com.android.builder.model.proto.ide.File getStoreFile() {
      if (storeFileBuilder_ == null) {
        return storeFile_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : storeFile_;
      } else {
        return storeFileBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    public Builder setStoreFile(com.android.builder.model.proto.ide.File value) {
      if (storeFileBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        storeFile_ = value;
      } else {
        storeFileBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    public Builder setStoreFile(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (storeFileBuilder_ == null) {
        storeFile_ = builderForValue.build();
      } else {
        storeFileBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    public Builder mergeStoreFile(com.android.builder.model.proto.ide.File value) {
      if (storeFileBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          storeFile_ != null &&
          storeFile_ != com.android.builder.model.proto.ide.File.getDefaultInstance()) {
          getStoreFileBuilder().mergeFrom(value);
        } else {
          storeFile_ = value;
        }
      } else {
        storeFileBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    public Builder clearStoreFile() {
      bitField0_ = (bitField0_ & ~0x00000002);
      storeFile_ = null;
      if (storeFileBuilder_ != null) {
        storeFileBuilder_.dispose();
        storeFileBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getStoreFileBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getStoreFileFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getStoreFileOrBuilder() {
      if (storeFileBuilder_ != null) {
        return storeFileBuilder_.getMessageOrBuilder();
      } else {
        return storeFile_ == null ?
            com.android.builder.model.proto.ide.File.getDefaultInstance() : storeFile_;
      }
    }
    /**
     * <pre>
     * The keystore file.
     * </pre>
     *
     * <code>optional .File store_file = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getStoreFileFieldBuilder() {
      if (storeFileBuilder_ == null) {
        storeFileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                getStoreFile(),
                getParentForChildren(),
                isClean());
        storeFile_ = null;
      }
      return storeFileBuilder_;
    }

    private java.lang.Object storePassword_ = "";
    /**
     * <pre>
     * The keystore password.
     * </pre>
     *
     * <code>optional string store_password = 3;</code>
     * @return Whether the storePassword field is set.
     */
    public boolean hasStorePassword() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The keystore password.
     * </pre>
     *
     * <code>optional string store_password = 3;</code>
     * @return The storePassword.
     */
    public java.lang.String getStorePassword() {
      java.lang.Object ref = storePassword_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        storePassword_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The keystore password.
     * </pre>
     *
     * <code>optional string store_password = 3;</code>
     * @return The bytes for storePassword.
     */
    public com.google.protobuf.ByteString
        getStorePasswordBytes() {
      java.lang.Object ref = storePassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        storePassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The keystore password.
     * </pre>
     *
     * <code>optional string store_password = 3;</code>
     * @param value The storePassword to set.
     * @return This builder for chaining.
     */
    public Builder setStorePassword(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      storePassword_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The keystore password.
     * </pre>
     *
     * <code>optional string store_password = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearStorePassword() {
      storePassword_ = getDefaultInstance().getStorePassword();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The keystore password.
     * </pre>
     *
     * <code>optional string store_password = 3;</code>
     * @param value The bytes for storePassword to set.
     * @return This builder for chaining.
     */
    public Builder setStorePasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      storePassword_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object keyAlias_ = "";
    /**
     * <pre>
     * The key alias name.
     * </pre>
     *
     * <code>optional string key_alias = 4;</code>
     * @return Whether the keyAlias field is set.
     */
    public boolean hasKeyAlias() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The key alias name.
     * </pre>
     *
     * <code>optional string key_alias = 4;</code>
     * @return The keyAlias.
     */
    public java.lang.String getKeyAlias() {
      java.lang.Object ref = keyAlias_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyAlias_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The key alias name.
     * </pre>
     *
     * <code>optional string key_alias = 4;</code>
     * @return The bytes for keyAlias.
     */
    public com.google.protobuf.ByteString
        getKeyAliasBytes() {
      java.lang.Object ref = keyAlias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyAlias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The key alias name.
     * </pre>
     *
     * <code>optional string key_alias = 4;</code>
     * @param value The keyAlias to set.
     * @return This builder for chaining.
     */
    public Builder setKeyAlias(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      keyAlias_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The key alias name.
     * </pre>
     *
     * <code>optional string key_alias = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyAlias() {
      keyAlias_ = getDefaultInstance().getKeyAlias();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The key alias name.
     * </pre>
     *
     * <code>optional string key_alias = 4;</code>
     * @param value The bytes for keyAlias to set.
     * @return This builder for chaining.
     */
    public Builder setKeyAliasBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      keyAlias_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object keyPassword_ = "";
    /**
     * <pre>
     * The key password.
     * </pre>
     *
     * <code>optional string key_password = 5;</code>
     * @return Whether the keyPassword field is set.
     */
    public boolean hasKeyPassword() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The key password.
     * </pre>
     *
     * <code>optional string key_password = 5;</code>
     * @return The keyPassword.
     */
    public java.lang.String getKeyPassword() {
      java.lang.Object ref = keyPassword_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyPassword_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The key password.
     * </pre>
     *
     * <code>optional string key_password = 5;</code>
     * @return The bytes for keyPassword.
     */
    public com.google.protobuf.ByteString
        getKeyPasswordBytes() {
      java.lang.Object ref = keyPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The key password.
     * </pre>
     *
     * <code>optional string key_password = 5;</code>
     * @param value The keyPassword to set.
     * @return This builder for chaining.
     */
    public Builder setKeyPassword(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      keyPassword_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The key password.
     * </pre>
     *
     * <code>optional string key_password = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyPassword() {
      keyPassword_ = getDefaultInstance().getKeyPassword();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The key password.
     * </pre>
     *
     * <code>optional string key_password = 5;</code>
     * @param value The bytes for keyPassword to set.
     * @return This builder for chaining.
     */
    public Builder setKeyPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      keyPassword_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private boolean enableV1Signing_ ;
    /**
     * <pre>
     * Signing using JAR Signature Scheme (aka v1 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v1_signing = 6;</code>
     * @return Whether the enableV1Signing field is set.
     */
    @java.lang.Override
    public boolean hasEnableV1Signing() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme (aka v1 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v1_signing = 6;</code>
     * @return The enableV1Signing.
     */
    @java.lang.Override
    public boolean getEnableV1Signing() {
      return enableV1Signing_;
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme (aka v1 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v1_signing = 6;</code>
     * @param value The enableV1Signing to set.
     * @return This builder for chaining.
     */
    public Builder setEnableV1Signing(boolean value) {

      enableV1Signing_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme (aka v1 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v1_signing = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableV1Signing() {
      bitField0_ = (bitField0_ & ~0x00000020);
      enableV1Signing_ = false;
      onChanged();
      return this;
    }

    private boolean enableV2Signing_ ;
    /**
     * <pre>
     * Signing using APK Signature Scheme v2 (aka v2 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v2_signing = 7;</code>
     * @return Whether the enableV2Signing field is set.
     */
    @java.lang.Override
    public boolean hasEnableV2Signing() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Signing using APK Signature Scheme v2 (aka v2 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v2_signing = 7;</code>
     * @return The enableV2Signing.
     */
    @java.lang.Override
    public boolean getEnableV2Signing() {
      return enableV2Signing_;
    }
    /**
     * <pre>
     * Signing using APK Signature Scheme v2 (aka v2 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v2_signing = 7;</code>
     * @param value The enableV2Signing to set.
     * @return This builder for chaining.
     */
    public Builder setEnableV2Signing(boolean value) {

      enableV2Signing_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Signing using APK Signature Scheme v2 (aka v2 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v2_signing = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableV2Signing() {
      bitField0_ = (bitField0_ & ~0x00000040);
      enableV2Signing_ = false;
      onChanged();
      return this;
    }

    private boolean enableV3Signing_ ;
    /**
     * <pre>
     * Signing using JAR Signature Scheme v3 (aka v3 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v3_signing = 8;</code>
     * @return Whether the enableV3Signing field is set.
     */
    @java.lang.Override
    public boolean hasEnableV3Signing() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme v3 (aka v3 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v3_signing = 8;</code>
     * @return The enableV3Signing.
     */
    @java.lang.Override
    public boolean getEnableV3Signing() {
      return enableV3Signing_;
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme v3 (aka v3 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v3_signing = 8;</code>
     * @param value The enableV3Signing to set.
     * @return This builder for chaining.
     */
    public Builder setEnableV3Signing(boolean value) {

      enableV3Signing_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme v3 (aka v3 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v3_signing = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableV3Signing() {
      bitField0_ = (bitField0_ & ~0x00000080);
      enableV3Signing_ = false;
      onChanged();
      return this;
    }

    private boolean enableV4Signing_ ;
    /**
     * <pre>
     * Signing using JAR Signature Scheme v4 (aka v4 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v4_signing = 9;</code>
     * @return Whether the enableV4Signing field is set.
     */
    @java.lang.Override
    public boolean hasEnableV4Signing() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme v4 (aka v4 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v4_signing = 9;</code>
     * @return The enableV4Signing.
     */
    @java.lang.Override
    public boolean getEnableV4Signing() {
      return enableV4Signing_;
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme v4 (aka v4 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v4_signing = 9;</code>
     * @param value The enableV4Signing to set.
     * @return This builder for chaining.
     */
    public Builder setEnableV4Signing(boolean value) {

      enableV4Signing_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Signing using JAR Signature Scheme v4 (aka v4 scheme) is enabled.
     * </pre>
     *
     * <code>optional bool enable_v4_signing = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableV4Signing() {
      bitField0_ = (bitField0_ & ~0x00000100);
      enableV4Signing_ = false;
      onChanged();
      return this;
    }

    private boolean isSigningReady_ ;
    /**
     * <pre>
     * Whether the config is fully configured for signing.
     * i.e. all the required information are present.
     * </pre>
     *
     * <code>bool is_signing_ready = 10;</code>
     * @return The isSigningReady.
     */
    @java.lang.Override
    public boolean getIsSigningReady() {
      return isSigningReady_;
    }
    /**
     * <pre>
     * Whether the config is fully configured for signing.
     * i.e. all the required information are present.
     * </pre>
     *
     * <code>bool is_signing_ready = 10;</code>
     * @param value The isSigningReady to set.
     * @return This builder for chaining.
     */
    public Builder setIsSigningReady(boolean value) {

      isSigningReady_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the config is fully configured for signing.
     * i.e. all the required information are present.
     * </pre>
     *
     * <code>bool is_signing_ready = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsSigningReady() {
      bitField0_ = (bitField0_ & ~0x00000200);
      isSigningReady_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:SigningConfig)
  }

  // @@protoc_insertion_point(class_scope:SigningConfig)
  private static final com.android.builder.model.proto.ide.SigningConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.android.builder.model.proto.ide.SigningConfig();
  }

  public static com.android.builder.model.proto.ide.SigningConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SigningConfig>
      PARSER = new com.google.protobuf.AbstractParser<SigningConfig>() {
    @java.lang.Override
    public SigningConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SigningConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SigningConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.android.builder.model.proto.ide.SigningConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

