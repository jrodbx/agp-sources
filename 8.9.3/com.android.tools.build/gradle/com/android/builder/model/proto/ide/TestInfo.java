// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ide_models.proto

package com.android.builder.model.proto.ide;

/**
 * <pre>
 * Information for test Artifacts.
 * This includes both Android test components in app/lib modules, and the main component
 * in test modules.
 * </pre>
 *
 * Protobuf type {@code TestInfo}
 */
public final class TestInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:TestInfo)
    TestInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestInfo.newBuilder() to construct.
  private TestInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestInfo() {
    execution_ = 0;
    additionalRuntimeApks_ = java.util.Collections.emptyList();
    instrumentedTestTaskName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_TestInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_TestInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.android.builder.model.proto.ide.TestInfo.class, com.android.builder.model.proto.ide.TestInfo.Builder.class);
  }

  /**
   * Protobuf enum {@code TestInfo.Execution}
   */
  public enum Execution
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * On device orchestration is not used in this case.
     * </pre>
     *
     * <code>HOST = 0;</code>
     */
    HOST(0),
    /**
     * <pre>
     * On device orchestration is used.
     * </pre>
     *
     * <code>ANDROID_TEST_ORCHESTRATOR = 1;</code>
     */
    ANDROID_TEST_ORCHESTRATOR(1),
    /**
     * <pre>
     * On device orchestration is used, with androidx class names.
     * </pre>
     *
     * <code>ANDROIDX_TEST_ORCHESTRATOR = 2;</code>
     */
    ANDROIDX_TEST_ORCHESTRATOR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * On device orchestration is not used in this case.
     * </pre>
     *
     * <code>HOST = 0;</code>
     */
    public static final int HOST_VALUE = 0;
    /**
     * <pre>
     * On device orchestration is used.
     * </pre>
     *
     * <code>ANDROID_TEST_ORCHESTRATOR = 1;</code>
     */
    public static final int ANDROID_TEST_ORCHESTRATOR_VALUE = 1;
    /**
     * <pre>
     * On device orchestration is used, with androidx class names.
     * </pre>
     *
     * <code>ANDROIDX_TEST_ORCHESTRATOR = 2;</code>
     */
    public static final int ANDROIDX_TEST_ORCHESTRATOR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Execution valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Execution forNumber(int value) {
      switch (value) {
        case 0: return HOST;
        case 1: return ANDROID_TEST_ORCHESTRATOR;
        case 2: return ANDROIDX_TEST_ORCHESTRATOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Execution>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Execution> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Execution>() {
            public Execution findValueByNumber(int number) {
              return Execution.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.android.builder.model.proto.ide.TestInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final Execution[] VALUES = values();

    public static Execution valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Execution(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TestInfo.Execution)
  }

  private int bitField0_;
  public static final int ANIMATIONS_DISABLED_FIELD_NUMBER = 1;
  private boolean animationsDisabled_ = false;
  /**
   * <code>optional bool animations_disabled = 1;</code>
   * @return Whether the animationsDisabled field is set.
   */
  @java.lang.Override
  public boolean hasAnimationsDisabled() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional bool animations_disabled = 1;</code>
   * @return The animationsDisabled.
   */
  @java.lang.Override
  public boolean getAnimationsDisabled() {
    return animationsDisabled_;
  }

  public static final int EXECUTION_FIELD_NUMBER = 2;
  private int execution_ = 0;
  /**
   * <code>optional .TestInfo.Execution execution = 2;</code>
   * @return Whether the execution field is set.
   */
  @java.lang.Override public boolean hasExecution() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .TestInfo.Execution execution = 2;</code>
   * @return The enum numeric value on the wire for execution.
   */
  @java.lang.Override public int getExecutionValue() {
    return execution_;
  }
  /**
   * <code>optional .TestInfo.Execution execution = 2;</code>
   * @return The execution.
   */
  @java.lang.Override public com.android.builder.model.proto.ide.TestInfo.Execution getExecution() {
    com.android.builder.model.proto.ide.TestInfo.Execution result = com.android.builder.model.proto.ide.TestInfo.Execution.forNumber(execution_);
    return result == null ? com.android.builder.model.proto.ide.TestInfo.Execution.UNRECOGNIZED : result;
  }

  public static final int ADDITIONAL_RUNTIME_APKS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.android.builder.model.proto.ide.File> additionalRuntimeApks_;
  /**
   * <pre>
   * Returns a list of additional APKs that need to installed on the device for this artifact to
   * work correctly.
   * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
   * configuration.
   * </pre>
   *
   * <code>repeated .File additional_runtime_apks = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.builder.model.proto.ide.File> getAdditionalRuntimeApksList() {
    return additionalRuntimeApks_;
  }
  /**
   * <pre>
   * Returns a list of additional APKs that need to installed on the device for this artifact to
   * work correctly.
   * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
   * configuration.
   * </pre>
   *
   * <code>repeated .File additional_runtime_apks = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
      getAdditionalRuntimeApksOrBuilderList() {
    return additionalRuntimeApks_;
  }
  /**
   * <pre>
   * Returns a list of additional APKs that need to installed on the device for this artifact to
   * work correctly.
   * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
   * configuration.
   * </pre>
   *
   * <code>repeated .File additional_runtime_apks = 3;</code>
   */
  @java.lang.Override
  public int getAdditionalRuntimeApksCount() {
    return additionalRuntimeApks_.size();
  }
  /**
   * <pre>
   * Returns a list of additional APKs that need to installed on the device for this artifact to
   * work correctly.
   * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
   * configuration.
   * </pre>
   *
   * <code>repeated .File additional_runtime_apks = 3;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getAdditionalRuntimeApks(int index) {
    return additionalRuntimeApks_.get(index);
  }
  /**
   * <pre>
   * Returns a list of additional APKs that need to installed on the device for this artifact to
   * work correctly.
   * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
   * configuration.
   * </pre>
   *
   * <code>repeated .File additional_runtime_apks = 3;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getAdditionalRuntimeApksOrBuilder(
      int index) {
    return additionalRuntimeApks_.get(index);
  }

  public static final int INSTRUMENTED_TEST_TASK_NAME_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object instrumentedTestTaskName_ = "";
  /**
   * <pre>
   * Returns the name of the task used to run instrumented tests or null if the variant is not a
   * test variant.
   * </pre>
   *
   * <code>optional string instrumented_test_task_name = 4;</code>
   * @return Whether the instrumentedTestTaskName field is set.
   */
  @java.lang.Override
  public boolean hasInstrumentedTestTaskName() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Returns the name of the task used to run instrumented tests or null if the variant is not a
   * test variant.
   * </pre>
   *
   * <code>optional string instrumented_test_task_name = 4;</code>
   * @return The instrumentedTestTaskName.
   */
  @java.lang.Override
  public java.lang.String getInstrumentedTestTaskName() {
    java.lang.Object ref = instrumentedTestTaskName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      instrumentedTestTaskName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Returns the name of the task used to run instrumented tests or null if the variant is not a
   * test variant.
   * </pre>
   *
   * <code>optional string instrumented_test_task_name = 4;</code>
   * @return The bytes for instrumentedTestTaskName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInstrumentedTestTaskNameBytes() {
    java.lang.Object ref = instrumentedTestTaskName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      instrumentedTestTaskName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(1, animationsDisabled_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, execution_);
    }
    for (int i = 0; i < additionalRuntimeApks_.size(); i++) {
      output.writeMessage(3, additionalRuntimeApks_.get(i));
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, instrumentedTestTaskName_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, animationsDisabled_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, execution_);
    }
    for (int i = 0; i < additionalRuntimeApks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, additionalRuntimeApks_.get(i));
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, instrumentedTestTaskName_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.android.builder.model.proto.ide.TestInfo)) {
      return super.equals(obj);
    }
    com.android.builder.model.proto.ide.TestInfo other = (com.android.builder.model.proto.ide.TestInfo) obj;

    if (hasAnimationsDisabled() != other.hasAnimationsDisabled()) return false;
    if (hasAnimationsDisabled()) {
      if (getAnimationsDisabled()
          != other.getAnimationsDisabled()) return false;
    }
    if (hasExecution() != other.hasExecution()) return false;
    if (hasExecution()) {
      if (execution_ != other.execution_) return false;
    }
    if (!getAdditionalRuntimeApksList()
        .equals(other.getAdditionalRuntimeApksList())) return false;
    if (hasInstrumentedTestTaskName() != other.hasInstrumentedTestTaskName()) return false;
    if (hasInstrumentedTestTaskName()) {
      if (!getInstrumentedTestTaskName()
          .equals(other.getInstrumentedTestTaskName())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAnimationsDisabled()) {
      hash = (37 * hash) + ANIMATIONS_DISABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAnimationsDisabled());
    }
    if (hasExecution()) {
      hash = (37 * hash) + EXECUTION_FIELD_NUMBER;
      hash = (53 * hash) + execution_;
    }
    if (getAdditionalRuntimeApksCount() > 0) {
      hash = (37 * hash) + ADDITIONAL_RUNTIME_APKS_FIELD_NUMBER;
      hash = (53 * hash) + getAdditionalRuntimeApksList().hashCode();
    }
    if (hasInstrumentedTestTaskName()) {
      hash = (37 * hash) + INSTRUMENTED_TEST_TASK_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getInstrumentedTestTaskName().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.builder.model.proto.ide.TestInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.android.builder.model.proto.ide.TestInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Information for test Artifacts.
   * This includes both Android test components in app/lib modules, and the main component
   * in test modules.
   * </pre>
   *
   * Protobuf type {@code TestInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:TestInfo)
      com.android.builder.model.proto.ide.TestInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_TestInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_TestInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.builder.model.proto.ide.TestInfo.class, com.android.builder.model.proto.ide.TestInfo.Builder.class);
    }

    // Construct using com.android.builder.model.proto.ide.TestInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      animationsDisabled_ = false;
      execution_ = 0;
      if (additionalRuntimeApksBuilder_ == null) {
        additionalRuntimeApks_ = java.util.Collections.emptyList();
      } else {
        additionalRuntimeApks_ = null;
        additionalRuntimeApksBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      instrumentedTestTaskName_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.android.builder.model.proto.ide.IdeModelsProto.internal_static_TestInfo_descriptor;
    }

    @java.lang.Override
    public com.android.builder.model.proto.ide.TestInfo getDefaultInstanceForType() {
      return com.android.builder.model.proto.ide.TestInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.android.builder.model.proto.ide.TestInfo build() {
      com.android.builder.model.proto.ide.TestInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.android.builder.model.proto.ide.TestInfo buildPartial() {
      com.android.builder.model.proto.ide.TestInfo result = new com.android.builder.model.proto.ide.TestInfo(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.android.builder.model.proto.ide.TestInfo result) {
      if (additionalRuntimeApksBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          additionalRuntimeApks_ = java.util.Collections.unmodifiableList(additionalRuntimeApks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.additionalRuntimeApks_ = additionalRuntimeApks_;
      } else {
        result.additionalRuntimeApks_ = additionalRuntimeApksBuilder_.build();
      }
    }

    private void buildPartial0(com.android.builder.model.proto.ide.TestInfo result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.animationsDisabled_ = animationsDisabled_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.execution_ = execution_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.instrumentedTestTaskName_ = instrumentedTestTaskName_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.android.builder.model.proto.ide.TestInfo) {
        return mergeFrom((com.android.builder.model.proto.ide.TestInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.android.builder.model.proto.ide.TestInfo other) {
      if (other == com.android.builder.model.proto.ide.TestInfo.getDefaultInstance()) return this;
      if (other.hasAnimationsDisabled()) {
        setAnimationsDisabled(other.getAnimationsDisabled());
      }
      if (other.hasExecution()) {
        setExecution(other.getExecution());
      }
      if (additionalRuntimeApksBuilder_ == null) {
        if (!other.additionalRuntimeApks_.isEmpty()) {
          if (additionalRuntimeApks_.isEmpty()) {
            additionalRuntimeApks_ = other.additionalRuntimeApks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAdditionalRuntimeApksIsMutable();
            additionalRuntimeApks_.addAll(other.additionalRuntimeApks_);
          }
          onChanged();
        }
      } else {
        if (!other.additionalRuntimeApks_.isEmpty()) {
          if (additionalRuntimeApksBuilder_.isEmpty()) {
            additionalRuntimeApksBuilder_.dispose();
            additionalRuntimeApksBuilder_ = null;
            additionalRuntimeApks_ = other.additionalRuntimeApks_;
            bitField0_ = (bitField0_ & ~0x00000004);
            additionalRuntimeApksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAdditionalRuntimeApksFieldBuilder() : null;
          } else {
            additionalRuntimeApksBuilder_.addAllMessages(other.additionalRuntimeApks_);
          }
        }
      }
      if (other.hasInstrumentedTestTaskName()) {
        instrumentedTestTaskName_ = other.instrumentedTestTaskName_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              animationsDisabled_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              execution_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.android.builder.model.proto.ide.File m =
                  input.readMessage(
                      com.android.builder.model.proto.ide.File.parser(),
                      extensionRegistry);
              if (additionalRuntimeApksBuilder_ == null) {
                ensureAdditionalRuntimeApksIsMutable();
                additionalRuntimeApks_.add(m);
              } else {
                additionalRuntimeApksBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              instrumentedTestTaskName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean animationsDisabled_ ;
    /**
     * <code>optional bool animations_disabled = 1;</code>
     * @return Whether the animationsDisabled field is set.
     */
    @java.lang.Override
    public boolean hasAnimationsDisabled() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool animations_disabled = 1;</code>
     * @return The animationsDisabled.
     */
    @java.lang.Override
    public boolean getAnimationsDisabled() {
      return animationsDisabled_;
    }
    /**
     * <code>optional bool animations_disabled = 1;</code>
     * @param value The animationsDisabled to set.
     * @return This builder for chaining.
     */
    public Builder setAnimationsDisabled(boolean value) {

      animationsDisabled_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool animations_disabled = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAnimationsDisabled() {
      bitField0_ = (bitField0_ & ~0x00000001);
      animationsDisabled_ = false;
      onChanged();
      return this;
    }

    private int execution_ = 0;
    /**
     * <code>optional .TestInfo.Execution execution = 2;</code>
     * @return Whether the execution field is set.
     */
    @java.lang.Override public boolean hasExecution() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .TestInfo.Execution execution = 2;</code>
     * @return The enum numeric value on the wire for execution.
     */
    @java.lang.Override public int getExecutionValue() {
      return execution_;
    }
    /**
     * <code>optional .TestInfo.Execution execution = 2;</code>
     * @param value The enum numeric value on the wire for execution to set.
     * @return This builder for chaining.
     */
    public Builder setExecutionValue(int value) {
      execution_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>optional .TestInfo.Execution execution = 2;</code>
     * @return The execution.
     */
    @java.lang.Override
    public com.android.builder.model.proto.ide.TestInfo.Execution getExecution() {
      com.android.builder.model.proto.ide.TestInfo.Execution result = com.android.builder.model.proto.ide.TestInfo.Execution.forNumber(execution_);
      return result == null ? com.android.builder.model.proto.ide.TestInfo.Execution.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .TestInfo.Execution execution = 2;</code>
     * @param value The execution to set.
     * @return This builder for chaining.
     */
    public Builder setExecution(com.android.builder.model.proto.ide.TestInfo.Execution value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      execution_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .TestInfo.Execution execution = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExecution() {
      bitField0_ = (bitField0_ & ~0x00000002);
      execution_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.android.builder.model.proto.ide.File> additionalRuntimeApks_ =
      java.util.Collections.emptyList();
    private void ensureAdditionalRuntimeApksIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        additionalRuntimeApks_ = new java.util.ArrayList<com.android.builder.model.proto.ide.File>(additionalRuntimeApks_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> additionalRuntimeApksBuilder_;

    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File> getAdditionalRuntimeApksList() {
      if (additionalRuntimeApksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(additionalRuntimeApks_);
      } else {
        return additionalRuntimeApksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public int getAdditionalRuntimeApksCount() {
      if (additionalRuntimeApksBuilder_ == null) {
        return additionalRuntimeApks_.size();
      } else {
        return additionalRuntimeApksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public com.android.builder.model.proto.ide.File getAdditionalRuntimeApks(int index) {
      if (additionalRuntimeApksBuilder_ == null) {
        return additionalRuntimeApks_.get(index);
      } else {
        return additionalRuntimeApksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder setAdditionalRuntimeApks(
        int index, com.android.builder.model.proto.ide.File value) {
      if (additionalRuntimeApksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.set(index, value);
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder setAdditionalRuntimeApks(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (additionalRuntimeApksBuilder_ == null) {
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.set(index, builderForValue.build());
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder addAdditionalRuntimeApks(com.android.builder.model.proto.ide.File value) {
      if (additionalRuntimeApksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.add(value);
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder addAdditionalRuntimeApks(
        int index, com.android.builder.model.proto.ide.File value) {
      if (additionalRuntimeApksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.add(index, value);
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder addAdditionalRuntimeApks(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (additionalRuntimeApksBuilder_ == null) {
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.add(builderForValue.build());
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder addAdditionalRuntimeApks(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (additionalRuntimeApksBuilder_ == null) {
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.add(index, builderForValue.build());
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder addAllAdditionalRuntimeApks(
        java.lang.Iterable<? extends com.android.builder.model.proto.ide.File> values) {
      if (additionalRuntimeApksBuilder_ == null) {
        ensureAdditionalRuntimeApksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, additionalRuntimeApks_);
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder clearAdditionalRuntimeApks() {
      if (additionalRuntimeApksBuilder_ == null) {
        additionalRuntimeApks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public Builder removeAdditionalRuntimeApks(int index) {
      if (additionalRuntimeApksBuilder_ == null) {
        ensureAdditionalRuntimeApksIsMutable();
        additionalRuntimeApks_.remove(index);
        onChanged();
      } else {
        additionalRuntimeApksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getAdditionalRuntimeApksBuilder(
        int index) {
      return getAdditionalRuntimeApksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getAdditionalRuntimeApksOrBuilder(
        int index) {
      if (additionalRuntimeApksBuilder_ == null) {
        return additionalRuntimeApks_.get(index);  } else {
        return additionalRuntimeApksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
         getAdditionalRuntimeApksOrBuilderList() {
      if (additionalRuntimeApksBuilder_ != null) {
        return additionalRuntimeApksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(additionalRuntimeApks_);
      }
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addAdditionalRuntimeApksBuilder() {
      return getAdditionalRuntimeApksFieldBuilder().addBuilder(
          com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addAdditionalRuntimeApksBuilder(
        int index) {
      return getAdditionalRuntimeApksFieldBuilder().addBuilder(
          index, com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Returns a list of additional APKs that need to installed on the device for this artifact to
     * work correctly.
     * For test artifacts, these will be "buddy APKs" from the `androidTestUtil`
     * configuration.
     * </pre>
     *
     * <code>repeated .File additional_runtime_apks = 3;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File.Builder> 
         getAdditionalRuntimeApksBuilderList() {
      return getAdditionalRuntimeApksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getAdditionalRuntimeApksFieldBuilder() {
      if (additionalRuntimeApksBuilder_ == null) {
        additionalRuntimeApksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                additionalRuntimeApks_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        additionalRuntimeApks_ = null;
      }
      return additionalRuntimeApksBuilder_;
    }

    private java.lang.Object instrumentedTestTaskName_ = "";
    /**
     * <pre>
     * Returns the name of the task used to run instrumented tests or null if the variant is not a
     * test variant.
     * </pre>
     *
     * <code>optional string instrumented_test_task_name = 4;</code>
     * @return Whether the instrumentedTestTaskName field is set.
     */
    public boolean hasInstrumentedTestTaskName() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Returns the name of the task used to run instrumented tests or null if the variant is not a
     * test variant.
     * </pre>
     *
     * <code>optional string instrumented_test_task_name = 4;</code>
     * @return The instrumentedTestTaskName.
     */
    public java.lang.String getInstrumentedTestTaskName() {
      java.lang.Object ref = instrumentedTestTaskName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instrumentedTestTaskName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Returns the name of the task used to run instrumented tests or null if the variant is not a
     * test variant.
     * </pre>
     *
     * <code>optional string instrumented_test_task_name = 4;</code>
     * @return The bytes for instrumentedTestTaskName.
     */
    public com.google.protobuf.ByteString
        getInstrumentedTestTaskNameBytes() {
      java.lang.Object ref = instrumentedTestTaskName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instrumentedTestTaskName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Returns the name of the task used to run instrumented tests or null if the variant is not a
     * test variant.
     * </pre>
     *
     * <code>optional string instrumented_test_task_name = 4;</code>
     * @param value The instrumentedTestTaskName to set.
     * @return This builder for chaining.
     */
    public Builder setInstrumentedTestTaskName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      instrumentedTestTaskName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Returns the name of the task used to run instrumented tests or null if the variant is not a
     * test variant.
     * </pre>
     *
     * <code>optional string instrumented_test_task_name = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstrumentedTestTaskName() {
      instrumentedTestTaskName_ = getDefaultInstance().getInstrumentedTestTaskName();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Returns the name of the task used to run instrumented tests or null if the variant is not a
     * test variant.
     * </pre>
     *
     * <code>optional string instrumented_test_task_name = 4;</code>
     * @param value The bytes for instrumentedTestTaskName to set.
     * @return This builder for chaining.
     */
    public Builder setInstrumentedTestTaskNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      instrumentedTestTaskName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:TestInfo)
  }

  // @@protoc_insertion_point(class_scope:TestInfo)
  private static final com.android.builder.model.proto.ide.TestInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.android.builder.model.proto.ide.TestInfo();
  }

  public static com.android.builder.model.proto.ide.TestInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestInfo>
      PARSER = new com.google.protobuf.AbstractParser<TestInfo>() {
    @java.lang.Override
    public TestInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TestInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.android.builder.model.proto.ide.TestInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

