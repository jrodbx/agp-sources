// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Record of a single variant API use. Each variant API used will be recorded
 * and can either be a Variant API method call, a VariantProperties API method
 * call or an access to the Gradle public artifacts.
 * </pre>
 *
 * Protobuf type {@code android_studio.VariantApiUsage}
 */
public final class VariantApiUsage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.VariantApiUsage)
    VariantApiUsageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VariantApiUsage.newBuilder() to construct.
  private VariantApiUsage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VariantApiUsage() {
    variantAccess_ = java.util.Collections.emptyList();
    variantPropertiesAccess_ = java.util.Collections.emptyList();
    artifactAccess_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VariantApiUsage();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VariantApiUsage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VariantApiUsage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.VariantApiUsage.class, com.google.wireless.android.sdk.stats.VariantApiUsage.Builder.class);
  }

  public static final int VARIANT_ACCESS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.VariantAccess> variantAccess_;
  /**
   * <pre>
   * this represents a method call on the Variant interface and sub types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.VariantAccess> getVariantAccessList() {
    return variantAccess_;
  }
  /**
   * <pre>
   * this represents a method call on the Variant interface and sub types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.VariantAccessOrBuilder> 
      getVariantAccessOrBuilderList() {
    return variantAccess_;
  }
  /**
   * <pre>
   * this represents a method call on the Variant interface and sub types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
   */
  @java.lang.Override
  public int getVariantAccessCount() {
    return variantAccess_.size();
  }
  /**
   * <pre>
   * this represents a method call on the Variant interface and sub types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VariantAccess getVariantAccess(int index) {
    return variantAccess_.get(index);
  }
  /**
   * <pre>
   * this represents a method call on the Variant interface and sub types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VariantAccessOrBuilder getVariantAccessOrBuilder(
      int index) {
    return variantAccess_.get(index);
  }

  public static final int VARIANT_PROPERTIES_ACCESS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.VariantPropertiesAccess> variantPropertiesAccess_;
  /**
   * <pre>
   * this represents a method call on the VariantProperties interface and sub
   * types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.VariantPropertiesAccess> getVariantPropertiesAccessList() {
    return variantPropertiesAccess_;
  }
  /**
   * <pre>
   * this represents a method call on the VariantProperties interface and sub
   * types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder> 
      getVariantPropertiesAccessOrBuilderList() {
    return variantPropertiesAccess_;
  }
  /**
   * <pre>
   * this represents a method call on the VariantProperties interface and sub
   * types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
   */
  @java.lang.Override
  public int getVariantPropertiesAccessCount() {
    return variantPropertiesAccess_.size();
  }
  /**
   * <pre>
   * this represents a method call on the VariantProperties interface and sub
   * types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VariantPropertiesAccess getVariantPropertiesAccess(int index) {
    return variantPropertiesAccess_.get(index);
  }
  /**
   * <pre>
   * this represents a method call on the VariantProperties interface and sub
   * types.
   * </pre>
   *
   * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder getVariantPropertiesAccessOrBuilder(
      int index) {
    return variantPropertiesAccess_.get(index);
  }

  public static final int ARTIFACT_ACCESS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.ArtifactAccess> artifactAccess_;
  /**
   * <pre>
   * this represents an access to any of the public artifact type we make
   * available through the [Artifacts] interface. Access can be reading (GET) or
   * producing (CREATE, APPEND, ...).
   * </pre>
   *
   * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.ArtifactAccess> getArtifactAccessList() {
    return artifactAccess_;
  }
  /**
   * <pre>
   * this represents an access to any of the public artifact type we make
   * available through the [Artifacts] interface. Access can be reading (GET) or
   * producing (CREATE, APPEND, ...).
   * </pre>
   *
   * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder> 
      getArtifactAccessOrBuilderList() {
    return artifactAccess_;
  }
  /**
   * <pre>
   * this represents an access to any of the public artifact type we make
   * available through the [Artifacts] interface. Access can be reading (GET) or
   * producing (CREATE, APPEND, ...).
   * </pre>
   *
   * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
   */
  @java.lang.Override
  public int getArtifactAccessCount() {
    return artifactAccess_.size();
  }
  /**
   * <pre>
   * this represents an access to any of the public artifact type we make
   * available through the [Artifacts] interface. Access can be reading (GET) or
   * producing (CREATE, APPEND, ...).
   * </pre>
   *
   * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.ArtifactAccess getArtifactAccess(int index) {
    return artifactAccess_.get(index);
  }
  /**
   * <pre>
   * this represents an access to any of the public artifact type we make
   * available through the [Artifacts] interface. Access can be reading (GET) or
   * producing (CREATE, APPEND, ...).
   * </pre>
   *
   * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder getArtifactAccessOrBuilder(
      int index) {
    return artifactAccess_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < variantAccess_.size(); i++) {
      output.writeMessage(1, variantAccess_.get(i));
    }
    for (int i = 0; i < variantPropertiesAccess_.size(); i++) {
      output.writeMessage(2, variantPropertiesAccess_.get(i));
    }
    for (int i = 0; i < artifactAccess_.size(); i++) {
      output.writeMessage(3, artifactAccess_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < variantAccess_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, variantAccess_.get(i));
    }
    for (int i = 0; i < variantPropertiesAccess_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, variantPropertiesAccess_.get(i));
    }
    for (int i = 0; i < artifactAccess_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, artifactAccess_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.VariantApiUsage)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.VariantApiUsage other = (com.google.wireless.android.sdk.stats.VariantApiUsage) obj;

    if (!getVariantAccessList()
        .equals(other.getVariantAccessList())) return false;
    if (!getVariantPropertiesAccessList()
        .equals(other.getVariantPropertiesAccessList())) return false;
    if (!getArtifactAccessList()
        .equals(other.getArtifactAccessList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getVariantAccessCount() > 0) {
      hash = (37 * hash) + VARIANT_ACCESS_FIELD_NUMBER;
      hash = (53 * hash) + getVariantAccessList().hashCode();
    }
    if (getVariantPropertiesAccessCount() > 0) {
      hash = (37 * hash) + VARIANT_PROPERTIES_ACCESS_FIELD_NUMBER;
      hash = (53 * hash) + getVariantPropertiesAccessList().hashCode();
    }
    if (getArtifactAccessCount() > 0) {
      hash = (37 * hash) + ARTIFACT_ACCESS_FIELD_NUMBER;
      hash = (53 * hash) + getArtifactAccessList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.VariantApiUsage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.VariantApiUsage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Record of a single variant API use. Each variant API used will be recorded
   * and can either be a Variant API method call, a VariantProperties API method
   * call or an access to the Gradle public artifacts.
   * </pre>
   *
   * Protobuf type {@code android_studio.VariantApiUsage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.VariantApiUsage)
      com.google.wireless.android.sdk.stats.VariantApiUsageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VariantApiUsage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VariantApiUsage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.VariantApiUsage.class, com.google.wireless.android.sdk.stats.VariantApiUsage.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.VariantApiUsage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (variantAccessBuilder_ == null) {
        variantAccess_ = java.util.Collections.emptyList();
      } else {
        variantAccess_ = null;
        variantAccessBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (variantPropertiesAccessBuilder_ == null) {
        variantPropertiesAccess_ = java.util.Collections.emptyList();
      } else {
        variantPropertiesAccess_ = null;
        variantPropertiesAccessBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (artifactAccessBuilder_ == null) {
        artifactAccess_ = java.util.Collections.emptyList();
      } else {
        artifactAccess_ = null;
        artifactAccessBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VariantApiUsage_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VariantApiUsage getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.VariantApiUsage.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VariantApiUsage build() {
      com.google.wireless.android.sdk.stats.VariantApiUsage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VariantApiUsage buildPartial() {
      com.google.wireless.android.sdk.stats.VariantApiUsage result = new com.google.wireless.android.sdk.stats.VariantApiUsage(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.wireless.android.sdk.stats.VariantApiUsage result) {
      if (variantAccessBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          variantAccess_ = java.util.Collections.unmodifiableList(variantAccess_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.variantAccess_ = variantAccess_;
      } else {
        result.variantAccess_ = variantAccessBuilder_.build();
      }
      if (variantPropertiesAccessBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          variantPropertiesAccess_ = java.util.Collections.unmodifiableList(variantPropertiesAccess_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.variantPropertiesAccess_ = variantPropertiesAccess_;
      } else {
        result.variantPropertiesAccess_ = variantPropertiesAccessBuilder_.build();
      }
      if (artifactAccessBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          artifactAccess_ = java.util.Collections.unmodifiableList(artifactAccess_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.artifactAccess_ = artifactAccess_;
      } else {
        result.artifactAccess_ = artifactAccessBuilder_.build();
      }
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.VariantApiUsage result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.VariantApiUsage) {
        return mergeFrom((com.google.wireless.android.sdk.stats.VariantApiUsage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.VariantApiUsage other) {
      if (other == com.google.wireless.android.sdk.stats.VariantApiUsage.getDefaultInstance()) return this;
      if (variantAccessBuilder_ == null) {
        if (!other.variantAccess_.isEmpty()) {
          if (variantAccess_.isEmpty()) {
            variantAccess_ = other.variantAccess_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureVariantAccessIsMutable();
            variantAccess_.addAll(other.variantAccess_);
          }
          onChanged();
        }
      } else {
        if (!other.variantAccess_.isEmpty()) {
          if (variantAccessBuilder_.isEmpty()) {
            variantAccessBuilder_.dispose();
            variantAccessBuilder_ = null;
            variantAccess_ = other.variantAccess_;
            bitField0_ = (bitField0_ & ~0x00000001);
            variantAccessBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariantAccessFieldBuilder() : null;
          } else {
            variantAccessBuilder_.addAllMessages(other.variantAccess_);
          }
        }
      }
      if (variantPropertiesAccessBuilder_ == null) {
        if (!other.variantPropertiesAccess_.isEmpty()) {
          if (variantPropertiesAccess_.isEmpty()) {
            variantPropertiesAccess_ = other.variantPropertiesAccess_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureVariantPropertiesAccessIsMutable();
            variantPropertiesAccess_.addAll(other.variantPropertiesAccess_);
          }
          onChanged();
        }
      } else {
        if (!other.variantPropertiesAccess_.isEmpty()) {
          if (variantPropertiesAccessBuilder_.isEmpty()) {
            variantPropertiesAccessBuilder_.dispose();
            variantPropertiesAccessBuilder_ = null;
            variantPropertiesAccess_ = other.variantPropertiesAccess_;
            bitField0_ = (bitField0_ & ~0x00000002);
            variantPropertiesAccessBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariantPropertiesAccessFieldBuilder() : null;
          } else {
            variantPropertiesAccessBuilder_.addAllMessages(other.variantPropertiesAccess_);
          }
        }
      }
      if (artifactAccessBuilder_ == null) {
        if (!other.artifactAccess_.isEmpty()) {
          if (artifactAccess_.isEmpty()) {
            artifactAccess_ = other.artifactAccess_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureArtifactAccessIsMutable();
            artifactAccess_.addAll(other.artifactAccess_);
          }
          onChanged();
        }
      } else {
        if (!other.artifactAccess_.isEmpty()) {
          if (artifactAccessBuilder_.isEmpty()) {
            artifactAccessBuilder_.dispose();
            artifactAccessBuilder_ = null;
            artifactAccess_ = other.artifactAccess_;
            bitField0_ = (bitField0_ & ~0x00000004);
            artifactAccessBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getArtifactAccessFieldBuilder() : null;
          } else {
            artifactAccessBuilder_.addAllMessages(other.artifactAccess_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.wireless.android.sdk.stats.VariantAccess m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.VariantAccess.PARSER,
                      extensionRegistry);
              if (variantAccessBuilder_ == null) {
                ensureVariantAccessIsMutable();
                variantAccess_.add(m);
              } else {
                variantAccessBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              com.google.wireless.android.sdk.stats.VariantPropertiesAccess m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.VariantPropertiesAccess.PARSER,
                      extensionRegistry);
              if (variantPropertiesAccessBuilder_ == null) {
                ensureVariantPropertiesAccessIsMutable();
                variantPropertiesAccess_.add(m);
              } else {
                variantPropertiesAccessBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.google.wireless.android.sdk.stats.ArtifactAccess m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.ArtifactAccess.PARSER,
                      extensionRegistry);
              if (artifactAccessBuilder_ == null) {
                ensureArtifactAccessIsMutable();
                artifactAccess_.add(m);
              } else {
                artifactAccessBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.wireless.android.sdk.stats.VariantAccess> variantAccess_ =
      java.util.Collections.emptyList();
    private void ensureVariantAccessIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        variantAccess_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.VariantAccess>(variantAccess_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.VariantAccess, com.google.wireless.android.sdk.stats.VariantAccess.Builder, com.google.wireless.android.sdk.stats.VariantAccessOrBuilder> variantAccessBuilder_;

    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.VariantAccess> getVariantAccessList() {
      if (variantAccessBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variantAccess_);
      } else {
        return variantAccessBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public int getVariantAccessCount() {
      if (variantAccessBuilder_ == null) {
        return variantAccess_.size();
      } else {
        return variantAccessBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantAccess getVariantAccess(int index) {
      if (variantAccessBuilder_ == null) {
        return variantAccess_.get(index);
      } else {
        return variantAccessBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder setVariantAccess(
        int index, com.google.wireless.android.sdk.stats.VariantAccess value) {
      if (variantAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariantAccessIsMutable();
        variantAccess_.set(index, value);
        onChanged();
      } else {
        variantAccessBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder setVariantAccess(
        int index, com.google.wireless.android.sdk.stats.VariantAccess.Builder builderForValue) {
      if (variantAccessBuilder_ == null) {
        ensureVariantAccessIsMutable();
        variantAccess_.set(index, builderForValue.build());
        onChanged();
      } else {
        variantAccessBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder addVariantAccess(com.google.wireless.android.sdk.stats.VariantAccess value) {
      if (variantAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariantAccessIsMutable();
        variantAccess_.add(value);
        onChanged();
      } else {
        variantAccessBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder addVariantAccess(
        int index, com.google.wireless.android.sdk.stats.VariantAccess value) {
      if (variantAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariantAccessIsMutable();
        variantAccess_.add(index, value);
        onChanged();
      } else {
        variantAccessBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder addVariantAccess(
        com.google.wireless.android.sdk.stats.VariantAccess.Builder builderForValue) {
      if (variantAccessBuilder_ == null) {
        ensureVariantAccessIsMutable();
        variantAccess_.add(builderForValue.build());
        onChanged();
      } else {
        variantAccessBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder addVariantAccess(
        int index, com.google.wireless.android.sdk.stats.VariantAccess.Builder builderForValue) {
      if (variantAccessBuilder_ == null) {
        ensureVariantAccessIsMutable();
        variantAccess_.add(index, builderForValue.build());
        onChanged();
      } else {
        variantAccessBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder addAllVariantAccess(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.VariantAccess> values) {
      if (variantAccessBuilder_ == null) {
        ensureVariantAccessIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variantAccess_);
        onChanged();
      } else {
        variantAccessBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder clearVariantAccess() {
      if (variantAccessBuilder_ == null) {
        variantAccess_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        variantAccessBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public Builder removeVariantAccess(int index) {
      if (variantAccessBuilder_ == null) {
        ensureVariantAccessIsMutable();
        variantAccess_.remove(index);
        onChanged();
      } else {
        variantAccessBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantAccess.Builder getVariantAccessBuilder(
        int index) {
      return getVariantAccessFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantAccessOrBuilder getVariantAccessOrBuilder(
        int index) {
      if (variantAccessBuilder_ == null) {
        return variantAccess_.get(index);  } else {
        return variantAccessBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.VariantAccessOrBuilder> 
         getVariantAccessOrBuilderList() {
      if (variantAccessBuilder_ != null) {
        return variantAccessBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variantAccess_);
      }
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantAccess.Builder addVariantAccessBuilder() {
      return getVariantAccessFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.VariantAccess.getDefaultInstance());
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantAccess.Builder addVariantAccessBuilder(
        int index) {
      return getVariantAccessFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.VariantAccess.getDefaultInstance());
    }
    /**
     * <pre>
     * this represents a method call on the Variant interface and sub types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantAccess variant_access = 1;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.VariantAccess.Builder> 
         getVariantAccessBuilderList() {
      return getVariantAccessFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.VariantAccess, com.google.wireless.android.sdk.stats.VariantAccess.Builder, com.google.wireless.android.sdk.stats.VariantAccessOrBuilder> 
        getVariantAccessFieldBuilder() {
      if (variantAccessBuilder_ == null) {
        variantAccessBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.VariantAccess, com.google.wireless.android.sdk.stats.VariantAccess.Builder, com.google.wireless.android.sdk.stats.VariantAccessOrBuilder>(
                variantAccess_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        variantAccess_ = null;
      }
      return variantAccessBuilder_;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.VariantPropertiesAccess> variantPropertiesAccess_ =
      java.util.Collections.emptyList();
    private void ensureVariantPropertiesAccessIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        variantPropertiesAccess_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.VariantPropertiesAccess>(variantPropertiesAccess_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.VariantPropertiesAccess, com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder, com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder> variantPropertiesAccessBuilder_;

    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.VariantPropertiesAccess> getVariantPropertiesAccessList() {
      if (variantPropertiesAccessBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variantPropertiesAccess_);
      } else {
        return variantPropertiesAccessBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public int getVariantPropertiesAccessCount() {
      if (variantPropertiesAccessBuilder_ == null) {
        return variantPropertiesAccess_.size();
      } else {
        return variantPropertiesAccessBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantPropertiesAccess getVariantPropertiesAccess(int index) {
      if (variantPropertiesAccessBuilder_ == null) {
        return variantPropertiesAccess_.get(index);
      } else {
        return variantPropertiesAccessBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder setVariantPropertiesAccess(
        int index, com.google.wireless.android.sdk.stats.VariantPropertiesAccess value) {
      if (variantPropertiesAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.set(index, value);
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder setVariantPropertiesAccess(
        int index, com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder builderForValue) {
      if (variantPropertiesAccessBuilder_ == null) {
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.set(index, builderForValue.build());
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder addVariantPropertiesAccess(com.google.wireless.android.sdk.stats.VariantPropertiesAccess value) {
      if (variantPropertiesAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.add(value);
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder addVariantPropertiesAccess(
        int index, com.google.wireless.android.sdk.stats.VariantPropertiesAccess value) {
      if (variantPropertiesAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.add(index, value);
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder addVariantPropertiesAccess(
        com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder builderForValue) {
      if (variantPropertiesAccessBuilder_ == null) {
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.add(builderForValue.build());
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder addVariantPropertiesAccess(
        int index, com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder builderForValue) {
      if (variantPropertiesAccessBuilder_ == null) {
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.add(index, builderForValue.build());
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder addAllVariantPropertiesAccess(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.VariantPropertiesAccess> values) {
      if (variantPropertiesAccessBuilder_ == null) {
        ensureVariantPropertiesAccessIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variantPropertiesAccess_);
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder clearVariantPropertiesAccess() {
      if (variantPropertiesAccessBuilder_ == null) {
        variantPropertiesAccess_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public Builder removeVariantPropertiesAccess(int index) {
      if (variantPropertiesAccessBuilder_ == null) {
        ensureVariantPropertiesAccessIsMutable();
        variantPropertiesAccess_.remove(index);
        onChanged();
      } else {
        variantPropertiesAccessBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder getVariantPropertiesAccessBuilder(
        int index) {
      return getVariantPropertiesAccessFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder getVariantPropertiesAccessOrBuilder(
        int index) {
      if (variantPropertiesAccessBuilder_ == null) {
        return variantPropertiesAccess_.get(index);  } else {
        return variantPropertiesAccessBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder> 
         getVariantPropertiesAccessOrBuilderList() {
      if (variantPropertiesAccessBuilder_ != null) {
        return variantPropertiesAccessBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variantPropertiesAccess_);
      }
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder addVariantPropertiesAccessBuilder() {
      return getVariantPropertiesAccessFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.VariantPropertiesAccess.getDefaultInstance());
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder addVariantPropertiesAccessBuilder(
        int index) {
      return getVariantPropertiesAccessFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.VariantPropertiesAccess.getDefaultInstance());
    }
    /**
     * <pre>
     * this represents a method call on the VariantProperties interface and sub
     * types.
     * </pre>
     *
     * <code>repeated .android_studio.VariantPropertiesAccess variant_properties_access = 2;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder> 
         getVariantPropertiesAccessBuilderList() {
      return getVariantPropertiesAccessFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.VariantPropertiesAccess, com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder, com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder> 
        getVariantPropertiesAccessFieldBuilder() {
      if (variantPropertiesAccessBuilder_ == null) {
        variantPropertiesAccessBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.VariantPropertiesAccess, com.google.wireless.android.sdk.stats.VariantPropertiesAccess.Builder, com.google.wireless.android.sdk.stats.VariantPropertiesAccessOrBuilder>(
                variantPropertiesAccess_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        variantPropertiesAccess_ = null;
      }
      return variantPropertiesAccessBuilder_;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.ArtifactAccess> artifactAccess_ =
      java.util.Collections.emptyList();
    private void ensureArtifactAccessIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        artifactAccess_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.ArtifactAccess>(artifactAccess_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ArtifactAccess, com.google.wireless.android.sdk.stats.ArtifactAccess.Builder, com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder> artifactAccessBuilder_;

    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.ArtifactAccess> getArtifactAccessList() {
      if (artifactAccessBuilder_ == null) {
        return java.util.Collections.unmodifiableList(artifactAccess_);
      } else {
        return artifactAccessBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public int getArtifactAccessCount() {
      if (artifactAccessBuilder_ == null) {
        return artifactAccess_.size();
      } else {
        return artifactAccessBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.ArtifactAccess getArtifactAccess(int index) {
      if (artifactAccessBuilder_ == null) {
        return artifactAccess_.get(index);
      } else {
        return artifactAccessBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder setArtifactAccess(
        int index, com.google.wireless.android.sdk.stats.ArtifactAccess value) {
      if (artifactAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArtifactAccessIsMutable();
        artifactAccess_.set(index, value);
        onChanged();
      } else {
        artifactAccessBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder setArtifactAccess(
        int index, com.google.wireless.android.sdk.stats.ArtifactAccess.Builder builderForValue) {
      if (artifactAccessBuilder_ == null) {
        ensureArtifactAccessIsMutable();
        artifactAccess_.set(index, builderForValue.build());
        onChanged();
      } else {
        artifactAccessBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder addArtifactAccess(com.google.wireless.android.sdk.stats.ArtifactAccess value) {
      if (artifactAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArtifactAccessIsMutable();
        artifactAccess_.add(value);
        onChanged();
      } else {
        artifactAccessBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder addArtifactAccess(
        int index, com.google.wireless.android.sdk.stats.ArtifactAccess value) {
      if (artifactAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArtifactAccessIsMutable();
        artifactAccess_.add(index, value);
        onChanged();
      } else {
        artifactAccessBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder addArtifactAccess(
        com.google.wireless.android.sdk.stats.ArtifactAccess.Builder builderForValue) {
      if (artifactAccessBuilder_ == null) {
        ensureArtifactAccessIsMutable();
        artifactAccess_.add(builderForValue.build());
        onChanged();
      } else {
        artifactAccessBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder addArtifactAccess(
        int index, com.google.wireless.android.sdk.stats.ArtifactAccess.Builder builderForValue) {
      if (artifactAccessBuilder_ == null) {
        ensureArtifactAccessIsMutable();
        artifactAccess_.add(index, builderForValue.build());
        onChanged();
      } else {
        artifactAccessBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder addAllArtifactAccess(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.ArtifactAccess> values) {
      if (artifactAccessBuilder_ == null) {
        ensureArtifactAccessIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, artifactAccess_);
        onChanged();
      } else {
        artifactAccessBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder clearArtifactAccess() {
      if (artifactAccessBuilder_ == null) {
        artifactAccess_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        artifactAccessBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public Builder removeArtifactAccess(int index) {
      if (artifactAccessBuilder_ == null) {
        ensureArtifactAccessIsMutable();
        artifactAccess_.remove(index);
        onChanged();
      } else {
        artifactAccessBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.ArtifactAccess.Builder getArtifactAccessBuilder(
        int index) {
      return getArtifactAccessFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder getArtifactAccessOrBuilder(
        int index) {
      if (artifactAccessBuilder_ == null) {
        return artifactAccess_.get(index);  } else {
        return artifactAccessBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder> 
         getArtifactAccessOrBuilderList() {
      if (artifactAccessBuilder_ != null) {
        return artifactAccessBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(artifactAccess_);
      }
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.ArtifactAccess.Builder addArtifactAccessBuilder() {
      return getArtifactAccessFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.ArtifactAccess.getDefaultInstance());
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.ArtifactAccess.Builder addArtifactAccessBuilder(
        int index) {
      return getArtifactAccessFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.ArtifactAccess.getDefaultInstance());
    }
    /**
     * <pre>
     * this represents an access to any of the public artifact type we make
     * available through the [Artifacts] interface. Access can be reading (GET) or
     * producing (CREATE, APPEND, ...).
     * </pre>
     *
     * <code>repeated .android_studio.ArtifactAccess artifact_access = 3;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.ArtifactAccess.Builder> 
         getArtifactAccessBuilderList() {
      return getArtifactAccessFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ArtifactAccess, com.google.wireless.android.sdk.stats.ArtifactAccess.Builder, com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder> 
        getArtifactAccessFieldBuilder() {
      if (artifactAccessBuilder_ == null) {
        artifactAccessBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.ArtifactAccess, com.google.wireless.android.sdk.stats.ArtifactAccess.Builder, com.google.wireless.android.sdk.stats.ArtifactAccessOrBuilder>(
                artifactAccess_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        artifactAccess_ = null;
      }
      return artifactAccessBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.VariantApiUsage)
  }

  // @@protoc_insertion_point(class_scope:android_studio.VariantApiUsage)
  private static final com.google.wireless.android.sdk.stats.VariantApiUsage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.VariantApiUsage();
  }

  public static com.google.wireless.android.sdk.stats.VariantApiUsage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<VariantApiUsage>
      PARSER = new com.google.protobuf.AbstractParser<VariantApiUsage>() {
    @java.lang.Override
    public VariantApiUsage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VariantApiUsage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VariantApiUsage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VariantApiUsage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

