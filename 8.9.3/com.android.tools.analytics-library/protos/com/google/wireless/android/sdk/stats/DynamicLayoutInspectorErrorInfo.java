// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Extra info for error-related events
 * </pre>
 *
 * Protobuf type {@code android_studio.DynamicLayoutInspectorErrorInfo}
 */
public final class DynamicLayoutInspectorErrorInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.DynamicLayoutInspectorErrorInfo)
    DynamicLayoutInspectorErrorInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DynamicLayoutInspectorErrorInfo.newBuilder() to construct.
  private DynamicLayoutInspectorErrorInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DynamicLayoutInspectorErrorInfo() {
    attachErrorState_ = 0;
    attachErrorCode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DynamicLayoutInspectorErrorInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorErrorInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorErrorInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.class, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder.class);
  }

  /**
   * <pre>
   * How far the inspector attach process got before an error occurred.
   * Order matters: later states are farther along in the process.
   * </pre>
   *
   * Protobuf enum {@code android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState}
   */
  public enum AttachErrorState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_ATTACH_ERROR_STATE = 0;</code>
     */
    UNKNOWN_ATTACH_ERROR_STATE(0),
    /**
     * <code>NOT_STARTED = 1;</code>
     */
    NOT_STARTED(1),
    /**
     * <pre>
     * Test ADB roundtrip to device successful
     * </pre>
     *
     * <code>ADB_PING = 4;</code>
     */
    ADB_PING(4),
    /**
     * <pre>
     * App Inspection states
     * ---------------------------------
     * Studio has established an app inspection connection to the device
     * </pre>
     *
     * <code>ATTACH_SUCCESS = 7;</code>
     */
    ATTACH_SUCCESS(7),
    /**
     * <pre>
     * Studio sent a request to start capturing
     * </pre>
     *
     * <code>START_REQUEST_SENT = 10;</code>
     */
    START_REQUEST_SENT(10),
    /**
     * <pre>
     * The inspector received the request to start capturing
     * </pre>
     *
     * <code>START_RECEIVED = 20;</code>
     */
    START_RECEIVED(20),
    /**
     * <pre>
     * The inspector registered the root view detector
     * </pre>
     *
     * <code>STARTED = 30;</code>
     */
    STARTED(30),
    /**
     * <pre>
     * The inspector found root views and registered invalidation callbacks
     * </pre>
     *
     * <code>ROOTS_EVENT_SENT = 40;</code>
     */
    ROOTS_EVENT_SENT(40),
    /**
     * <pre>
     * Studio received the root views
     * </pre>
     *
     * <code>ROOTS_EVENT_RECEIVED = 50;</code>
     */
    ROOTS_EVENT_RECEIVED(50),
    /**
     * <pre>
     * The inspector got a callback from the platform
     * </pre>
     *
     * <code>VIEW_INVALIDATION_CALLBACK = 60;</code>
     */
    VIEW_INVALIDATION_CALLBACK(60),
    /**
     * <pre>
     * The inspector captured a screenshot or serialized an SKP
     * </pre>
     *
     * <code>SCREENSHOT_CAPTURED = 70;</code>
     */
    SCREENSHOT_CAPTURED(70),
    /**
     * <pre>
     * The inspector executed the view hierarchy capture code
     * </pre>
     *
     * <code>VIEW_HIERARCHY_CAPTURED = 80;</code>
     */
    VIEW_HIERARCHY_CAPTURED(80),
    /**
     * <pre>
     * The inspector sent a response
     * </pre>
     *
     * <code>RESPONSE_SENT = 90;</code>
     */
    RESPONSE_SENT(90),
    /**
     * <pre>
     * Studio received the response
     * </pre>
     *
     * <code>LAYOUT_EVENT_RECEIVED = 100;</code>
     */
    LAYOUT_EVENT_RECEIVED(100),
    /**
     * <pre>
     * Compose-related states
     * ---------------------------------
     * Request sent to Compose inspector
     * </pre>
     *
     * <code>COMPOSE_REQUEST_SENT = 110;</code>
     */
    COMPOSE_REQUEST_SENT(110),
    /**
     * <pre>
     * Studio received a response from the compose inspector
     * </pre>
     *
     * <code>COMPOSE_RESPONSE_RECEIVED = 200;</code>
     */
    COMPOSE_RESPONSE_RECEIVED(200),
    /**
     * <pre>
     * Legacy inspector states
     * ---------------------------------
     * </pre>
     *
     * <code>LEGACY_WINDOW_LIST_REQUESTED = 210;</code>
     */
    LEGACY_WINDOW_LIST_REQUESTED(210),
    /**
     * <code>LEGACY_WINDOW_LIST_RECEIVED = 220;</code>
     */
    LEGACY_WINDOW_LIST_RECEIVED(220),
    /**
     * <code>LEGACY_HIERARCHY_REQUESTED = 230;</code>
     */
    LEGACY_HIERARCHY_REQUESTED(230),
    /**
     * <code>LEGACY_HIERARCHY_RECEIVED = 240;</code>
     */
    LEGACY_HIERARCHY_RECEIVED(240),
    /**
     * <code>LEGACY_SCREENSHOT_REQUESTED = 250;</code>
     */
    LEGACY_SCREENSHOT_REQUESTED(250),
    /**
     * <code>LEGACY_SCREENSHOT_RECEIVED = 260;</code>
     */
    LEGACY_SCREENSHOT_RECEIVED(260),
    /**
     * <pre>
     * Common states
     * ---------------------------------
     * </pre>
     *
     * <code>PARSED_COMPONENT_TREE = 270;</code>
     */
    PARSED_COMPONENT_TREE(270),
    /**
     * <pre>
     * Model is updated with received info
     * </pre>
     *
     * <code>MODEL_UPDATED = 280;</code>
     */
    MODEL_UPDATED(280),
    ;

    /**
     * <code>UNKNOWN_ATTACH_ERROR_STATE = 0;</code>
     */
    public static final int UNKNOWN_ATTACH_ERROR_STATE_VALUE = 0;
    /**
     * <code>NOT_STARTED = 1;</code>
     */
    public static final int NOT_STARTED_VALUE = 1;
    /**
     * <pre>
     * Test ADB roundtrip to device successful
     * </pre>
     *
     * <code>ADB_PING = 4;</code>
     */
    public static final int ADB_PING_VALUE = 4;
    /**
     * <pre>
     * App Inspection states
     * ---------------------------------
     * Studio has established an app inspection connection to the device
     * </pre>
     *
     * <code>ATTACH_SUCCESS = 7;</code>
     */
    public static final int ATTACH_SUCCESS_VALUE = 7;
    /**
     * <pre>
     * Studio sent a request to start capturing
     * </pre>
     *
     * <code>START_REQUEST_SENT = 10;</code>
     */
    public static final int START_REQUEST_SENT_VALUE = 10;
    /**
     * <pre>
     * The inspector received the request to start capturing
     * </pre>
     *
     * <code>START_RECEIVED = 20;</code>
     */
    public static final int START_RECEIVED_VALUE = 20;
    /**
     * <pre>
     * The inspector registered the root view detector
     * </pre>
     *
     * <code>STARTED = 30;</code>
     */
    public static final int STARTED_VALUE = 30;
    /**
     * <pre>
     * The inspector found root views and registered invalidation callbacks
     * </pre>
     *
     * <code>ROOTS_EVENT_SENT = 40;</code>
     */
    public static final int ROOTS_EVENT_SENT_VALUE = 40;
    /**
     * <pre>
     * Studio received the root views
     * </pre>
     *
     * <code>ROOTS_EVENT_RECEIVED = 50;</code>
     */
    public static final int ROOTS_EVENT_RECEIVED_VALUE = 50;
    /**
     * <pre>
     * The inspector got a callback from the platform
     * </pre>
     *
     * <code>VIEW_INVALIDATION_CALLBACK = 60;</code>
     */
    public static final int VIEW_INVALIDATION_CALLBACK_VALUE = 60;
    /**
     * <pre>
     * The inspector captured a screenshot or serialized an SKP
     * </pre>
     *
     * <code>SCREENSHOT_CAPTURED = 70;</code>
     */
    public static final int SCREENSHOT_CAPTURED_VALUE = 70;
    /**
     * <pre>
     * The inspector executed the view hierarchy capture code
     * </pre>
     *
     * <code>VIEW_HIERARCHY_CAPTURED = 80;</code>
     */
    public static final int VIEW_HIERARCHY_CAPTURED_VALUE = 80;
    /**
     * <pre>
     * The inspector sent a response
     * </pre>
     *
     * <code>RESPONSE_SENT = 90;</code>
     */
    public static final int RESPONSE_SENT_VALUE = 90;
    /**
     * <pre>
     * Studio received the response
     * </pre>
     *
     * <code>LAYOUT_EVENT_RECEIVED = 100;</code>
     */
    public static final int LAYOUT_EVENT_RECEIVED_VALUE = 100;
    /**
     * <pre>
     * Compose-related states
     * ---------------------------------
     * Request sent to Compose inspector
     * </pre>
     *
     * <code>COMPOSE_REQUEST_SENT = 110;</code>
     */
    public static final int COMPOSE_REQUEST_SENT_VALUE = 110;
    /**
     * <pre>
     * Studio received a response from the compose inspector
     * </pre>
     *
     * <code>COMPOSE_RESPONSE_RECEIVED = 200;</code>
     */
    public static final int COMPOSE_RESPONSE_RECEIVED_VALUE = 200;
    /**
     * <pre>
     * Legacy inspector states
     * ---------------------------------
     * </pre>
     *
     * <code>LEGACY_WINDOW_LIST_REQUESTED = 210;</code>
     */
    public static final int LEGACY_WINDOW_LIST_REQUESTED_VALUE = 210;
    /**
     * <code>LEGACY_WINDOW_LIST_RECEIVED = 220;</code>
     */
    public static final int LEGACY_WINDOW_LIST_RECEIVED_VALUE = 220;
    /**
     * <code>LEGACY_HIERARCHY_REQUESTED = 230;</code>
     */
    public static final int LEGACY_HIERARCHY_REQUESTED_VALUE = 230;
    /**
     * <code>LEGACY_HIERARCHY_RECEIVED = 240;</code>
     */
    public static final int LEGACY_HIERARCHY_RECEIVED_VALUE = 240;
    /**
     * <code>LEGACY_SCREENSHOT_REQUESTED = 250;</code>
     */
    public static final int LEGACY_SCREENSHOT_REQUESTED_VALUE = 250;
    /**
     * <code>LEGACY_SCREENSHOT_RECEIVED = 260;</code>
     */
    public static final int LEGACY_SCREENSHOT_RECEIVED_VALUE = 260;
    /**
     * <pre>
     * Common states
     * ---------------------------------
     * </pre>
     *
     * <code>PARSED_COMPONENT_TREE = 270;</code>
     */
    public static final int PARSED_COMPONENT_TREE_VALUE = 270;
    /**
     * <pre>
     * Model is updated with received info
     * </pre>
     *
     * <code>MODEL_UPDATED = 280;</code>
     */
    public static final int MODEL_UPDATED_VALUE = 280;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AttachErrorState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AttachErrorState forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ATTACH_ERROR_STATE;
        case 1: return NOT_STARTED;
        case 4: return ADB_PING;
        case 7: return ATTACH_SUCCESS;
        case 10: return START_REQUEST_SENT;
        case 20: return START_RECEIVED;
        case 30: return STARTED;
        case 40: return ROOTS_EVENT_SENT;
        case 50: return ROOTS_EVENT_RECEIVED;
        case 60: return VIEW_INVALIDATION_CALLBACK;
        case 70: return SCREENSHOT_CAPTURED;
        case 80: return VIEW_HIERARCHY_CAPTURED;
        case 90: return RESPONSE_SENT;
        case 100: return LAYOUT_EVENT_RECEIVED;
        case 110: return COMPOSE_REQUEST_SENT;
        case 200: return COMPOSE_RESPONSE_RECEIVED;
        case 210: return LEGACY_WINDOW_LIST_REQUESTED;
        case 220: return LEGACY_WINDOW_LIST_RECEIVED;
        case 230: return LEGACY_HIERARCHY_REQUESTED;
        case 240: return LEGACY_HIERARCHY_RECEIVED;
        case 250: return LEGACY_SCREENSHOT_REQUESTED;
        case 260: return LEGACY_SCREENSHOT_RECEIVED;
        case 270: return PARSED_COMPONENT_TREE;
        case 280: return MODEL_UPDATED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AttachErrorState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AttachErrorState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AttachErrorState>() {
            public AttachErrorState findValueByNumber(int number) {
              return AttachErrorState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final AttachErrorState[] VALUES = values();

    public static AttachErrorState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AttachErrorState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState)
  }

  /**
   * <pre>
   * The error code encountered
   * </pre>
   *
   * Protobuf enum {@code android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode}
   */
  public enum AttachErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown error code
     * </pre>
     *
     * <code>UNKNOWN_ERROR_CODE = 0;</code>
     */
    UNKNOWN_ERROR_CODE(0),
    /**
     * <pre>
     * Api lower than 29
     * </pre>
     *
     * <code>LOW_API_LEVEL = 1;</code>
     */
    LOW_API_LEVEL(1),
    /**
     * <pre>
     * Timeout with fallback to Legacy mode
     * </pre>
     *
     * <code>CONNECT_TIMEOUT = 2;</code>
     */
    CONNECT_TIMEOUT(2),
    /**
     * <code>UNKNOWN_VIEW_AGENT_ERROR = 101;</code>
     */
    UNKNOWN_VIEW_AGENT_ERROR(101),
    /**
     * <pre>
     * No hardware acceleration
     * </pre>
     *
     * <code>NO_HARDWARE_ACCELERATION = 102;</code>
     */
    NO_HARDWARE_ACCELERATION(102),
    /**
     * <pre>
     * The app seems to have no UI
     * </pre>
     *
     * <code>NO_ROOT_VIEWS_FOUND = 103;</code>
     */
    NO_ROOT_VIEWS_FOUND(103),
    /**
     * <pre>
     * General fallback if we were unable to map the app inspection exception
     * </pre>
     *
     * <code>UNKNOWN_APP_INSPECTION_ERROR = 201;</code>
     */
    UNKNOWN_APP_INSPECTION_ERROR(201),
    /**
     * <pre>
     * The device in not found among the ABD devices
     * </pre>
     *
     * <code>APP_INSPECTION_CANNOT_FIND_DEVICE = 202;</code>
     */
    APP_INSPECTION_CANNOT_FIND_DEVICE(202),
    /**
     * <pre>
     * The process is no longer found
     * </pre>
     *
     * <code>APP_INSPECTION_PROCESS_NO_LONGER_EXISTS = 203;</code>
     */
    APP_INSPECTION_PROCESS_NO_LONGER_EXISTS(203),
    /**
     * <pre>
     * The inspector is incompatible with the library in the running app
     * </pre>
     *
     * <code>APP_INSPECTION_INCOMPATIBLE_VERSION = 204;</code>
     */
    APP_INSPECTION_INCOMPATIBLE_VERSION(204),
    /**
     * <pre>
     * The targeted library does not exist in the app
     * </pre>
     *
     * <code>APP_INSPECTION_MISSING_LIBRARY = 205;</code>
     */
    APP_INSPECTION_MISSING_LIBRARY(205),
    /**
     * <pre>
     * The target app is proguarded
     * </pre>
     *
     * <code>APP_INSPECTION_PROGUARDED_APP = 206;</code>
     */
    APP_INSPECTION_PROGUARDED_APP(206),
    /**
     * <pre>
     * An inspector artifact can't be resolved
     * </pre>
     *
     * <code>APP_INSPECTION_ARTIFACT_NOT_FOUND = 207;</code>
     */
    APP_INSPECTION_ARTIFACT_NOT_FOUND(207),
    /**
     * <pre>
     * The compose:ui:ui version file was missing
     * </pre>
     *
     * <code>APP_INSPECTION_VERSION_FILE_NOT_FOUND = 208;</code>
     */
    APP_INSPECTION_VERSION_FILE_NOT_FOUND(208),
    /**
     * <pre>
     * Snapshot version used, but use.snapshot.jar flag is not set
     * </pre>
     *
     * <code>APP_INSPECTION_SNAPSHOT_NOT_SPECIFIED = 209;</code>
     */
    APP_INSPECTION_SNAPSHOT_NOT_SPECIFIED(209),
    /**
     * <pre>
     * Compose inspector not found.
     * </pre>
     *
     * <code>APP_INSPECTION_COMPOSE_INSPECTOR_NOT_FOUND = 210;</code>
     */
    APP_INSPECTION_COMPOSE_INSPECTOR_NOT_FOUND(210),
    /**
     * <pre>
     * Failed to download compose inspector from maven
     * </pre>
     *
     * <code>APP_INSPECTION_FAILED_MAVEN_DOWNLOAD = 211;</code>
     */
    APP_INSPECTION_FAILED_MAVEN_DOWNLOAD(211),
    /**
     * <code>APP_INSPECTION_FORCEFULLY_DISPOSED = 212;</code>
     */
    APP_INSPECTION_FORCEFULLY_DISPOSED(212),
    /**
     * <code>TRANSPORT_UNKNOWN_ERROR = 301;</code>
     */
    TRANSPORT_UNKNOWN_ERROR(301),
    /**
     * <code>TRANSPORT_PUSH_FAILED_FILE_NOT_FOUND = 302;</code>
     */
    TRANSPORT_PUSH_FAILED_FILE_NOT_FOUND(302),
    /**
     * <code>UNEXPECTED_ERROR = 401;</code>
     */
    UNEXPECTED_ERROR(401),
    ;

    /**
     * <pre>
     * Unknown error code
     * </pre>
     *
     * <code>UNKNOWN_ERROR_CODE = 0;</code>
     */
    public static final int UNKNOWN_ERROR_CODE_VALUE = 0;
    /**
     * <pre>
     * Api lower than 29
     * </pre>
     *
     * <code>LOW_API_LEVEL = 1;</code>
     */
    public static final int LOW_API_LEVEL_VALUE = 1;
    /**
     * <pre>
     * Timeout with fallback to Legacy mode
     * </pre>
     *
     * <code>CONNECT_TIMEOUT = 2;</code>
     */
    public static final int CONNECT_TIMEOUT_VALUE = 2;
    /**
     * <code>UNKNOWN_VIEW_AGENT_ERROR = 101;</code>
     */
    public static final int UNKNOWN_VIEW_AGENT_ERROR_VALUE = 101;
    /**
     * <pre>
     * No hardware acceleration
     * </pre>
     *
     * <code>NO_HARDWARE_ACCELERATION = 102;</code>
     */
    public static final int NO_HARDWARE_ACCELERATION_VALUE = 102;
    /**
     * <pre>
     * The app seems to have no UI
     * </pre>
     *
     * <code>NO_ROOT_VIEWS_FOUND = 103;</code>
     */
    public static final int NO_ROOT_VIEWS_FOUND_VALUE = 103;
    /**
     * <pre>
     * General fallback if we were unable to map the app inspection exception
     * </pre>
     *
     * <code>UNKNOWN_APP_INSPECTION_ERROR = 201;</code>
     */
    public static final int UNKNOWN_APP_INSPECTION_ERROR_VALUE = 201;
    /**
     * <pre>
     * The device in not found among the ABD devices
     * </pre>
     *
     * <code>APP_INSPECTION_CANNOT_FIND_DEVICE = 202;</code>
     */
    public static final int APP_INSPECTION_CANNOT_FIND_DEVICE_VALUE = 202;
    /**
     * <pre>
     * The process is no longer found
     * </pre>
     *
     * <code>APP_INSPECTION_PROCESS_NO_LONGER_EXISTS = 203;</code>
     */
    public static final int APP_INSPECTION_PROCESS_NO_LONGER_EXISTS_VALUE = 203;
    /**
     * <pre>
     * The inspector is incompatible with the library in the running app
     * </pre>
     *
     * <code>APP_INSPECTION_INCOMPATIBLE_VERSION = 204;</code>
     */
    public static final int APP_INSPECTION_INCOMPATIBLE_VERSION_VALUE = 204;
    /**
     * <pre>
     * The targeted library does not exist in the app
     * </pre>
     *
     * <code>APP_INSPECTION_MISSING_LIBRARY = 205;</code>
     */
    public static final int APP_INSPECTION_MISSING_LIBRARY_VALUE = 205;
    /**
     * <pre>
     * The target app is proguarded
     * </pre>
     *
     * <code>APP_INSPECTION_PROGUARDED_APP = 206;</code>
     */
    public static final int APP_INSPECTION_PROGUARDED_APP_VALUE = 206;
    /**
     * <pre>
     * An inspector artifact can't be resolved
     * </pre>
     *
     * <code>APP_INSPECTION_ARTIFACT_NOT_FOUND = 207;</code>
     */
    public static final int APP_INSPECTION_ARTIFACT_NOT_FOUND_VALUE = 207;
    /**
     * <pre>
     * The compose:ui:ui version file was missing
     * </pre>
     *
     * <code>APP_INSPECTION_VERSION_FILE_NOT_FOUND = 208;</code>
     */
    public static final int APP_INSPECTION_VERSION_FILE_NOT_FOUND_VALUE = 208;
    /**
     * <pre>
     * Snapshot version used, but use.snapshot.jar flag is not set
     * </pre>
     *
     * <code>APP_INSPECTION_SNAPSHOT_NOT_SPECIFIED = 209;</code>
     */
    public static final int APP_INSPECTION_SNAPSHOT_NOT_SPECIFIED_VALUE = 209;
    /**
     * <pre>
     * Compose inspector not found.
     * </pre>
     *
     * <code>APP_INSPECTION_COMPOSE_INSPECTOR_NOT_FOUND = 210;</code>
     */
    public static final int APP_INSPECTION_COMPOSE_INSPECTOR_NOT_FOUND_VALUE = 210;
    /**
     * <pre>
     * Failed to download compose inspector from maven
     * </pre>
     *
     * <code>APP_INSPECTION_FAILED_MAVEN_DOWNLOAD = 211;</code>
     */
    public static final int APP_INSPECTION_FAILED_MAVEN_DOWNLOAD_VALUE = 211;
    /**
     * <code>APP_INSPECTION_FORCEFULLY_DISPOSED = 212;</code>
     */
    public static final int APP_INSPECTION_FORCEFULLY_DISPOSED_VALUE = 212;
    /**
     * <code>TRANSPORT_UNKNOWN_ERROR = 301;</code>
     */
    public static final int TRANSPORT_UNKNOWN_ERROR_VALUE = 301;
    /**
     * <code>TRANSPORT_PUSH_FAILED_FILE_NOT_FOUND = 302;</code>
     */
    public static final int TRANSPORT_PUSH_FAILED_FILE_NOT_FOUND_VALUE = 302;
    /**
     * <code>UNEXPECTED_ERROR = 401;</code>
     */
    public static final int UNEXPECTED_ERROR_VALUE = 401;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AttachErrorCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AttachErrorCode forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ERROR_CODE;
        case 1: return LOW_API_LEVEL;
        case 2: return CONNECT_TIMEOUT;
        case 101: return UNKNOWN_VIEW_AGENT_ERROR;
        case 102: return NO_HARDWARE_ACCELERATION;
        case 103: return NO_ROOT_VIEWS_FOUND;
        case 201: return UNKNOWN_APP_INSPECTION_ERROR;
        case 202: return APP_INSPECTION_CANNOT_FIND_DEVICE;
        case 203: return APP_INSPECTION_PROCESS_NO_LONGER_EXISTS;
        case 204: return APP_INSPECTION_INCOMPATIBLE_VERSION;
        case 205: return APP_INSPECTION_MISSING_LIBRARY;
        case 206: return APP_INSPECTION_PROGUARDED_APP;
        case 207: return APP_INSPECTION_ARTIFACT_NOT_FOUND;
        case 208: return APP_INSPECTION_VERSION_FILE_NOT_FOUND;
        case 209: return APP_INSPECTION_SNAPSHOT_NOT_SPECIFIED;
        case 210: return APP_INSPECTION_COMPOSE_INSPECTOR_NOT_FOUND;
        case 211: return APP_INSPECTION_FAILED_MAVEN_DOWNLOAD;
        case 212: return APP_INSPECTION_FORCEFULLY_DISPOSED;
        case 301: return TRANSPORT_UNKNOWN_ERROR;
        case 302: return TRANSPORT_PUSH_FAILED_FILE_NOT_FOUND;
        case 401: return UNEXPECTED_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AttachErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AttachErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AttachErrorCode>() {
            public AttachErrorCode findValueByNumber(int number) {
              return AttachErrorCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDescriptor().getEnumTypes().get(1);
    }

    private static final AttachErrorCode[] VALUES = values();

    public static AttachErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AttachErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode)
  }

  private int bitField0_;
  public static final int ATTACH_ERROR_STATE_FIELD_NUMBER = 1;
  private int attachErrorState_ = 0;
  /**
   * <pre>
   * How far we got on initial connect before an error happened, when sending
   * ATTACH_ERROR
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState attach_error_state = 1;</code>
   * @return Whether the attachErrorState field is set.
   */
  @java.lang.Override public boolean hasAttachErrorState() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * How far we got on initial connect before an error happened, when sending
   * ATTACH_ERROR
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState attach_error_state = 1;</code>
   * @return The attachErrorState.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState getAttachErrorState() {
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState.forNumber(attachErrorState_);
    return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState.UNKNOWN_ATTACH_ERROR_STATE : result;
  }

  public static final int ATTACH_ERROR_CODE_FIELD_NUMBER = 2;
  private int attachErrorCode_ = 0;
  /**
   * <pre>
   * The error encountered to abort the attach attempt
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode attach_error_code = 2;</code>
   * @return Whether the attachErrorCode field is set.
   */
  @java.lang.Override public boolean hasAttachErrorCode() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The error encountered to abort the attach attempt
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode attach_error_code = 2;</code>
   * @return The attachErrorCode.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode getAttachErrorCode() {
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.forNumber(attachErrorCode_);
    return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.UNKNOWN_ERROR_CODE : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, attachErrorState_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, attachErrorCode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, attachErrorState_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, attachErrorCode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo other = (com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo) obj;

    if (hasAttachErrorState() != other.hasAttachErrorState()) return false;
    if (hasAttachErrorState()) {
      if (attachErrorState_ != other.attachErrorState_) return false;
    }
    if (hasAttachErrorCode() != other.hasAttachErrorCode()) return false;
    if (hasAttachErrorCode()) {
      if (attachErrorCode_ != other.attachErrorCode_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAttachErrorState()) {
      hash = (37 * hash) + ATTACH_ERROR_STATE_FIELD_NUMBER;
      hash = (53 * hash) + attachErrorState_;
    }
    if (hasAttachErrorCode()) {
      hash = (37 * hash) + ATTACH_ERROR_CODE_FIELD_NUMBER;
      hash = (53 * hash) + attachErrorCode_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Extra info for error-related events
   * </pre>
   *
   * Protobuf type {@code android_studio.DynamicLayoutInspectorErrorInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.DynamicLayoutInspectorErrorInfo)
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorErrorInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorErrorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.class, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      attachErrorState_ = 0;
      attachErrorCode_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorErrorInfo_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo build() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo buildPartial() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo result = new com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.attachErrorState_ = attachErrorState_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.attachErrorCode_ = attachErrorCode_;
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo) {
        return mergeFrom((com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo other) {
      if (other == com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance()) return this;
      if (other.hasAttachErrorState()) {
        setAttachErrorState(other.getAttachErrorState());
      }
      if (other.hasAttachErrorCode()) {
        setAttachErrorCode(other.getAttachErrorCode());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState tmpValue =
                  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                attachErrorState_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode tmpValue =
                  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                attachErrorCode_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int attachErrorState_ = 0;
    /**
     * <pre>
     * How far we got on initial connect before an error happened, when sending
     * ATTACH_ERROR
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState attach_error_state = 1;</code>
     * @return Whether the attachErrorState field is set.
     */
    @java.lang.Override public boolean hasAttachErrorState() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * How far we got on initial connect before an error happened, when sending
     * ATTACH_ERROR
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState attach_error_state = 1;</code>
     * @return The attachErrorState.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState getAttachErrorState() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState.forNumber(attachErrorState_);
      return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState.UNKNOWN_ATTACH_ERROR_STATE : result;
    }
    /**
     * <pre>
     * How far we got on initial connect before an error happened, when sending
     * ATTACH_ERROR
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState attach_error_state = 1;</code>
     * @param value The attachErrorState to set.
     * @return This builder for chaining.
     */
    public Builder setAttachErrorState(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      attachErrorState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How far we got on initial connect before an error happened, when sending
     * ATTACH_ERROR
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorState attach_error_state = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttachErrorState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      attachErrorState_ = 0;
      onChanged();
      return this;
    }

    private int attachErrorCode_ = 0;
    /**
     * <pre>
     * The error encountered to abort the attach attempt
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode attach_error_code = 2;</code>
     * @return Whether the attachErrorCode field is set.
     */
    @java.lang.Override public boolean hasAttachErrorCode() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The error encountered to abort the attach attempt
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode attach_error_code = 2;</code>
     * @return The attachErrorCode.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode getAttachErrorCode() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.forNumber(attachErrorCode_);
      return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.UNKNOWN_ERROR_CODE : result;
    }
    /**
     * <pre>
     * The error encountered to abort the attach attempt
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode attach_error_code = 2;</code>
     * @param value The attachErrorCode to set.
     * @return This builder for chaining.
     */
    public Builder setAttachErrorCode(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      attachErrorCode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The error encountered to abort the attach attempt
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode attach_error_code = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttachErrorCode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      attachErrorCode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.DynamicLayoutInspectorErrorInfo)
  }

  // @@protoc_insertion_point(class_scope:android_studio.DynamicLayoutInspectorErrorInfo)
  private static final com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo();
  }

  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<DynamicLayoutInspectorErrorInfo>
      PARSER = new com.google.protobuf.AbstractParser<DynamicLayoutInspectorErrorInfo>() {
    @java.lang.Override
    public DynamicLayoutInspectorErrorInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DynamicLayoutInspectorErrorInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DynamicLayoutInspectorErrorInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

