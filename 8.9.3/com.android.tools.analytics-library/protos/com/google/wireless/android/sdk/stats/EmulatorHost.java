// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Describes the status of the machine running the emulator.
 * </pre>
 *
 * Protobuf type {@code android_studio.EmulatorHost}
 */
public final class EmulatorHost extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorHost)
    EmulatorHostOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorHost.newBuilder() to construct.
  private EmulatorHost(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorHost() {
    cpuManufacturer_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorHost();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorHost_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorHost_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorHost.class, com.google.wireless.android.sdk.stats.EmulatorHost.Builder.class);
  }

  private int bitField0_;
  public static final int CPU_MANUFACTURER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cpuManufacturer_ = "";
  /**
   * <pre>
   * CPU manufacturer of the host, used as certain hypervisors are limited
   * to a certain manufacturer.
   * </pre>
   *
   * <code>optional string cpu_manufacturer = 1;</code>
   * @return Whether the cpuManufacturer field is set.
   */
  @java.lang.Override
  public boolean hasCpuManufacturer() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * CPU manufacturer of the host, used as certain hypervisors are limited
   * to a certain manufacturer.
   * </pre>
   *
   * <code>optional string cpu_manufacturer = 1;</code>
   * @return The cpuManufacturer.
   */
  @java.lang.Override
  public java.lang.String getCpuManufacturer() {
    java.lang.Object ref = cpuManufacturer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        cpuManufacturer_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * CPU manufacturer of the host, used as certain hypervisors are limited
   * to a certain manufacturer.
   * </pre>
   *
   * <code>optional string cpu_manufacturer = 1;</code>
   * @return The bytes for cpuManufacturer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCpuManufacturerBytes() {
    java.lang.Object ref = cpuManufacturer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cpuManufacturer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VIRT_SUPPORT_FIELD_NUMBER = 2;
  private boolean virtSupport_ = false;
  /**
   * <pre>
   * Does the host support virtualization technology
   * </pre>
   *
   * <code>optional bool virt_support = 2;</code>
   * @return Whether the virtSupport field is set.
   */
  @java.lang.Override
  public boolean hasVirtSupport() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Does the host support virtualization technology
   * </pre>
   *
   * <code>optional bool virt_support = 2;</code>
   * @return The virtSupport.
   */
  @java.lang.Override
  public boolean getVirtSupport() {
    return virtSupport_;
  }

  public static final int RUNNING_IN_VM_FIELD_NUMBER = 3;
  private boolean runningInVm_ = false;
  /**
   * <pre>
   * Is the host itself running inside a virtual machine.
   * </pre>
   *
   * <code>optional bool running_in_vm = 3;</code>
   * @return Whether the runningInVm field is set.
   */
  @java.lang.Override
  public boolean hasRunningInVm() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Is the host itself running inside a virtual machine.
   * </pre>
   *
   * <code>optional bool running_in_vm = 3;</code>
   * @return The runningInVm.
   */
  @java.lang.Override
  public boolean getRunningInVm() {
    return runningInVm_;
  }

  public static final int OS_BIT_COUNT_FIELD_NUMBER = 4;
  private long osBitCount_ = 0L;
  /**
   * <pre>
   * May differ from os_architecture field as it is calculated differently,
   * trying to compensate the JVM bittness.
   * </pre>
   *
   * <code>optional int64 os_bit_count = 4;</code>
   * @return Whether the osBitCount field is set.
   */
  @java.lang.Override
  public boolean hasOsBitCount() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * May differ from os_architecture field as it is calculated differently,
   * trying to compensate the JVM bittness.
   * </pre>
   *
   * <code>optional int64 os_bit_count = 4;</code>
   * @return The osBitCount.
   */
  @java.lang.Override
  public long getOsBitCount() {
    return osBitCount_;
  }

  public static final int CPUID_STEPPING_FIELD_NUMBER = 5;
  private int cpuidStepping_ = 0;
  /**
   * <pre>
   * CPU model, family, stepping, as stored in the EAX register
   * after issuing CPUID instruction with EAX=1:
   * 31   27   23   19   15   11   7    3  0
   * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
   * </pre>
   *
   * <code>optional uint32 cpuid_stepping = 5;</code>
   * @return Whether the cpuidStepping field is set.
   */
  @java.lang.Override
  public boolean hasCpuidStepping() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * CPU model, family, stepping, as stored in the EAX register
   * after issuing CPUID instruction with EAX=1:
   * 31   27   23   19   15   11   7    3  0
   * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
   * </pre>
   *
   * <code>optional uint32 cpuid_stepping = 5;</code>
   * @return The cpuidStepping.
   */
  @java.lang.Override
  public int getCpuidStepping() {
    return cpuidStepping_;
  }

  public static final int CPUID_MODEL_FIELD_NUMBER = 6;
  private int cpuidModel_ = 0;
  /**
   * <pre>
   * m: [7:4] model (CPU model)
   * </pre>
   *
   * <code>optional uint32 cpuid_model = 6;</code>
   * @return Whether the cpuidModel field is set.
   */
  @java.lang.Override
  public boolean hasCpuidModel() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * m: [7:4] model (CPU model)
   * </pre>
   *
   * <code>optional uint32 cpuid_model = 6;</code>
   * @return The cpuidModel.
   */
  @java.lang.Override
  public int getCpuidModel() {
    return cpuidModel_;
  }

  public static final int CPUID_FAMILY_FIELD_NUMBER = 7;
  private int cpuidFamily_ = 0;
  /**
   * <pre>
   * f: [11:8] family (CPU make)
   * </pre>
   *
   * <code>optional uint32 cpuid_family = 7;</code>
   * @return Whether the cpuidFamily field is set.
   */
  @java.lang.Override
  public boolean hasCpuidFamily() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * f: [11:8] family (CPU make)
   * </pre>
   *
   * <code>optional uint32 cpuid_family = 7;</code>
   * @return The cpuidFamily.
   */
  @java.lang.Override
  public int getCpuidFamily() {
    return cpuidFamily_;
  }

  public static final int CPUID_TYPE_FIELD_NUMBER = 8;
  private int cpuidType_ = 0;
  /**
   * <pre>
   * t: [13:12] CPU type
   * </pre>
   *
   * <code>optional uint32 cpuid_type = 8;</code>
   * @return Whether the cpuidType field is set.
   */
  @java.lang.Override
  public boolean hasCpuidType() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * t: [13:12] CPU type
   * </pre>
   *
   * <code>optional uint32 cpuid_type = 8;</code>
   * @return The cpuidType.
   */
  @java.lang.Override
  public int getCpuidType() {
    return cpuidType_;
  }

  public static final int CPUID_EXTMODEL_FIELD_NUMBER = 9;
  private int cpuidExtmodel_ = 0;
  /**
   * <pre>
   * x: [19:16] extended model
   * </pre>
   *
   * <code>optional uint32 cpuid_extmodel = 9;</code>
   * @return Whether the cpuidExtmodel field is set.
   */
  @java.lang.Override
  public boolean hasCpuidExtmodel() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * x: [19:16] extended model
   * </pre>
   *
   * <code>optional uint32 cpuid_extmodel = 9;</code>
   * @return The cpuidExtmodel.
   */
  @java.lang.Override
  public int getCpuidExtmodel() {
    return cpuidExtmodel_;
  }

  public static final int CPUID_EXTFAMILY_FIELD_NUMBER = 10;
  private int cpuidExtfamily_ = 0;
  /**
   * <pre>
   * y: [27:20] extended family
   * </pre>
   *
   * <code>optional uint32 cpuid_extfamily = 10;</code>
   * @return Whether the cpuidExtfamily field is set.
   */
  @java.lang.Override
  public boolean hasCpuidExtfamily() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * y: [27:20] extended family
   * </pre>
   *
   * <code>optional uint32 cpuid_extfamily = 10;</code>
   * @return The cpuidExtfamily.
   */
  @java.lang.Override
  public int getCpuidExtfamily() {
    return cpuidExtfamily_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cpuManufacturer_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(2, virtSupport_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(3, runningInVm_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(4, osBitCount_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeUInt32(5, cpuidStepping_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeUInt32(6, cpuidModel_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeUInt32(7, cpuidFamily_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeUInt32(8, cpuidType_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeUInt32(9, cpuidExtmodel_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeUInt32(10, cpuidExtfamily_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cpuManufacturer_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, virtSupport_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, runningInVm_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, osBitCount_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, cpuidStepping_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, cpuidModel_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, cpuidFamily_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, cpuidType_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, cpuidExtmodel_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, cpuidExtfamily_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorHost)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorHost other = (com.google.wireless.android.sdk.stats.EmulatorHost) obj;

    if (hasCpuManufacturer() != other.hasCpuManufacturer()) return false;
    if (hasCpuManufacturer()) {
      if (!getCpuManufacturer()
          .equals(other.getCpuManufacturer())) return false;
    }
    if (hasVirtSupport() != other.hasVirtSupport()) return false;
    if (hasVirtSupport()) {
      if (getVirtSupport()
          != other.getVirtSupport()) return false;
    }
    if (hasRunningInVm() != other.hasRunningInVm()) return false;
    if (hasRunningInVm()) {
      if (getRunningInVm()
          != other.getRunningInVm()) return false;
    }
    if (hasOsBitCount() != other.hasOsBitCount()) return false;
    if (hasOsBitCount()) {
      if (getOsBitCount()
          != other.getOsBitCount()) return false;
    }
    if (hasCpuidStepping() != other.hasCpuidStepping()) return false;
    if (hasCpuidStepping()) {
      if (getCpuidStepping()
          != other.getCpuidStepping()) return false;
    }
    if (hasCpuidModel() != other.hasCpuidModel()) return false;
    if (hasCpuidModel()) {
      if (getCpuidModel()
          != other.getCpuidModel()) return false;
    }
    if (hasCpuidFamily() != other.hasCpuidFamily()) return false;
    if (hasCpuidFamily()) {
      if (getCpuidFamily()
          != other.getCpuidFamily()) return false;
    }
    if (hasCpuidType() != other.hasCpuidType()) return false;
    if (hasCpuidType()) {
      if (getCpuidType()
          != other.getCpuidType()) return false;
    }
    if (hasCpuidExtmodel() != other.hasCpuidExtmodel()) return false;
    if (hasCpuidExtmodel()) {
      if (getCpuidExtmodel()
          != other.getCpuidExtmodel()) return false;
    }
    if (hasCpuidExtfamily() != other.hasCpuidExtfamily()) return false;
    if (hasCpuidExtfamily()) {
      if (getCpuidExtfamily()
          != other.getCpuidExtfamily()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCpuManufacturer()) {
      hash = (37 * hash) + CPU_MANUFACTURER_FIELD_NUMBER;
      hash = (53 * hash) + getCpuManufacturer().hashCode();
    }
    if (hasVirtSupport()) {
      hash = (37 * hash) + VIRT_SUPPORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getVirtSupport());
    }
    if (hasRunningInVm()) {
      hash = (37 * hash) + RUNNING_IN_VM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRunningInVm());
    }
    if (hasOsBitCount()) {
      hash = (37 * hash) + OS_BIT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOsBitCount());
    }
    if (hasCpuidStepping()) {
      hash = (37 * hash) + CPUID_STEPPING_FIELD_NUMBER;
      hash = (53 * hash) + getCpuidStepping();
    }
    if (hasCpuidModel()) {
      hash = (37 * hash) + CPUID_MODEL_FIELD_NUMBER;
      hash = (53 * hash) + getCpuidModel();
    }
    if (hasCpuidFamily()) {
      hash = (37 * hash) + CPUID_FAMILY_FIELD_NUMBER;
      hash = (53 * hash) + getCpuidFamily();
    }
    if (hasCpuidType()) {
      hash = (37 * hash) + CPUID_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCpuidType();
    }
    if (hasCpuidExtmodel()) {
      hash = (37 * hash) + CPUID_EXTMODEL_FIELD_NUMBER;
      hash = (53 * hash) + getCpuidExtmodel();
    }
    if (hasCpuidExtfamily()) {
      hash = (37 * hash) + CPUID_EXTFAMILY_FIELD_NUMBER;
      hash = (53 * hash) + getCpuidExtfamily();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorHost parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorHost prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes the status of the machine running the emulator.
   * </pre>
   *
   * Protobuf type {@code android_studio.EmulatorHost}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorHost)
      com.google.wireless.android.sdk.stats.EmulatorHostOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorHost_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorHost_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorHost.class, com.google.wireless.android.sdk.stats.EmulatorHost.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorHost.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      cpuManufacturer_ = "";
      virtSupport_ = false;
      runningInVm_ = false;
      osBitCount_ = 0L;
      cpuidStepping_ = 0;
      cpuidModel_ = 0;
      cpuidFamily_ = 0;
      cpuidType_ = 0;
      cpuidExtmodel_ = 0;
      cpuidExtfamily_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorHost_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorHost getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorHost.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorHost build() {
      com.google.wireless.android.sdk.stats.EmulatorHost result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorHost buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorHost result = new com.google.wireless.android.sdk.stats.EmulatorHost(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.EmulatorHost result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.cpuManufacturer_ = cpuManufacturer_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.virtSupport_ = virtSupport_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.runningInVm_ = runningInVm_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.osBitCount_ = osBitCount_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.cpuidStepping_ = cpuidStepping_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.cpuidModel_ = cpuidModel_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.cpuidFamily_ = cpuidFamily_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.cpuidType_ = cpuidType_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.cpuidExtmodel_ = cpuidExtmodel_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.cpuidExtfamily_ = cpuidExtfamily_;
        to_bitField0_ |= 0x00000200;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorHost) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorHost)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorHost other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorHost.getDefaultInstance()) return this;
      if (other.hasCpuManufacturer()) {
        cpuManufacturer_ = other.cpuManufacturer_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasVirtSupport()) {
        setVirtSupport(other.getVirtSupport());
      }
      if (other.hasRunningInVm()) {
        setRunningInVm(other.getRunningInVm());
      }
      if (other.hasOsBitCount()) {
        setOsBitCount(other.getOsBitCount());
      }
      if (other.hasCpuidStepping()) {
        setCpuidStepping(other.getCpuidStepping());
      }
      if (other.hasCpuidModel()) {
        setCpuidModel(other.getCpuidModel());
      }
      if (other.hasCpuidFamily()) {
        setCpuidFamily(other.getCpuidFamily());
      }
      if (other.hasCpuidType()) {
        setCpuidType(other.getCpuidType());
      }
      if (other.hasCpuidExtmodel()) {
        setCpuidExtmodel(other.getCpuidExtmodel());
      }
      if (other.hasCpuidExtfamily()) {
        setCpuidExtfamily(other.getCpuidExtfamily());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cpuManufacturer_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              virtSupport_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              runningInVm_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              osBitCount_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              cpuidStepping_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              cpuidModel_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              cpuidFamily_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              cpuidType_ = input.readUInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              cpuidExtmodel_ = input.readUInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              cpuidExtfamily_ = input.readUInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object cpuManufacturer_ = "";
    /**
     * <pre>
     * CPU manufacturer of the host, used as certain hypervisors are limited
     * to a certain manufacturer.
     * </pre>
     *
     * <code>optional string cpu_manufacturer = 1;</code>
     * @return Whether the cpuManufacturer field is set.
     */
    public boolean hasCpuManufacturer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * CPU manufacturer of the host, used as certain hypervisors are limited
     * to a certain manufacturer.
     * </pre>
     *
     * <code>optional string cpu_manufacturer = 1;</code>
     * @return The cpuManufacturer.
     */
    public java.lang.String getCpuManufacturer() {
      java.lang.Object ref = cpuManufacturer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cpuManufacturer_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * CPU manufacturer of the host, used as certain hypervisors are limited
     * to a certain manufacturer.
     * </pre>
     *
     * <code>optional string cpu_manufacturer = 1;</code>
     * @return The bytes for cpuManufacturer.
     */
    public com.google.protobuf.ByteString
        getCpuManufacturerBytes() {
      java.lang.Object ref = cpuManufacturer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cpuManufacturer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * CPU manufacturer of the host, used as certain hypervisors are limited
     * to a certain manufacturer.
     * </pre>
     *
     * <code>optional string cpu_manufacturer = 1;</code>
     * @param value The cpuManufacturer to set.
     * @return This builder for chaining.
     */
    public Builder setCpuManufacturer(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cpuManufacturer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * CPU manufacturer of the host, used as certain hypervisors are limited
     * to a certain manufacturer.
     * </pre>
     *
     * <code>optional string cpu_manufacturer = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuManufacturer() {
      cpuManufacturer_ = getDefaultInstance().getCpuManufacturer();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * CPU manufacturer of the host, used as certain hypervisors are limited
     * to a certain manufacturer.
     * </pre>
     *
     * <code>optional string cpu_manufacturer = 1;</code>
     * @param value The bytes for cpuManufacturer to set.
     * @return This builder for chaining.
     */
    public Builder setCpuManufacturerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      cpuManufacturer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private boolean virtSupport_ ;
    /**
     * <pre>
     * Does the host support virtualization technology
     * </pre>
     *
     * <code>optional bool virt_support = 2;</code>
     * @return Whether the virtSupport field is set.
     */
    @java.lang.Override
    public boolean hasVirtSupport() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Does the host support virtualization technology
     * </pre>
     *
     * <code>optional bool virt_support = 2;</code>
     * @return The virtSupport.
     */
    @java.lang.Override
    public boolean getVirtSupport() {
      return virtSupport_;
    }
    /**
     * <pre>
     * Does the host support virtualization technology
     * </pre>
     *
     * <code>optional bool virt_support = 2;</code>
     * @param value The virtSupport to set.
     * @return This builder for chaining.
     */
    public Builder setVirtSupport(boolean value) {

      virtSupport_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Does the host support virtualization technology
     * </pre>
     *
     * <code>optional bool virt_support = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearVirtSupport() {
      bitField0_ = (bitField0_ & ~0x00000002);
      virtSupport_ = false;
      onChanged();
      return this;
    }

    private boolean runningInVm_ ;
    /**
     * <pre>
     * Is the host itself running inside a virtual machine.
     * </pre>
     *
     * <code>optional bool running_in_vm = 3;</code>
     * @return Whether the runningInVm field is set.
     */
    @java.lang.Override
    public boolean hasRunningInVm() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Is the host itself running inside a virtual machine.
     * </pre>
     *
     * <code>optional bool running_in_vm = 3;</code>
     * @return The runningInVm.
     */
    @java.lang.Override
    public boolean getRunningInVm() {
      return runningInVm_;
    }
    /**
     * <pre>
     * Is the host itself running inside a virtual machine.
     * </pre>
     *
     * <code>optional bool running_in_vm = 3;</code>
     * @param value The runningInVm to set.
     * @return This builder for chaining.
     */
    public Builder setRunningInVm(boolean value) {

      runningInVm_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Is the host itself running inside a virtual machine.
     * </pre>
     *
     * <code>optional bool running_in_vm = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRunningInVm() {
      bitField0_ = (bitField0_ & ~0x00000004);
      runningInVm_ = false;
      onChanged();
      return this;
    }

    private long osBitCount_ ;
    /**
     * <pre>
     * May differ from os_architecture field as it is calculated differently,
     * trying to compensate the JVM bittness.
     * </pre>
     *
     * <code>optional int64 os_bit_count = 4;</code>
     * @return Whether the osBitCount field is set.
     */
    @java.lang.Override
    public boolean hasOsBitCount() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * May differ from os_architecture field as it is calculated differently,
     * trying to compensate the JVM bittness.
     * </pre>
     *
     * <code>optional int64 os_bit_count = 4;</code>
     * @return The osBitCount.
     */
    @java.lang.Override
    public long getOsBitCount() {
      return osBitCount_;
    }
    /**
     * <pre>
     * May differ from os_architecture field as it is calculated differently,
     * trying to compensate the JVM bittness.
     * </pre>
     *
     * <code>optional int64 os_bit_count = 4;</code>
     * @param value The osBitCount to set.
     * @return This builder for chaining.
     */
    public Builder setOsBitCount(long value) {

      osBitCount_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * May differ from os_architecture field as it is calculated differently,
     * trying to compensate the JVM bittness.
     * </pre>
     *
     * <code>optional int64 os_bit_count = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOsBitCount() {
      bitField0_ = (bitField0_ & ~0x00000008);
      osBitCount_ = 0L;
      onChanged();
      return this;
    }

    private int cpuidStepping_ ;
    /**
     * <pre>
     * CPU model, family, stepping, as stored in the EAX register
     * after issuing CPUID instruction with EAX=1:
     * 31   27   23   19   15   11   7    3  0
     * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
     * </pre>
     *
     * <code>optional uint32 cpuid_stepping = 5;</code>
     * @return Whether the cpuidStepping field is set.
     */
    @java.lang.Override
    public boolean hasCpuidStepping() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * CPU model, family, stepping, as stored in the EAX register
     * after issuing CPUID instruction with EAX=1:
     * 31   27   23   19   15   11   7    3  0
     * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
     * </pre>
     *
     * <code>optional uint32 cpuid_stepping = 5;</code>
     * @return The cpuidStepping.
     */
    @java.lang.Override
    public int getCpuidStepping() {
      return cpuidStepping_;
    }
    /**
     * <pre>
     * CPU model, family, stepping, as stored in the EAX register
     * after issuing CPUID instruction with EAX=1:
     * 31   27   23   19   15   11   7    3  0
     * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
     * </pre>
     *
     * <code>optional uint32 cpuid_stepping = 5;</code>
     * @param value The cpuidStepping to set.
     * @return This builder for chaining.
     */
    public Builder setCpuidStepping(int value) {

      cpuidStepping_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * CPU model, family, stepping, as stored in the EAX register
     * after issuing CPUID instruction with EAX=1:
     * 31   27   23   19   15   11   7    3  0
     * 0000 yyyy yyyy xxxx 00tt ffff mmmm ssss
     * </pre>
     *
     * <code>optional uint32 cpuid_stepping = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuidStepping() {
      bitField0_ = (bitField0_ & ~0x00000010);
      cpuidStepping_ = 0;
      onChanged();
      return this;
    }

    private int cpuidModel_ ;
    /**
     * <pre>
     * m: [7:4] model (CPU model)
     * </pre>
     *
     * <code>optional uint32 cpuid_model = 6;</code>
     * @return Whether the cpuidModel field is set.
     */
    @java.lang.Override
    public boolean hasCpuidModel() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * m: [7:4] model (CPU model)
     * </pre>
     *
     * <code>optional uint32 cpuid_model = 6;</code>
     * @return The cpuidModel.
     */
    @java.lang.Override
    public int getCpuidModel() {
      return cpuidModel_;
    }
    /**
     * <pre>
     * m: [7:4] model (CPU model)
     * </pre>
     *
     * <code>optional uint32 cpuid_model = 6;</code>
     * @param value The cpuidModel to set.
     * @return This builder for chaining.
     */
    public Builder setCpuidModel(int value) {

      cpuidModel_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * m: [7:4] model (CPU model)
     * </pre>
     *
     * <code>optional uint32 cpuid_model = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuidModel() {
      bitField0_ = (bitField0_ & ~0x00000020);
      cpuidModel_ = 0;
      onChanged();
      return this;
    }

    private int cpuidFamily_ ;
    /**
     * <pre>
     * f: [11:8] family (CPU make)
     * </pre>
     *
     * <code>optional uint32 cpuid_family = 7;</code>
     * @return Whether the cpuidFamily field is set.
     */
    @java.lang.Override
    public boolean hasCpuidFamily() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * f: [11:8] family (CPU make)
     * </pre>
     *
     * <code>optional uint32 cpuid_family = 7;</code>
     * @return The cpuidFamily.
     */
    @java.lang.Override
    public int getCpuidFamily() {
      return cpuidFamily_;
    }
    /**
     * <pre>
     * f: [11:8] family (CPU make)
     * </pre>
     *
     * <code>optional uint32 cpuid_family = 7;</code>
     * @param value The cpuidFamily to set.
     * @return This builder for chaining.
     */
    public Builder setCpuidFamily(int value) {

      cpuidFamily_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * f: [11:8] family (CPU make)
     * </pre>
     *
     * <code>optional uint32 cpuid_family = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuidFamily() {
      bitField0_ = (bitField0_ & ~0x00000040);
      cpuidFamily_ = 0;
      onChanged();
      return this;
    }

    private int cpuidType_ ;
    /**
     * <pre>
     * t: [13:12] CPU type
     * </pre>
     *
     * <code>optional uint32 cpuid_type = 8;</code>
     * @return Whether the cpuidType field is set.
     */
    @java.lang.Override
    public boolean hasCpuidType() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * t: [13:12] CPU type
     * </pre>
     *
     * <code>optional uint32 cpuid_type = 8;</code>
     * @return The cpuidType.
     */
    @java.lang.Override
    public int getCpuidType() {
      return cpuidType_;
    }
    /**
     * <pre>
     * t: [13:12] CPU type
     * </pre>
     *
     * <code>optional uint32 cpuid_type = 8;</code>
     * @param value The cpuidType to set.
     * @return This builder for chaining.
     */
    public Builder setCpuidType(int value) {

      cpuidType_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * t: [13:12] CPU type
     * </pre>
     *
     * <code>optional uint32 cpuid_type = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuidType() {
      bitField0_ = (bitField0_ & ~0x00000080);
      cpuidType_ = 0;
      onChanged();
      return this;
    }

    private int cpuidExtmodel_ ;
    /**
     * <pre>
     * x: [19:16] extended model
     * </pre>
     *
     * <code>optional uint32 cpuid_extmodel = 9;</code>
     * @return Whether the cpuidExtmodel field is set.
     */
    @java.lang.Override
    public boolean hasCpuidExtmodel() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * x: [19:16] extended model
     * </pre>
     *
     * <code>optional uint32 cpuid_extmodel = 9;</code>
     * @return The cpuidExtmodel.
     */
    @java.lang.Override
    public int getCpuidExtmodel() {
      return cpuidExtmodel_;
    }
    /**
     * <pre>
     * x: [19:16] extended model
     * </pre>
     *
     * <code>optional uint32 cpuid_extmodel = 9;</code>
     * @param value The cpuidExtmodel to set.
     * @return This builder for chaining.
     */
    public Builder setCpuidExtmodel(int value) {

      cpuidExtmodel_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * x: [19:16] extended model
     * </pre>
     *
     * <code>optional uint32 cpuid_extmodel = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuidExtmodel() {
      bitField0_ = (bitField0_ & ~0x00000100);
      cpuidExtmodel_ = 0;
      onChanged();
      return this;
    }

    private int cpuidExtfamily_ ;
    /**
     * <pre>
     * y: [27:20] extended family
     * </pre>
     *
     * <code>optional uint32 cpuid_extfamily = 10;</code>
     * @return Whether the cpuidExtfamily field is set.
     */
    @java.lang.Override
    public boolean hasCpuidExtfamily() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * y: [27:20] extended family
     * </pre>
     *
     * <code>optional uint32 cpuid_extfamily = 10;</code>
     * @return The cpuidExtfamily.
     */
    @java.lang.Override
    public int getCpuidExtfamily() {
      return cpuidExtfamily_;
    }
    /**
     * <pre>
     * y: [27:20] extended family
     * </pre>
     *
     * <code>optional uint32 cpuid_extfamily = 10;</code>
     * @param value The cpuidExtfamily to set.
     * @return This builder for chaining.
     */
    public Builder setCpuidExtfamily(int value) {

      cpuidExtfamily_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * y: [27:20] extended family
     * </pre>
     *
     * <code>optional uint32 cpuid_extfamily = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuidExtfamily() {
      bitField0_ = (bitField0_ & ~0x00000200);
      cpuidExtfamily_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorHost)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorHost)
  private static final com.google.wireless.android.sdk.stats.EmulatorHost DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorHost();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorHost getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorHost>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorHost>() {
    @java.lang.Override
    public EmulatorHost parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EmulatorHost> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorHost> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorHost getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

