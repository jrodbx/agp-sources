// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.IDeviceUsageEvent}
 */
public final class IDeviceUsageEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.IDeviceUsageEvent)
    IDeviceUsageEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IDeviceUsageEvent.newBuilder() to construct.
  private IDeviceUsageEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IDeviceUsageEvent() {
    method_ = 0;
    sourceType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IDeviceUsageEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_IDeviceUsageEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_IDeviceUsageEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.IDeviceUsageEvent.class, com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Builder.class);
  }

  /**
   * <pre>
   * Identifier of the `IDevice` method
   * </pre>
   *
   * Protobuf enum {@code android_studio.IDeviceUsageEvent.Method}
   */
  public enum Method
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>METHOD_UNSPECIFIED = 0;</code>
     */
    METHOD_UNSPECIFIED(0),
    /**
     * <code>GET_NAME = 1;</code>
     */
    GET_NAME(1),
    /**
     * <code>EXECUTE_SHELL_COMMAND_1 = 2;</code>
     */
    EXECUTE_SHELL_COMMAND_1(2),
    /**
     * <code>EXECUTE_SHELL_COMMAND_2 = 3;</code>
     */
    EXECUTE_SHELL_COMMAND_2(3),
    /**
     * <code>EXECUTE_SHELL_COMMAND_3 = 4;</code>
     */
    EXECUTE_SHELL_COMMAND_3(4),
    /**
     * <code>EXECUTE_SHELL_COMMAND_4 = 5;</code>
     */
    EXECUTE_SHELL_COMMAND_4(5),
    /**
     * <code>EXECUTE_SHELL_COMMAND_5 = 6;</code>
     */
    EXECUTE_SHELL_COMMAND_5(6),
    /**
     * <code>GET_SYSTEM_PROPERTY = 7;</code>
     */
    GET_SYSTEM_PROPERTY(7),
    /**
     * <code>GET_SERIAL_NUMBER = 8;</code>
     */
    GET_SERIAL_NUMBER(8),
    /**
     * <code>GET_AVD_NAME = 9;</code>
     */
    GET_AVD_NAME(9),
    /**
     * <code>GET_AVD_PATH = 10;</code>
     */
    GET_AVD_PATH(10),
    /**
     * <code>GET_AVD_DATA = 11;</code>
     */
    GET_AVD_DATA(11),
    /**
     * <code>CREATE_AVD_DATA = 12;</code>
     */
    CREATE_AVD_DATA(12),
    /**
     * <code>GET_STATE = 13;</code>
     */
    GET_STATE(13),
    /**
     * <code>GET_PROPERTIES = 14;</code>
     */
    GET_PROPERTIES(14),
    /**
     * <code>GET_PROPERTY_COUNT = 15;</code>
     */
    GET_PROPERTY_COUNT(15),
    /**
     * <code>GET_PROPERTY = 16;</code>
     */
    GET_PROPERTY(16),
    /**
     * <code>ARE_PROPERTIES_SET = 17;</code>
     */
    ARE_PROPERTIES_SET(17),
    /**
     * <code>SUPPORTS_FEATURE_1 = 18;</code>
     */
    SUPPORTS_FEATURE_1(18),
    /**
     * <code>SUPPORTS_FEATURE_2 = 19;</code>
     */
    SUPPORTS_FEATURE_2(19),
    /**
     * <code>SERVICES = 20;</code>
     */
    SERVICES(20),
    /**
     * <code>TO_STRING = 21;</code>
     */
    TO_STRING(21),
    /**
     * <code>IS_ONLINE = 22;</code>
     */
    IS_ONLINE(22),
    /**
     * <code>IS_EMULATOR = 23;</code>
     */
    IS_EMULATOR(23),
    /**
     * <code>IS_OFFLINE = 24;</code>
     */
    IS_OFFLINE(24),
    /**
     * <code>IS_BOOT_LOADER = 25;</code>
     */
    IS_BOOT_LOADER(25),
    /**
     * <code>GET_CLIENTS = 26;</code>
     */
    GET_CLIENTS(26),
    /**
     * <code>GET_CLIENT = 27;</code>
     */
    GET_CLIENT(27),
    /**
     * <code>GET_PROFILEABLE_CLIENTS = 28;</code>
     */
    GET_PROFILEABLE_CLIENTS(28),
    /**
     * <code>CREATE_FORWARD_1 = 29;</code>
     */
    CREATE_FORWARD_1(29),
    /**
     * <code>CREATE_FORWARD_2 = 30;</code>
     */
    CREATE_FORWARD_2(30),
    /**
     * <code>REMOVE_FORWARD = 31;</code>
     */
    REMOVE_FORWARD(31),
    /**
     * <code>GET_CLIENT_NAME = 32;</code>
     */
    GET_CLIENT_NAME(32),
    /**
     * <code>PUSH_FILE = 33;</code>
     */
    PUSH_FILE(33),
    /**
     * <code>PULL_FILE = 34;</code>
     */
    PULL_FILE(34),
    /**
     * <code>INSTALL_PACKAGE_1 = 35;</code>
     */
    INSTALL_PACKAGE_1(35),
    /**
     * <code>INSTALL_PACKAGE_2 = 36;</code>
     */
    INSTALL_PACKAGE_2(36),
    /**
     * <code>INSTALL_PACKAGE_3 = 37;</code>
     */
    INSTALL_PACKAGE_3(37),
    /**
     * <code>INSTALL_PACKAGES_1 = 38;</code>
     */
    INSTALL_PACKAGES_1(38),
    /**
     * <code>INSTALL_PACKAGES_2 = 39;</code>
     */
    INSTALL_PACKAGES_2(39),
    /**
     * <code>GET_LAST_INSTALL_METRICS = 40;</code>
     */
    GET_LAST_INSTALL_METRICS(40),
    /**
     * <code>SYNC_PACKAGE_TO_DEVICE = 41;</code>
     */
    SYNC_PACKAGE_TO_DEVICE(41),
    /**
     * <code>INSTALL_REMOTE_PACKAGE = 42;</code>
     */
    INSTALL_REMOTE_PACKAGE(42),
    /**
     * <code>REMOVE_REMOTE_PACKAGE = 43;</code>
     */
    REMOVE_REMOTE_PACKAGE(43),
    /**
     * <code>UNINSTALL_PACKAGE = 44;</code>
     */
    UNINSTALL_PACKAGE(44),
    /**
     * <code>UNINSTALL_APP = 45;</code>
     */
    UNINSTALL_APP(45),
    /**
     * <code>ROOT = 46;</code>
     */
    ROOT(46),
    /**
     * <code>FORCE_STOP = 47;</code>
     */
    FORCE_STOP(47),
    /**
     * <code>KILL = 48;</code>
     */
    KILL(48),
    /**
     * <code>IS_ROOT = 49;</code>
     */
    IS_ROOT(49),
    /**
     * <code>GET_ABIS = 50;</code>
     */
    GET_ABIS(50),
    /**
     * <code>GET_DENSITY = 51;</code>
     */
    GET_DENSITY(51),
    /**
     * <code>GET_VERSION = 52;</code>
     */
    GET_VERSION(52),
    /**
     * <code>EXECUTE_REMOTE_COMMAND_1 = 53;</code>
     */
    EXECUTE_REMOTE_COMMAND_1(53),
    /**
     * <code>EXECUTE_REMOTE_COMMAND_2 = 54;</code>
     */
    EXECUTE_REMOTE_COMMAND_2(54),
    /**
     * <code>EXECUTE_REMOTE_COMMAND_3 = 55;</code>
     */
    EXECUTE_REMOTE_COMMAND_3(55),
    /**
     * <code>EXECUTE_REMOTE_COMMAND_4 = 56;</code>
     */
    EXECUTE_REMOTE_COMMAND_4(56),
    /**
     * <code>RAW_EXEC2 = 57;</code>
     */
    RAW_EXEC2(57),
    /**
     * <code>STAT_FILE = 58;</code>
     */
    STAT_FILE(58),
    /**
     * <code>UNSUPPORTED_METHOD = 59;</code>
     */
    UNSUPPORTED_METHOD(59),
    /**
     * <code>CREATE_REVERSE = 60;</code>
     */
    CREATE_REVERSE(60),
    /**
     * <code>REMOVE_REVERSE = 61;</code>
     */
    REMOVE_REVERSE(61),
    ;

    /**
     * <code>METHOD_UNSPECIFIED = 0;</code>
     */
    public static final int METHOD_UNSPECIFIED_VALUE = 0;
    /**
     * <code>GET_NAME = 1;</code>
     */
    public static final int GET_NAME_VALUE = 1;
    /**
     * <code>EXECUTE_SHELL_COMMAND_1 = 2;</code>
     */
    public static final int EXECUTE_SHELL_COMMAND_1_VALUE = 2;
    /**
     * <code>EXECUTE_SHELL_COMMAND_2 = 3;</code>
     */
    public static final int EXECUTE_SHELL_COMMAND_2_VALUE = 3;
    /**
     * <code>EXECUTE_SHELL_COMMAND_3 = 4;</code>
     */
    public static final int EXECUTE_SHELL_COMMAND_3_VALUE = 4;
    /**
     * <code>EXECUTE_SHELL_COMMAND_4 = 5;</code>
     */
    public static final int EXECUTE_SHELL_COMMAND_4_VALUE = 5;
    /**
     * <code>EXECUTE_SHELL_COMMAND_5 = 6;</code>
     */
    public static final int EXECUTE_SHELL_COMMAND_5_VALUE = 6;
    /**
     * <code>GET_SYSTEM_PROPERTY = 7;</code>
     */
    public static final int GET_SYSTEM_PROPERTY_VALUE = 7;
    /**
     * <code>GET_SERIAL_NUMBER = 8;</code>
     */
    public static final int GET_SERIAL_NUMBER_VALUE = 8;
    /**
     * <code>GET_AVD_NAME = 9;</code>
     */
    public static final int GET_AVD_NAME_VALUE = 9;
    /**
     * <code>GET_AVD_PATH = 10;</code>
     */
    public static final int GET_AVD_PATH_VALUE = 10;
    /**
     * <code>GET_AVD_DATA = 11;</code>
     */
    public static final int GET_AVD_DATA_VALUE = 11;
    /**
     * <code>CREATE_AVD_DATA = 12;</code>
     */
    public static final int CREATE_AVD_DATA_VALUE = 12;
    /**
     * <code>GET_STATE = 13;</code>
     */
    public static final int GET_STATE_VALUE = 13;
    /**
     * <code>GET_PROPERTIES = 14;</code>
     */
    public static final int GET_PROPERTIES_VALUE = 14;
    /**
     * <code>GET_PROPERTY_COUNT = 15;</code>
     */
    public static final int GET_PROPERTY_COUNT_VALUE = 15;
    /**
     * <code>GET_PROPERTY = 16;</code>
     */
    public static final int GET_PROPERTY_VALUE = 16;
    /**
     * <code>ARE_PROPERTIES_SET = 17;</code>
     */
    public static final int ARE_PROPERTIES_SET_VALUE = 17;
    /**
     * <code>SUPPORTS_FEATURE_1 = 18;</code>
     */
    public static final int SUPPORTS_FEATURE_1_VALUE = 18;
    /**
     * <code>SUPPORTS_FEATURE_2 = 19;</code>
     */
    public static final int SUPPORTS_FEATURE_2_VALUE = 19;
    /**
     * <code>SERVICES = 20;</code>
     */
    public static final int SERVICES_VALUE = 20;
    /**
     * <code>TO_STRING = 21;</code>
     */
    public static final int TO_STRING_VALUE = 21;
    /**
     * <code>IS_ONLINE = 22;</code>
     */
    public static final int IS_ONLINE_VALUE = 22;
    /**
     * <code>IS_EMULATOR = 23;</code>
     */
    public static final int IS_EMULATOR_VALUE = 23;
    /**
     * <code>IS_OFFLINE = 24;</code>
     */
    public static final int IS_OFFLINE_VALUE = 24;
    /**
     * <code>IS_BOOT_LOADER = 25;</code>
     */
    public static final int IS_BOOT_LOADER_VALUE = 25;
    /**
     * <code>GET_CLIENTS = 26;</code>
     */
    public static final int GET_CLIENTS_VALUE = 26;
    /**
     * <code>GET_CLIENT = 27;</code>
     */
    public static final int GET_CLIENT_VALUE = 27;
    /**
     * <code>GET_PROFILEABLE_CLIENTS = 28;</code>
     */
    public static final int GET_PROFILEABLE_CLIENTS_VALUE = 28;
    /**
     * <code>CREATE_FORWARD_1 = 29;</code>
     */
    public static final int CREATE_FORWARD_1_VALUE = 29;
    /**
     * <code>CREATE_FORWARD_2 = 30;</code>
     */
    public static final int CREATE_FORWARD_2_VALUE = 30;
    /**
     * <code>REMOVE_FORWARD = 31;</code>
     */
    public static final int REMOVE_FORWARD_VALUE = 31;
    /**
     * <code>GET_CLIENT_NAME = 32;</code>
     */
    public static final int GET_CLIENT_NAME_VALUE = 32;
    /**
     * <code>PUSH_FILE = 33;</code>
     */
    public static final int PUSH_FILE_VALUE = 33;
    /**
     * <code>PULL_FILE = 34;</code>
     */
    public static final int PULL_FILE_VALUE = 34;
    /**
     * <code>INSTALL_PACKAGE_1 = 35;</code>
     */
    public static final int INSTALL_PACKAGE_1_VALUE = 35;
    /**
     * <code>INSTALL_PACKAGE_2 = 36;</code>
     */
    public static final int INSTALL_PACKAGE_2_VALUE = 36;
    /**
     * <code>INSTALL_PACKAGE_3 = 37;</code>
     */
    public static final int INSTALL_PACKAGE_3_VALUE = 37;
    /**
     * <code>INSTALL_PACKAGES_1 = 38;</code>
     */
    public static final int INSTALL_PACKAGES_1_VALUE = 38;
    /**
     * <code>INSTALL_PACKAGES_2 = 39;</code>
     */
    public static final int INSTALL_PACKAGES_2_VALUE = 39;
    /**
     * <code>GET_LAST_INSTALL_METRICS = 40;</code>
     */
    public static final int GET_LAST_INSTALL_METRICS_VALUE = 40;
    /**
     * <code>SYNC_PACKAGE_TO_DEVICE = 41;</code>
     */
    public static final int SYNC_PACKAGE_TO_DEVICE_VALUE = 41;
    /**
     * <code>INSTALL_REMOTE_PACKAGE = 42;</code>
     */
    public static final int INSTALL_REMOTE_PACKAGE_VALUE = 42;
    /**
     * <code>REMOVE_REMOTE_PACKAGE = 43;</code>
     */
    public static final int REMOVE_REMOTE_PACKAGE_VALUE = 43;
    /**
     * <code>UNINSTALL_PACKAGE = 44;</code>
     */
    public static final int UNINSTALL_PACKAGE_VALUE = 44;
    /**
     * <code>UNINSTALL_APP = 45;</code>
     */
    public static final int UNINSTALL_APP_VALUE = 45;
    /**
     * <code>ROOT = 46;</code>
     */
    public static final int ROOT_VALUE = 46;
    /**
     * <code>FORCE_STOP = 47;</code>
     */
    public static final int FORCE_STOP_VALUE = 47;
    /**
     * <code>KILL = 48;</code>
     */
    public static final int KILL_VALUE = 48;
    /**
     * <code>IS_ROOT = 49;</code>
     */
    public static final int IS_ROOT_VALUE = 49;
    /**
     * <code>GET_ABIS = 50;</code>
     */
    public static final int GET_ABIS_VALUE = 50;
    /**
     * <code>GET_DENSITY = 51;</code>
     */
    public static final int GET_DENSITY_VALUE = 51;
    /**
     * <code>GET_VERSION = 52;</code>
     */
    public static final int GET_VERSION_VALUE = 52;
    /**
     * <code>EXECUTE_REMOTE_COMMAND_1 = 53;</code>
     */
    public static final int EXECUTE_REMOTE_COMMAND_1_VALUE = 53;
    /**
     * <code>EXECUTE_REMOTE_COMMAND_2 = 54;</code>
     */
    public static final int EXECUTE_REMOTE_COMMAND_2_VALUE = 54;
    /**
     * <code>EXECUTE_REMOTE_COMMAND_3 = 55;</code>
     */
    public static final int EXECUTE_REMOTE_COMMAND_3_VALUE = 55;
    /**
     * <code>EXECUTE_REMOTE_COMMAND_4 = 56;</code>
     */
    public static final int EXECUTE_REMOTE_COMMAND_4_VALUE = 56;
    /**
     * <code>RAW_EXEC2 = 57;</code>
     */
    public static final int RAW_EXEC2_VALUE = 57;
    /**
     * <code>STAT_FILE = 58;</code>
     */
    public static final int STAT_FILE_VALUE = 58;
    /**
     * <code>UNSUPPORTED_METHOD = 59;</code>
     */
    public static final int UNSUPPORTED_METHOD_VALUE = 59;
    /**
     * <code>CREATE_REVERSE = 60;</code>
     */
    public static final int CREATE_REVERSE_VALUE = 60;
    /**
     * <code>REMOVE_REVERSE = 61;</code>
     */
    public static final int REMOVE_REVERSE_VALUE = 61;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Method valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Method forNumber(int value) {
      switch (value) {
        case 0: return METHOD_UNSPECIFIED;
        case 1: return GET_NAME;
        case 2: return EXECUTE_SHELL_COMMAND_1;
        case 3: return EXECUTE_SHELL_COMMAND_2;
        case 4: return EXECUTE_SHELL_COMMAND_3;
        case 5: return EXECUTE_SHELL_COMMAND_4;
        case 6: return EXECUTE_SHELL_COMMAND_5;
        case 7: return GET_SYSTEM_PROPERTY;
        case 8: return GET_SERIAL_NUMBER;
        case 9: return GET_AVD_NAME;
        case 10: return GET_AVD_PATH;
        case 11: return GET_AVD_DATA;
        case 12: return CREATE_AVD_DATA;
        case 13: return GET_STATE;
        case 14: return GET_PROPERTIES;
        case 15: return GET_PROPERTY_COUNT;
        case 16: return GET_PROPERTY;
        case 17: return ARE_PROPERTIES_SET;
        case 18: return SUPPORTS_FEATURE_1;
        case 19: return SUPPORTS_FEATURE_2;
        case 20: return SERVICES;
        case 21: return TO_STRING;
        case 22: return IS_ONLINE;
        case 23: return IS_EMULATOR;
        case 24: return IS_OFFLINE;
        case 25: return IS_BOOT_LOADER;
        case 26: return GET_CLIENTS;
        case 27: return GET_CLIENT;
        case 28: return GET_PROFILEABLE_CLIENTS;
        case 29: return CREATE_FORWARD_1;
        case 30: return CREATE_FORWARD_2;
        case 31: return REMOVE_FORWARD;
        case 32: return GET_CLIENT_NAME;
        case 33: return PUSH_FILE;
        case 34: return PULL_FILE;
        case 35: return INSTALL_PACKAGE_1;
        case 36: return INSTALL_PACKAGE_2;
        case 37: return INSTALL_PACKAGE_3;
        case 38: return INSTALL_PACKAGES_1;
        case 39: return INSTALL_PACKAGES_2;
        case 40: return GET_LAST_INSTALL_METRICS;
        case 41: return SYNC_PACKAGE_TO_DEVICE;
        case 42: return INSTALL_REMOTE_PACKAGE;
        case 43: return REMOVE_REMOTE_PACKAGE;
        case 44: return UNINSTALL_PACKAGE;
        case 45: return UNINSTALL_APP;
        case 46: return ROOT;
        case 47: return FORCE_STOP;
        case 48: return KILL;
        case 49: return IS_ROOT;
        case 50: return GET_ABIS;
        case 51: return GET_DENSITY;
        case 52: return GET_VERSION;
        case 53: return EXECUTE_REMOTE_COMMAND_1;
        case 54: return EXECUTE_REMOTE_COMMAND_2;
        case 55: return EXECUTE_REMOTE_COMMAND_3;
        case 56: return EXECUTE_REMOTE_COMMAND_4;
        case 57: return RAW_EXEC2;
        case 58: return STAT_FILE;
        case 59: return UNSUPPORTED_METHOD;
        case 60: return CREATE_REVERSE;
        case 61: return REMOVE_REVERSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Method>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Method> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Method>() {
            public Method findValueByNumber(int number) {
              return Method.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.IDeviceUsageEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final Method[] VALUES = values();

    public static Method valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Method(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.IDeviceUsageEvent.Method)
  }

  /**
   * <pre>
   * Whether this event is coming from `AdblibIDeviceWrapper` or `DeviceImpl`
   * </pre>
   *
   * Protobuf enum {@code android_studio.IDeviceUsageEvent.SourceType}
   */
  public enum SourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SOURCE_TYPE_UNSPECIFIED = 0;</code>
     */
    SOURCE_TYPE_UNSPECIFIED(0),
    /**
     * <code>DEVICE_IMPL = 1;</code>
     */
    DEVICE_IMPL(1),
    /**
     * <code>ADBLIB_I_DEVICE_WRAPPER = 2;</code>
     */
    ADBLIB_I_DEVICE_WRAPPER(2),
    ;

    /**
     * <code>SOURCE_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int SOURCE_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>DEVICE_IMPL = 1;</code>
     */
    public static final int DEVICE_IMPL_VALUE = 1;
    /**
     * <code>ADBLIB_I_DEVICE_WRAPPER = 2;</code>
     */
    public static final int ADBLIB_I_DEVICE_WRAPPER_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SourceType forNumber(int value) {
      switch (value) {
        case 0: return SOURCE_TYPE_UNSPECIFIED;
        case 1: return DEVICE_IMPL;
        case 2: return ADBLIB_I_DEVICE_WRAPPER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SourceType>() {
            public SourceType findValueByNumber(int number) {
              return SourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.IDeviceUsageEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final SourceType[] VALUES = values();

    public static SourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.IDeviceUsageEvent.SourceType)
  }

  private int bitField0_;
  public static final int METHOD_FIELD_NUMBER = 1;
  private int method_ = 0;
  /**
   * <pre>
   * 'IDevice' method
   * </pre>
   *
   * <code>optional .android_studio.IDeviceUsageEvent.Method method = 1;</code>
   * @return Whether the method field is set.
   */
  @java.lang.Override public boolean hasMethod() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * 'IDevice' method
   * </pre>
   *
   * <code>optional .android_studio.IDeviceUsageEvent.Method method = 1;</code>
   * @return The method.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method getMethod() {
    com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method result = com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method.forNumber(method_);
    return result == null ? com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method.METHOD_UNSPECIFIED : result;
  }

  public static final int SOURCE_TYPE_FIELD_NUMBER = 2;
  private int sourceType_ = 0;
  /**
   * <pre>
   * `IDevice` implementation
   * </pre>
   *
   * <code>optional .android_studio.IDeviceUsageEvent.SourceType source_type = 2;</code>
   * @return Whether the sourceType field is set.
   */
  @java.lang.Override public boolean hasSourceType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * `IDevice` implementation
   * </pre>
   *
   * <code>optional .android_studio.IDeviceUsageEvent.SourceType source_type = 2;</code>
   * @return The sourceType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType getSourceType() {
    com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType result = com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType.forNumber(sourceType_);
    return result == null ? com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType.SOURCE_TYPE_UNSPECIFIED : result;
  }

  public static final int IS_EXCEPTION_FIELD_NUMBER = 3;
  private boolean isException_ = false;
  /**
   * <pre>
   * Whether method threw an exception
   * </pre>
   *
   * <code>optional bool is_exception = 3;</code>
   * @return Whether the isException field is set.
   */
  @java.lang.Override
  public boolean hasIsException() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Whether method threw an exception
   * </pre>
   *
   * <code>optional bool is_exception = 3;</code>
   * @return The isException.
   */
  @java.lang.Override
  public boolean getIsException() {
    return isException_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, method_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, sourceType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(3, isException_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, method_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, sourceType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, isException_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.IDeviceUsageEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.IDeviceUsageEvent other = (com.google.wireless.android.sdk.stats.IDeviceUsageEvent) obj;

    if (hasMethod() != other.hasMethod()) return false;
    if (hasMethod()) {
      if (method_ != other.method_) return false;
    }
    if (hasSourceType() != other.hasSourceType()) return false;
    if (hasSourceType()) {
      if (sourceType_ != other.sourceType_) return false;
    }
    if (hasIsException() != other.hasIsException()) return false;
    if (hasIsException()) {
      if (getIsException()
          != other.getIsException()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMethod()) {
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + method_;
    }
    if (hasSourceType()) {
      hash = (37 * hash) + SOURCE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + sourceType_;
    }
    if (hasIsException()) {
      hash = (37 * hash) + IS_EXCEPTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsException());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.IDeviceUsageEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.IDeviceUsageEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.IDeviceUsageEvent)
      com.google.wireless.android.sdk.stats.IDeviceUsageEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_IDeviceUsageEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_IDeviceUsageEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.IDeviceUsageEvent.class, com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.IDeviceUsageEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      method_ = 0;
      sourceType_ = 0;
      isException_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_IDeviceUsageEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.IDeviceUsageEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.IDeviceUsageEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.IDeviceUsageEvent build() {
      com.google.wireless.android.sdk.stats.IDeviceUsageEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.IDeviceUsageEvent buildPartial() {
      com.google.wireless.android.sdk.stats.IDeviceUsageEvent result = new com.google.wireless.android.sdk.stats.IDeviceUsageEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.IDeviceUsageEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.method_ = method_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.sourceType_ = sourceType_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.isException_ = isException_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.IDeviceUsageEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.IDeviceUsageEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.IDeviceUsageEvent other) {
      if (other == com.google.wireless.android.sdk.stats.IDeviceUsageEvent.getDefaultInstance()) return this;
      if (other.hasMethod()) {
        setMethod(other.getMethod());
      }
      if (other.hasSourceType()) {
        setSourceType(other.getSourceType());
      }
      if (other.hasIsException()) {
        setIsException(other.getIsException());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method tmpValue =
                  com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                method_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType tmpValue =
                  com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                sourceType_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              isException_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int method_ = 0;
    /**
     * <pre>
     * 'IDevice' method
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.Method method = 1;</code>
     * @return Whether the method field is set.
     */
    @java.lang.Override public boolean hasMethod() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 'IDevice' method
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.Method method = 1;</code>
     * @return The method.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method getMethod() {
      com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method result = com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method.forNumber(method_);
      return result == null ? com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method.METHOD_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * 'IDevice' method
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.Method method = 1;</code>
     * @param value The method to set.
     * @return This builder for chaining.
     */
    public Builder setMethod(com.google.wireless.android.sdk.stats.IDeviceUsageEvent.Method value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      method_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'IDevice' method
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.Method method = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMethod() {
      bitField0_ = (bitField0_ & ~0x00000001);
      method_ = 0;
      onChanged();
      return this;
    }

    private int sourceType_ = 0;
    /**
     * <pre>
     * `IDevice` implementation
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.SourceType source_type = 2;</code>
     * @return Whether the sourceType field is set.
     */
    @java.lang.Override public boolean hasSourceType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * `IDevice` implementation
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.SourceType source_type = 2;</code>
     * @return The sourceType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType getSourceType() {
      com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType result = com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType.forNumber(sourceType_);
      return result == null ? com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType.SOURCE_TYPE_UNSPECIFIED : result;
    }
    /**
     * <pre>
     * `IDevice` implementation
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.SourceType source_type = 2;</code>
     * @param value The sourceType to set.
     * @return This builder for chaining.
     */
    public Builder setSourceType(com.google.wireless.android.sdk.stats.IDeviceUsageEvent.SourceType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      sourceType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `IDevice` implementation
     * </pre>
     *
     * <code>optional .android_studio.IDeviceUsageEvent.SourceType source_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sourceType_ = 0;
      onChanged();
      return this;
    }

    private boolean isException_ ;
    /**
     * <pre>
     * Whether method threw an exception
     * </pre>
     *
     * <code>optional bool is_exception = 3;</code>
     * @return Whether the isException field is set.
     */
    @java.lang.Override
    public boolean hasIsException() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Whether method threw an exception
     * </pre>
     *
     * <code>optional bool is_exception = 3;</code>
     * @return The isException.
     */
    @java.lang.Override
    public boolean getIsException() {
      return isException_;
    }
    /**
     * <pre>
     * Whether method threw an exception
     * </pre>
     *
     * <code>optional bool is_exception = 3;</code>
     * @param value The isException to set.
     * @return This builder for chaining.
     */
    public Builder setIsException(boolean value) {

      isException_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether method threw an exception
     * </pre>
     *
     * <code>optional bool is_exception = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsException() {
      bitField0_ = (bitField0_ & ~0x00000004);
      isException_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.IDeviceUsageEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.IDeviceUsageEvent)
  private static final com.google.wireless.android.sdk.stats.IDeviceUsageEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.IDeviceUsageEvent();
  }

  public static com.google.wireless.android.sdk.stats.IDeviceUsageEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<IDeviceUsageEvent>
      PARSER = new com.google.protobuf.AbstractParser<IDeviceUsageEvent>() {
    @java.lang.Override
    public IDeviceUsageEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<IDeviceUsageEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IDeviceUsageEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.IDeviceUsageEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

