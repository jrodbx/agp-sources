// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface InstantRunOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.InstantRun)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * What kind of Instant Run deployment was chosen.
   * </pre>
   *
   * <code>optional .android_studio.InstantRun.InstantRunDeploymentKind deployment_kind = 1;</code>
   * @return Whether the deploymentKind field is set.
   */
  boolean hasDeploymentKind();
  /**
   * <pre>
   * What kind of Instant Run deployment was chosen.
   * </pre>
   *
   * <code>optional .android_studio.InstantRun.InstantRunDeploymentKind deployment_kind = 1;</code>
   * @return The deploymentKind.
   */
  com.google.wireless.android.sdk.stats.InstantRun.InstantRunDeploymentKind getDeploymentKind();

  /**
   * <pre>
   * Historical, we had two enums tracking this, this one was never used.
   * what was the reason for chosing that kind of deployment from the gradle
   * side.
   * </pre>
   *
   * <code>optional .android_studio.InstantRun.InstantRunBuildCause instant_run_build_cause = 3 [deprecated = true];</code>
   * @deprecated android_studio.InstantRun.instant_run_build_cause is deprecated.
   *     See studio_stats.proto;l=3967
   * @return Whether the instantRunBuildCause field is set.
   */
  @java.lang.Deprecated boolean hasInstantRunBuildCause();
  /**
   * <pre>
   * Historical, we had two enums tracking this, this one was never used.
   * what was the reason for chosing that kind of deployment from the gradle
   * side.
   * </pre>
   *
   * <code>optional .android_studio.InstantRun.InstantRunBuildCause instant_run_build_cause = 3 [deprecated = true];</code>
   * @deprecated android_studio.InstantRun.instant_run_build_cause is deprecated.
   *     See studio_stats.proto;l=3967
   * @return The instantRunBuildCause.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.InstantRun.InstantRunBuildCause getInstantRunBuildCause();

  /**
   * <pre>
   * time the InstantRun enabled took in milliseconds.
   * </pre>
   *
   * <code>optional int64 build_time = 4;</code>
   * @return Whether the buildTime field is set.
   */
  boolean hasBuildTime();
  /**
   * <pre>
   * time the InstantRun enabled took in milliseconds.
   * </pre>
   *
   * <code>optional int64 build_time = 4;</code>
   * @return The buildTime.
   */
  long getBuildTime();

  /**
   * <pre>
   * The session id is a UUID within a single run of Android Studio
   * tracking multiple HOT_SWAP &amp; DEX builds in the same
   * IR session (starting at FULL_APK and ending before FULL_APK).
   * </pre>
   *
   * <code>optional string session_id = 5;</code>
   * @return Whether the sessionId field is set.
   */
  boolean hasSessionId();
  /**
   * <pre>
   * The session id is a UUID within a single run of Android Studio
   * tracking multiple HOT_SWAP &amp; DEX builds in the same
   * IR session (starting at FULL_APK and ending before FULL_APK).
   * </pre>
   *
   * <code>optional string session_id = 5;</code>
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <pre>
   * The session id is a UUID within a single run of Android Studio
   * tracking multiple HOT_SWAP &amp; DEX builds in the same
   * IR session (starting at FULL_APK and ending before FULL_APK).
   * </pre>
   *
   * <code>optional string session_id = 5;</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
      getSessionIdBytes();

  /**
   * <pre>
   * what was the reason for chosing that kind of deployment from the IDE
   * side.
   * </pre>
   *
   * <code>optional .android_studio.InstantRun.InstantRunIdeBuildCause ide_build_cause = 6;</code>
   * @return Whether the ideBuildCause field is set.
   */
  boolean hasIdeBuildCause();
  /**
   * <pre>
   * what was the reason for chosing that kind of deployment from the IDE
   * side.
   * </pre>
   *
   * <code>optional .android_studio.InstantRun.InstantRunIdeBuildCause ide_build_cause = 6;</code>
   * @return The ideBuildCause.
   */
  com.google.wireless.android.sdk.stats.InstantRun.InstantRunIdeBuildCause getIdeBuildCause();

  /**
   * <pre>
   * what was the reason for chosing that kind of deployment from the Gradle
   * side.
   * </pre>
   *
   * <code>optional .android_studio.InstantRunStatus.VerifierStatus gradle_build_cause = 7;</code>
   * @return Whether the gradleBuildCause field is set.
   */
  boolean hasGradleBuildCause();
  /**
   * <pre>
   * what was the reason for chosing that kind of deployment from the Gradle
   * side.
   * </pre>
   *
   * <code>optional .android_studio.InstantRunStatus.VerifierStatus gradle_build_cause = 7;</code>
   * @return The gradleBuildCause.
   */
  com.google.wireless.android.sdk.stats.InstantRunStatus.VerifierStatus getGradleBuildCause();
}
