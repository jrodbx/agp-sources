// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Description of emulator's quickboot load.
 * </pre>
 *
 * Protobuf type {@code android_studio.EmulatorQuickbootLoad}
 */
public final class EmulatorQuickbootLoad extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorQuickbootLoad)
    EmulatorQuickbootLoadOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorQuickbootLoad.newBuilder() to construct.
  private EmulatorQuickbootLoad(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorQuickbootLoad() {
    state_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorQuickbootLoad();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorQuickbootLoad_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorQuickbootLoad_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.class, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder.class);
  }

  /**
   * <pre>
   * List of possible states of a load operation.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState}
   */
  public enum EmulatorQuickbootLoadState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Quickboot succeeded.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_SUCCEEDED = 0;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_SUCCEEDED(0),
    /**
     * <pre>
     * There was no snapshot for a quickboot load.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_NO_SNAPSHOT = 1;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_NO_SNAPSHOT(1),
    /**
     * <pre>
     * Generic failure during load.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_FAILED = 2;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_FAILED(2),
    /**
     * <pre>
     * Guest hung after loading a quickboot snapshot.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_HUNG = 3;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_HUNG(3),
    /**
     * <pre>
     * Performed a cold boot because of feature control settings.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_FEATURE = 4;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_COLD_FEATURE(4),
    /**
     * <pre>
     * Performed a cold boot because of command line flag.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_CMDLINE = 5;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_COLD_CMDLINE(5),
    /**
     * <pre>
     * Performed a cold boot because of AVD configuration.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_AVD = 6;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_COLD_AVD(6),
    /**
     * <pre>
     * Performed a cold boot because quickboot is not supported in the current
     * configuration.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_UNSUPPORTED = 7;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_COLD_UNSUPPORTED(7),
    /**
     * <pre>
     * Specified snapshot is too old for loading, fallback to cold boot.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_OLD_SNAPSHOT = 8;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_COLD_OLD_SNAPSHOT(8),
    /**
     * <pre>
     * Quickboot succeeded.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_SUCCEEDED_WITH_VULKAN = 9;</code>
     */
    EMULATOR_QUICKBOOT_LOAD_SUCCEEDED_WITH_VULKAN(9),
    ;

    /**
     * <pre>
     * Quickboot succeeded.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_SUCCEEDED = 0;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_SUCCEEDED_VALUE = 0;
    /**
     * <pre>
     * There was no snapshot for a quickboot load.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_NO_SNAPSHOT = 1;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_NO_SNAPSHOT_VALUE = 1;
    /**
     * <pre>
     * Generic failure during load.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_FAILED = 2;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_FAILED_VALUE = 2;
    /**
     * <pre>
     * Guest hung after loading a quickboot snapshot.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_HUNG = 3;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_HUNG_VALUE = 3;
    /**
     * <pre>
     * Performed a cold boot because of feature control settings.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_FEATURE = 4;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_COLD_FEATURE_VALUE = 4;
    /**
     * <pre>
     * Performed a cold boot because of command line flag.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_CMDLINE = 5;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_COLD_CMDLINE_VALUE = 5;
    /**
     * <pre>
     * Performed a cold boot because of AVD configuration.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_AVD = 6;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_COLD_AVD_VALUE = 6;
    /**
     * <pre>
     * Performed a cold boot because quickboot is not supported in the current
     * configuration.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_UNSUPPORTED = 7;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_COLD_UNSUPPORTED_VALUE = 7;
    /**
     * <pre>
     * Specified snapshot is too old for loading, fallback to cold boot.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_COLD_OLD_SNAPSHOT = 8;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_COLD_OLD_SNAPSHOT_VALUE = 8;
    /**
     * <pre>
     * Quickboot succeeded.
     * </pre>
     *
     * <code>EMULATOR_QUICKBOOT_LOAD_SUCCEEDED_WITH_VULKAN = 9;</code>
     */
    public static final int EMULATOR_QUICKBOOT_LOAD_SUCCEEDED_WITH_VULKAN_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorQuickbootLoadState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorQuickbootLoadState forNumber(int value) {
      switch (value) {
        case 0: return EMULATOR_QUICKBOOT_LOAD_SUCCEEDED;
        case 1: return EMULATOR_QUICKBOOT_LOAD_NO_SNAPSHOT;
        case 2: return EMULATOR_QUICKBOOT_LOAD_FAILED;
        case 3: return EMULATOR_QUICKBOOT_LOAD_HUNG;
        case 4: return EMULATOR_QUICKBOOT_LOAD_COLD_FEATURE;
        case 5: return EMULATOR_QUICKBOOT_LOAD_COLD_CMDLINE;
        case 6: return EMULATOR_QUICKBOOT_LOAD_COLD_AVD;
        case 7: return EMULATOR_QUICKBOOT_LOAD_COLD_UNSUPPORTED;
        case 8: return EMULATOR_QUICKBOOT_LOAD_COLD_OLD_SNAPSHOT;
        case 9: return EMULATOR_QUICKBOOT_LOAD_SUCCEEDED_WITH_VULKAN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorQuickbootLoadState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorQuickbootLoadState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorQuickbootLoadState>() {
            public EmulatorQuickbootLoadState findValueByNumber(int number) {
              return EmulatorQuickbootLoadState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDescriptor().getEnumTypes().get(0);
    }

    private static final EmulatorQuickbootLoadState[] VALUES = values();

    public static EmulatorQuickbootLoadState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorQuickbootLoadState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState)
  }

  private int bitField0_;
  public static final int STATE_FIELD_NUMBER = 1;
  private int state_ = 0;
  /**
   * <pre>
   * The state of the quickboot load operation.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
   * @return Whether the state field is set.
   */
  @java.lang.Override public boolean hasState() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The state of the quickboot load operation.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
   * @return The state.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState getState() {
    com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState result = com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState.forNumber(state_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState.EMULATOR_QUICKBOOT_LOAD_SUCCEEDED : result;
  }

  public static final int DURATION_MS_FIELD_NUMBER = 2;
  private long durationMs_ = 0L;
  /**
   * <pre>
   * How long it took, milliseconds.
   * </pre>
   *
   * <code>optional uint64 duration_ms = 2;</code>
   * @return Whether the durationMs field is set.
   */
  @java.lang.Override
  public boolean hasDurationMs() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * How long it took, milliseconds.
   * </pre>
   *
   * <code>optional uint64 duration_ms = 2;</code>
   * @return The durationMs.
   */
  @java.lang.Override
  public long getDurationMs() {
    return durationMs_;
  }

  public static final int SNAPSHOT_FIELD_NUMBER = 3;
  private com.google.wireless.android.sdk.stats.EmulatorSnapshot snapshot_;
  /**
   * <pre>
   * Information about loaded snapshot.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
   * @return Whether the snapshot field is set.
   */
  @java.lang.Override
  public boolean hasSnapshot() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Information about loaded snapshot.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
   * @return The snapshot.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshot() {
    return snapshot_ == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance() : snapshot_;
  }
  /**
   * <pre>
   * Information about loaded snapshot.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotOrBuilder() {
    return snapshot_ == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance() : snapshot_;
  }

  public static final int ON_DEMAND_RAM_ENABLED_FIELD_NUMBER = 4;
  private boolean onDemandRamEnabled_ = false;
  /**
   * <pre>
   * Flag is set when on demand RAM loading was enabled for the load.
   * </pre>
   *
   * <code>optional bool on_demand_ram_enabled = 4;</code>
   * @return Whether the onDemandRamEnabled field is set.
   */
  @java.lang.Override
  public boolean hasOnDemandRamEnabled() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Flag is set when on demand RAM loading was enabled for the load.
   * </pre>
   *
   * <code>optional bool on_demand_ram_enabled = 4;</code>
   * @return The onDemandRamEnabled.
   */
  @java.lang.Override
  public boolean getOnDemandRamEnabled() {
    return onDemandRamEnabled_;
  }

  public static final int ADB_CONNECTION_RETRIES_FIELD_NUMBER = 6;
  private int adbConnectionRetries_ = 0;
  /**
   * <pre>
   * ADB connection retries.
   * </pre>
   *
   * <code>optional uint32 adb_connection_retries = 6;</code>
   * @return Whether the adbConnectionRetries field is set.
   */
  @java.lang.Override
  public boolean hasAdbConnectionRetries() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * ADB connection retries.
   * </pre>
   *
   * <code>optional uint32 adb_connection_retries = 6;</code>
   * @return The adbConnectionRetries.
   */
  @java.lang.Override
  public int getAdbConnectionRetries() {
    return adbConnectionRetries_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, state_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt64(2, durationMs_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getSnapshot());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBool(4, onDemandRamEnabled_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeUInt32(6, adbConnectionRetries_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, state_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, durationMs_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSnapshot());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, onDemandRamEnabled_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, adbConnectionRetries_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad other = (com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad) obj;

    if (hasState() != other.hasState()) return false;
    if (hasState()) {
      if (state_ != other.state_) return false;
    }
    if (hasDurationMs() != other.hasDurationMs()) return false;
    if (hasDurationMs()) {
      if (getDurationMs()
          != other.getDurationMs()) return false;
    }
    if (hasSnapshot() != other.hasSnapshot()) return false;
    if (hasSnapshot()) {
      if (!getSnapshot()
          .equals(other.getSnapshot())) return false;
    }
    if (hasOnDemandRamEnabled() != other.hasOnDemandRamEnabled()) return false;
    if (hasOnDemandRamEnabled()) {
      if (getOnDemandRamEnabled()
          != other.getOnDemandRamEnabled()) return false;
    }
    if (hasAdbConnectionRetries() != other.hasAdbConnectionRetries()) return false;
    if (hasAdbConnectionRetries()) {
      if (getAdbConnectionRetries()
          != other.getAdbConnectionRetries()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasState()) {
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
    }
    if (hasDurationMs()) {
      hash = (37 * hash) + DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDurationMs());
    }
    if (hasSnapshot()) {
      hash = (37 * hash) + SNAPSHOT_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshot().hashCode();
    }
    if (hasOnDemandRamEnabled()) {
      hash = (37 * hash) + ON_DEMAND_RAM_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOnDemandRamEnabled());
    }
    if (hasAdbConnectionRetries()) {
      hash = (37 * hash) + ADB_CONNECTION_RETRIES_FIELD_NUMBER;
      hash = (53 * hash) + getAdbConnectionRetries();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Description of emulator's quickboot load.
   * </pre>
   *
   * Protobuf type {@code android_studio.EmulatorQuickbootLoad}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorQuickbootLoad)
      com.google.wireless.android.sdk.stats.EmulatorQuickbootLoadOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorQuickbootLoad_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorQuickbootLoad_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.class, com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSnapshotFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      state_ = 0;
      durationMs_ = 0L;
      snapshot_ = null;
      if (snapshotBuilder_ != null) {
        snapshotBuilder_.dispose();
        snapshotBuilder_ = null;
      }
      onDemandRamEnabled_ = false;
      adbConnectionRetries_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorQuickbootLoad_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad build() {
      com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad result = new com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.state_ = state_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.durationMs_ = durationMs_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.snapshot_ = snapshotBuilder_ == null
            ? snapshot_
            : snapshotBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.onDemandRamEnabled_ = onDemandRamEnabled_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.adbConnectionRetries_ = adbConnectionRetries_;
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.getDefaultInstance()) return this;
      if (other.hasState()) {
        setState(other.getState());
      }
      if (other.hasDurationMs()) {
        setDurationMs(other.getDurationMs());
      }
      if (other.hasSnapshot()) {
        mergeSnapshot(other.getSnapshot());
      }
      if (other.hasOnDemandRamEnabled()) {
        setOnDemandRamEnabled(other.getOnDemandRamEnabled());
      }
      if (other.hasAdbConnectionRetries()) {
        setAdbConnectionRetries(other.getAdbConnectionRetries());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                state_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              durationMs_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getSnapshotFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              onDemandRamEnabled_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 48: {
              adbConnectionRetries_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int state_ = 0;
    /**
     * <pre>
     * The state of the quickboot load operation.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override public boolean hasState() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The state of the quickboot load operation.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
     * @return The state.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState getState() {
      com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState result = com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState.forNumber(state_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState.EMULATOR_QUICKBOOT_LOAD_SUCCEEDED : result;
    }
    /**
     * <pre>
     * The state of the quickboot load operation.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad.EmulatorQuickbootLoadState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The state of the quickboot load operation.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorQuickbootLoad.EmulatorQuickbootLoadState state = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      state_ = 0;
      onChanged();
      return this;
    }

    private long durationMs_ ;
    /**
     * <pre>
     * How long it took, milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 2;</code>
     * @return Whether the durationMs field is set.
     */
    @java.lang.Override
    public boolean hasDurationMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * How long it took, milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 2;</code>
     * @return The durationMs.
     */
    @java.lang.Override
    public long getDurationMs() {
      return durationMs_;
    }
    /**
     * <pre>
     * How long it took, milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 2;</code>
     * @param value The durationMs to set.
     * @return This builder for chaining.
     */
    public Builder setDurationMs(long value) {

      durationMs_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How long it took, milliseconds.
     * </pre>
     *
     * <code>optional uint64 duration_ms = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      durationMs_ = 0L;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.EmulatorSnapshot snapshot_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder> snapshotBuilder_;
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     * @return Whether the snapshot field is set.
     */
    public boolean hasSnapshot() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     * @return The snapshot.
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot getSnapshot() {
      if (snapshotBuilder_ == null) {
        return snapshot_ == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance() : snapshot_;
      } else {
        return snapshotBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    public Builder setSnapshot(com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snapshot_ = value;
      } else {
        snapshotBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    public Builder setSnapshot(
        com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder builderForValue) {
      if (snapshotBuilder_ == null) {
        snapshot_ = builderForValue.build();
      } else {
        snapshotBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    public Builder mergeSnapshot(com.google.wireless.android.sdk.stats.EmulatorSnapshot value) {
      if (snapshotBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          snapshot_ != null &&
          snapshot_ != com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance()) {
          getSnapshotBuilder().mergeFrom(value);
        } else {
          snapshot_ = value;
        }
      } else {
        snapshotBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    public Builder clearSnapshot() {
      bitField0_ = (bitField0_ & ~0x00000004);
      snapshot_ = null;
      if (snapshotBuilder_ != null) {
        snapshotBuilder_.dispose();
        snapshotBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder getSnapshotBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSnapshotFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder getSnapshotOrBuilder() {
      if (snapshotBuilder_ != null) {
        return snapshotBuilder_.getMessageOrBuilder();
      } else {
        return snapshot_ == null ?
            com.google.wireless.android.sdk.stats.EmulatorSnapshot.getDefaultInstance() : snapshot_;
      }
    }
    /**
     * <pre>
     * Information about loaded snapshot.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshot snapshot = 3 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder> 
        getSnapshotFieldBuilder() {
      if (snapshotBuilder_ == null) {
        snapshotBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.EmulatorSnapshot, com.google.wireless.android.sdk.stats.EmulatorSnapshot.Builder, com.google.wireless.android.sdk.stats.EmulatorSnapshotOrBuilder>(
                getSnapshot(),
                getParentForChildren(),
                isClean());
        snapshot_ = null;
      }
      return snapshotBuilder_;
    }

    private boolean onDemandRamEnabled_ ;
    /**
     * <pre>
     * Flag is set when on demand RAM loading was enabled for the load.
     * </pre>
     *
     * <code>optional bool on_demand_ram_enabled = 4;</code>
     * @return Whether the onDemandRamEnabled field is set.
     */
    @java.lang.Override
    public boolean hasOnDemandRamEnabled() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Flag is set when on demand RAM loading was enabled for the load.
     * </pre>
     *
     * <code>optional bool on_demand_ram_enabled = 4;</code>
     * @return The onDemandRamEnabled.
     */
    @java.lang.Override
    public boolean getOnDemandRamEnabled() {
      return onDemandRamEnabled_;
    }
    /**
     * <pre>
     * Flag is set when on demand RAM loading was enabled for the load.
     * </pre>
     *
     * <code>optional bool on_demand_ram_enabled = 4;</code>
     * @param value The onDemandRamEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setOnDemandRamEnabled(boolean value) {

      onDemandRamEnabled_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag is set when on demand RAM loading was enabled for the load.
     * </pre>
     *
     * <code>optional bool on_demand_ram_enabled = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOnDemandRamEnabled() {
      bitField0_ = (bitField0_ & ~0x00000008);
      onDemandRamEnabled_ = false;
      onChanged();
      return this;
    }

    private int adbConnectionRetries_ ;
    /**
     * <pre>
     * ADB connection retries.
     * </pre>
     *
     * <code>optional uint32 adb_connection_retries = 6;</code>
     * @return Whether the adbConnectionRetries field is set.
     */
    @java.lang.Override
    public boolean hasAdbConnectionRetries() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * ADB connection retries.
     * </pre>
     *
     * <code>optional uint32 adb_connection_retries = 6;</code>
     * @return The adbConnectionRetries.
     */
    @java.lang.Override
    public int getAdbConnectionRetries() {
      return adbConnectionRetries_;
    }
    /**
     * <pre>
     * ADB connection retries.
     * </pre>
     *
     * <code>optional uint32 adb_connection_retries = 6;</code>
     * @param value The adbConnectionRetries to set.
     * @return This builder for chaining.
     */
    public Builder setAdbConnectionRetries(int value) {

      adbConnectionRetries_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ADB connection retries.
     * </pre>
     *
     * <code>optional uint32 adb_connection_retries = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearAdbConnectionRetries() {
      bitField0_ = (bitField0_ & ~0x00000010);
      adbConnectionRetries_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorQuickbootLoad)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorQuickbootLoad)
  private static final com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorQuickbootLoad>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorQuickbootLoad>() {
    @java.lang.Override
    public EmulatorQuickbootLoad parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EmulatorQuickbootLoad> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorQuickbootLoad> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorQuickbootLoad getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

