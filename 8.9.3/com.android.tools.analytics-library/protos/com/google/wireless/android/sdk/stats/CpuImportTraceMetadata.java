// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Data associated with importing CPU traces.
 * </pre>
 *
 * Protobuf type {@code android_studio.CpuImportTraceMetadata}
 */
public final class CpuImportTraceMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.CpuImportTraceMetadata)
    CpuImportTraceMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CpuImportTraceMetadata.newBuilder() to construct.
  private CpuImportTraceMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CpuImportTraceMetadata() {
    importStatus_ = 0;
    technology_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CpuImportTraceMetadata();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuImportTraceMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuImportTraceMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.class, com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.CpuImportTraceMetadata.ImportStatus}
   */
  public enum ImportStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default status
     * </pre>
     *
     * <code>UNDEFINED_IMPORT_TRACE_STATUS = 0;</code>
     */
    UNDEFINED_IMPORT_TRACE_STATUS(0),
    /**
     * <pre>
     * The trace was imported successfully.
     * </pre>
     *
     * <code>IMPORT_TRACE_SUCCESS = 1;</code>
     */
    IMPORT_TRACE_SUCCESS(1),
    /**
     * <pre>
     * There was a failure when trying to import the trace.
     * </pre>
     *
     * <code>IMPORT_TRACE_FAILURE = 2;</code>
     */
    IMPORT_TRACE_FAILURE(2),
    ;

    /**
     * <pre>
     * Default status
     * </pre>
     *
     * <code>UNDEFINED_IMPORT_TRACE_STATUS = 0;</code>
     */
    public static final int UNDEFINED_IMPORT_TRACE_STATUS_VALUE = 0;
    /**
     * <pre>
     * The trace was imported successfully.
     * </pre>
     *
     * <code>IMPORT_TRACE_SUCCESS = 1;</code>
     */
    public static final int IMPORT_TRACE_SUCCESS_VALUE = 1;
    /**
     * <pre>
     * There was a failure when trying to import the trace.
     * </pre>
     *
     * <code>IMPORT_TRACE_FAILURE = 2;</code>
     */
    public static final int IMPORT_TRACE_FAILURE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImportStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ImportStatus forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_IMPORT_TRACE_STATUS;
        case 1: return IMPORT_TRACE_SUCCESS;
        case 2: return IMPORT_TRACE_FAILURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImportStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ImportStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImportStatus>() {
            public ImportStatus findValueByNumber(int number) {
              return ImportStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.getDescriptor().getEnumTypes().get(0);
    }

    private static final ImportStatus[] VALUES = values();

    public static ImportStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ImportStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.CpuImportTraceMetadata.ImportStatus)
  }

  /**
   * Protobuf enum {@code android_studio.CpuImportTraceMetadata.Technology}
   */
  public enum Technology
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TECHNOLOGY = 0;</code>
     */
    UNKNOWN_TECHNOLOGY(0),
    /**
     * <code>ART_TECHNOLOGY = 1;</code>
     */
    ART_TECHNOLOGY(1),
    /**
     * <code>SIMPLEPERF_TECHNOLOGY = 2;</code>
     */
    SIMPLEPERF_TECHNOLOGY(2),
    /**
     * <code>ATRACE_TECHNOLOGY = 3;</code>
     */
    ATRACE_TECHNOLOGY(3),
    /**
     * <code>PERFETTO_TECHNOLOGY = 4;</code>
     */
    PERFETTO_TECHNOLOGY(4),
    ;

    /**
     * <code>UNKNOWN_TECHNOLOGY = 0;</code>
     */
    public static final int UNKNOWN_TECHNOLOGY_VALUE = 0;
    /**
     * <code>ART_TECHNOLOGY = 1;</code>
     */
    public static final int ART_TECHNOLOGY_VALUE = 1;
    /**
     * <code>SIMPLEPERF_TECHNOLOGY = 2;</code>
     */
    public static final int SIMPLEPERF_TECHNOLOGY_VALUE = 2;
    /**
     * <code>ATRACE_TECHNOLOGY = 3;</code>
     */
    public static final int ATRACE_TECHNOLOGY_VALUE = 3;
    /**
     * <code>PERFETTO_TECHNOLOGY = 4;</code>
     */
    public static final int PERFETTO_TECHNOLOGY_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Technology valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Technology forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TECHNOLOGY;
        case 1: return ART_TECHNOLOGY;
        case 2: return SIMPLEPERF_TECHNOLOGY;
        case 3: return ATRACE_TECHNOLOGY;
        case 4: return PERFETTO_TECHNOLOGY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Technology>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Technology> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Technology>() {
            public Technology findValueByNumber(int number) {
              return Technology.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.getDescriptor().getEnumTypes().get(1);
    }

    private static final Technology[] VALUES = values();

    public static Technology valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Technology(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.CpuImportTraceMetadata.Technology)
  }

  private int bitField0_;
  public static final int IMPORT_STATUS_FIELD_NUMBER = 1;
  private int importStatus_ = 0;
  /**
   * <pre>
   * Status of the import trace action.
   * </pre>
   *
   * <code>optional .android_studio.CpuImportTraceMetadata.ImportStatus import_status = 1;</code>
   * @return Whether the importStatus field is set.
   */
  @java.lang.Override public boolean hasImportStatus() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Status of the import trace action.
   * </pre>
   *
   * <code>optional .android_studio.CpuImportTraceMetadata.ImportStatus import_status = 1;</code>
   * @return The importStatus.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus getImportStatus() {
    com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus result = com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus.forNumber(importStatus_);
    return result == null ? com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus.UNDEFINED_IMPORT_TRACE_STATUS : result;
  }

  public static final int TECHNOLOGY_FIELD_NUMBER = 2;
  private int technology_ = 0;
  /**
   * <pre>
   * Technology used to generate the trace imported.
   * Technologies supported are ART, simpleperf and atrace.
   * </pre>
   *
   * <code>optional .android_studio.CpuImportTraceMetadata.Technology technology = 2;</code>
   * @return Whether the technology field is set.
   */
  @java.lang.Override public boolean hasTechnology() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Technology used to generate the trace imported.
   * Technologies supported are ART, simpleperf and atrace.
   * </pre>
   *
   * <code>optional .android_studio.CpuImportTraceMetadata.Technology technology = 2;</code>
   * @return The technology.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology getTechnology() {
    com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology result = com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology.forNumber(technology_);
    return result == null ? com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology.UNKNOWN_TECHNOLOGY : result;
  }

  public static final int HAS_COMPOSE_TRACING_NODES_FIELD_NUMBER = 3;
  private boolean hasComposeTracingNodes_ = false;
  /**
   * <pre>
   * Whether the trace contains Compose Tracing nodes
   * </pre>
   *
   * <code>optional bool has_compose_tracing_nodes = 3;</code>
   * @return Whether the hasComposeTracingNodes field is set.
   */
  @java.lang.Override
  public boolean hasHasComposeTracingNodes() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Whether the trace contains Compose Tracing nodes
   * </pre>
   *
   * <code>optional bool has_compose_tracing_nodes = 3;</code>
   * @return The hasComposeTracingNodes.
   */
  @java.lang.Override
  public boolean getHasComposeTracingNodes() {
    return hasComposeTracingNodes_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, importStatus_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, technology_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(3, hasComposeTracingNodes_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, importStatus_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, technology_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, hasComposeTracingNodes_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.CpuImportTraceMetadata)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.CpuImportTraceMetadata other = (com.google.wireless.android.sdk.stats.CpuImportTraceMetadata) obj;

    if (hasImportStatus() != other.hasImportStatus()) return false;
    if (hasImportStatus()) {
      if (importStatus_ != other.importStatus_) return false;
    }
    if (hasTechnology() != other.hasTechnology()) return false;
    if (hasTechnology()) {
      if (technology_ != other.technology_) return false;
    }
    if (hasHasComposeTracingNodes() != other.hasHasComposeTracingNodes()) return false;
    if (hasHasComposeTracingNodes()) {
      if (getHasComposeTracingNodes()
          != other.getHasComposeTracingNodes()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasImportStatus()) {
      hash = (37 * hash) + IMPORT_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + importStatus_;
    }
    if (hasTechnology()) {
      hash = (37 * hash) + TECHNOLOGY_FIELD_NUMBER;
      hash = (53 * hash) + technology_;
    }
    if (hasHasComposeTracingNodes()) {
      hash = (37 * hash) + HAS_COMPOSE_TRACING_NODES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasComposeTracingNodes());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.CpuImportTraceMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Data associated with importing CPU traces.
   * </pre>
   *
   * Protobuf type {@code android_studio.CpuImportTraceMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.CpuImportTraceMetadata)
      com.google.wireless.android.sdk.stats.CpuImportTraceMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuImportTraceMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuImportTraceMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.class, com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      importStatus_ = 0;
      technology_ = 0;
      hasComposeTracingNodes_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CpuImportTraceMetadata_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata build() {
      com.google.wireless.android.sdk.stats.CpuImportTraceMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata buildPartial() {
      com.google.wireless.android.sdk.stats.CpuImportTraceMetadata result = new com.google.wireless.android.sdk.stats.CpuImportTraceMetadata(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.CpuImportTraceMetadata result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.importStatus_ = importStatus_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.technology_ = technology_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.hasComposeTracingNodes_ = hasComposeTracingNodes_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.CpuImportTraceMetadata) {
        return mergeFrom((com.google.wireless.android.sdk.stats.CpuImportTraceMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.CpuImportTraceMetadata other) {
      if (other == com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.getDefaultInstance()) return this;
      if (other.hasImportStatus()) {
        setImportStatus(other.getImportStatus());
      }
      if (other.hasTechnology()) {
        setTechnology(other.getTechnology());
      }
      if (other.hasHasComposeTracingNodes()) {
        setHasComposeTracingNodes(other.getHasComposeTracingNodes());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus tmpValue =
                  com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                importStatus_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology tmpValue =
                  com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                technology_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              hasComposeTracingNodes_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int importStatus_ = 0;
    /**
     * <pre>
     * Status of the import trace action.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.ImportStatus import_status = 1;</code>
     * @return Whether the importStatus field is set.
     */
    @java.lang.Override public boolean hasImportStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Status of the import trace action.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.ImportStatus import_status = 1;</code>
     * @return The importStatus.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus getImportStatus() {
      com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus result = com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus.forNumber(importStatus_);
      return result == null ? com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus.UNDEFINED_IMPORT_TRACE_STATUS : result;
    }
    /**
     * <pre>
     * Status of the import trace action.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.ImportStatus import_status = 1;</code>
     * @param value The importStatus to set.
     * @return This builder for chaining.
     */
    public Builder setImportStatus(com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.ImportStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      importStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Status of the import trace action.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.ImportStatus import_status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearImportStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      importStatus_ = 0;
      onChanged();
      return this;
    }

    private int technology_ = 0;
    /**
     * <pre>
     * Technology used to generate the trace imported.
     * Technologies supported are ART, simpleperf and atrace.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.Technology technology = 2;</code>
     * @return Whether the technology field is set.
     */
    @java.lang.Override public boolean hasTechnology() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Technology used to generate the trace imported.
     * Technologies supported are ART, simpleperf and atrace.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.Technology technology = 2;</code>
     * @return The technology.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology getTechnology() {
      com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology result = com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology.forNumber(technology_);
      return result == null ? com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology.UNKNOWN_TECHNOLOGY : result;
    }
    /**
     * <pre>
     * Technology used to generate the trace imported.
     * Technologies supported are ART, simpleperf and atrace.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.Technology technology = 2;</code>
     * @param value The technology to set.
     * @return This builder for chaining.
     */
    public Builder setTechnology(com.google.wireless.android.sdk.stats.CpuImportTraceMetadata.Technology value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      technology_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Technology used to generate the trace imported.
     * Technologies supported are ART, simpleperf and atrace.
     * </pre>
     *
     * <code>optional .android_studio.CpuImportTraceMetadata.Technology technology = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTechnology() {
      bitField0_ = (bitField0_ & ~0x00000002);
      technology_ = 0;
      onChanged();
      return this;
    }

    private boolean hasComposeTracingNodes_ ;
    /**
     * <pre>
     * Whether the trace contains Compose Tracing nodes
     * </pre>
     *
     * <code>optional bool has_compose_tracing_nodes = 3;</code>
     * @return Whether the hasComposeTracingNodes field is set.
     */
    @java.lang.Override
    public boolean hasHasComposeTracingNodes() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Whether the trace contains Compose Tracing nodes
     * </pre>
     *
     * <code>optional bool has_compose_tracing_nodes = 3;</code>
     * @return The hasComposeTracingNodes.
     */
    @java.lang.Override
    public boolean getHasComposeTracingNodes() {
      return hasComposeTracingNodes_;
    }
    /**
     * <pre>
     * Whether the trace contains Compose Tracing nodes
     * </pre>
     *
     * <code>optional bool has_compose_tracing_nodes = 3;</code>
     * @param value The hasComposeTracingNodes to set.
     * @return This builder for chaining.
     */
    public Builder setHasComposeTracingNodes(boolean value) {

      hasComposeTracingNodes_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the trace contains Compose Tracing nodes
     * </pre>
     *
     * <code>optional bool has_compose_tracing_nodes = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHasComposeTracingNodes() {
      bitField0_ = (bitField0_ & ~0x00000004);
      hasComposeTracingNodes_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.CpuImportTraceMetadata)
  }

  // @@protoc_insertion_point(class_scope:android_studio.CpuImportTraceMetadata)
  private static final com.google.wireless.android.sdk.stats.CpuImportTraceMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.CpuImportTraceMetadata();
  }

  public static com.google.wireless.android.sdk.stats.CpuImportTraceMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<CpuImportTraceMetadata>
      PARSER = new com.google.protobuf.AbstractParser<CpuImportTraceMetadata>() {
    @java.lang.Override
    public CpuImportTraceMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CpuImportTraceMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CpuImportTraceMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.CpuImportTraceMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

