// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Details for dynamic layout inspector (inspector v2) events
 * </pre>
 *
 * Protobuf type {@code android_studio.DynamicLayoutInspectorEvent}
 */
public final class DynamicLayoutInspectorEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.DynamicLayoutInspectorEvent)
    DynamicLayoutInspectorEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DynamicLayoutInspectorEvent.newBuilder() to construct.
  private DynamicLayoutInspectorEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DynamicLayoutInspectorEvent() {
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DynamicLayoutInspectorEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.class, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType}
   */
  public enum DynamicLayoutInspectorEventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_EVENT_TYPE = 0;</code>
     */
    UNKNOWN_EVENT_TYPE(0),
    /**
     * <pre>
     * Layout inspector was opened
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    OPEN(1),
    /**
     * <pre>
     * User tried to attach to a device
     * </pre>
     *
     * <code>ATTACH_REQUEST = 2;</code>
     */
    ATTACH_REQUEST(2),
    /**
     * <pre>
     * Device attached successfully
     * </pre>
     *
     * <code>ATTACH_SUCCESS = 3;</code>
     */
    ATTACH_SUCCESS(3),
    /**
     * <pre>
     * First render after connection
     * </pre>
     *
     * <code>INITIAL_RENDER = 4;</code>
     */
    INITIAL_RENDER(4),
    /**
     * <pre>
     * First render after connection without images
     * </pre>
     *
     * <code>INITIAL_RENDER_NO_PICTURE = 5;</code>
     */
    INITIAL_RENDER_NO_PICTURE(5),
    /**
     * <pre>
     * First render after connection with bitmap images
     * </pre>
     *
     * <code>INITIAL_RENDER_BITMAPS = 6;</code>
     */
    INITIAL_RENDER_BITMAPS(6),
    /**
     * <pre>
     * User tried to attach to a device using compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_REQUEST = 7;</code>
     */
    COMPATIBILITY_REQUEST(7),
    /**
     * <pre>
     * Device attached successfully in compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_SUCCESS = 8;</code>
     */
    COMPATIBILITY_SUCCESS(8),
    /**
     * <pre>
     * First render after connection in compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_RENDER = 9;</code>
     */
    COMPATIBILITY_RENDER(9),
    /**
     * <pre>
     * First render after connection without images in compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_RENDER_NO_PICTURE = 10;</code>
     */
    COMPATIBILITY_RENDER_NO_PICTURE(10),
    /**
     * <pre>
     * Session Data after a session ended
     * </pre>
     *
     * <code>SESSION_DATA = 11;</code>
     */
    SESSION_DATA(11),
    /**
     * <pre>
     * User saved a snapshot
     * </pre>
     *
     * <code>SNAPSHOT_CAPTURED = 12;</code>
     */
    SNAPSHOT_CAPTURED(12),
    /**
     * <pre>
     * User loaded a snapshot
     * </pre>
     *
     * <code>SNAPSHOT_LOADED = 13;</code>
     */
    SNAPSHOT_LOADED(13),
    /**
     * <pre>
     * Error loading a snapshot
     * </pre>
     *
     * <code>SNAPSHOT_LOAD_ERROR = 14;</code>
     */
    SNAPSHOT_LOAD_ERROR(14),
    /**
     * <pre>
     * User cancelled the snapshot saving process
     * </pre>
     *
     * <code>SNAPSHOT_CANCELLED = 15;</code>
     */
    SNAPSHOT_CANCELLED(15),
    /**
     * <pre>
     * There was an error during initial connect
     * </pre>
     *
     * <code>ATTACH_ERROR = 16;</code>
     */
    ATTACH_ERROR(16),
    /**
     * <pre>
     * An attach attempt was cancelled or preempted by the user
     * </pre>
     *
     * <code>ATTACH_CANCELLED = 17;</code>
     */
    ATTACH_CANCELLED(17),
    /**
     * <pre>
     * Info about auto-connect to foreground process
     * </pre>
     *
     * <code>AUTO_CONNECT_INFO = 18;</code>
     */
    AUTO_CONNECT_INFO(18),
    /**
     * <pre>
     * A transport-related error
     * </pre>
     *
     * <code>TRANSPORT_ERROR = 19;</code>
     */
    TRANSPORT_ERROR(19),
    ;

    /**
     * <code>UNKNOWN_EVENT_TYPE = 0;</code>
     */
    public static final int UNKNOWN_EVENT_TYPE_VALUE = 0;
    /**
     * <pre>
     * Layout inspector was opened
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    public static final int OPEN_VALUE = 1;
    /**
     * <pre>
     * User tried to attach to a device
     * </pre>
     *
     * <code>ATTACH_REQUEST = 2;</code>
     */
    public static final int ATTACH_REQUEST_VALUE = 2;
    /**
     * <pre>
     * Device attached successfully
     * </pre>
     *
     * <code>ATTACH_SUCCESS = 3;</code>
     */
    public static final int ATTACH_SUCCESS_VALUE = 3;
    /**
     * <pre>
     * First render after connection
     * </pre>
     *
     * <code>INITIAL_RENDER = 4;</code>
     */
    public static final int INITIAL_RENDER_VALUE = 4;
    /**
     * <pre>
     * First render after connection without images
     * </pre>
     *
     * <code>INITIAL_RENDER_NO_PICTURE = 5;</code>
     */
    public static final int INITIAL_RENDER_NO_PICTURE_VALUE = 5;
    /**
     * <pre>
     * First render after connection with bitmap images
     * </pre>
     *
     * <code>INITIAL_RENDER_BITMAPS = 6;</code>
     */
    public static final int INITIAL_RENDER_BITMAPS_VALUE = 6;
    /**
     * <pre>
     * User tried to attach to a device using compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_REQUEST = 7;</code>
     */
    public static final int COMPATIBILITY_REQUEST_VALUE = 7;
    /**
     * <pre>
     * Device attached successfully in compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_SUCCESS = 8;</code>
     */
    public static final int COMPATIBILITY_SUCCESS_VALUE = 8;
    /**
     * <pre>
     * First render after connection in compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_RENDER = 9;</code>
     */
    public static final int COMPATIBILITY_RENDER_VALUE = 9;
    /**
     * <pre>
     * First render after connection without images in compatibility mode
     * </pre>
     *
     * <code>COMPATIBILITY_RENDER_NO_PICTURE = 10;</code>
     */
    public static final int COMPATIBILITY_RENDER_NO_PICTURE_VALUE = 10;
    /**
     * <pre>
     * Session Data after a session ended
     * </pre>
     *
     * <code>SESSION_DATA = 11;</code>
     */
    public static final int SESSION_DATA_VALUE = 11;
    /**
     * <pre>
     * User saved a snapshot
     * </pre>
     *
     * <code>SNAPSHOT_CAPTURED = 12;</code>
     */
    public static final int SNAPSHOT_CAPTURED_VALUE = 12;
    /**
     * <pre>
     * User loaded a snapshot
     * </pre>
     *
     * <code>SNAPSHOT_LOADED = 13;</code>
     */
    public static final int SNAPSHOT_LOADED_VALUE = 13;
    /**
     * <pre>
     * Error loading a snapshot
     * </pre>
     *
     * <code>SNAPSHOT_LOAD_ERROR = 14;</code>
     */
    public static final int SNAPSHOT_LOAD_ERROR_VALUE = 14;
    /**
     * <pre>
     * User cancelled the snapshot saving process
     * </pre>
     *
     * <code>SNAPSHOT_CANCELLED = 15;</code>
     */
    public static final int SNAPSHOT_CANCELLED_VALUE = 15;
    /**
     * <pre>
     * There was an error during initial connect
     * </pre>
     *
     * <code>ATTACH_ERROR = 16;</code>
     */
    public static final int ATTACH_ERROR_VALUE = 16;
    /**
     * <pre>
     * An attach attempt was cancelled or preempted by the user
     * </pre>
     *
     * <code>ATTACH_CANCELLED = 17;</code>
     */
    public static final int ATTACH_CANCELLED_VALUE = 17;
    /**
     * <pre>
     * Info about auto-connect to foreground process
     * </pre>
     *
     * <code>AUTO_CONNECT_INFO = 18;</code>
     */
    public static final int AUTO_CONNECT_INFO_VALUE = 18;
    /**
     * <pre>
     * A transport-related error
     * </pre>
     *
     * <code>TRANSPORT_ERROR = 19;</code>
     */
    public static final int TRANSPORT_ERROR_VALUE = 19;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DynamicLayoutInspectorEventType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DynamicLayoutInspectorEventType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EVENT_TYPE;
        case 1: return OPEN;
        case 2: return ATTACH_REQUEST;
        case 3: return ATTACH_SUCCESS;
        case 4: return INITIAL_RENDER;
        case 5: return INITIAL_RENDER_NO_PICTURE;
        case 6: return INITIAL_RENDER_BITMAPS;
        case 7: return COMPATIBILITY_REQUEST;
        case 8: return COMPATIBILITY_SUCCESS;
        case 9: return COMPATIBILITY_RENDER;
        case 10: return COMPATIBILITY_RENDER_NO_PICTURE;
        case 11: return SESSION_DATA;
        case 12: return SNAPSHOT_CAPTURED;
        case 13: return SNAPSHOT_LOADED;
        case 14: return SNAPSHOT_LOAD_ERROR;
        case 15: return SNAPSHOT_CANCELLED;
        case 16: return ATTACH_ERROR;
        case 17: return ATTACH_CANCELLED;
        case 18: return AUTO_CONNECT_INFO;
        case 19: return TRANSPORT_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DynamicLayoutInspectorEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DynamicLayoutInspectorEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DynamicLayoutInspectorEventType>() {
            public DynamicLayoutInspectorEventType findValueByNumber(int number) {
              return DynamicLayoutInspectorEventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final DynamicLayoutInspectorEventType[] VALUES = values();

    public static DynamicLayoutInspectorEventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DynamicLayoutInspectorEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType)
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <pre>
   * Type of event
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType type = 1;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Type of event
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType getType() {
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType.forNumber(type_);
    return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType.UNKNOWN_EVENT_TYPE : result;
  }

  public static final int SESSION_FIELD_NUMBER = 2;
  private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession session_;
  /**
   * <pre>
   * Data for the layout inspector session
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
   * @return Whether the session field is set.
   */
  @java.lang.Override
  public boolean hasSession() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Data for the layout inspector session
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
   * @return The session.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession getSession() {
    return session_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.getDefaultInstance() : session_;
  }
  /**
   * <pre>
   * Data for the layout inspector session
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSessionOrBuilder getSessionOrBuilder() {
    return session_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.getDefaultInstance() : session_;
  }

  public static final int SNAPSHOT_INFO_FIELD_NUMBER = 3;
  private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo snapshotInfo_;
  /**
   * <pre>
   * Additional information that will be available when looking at a snapshot
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
   * @return Whether the snapshotInfo field is set.
   */
  @java.lang.Override
  public boolean hasSnapshotInfo() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Additional information that will be available when looking at a snapshot
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
   * @return The snapshotInfo.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo getSnapshotInfo() {
    return snapshotInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.getDefaultInstance() : snapshotInfo_;
  }
  /**
   * <pre>
   * Additional information that will be available when looking at a snapshot
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfoOrBuilder getSnapshotInfoOrBuilder() {
    return snapshotInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.getDefaultInstance() : snapshotInfo_;
  }

  public static final int ERROR_INFO_FIELD_NUMBER = 4;
  private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo errorInfo_;
  /**
   * <pre>
   * Extra info for error-related events
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
   * @return Whether the errorInfo field is set.
   */
  @java.lang.Override
  public boolean hasErrorInfo() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Extra info for error-related events
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
   * @return The errorInfo.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getErrorInfo() {
    return errorInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
  }
  /**
   * <pre>
   * Extra info for error-related events
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder getErrorInfoOrBuilder() {
    return errorInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
  }

  public static final int AUTO_CONNECT_INFO_FIELD_NUMBER = 5;
  private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo autoConnectInfo_;
  /**
   * <pre>
   * Extra info about auto connect to foreground process
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
   * @return Whether the autoConnectInfo field is set.
   */
  @java.lang.Override
  public boolean hasAutoConnectInfo() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Extra info about auto connect to foreground process
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
   * @return The autoConnectInfo.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo getAutoConnectInfo() {
    return autoConnectInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.getDefaultInstance() : autoConnectInfo_;
  }
  /**
   * <pre>
   * Extra info about auto connect to foreground process
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfoOrBuilder getAutoConnectInfoOrBuilder() {
    return autoConnectInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.getDefaultInstance() : autoConnectInfo_;
  }

  public static final int TRANSPORT_ERROR_FIELD_NUMBER = 6;
  private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError transportError_;
  /**
   * <pre>
   * An error from the transport that prevents Layout Inspector from starting
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
   * @return Whether the transportError field is set.
   */
  @java.lang.Override
  public boolean hasTransportError() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * An error from the transport that prevents Layout Inspector from starting
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
   * @return The transportError.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError getTransportError() {
    return transportError_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.getDefaultInstance() : transportError_;
  }
  /**
   * <pre>
   * An error from the transport that prevents Layout Inspector from starting
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportErrorOrBuilder getTransportErrorOrBuilder() {
    return transportError_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.getDefaultInstance() : transportError_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getSession());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getSnapshotInfo());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getErrorInfo());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getAutoConnectInfo());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(6, getTransportError());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSession());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSnapshotInfo());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getErrorInfo());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getAutoConnectInfo());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTransportError());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent other = (com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent) obj;

    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasSession() != other.hasSession()) return false;
    if (hasSession()) {
      if (!getSession()
          .equals(other.getSession())) return false;
    }
    if (hasSnapshotInfo() != other.hasSnapshotInfo()) return false;
    if (hasSnapshotInfo()) {
      if (!getSnapshotInfo()
          .equals(other.getSnapshotInfo())) return false;
    }
    if (hasErrorInfo() != other.hasErrorInfo()) return false;
    if (hasErrorInfo()) {
      if (!getErrorInfo()
          .equals(other.getErrorInfo())) return false;
    }
    if (hasAutoConnectInfo() != other.hasAutoConnectInfo()) return false;
    if (hasAutoConnectInfo()) {
      if (!getAutoConnectInfo()
          .equals(other.getAutoConnectInfo())) return false;
    }
    if (hasTransportError() != other.hasTransportError()) return false;
    if (hasTransportError()) {
      if (!getTransportError()
          .equals(other.getTransportError())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasSession()) {
      hash = (37 * hash) + SESSION_FIELD_NUMBER;
      hash = (53 * hash) + getSession().hashCode();
    }
    if (hasSnapshotInfo()) {
      hash = (37 * hash) + SNAPSHOT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshotInfo().hashCode();
    }
    if (hasErrorInfo()) {
      hash = (37 * hash) + ERROR_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getErrorInfo().hashCode();
    }
    if (hasAutoConnectInfo()) {
      hash = (37 * hash) + AUTO_CONNECT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getAutoConnectInfo().hashCode();
    }
    if (hasTransportError()) {
      hash = (37 * hash) + TRANSPORT_ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getTransportError().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Details for dynamic layout inspector (inspector v2) events
   * </pre>
   *
   * Protobuf type {@code android_studio.DynamicLayoutInspectorEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.DynamicLayoutInspectorEvent)
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.class, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSessionFieldBuilder();
        getSnapshotInfoFieldBuilder();
        getErrorInfoFieldBuilder();
        getAutoConnectInfoFieldBuilder();
        getTransportErrorFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      session_ = null;
      if (sessionBuilder_ != null) {
        sessionBuilder_.dispose();
        sessionBuilder_ = null;
      }
      snapshotInfo_ = null;
      if (snapshotInfoBuilder_ != null) {
        snapshotInfoBuilder_.dispose();
        snapshotInfoBuilder_ = null;
      }
      errorInfo_ = null;
      if (errorInfoBuilder_ != null) {
        errorInfoBuilder_.dispose();
        errorInfoBuilder_ = null;
      }
      autoConnectInfo_ = null;
      if (autoConnectInfoBuilder_ != null) {
        autoConnectInfoBuilder_.dispose();
        autoConnectInfoBuilder_ = null;
      }
      transportError_ = null;
      if (transportErrorBuilder_ != null) {
        transportErrorBuilder_.dispose();
        transportErrorBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent build() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent buildPartial() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent result = new com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.session_ = sessionBuilder_ == null
            ? session_
            : sessionBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.snapshotInfo_ = snapshotInfoBuilder_ == null
            ? snapshotInfo_
            : snapshotInfoBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.errorInfo_ = errorInfoBuilder_ == null
            ? errorInfo_
            : errorInfoBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.autoConnectInfo_ = autoConnectInfoBuilder_ == null
            ? autoConnectInfo_
            : autoConnectInfoBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.transportError_ = transportErrorBuilder_ == null
            ? transportError_
            : transportErrorBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent other) {
      if (other == com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.getDefaultInstance()) return this;
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasSession()) {
        mergeSession(other.getSession());
      }
      if (other.hasSnapshotInfo()) {
        mergeSnapshotInfo(other.getSnapshotInfo());
      }
      if (other.hasErrorInfo()) {
        mergeErrorInfo(other.getErrorInfo());
      }
      if (other.hasAutoConnectInfo()) {
        mergeAutoConnectInfo(other.getAutoConnectInfo());
      }
      if (other.hasTransportError()) {
        mergeTransportError(other.getTransportError());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType tmpValue =
                  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                type_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getSessionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSnapshotInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getErrorInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getAutoConnectInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getTransportErrorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * Type of event
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Type of event
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType getType() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType.forNumber(type_);
      return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType.UNKNOWN_EVENT_TYPE : result;
    }
    /**
     * <pre>
     * Type of event
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of event
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorEvent.DynamicLayoutInspectorEventType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession session_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSessionOrBuilder> sessionBuilder_;
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     * @return Whether the session field is set.
     */
    public boolean hasSession() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     * @return The session.
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession getSession() {
      if (sessionBuilder_ == null) {
        return session_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.getDefaultInstance() : session_;
      } else {
        return sessionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    public Builder setSession(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession value) {
      if (sessionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        session_ = value;
      } else {
        sessionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    public Builder setSession(
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.Builder builderForValue) {
      if (sessionBuilder_ == null) {
        session_ = builderForValue.build();
      } else {
        sessionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    public Builder mergeSession(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession value) {
      if (sessionBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          session_ != null &&
          session_ != com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.getDefaultInstance()) {
          getSessionBuilder().mergeFrom(value);
        } else {
          session_ = value;
        }
      } else {
        sessionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    public Builder clearSession() {
      bitField0_ = (bitField0_ & ~0x00000002);
      session_ = null;
      if (sessionBuilder_ != null) {
        sessionBuilder_.dispose();
        sessionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.Builder getSessionBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getSessionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSessionOrBuilder getSessionOrBuilder() {
      if (sessionBuilder_ != null) {
        return sessionBuilder_.getMessageOrBuilder();
      } else {
        return session_ == null ?
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.getDefaultInstance() : session_;
      }
    }
    /**
     * <pre>
     * Data for the layout inspector session
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSession session = 2 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSessionOrBuilder> 
        getSessionFieldBuilder() {
      if (sessionBuilder_ == null) {
        sessionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSession.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSessionOrBuilder>(
                getSession(),
                getParentForChildren(),
                isClean());
        session_ = null;
      }
      return sessionBuilder_;
    }

    private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo snapshotInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfoOrBuilder> snapshotInfoBuilder_;
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     * @return Whether the snapshotInfo field is set.
     */
    public boolean hasSnapshotInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     * @return The snapshotInfo.
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo getSnapshotInfo() {
      if (snapshotInfoBuilder_ == null) {
        return snapshotInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.getDefaultInstance() : snapshotInfo_;
      } else {
        return snapshotInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    public Builder setSnapshotInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo value) {
      if (snapshotInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snapshotInfo_ = value;
      } else {
        snapshotInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    public Builder setSnapshotInfo(
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.Builder builderForValue) {
      if (snapshotInfoBuilder_ == null) {
        snapshotInfo_ = builderForValue.build();
      } else {
        snapshotInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    public Builder mergeSnapshotInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo value) {
      if (snapshotInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          snapshotInfo_ != null &&
          snapshotInfo_ != com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.getDefaultInstance()) {
          getSnapshotInfoBuilder().mergeFrom(value);
        } else {
          snapshotInfo_ = value;
        }
      } else {
        snapshotInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    public Builder clearSnapshotInfo() {
      bitField0_ = (bitField0_ & ~0x00000004);
      snapshotInfo_ = null;
      if (snapshotInfoBuilder_ != null) {
        snapshotInfoBuilder_.dispose();
        snapshotInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.Builder getSnapshotInfoBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSnapshotInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfoOrBuilder getSnapshotInfoOrBuilder() {
      if (snapshotInfoBuilder_ != null) {
        return snapshotInfoBuilder_.getMessageOrBuilder();
      } else {
        return snapshotInfo_ == null ?
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.getDefaultInstance() : snapshotInfo_;
      }
    }
    /**
     * <pre>
     * Additional information that will be available when looking at a snapshot
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorSnapshotInfo snapshot_info = 3 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfoOrBuilder> 
        getSnapshotInfoFieldBuilder() {
      if (snapshotInfoBuilder_ == null) {
        snapshotInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorSnapshotInfoOrBuilder>(
                getSnapshotInfo(),
                getParentForChildren(),
                isClean());
        snapshotInfo_ = null;
      }
      return snapshotInfoBuilder_;
    }

    private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo errorInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder> errorInfoBuilder_;
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     * @return Whether the errorInfo field is set.
     */
    public boolean hasErrorInfo() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     * @return The errorInfo.
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getErrorInfo() {
      if (errorInfoBuilder_ == null) {
        return errorInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
      } else {
        return errorInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    public Builder setErrorInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo value) {
      if (errorInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        errorInfo_ = value;
      } else {
        errorInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    public Builder setErrorInfo(
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder builderForValue) {
      if (errorInfoBuilder_ == null) {
        errorInfo_ = builderForValue.build();
      } else {
        errorInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    public Builder mergeErrorInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo value) {
      if (errorInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          errorInfo_ != null &&
          errorInfo_ != com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance()) {
          getErrorInfoBuilder().mergeFrom(value);
        } else {
          errorInfo_ = value;
        }
      } else {
        errorInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    public Builder clearErrorInfo() {
      bitField0_ = (bitField0_ & ~0x00000008);
      errorInfo_ = null;
      if (errorInfoBuilder_ != null) {
        errorInfoBuilder_.dispose();
        errorInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder getErrorInfoBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getErrorInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder getErrorInfoOrBuilder() {
      if (errorInfoBuilder_ != null) {
        return errorInfoBuilder_.getMessageOrBuilder();
      } else {
        return errorInfo_ == null ?
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
      }
    }
    /**
     * <pre>
     * Extra info for error-related events
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 4 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder> 
        getErrorInfoFieldBuilder() {
      if (errorInfoBuilder_ == null) {
        errorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder>(
                getErrorInfo(),
                getParentForChildren(),
                isClean());
        errorInfo_ = null;
      }
      return errorInfoBuilder_;
    }

    private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo autoConnectInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfoOrBuilder> autoConnectInfoBuilder_;
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     * @return Whether the autoConnectInfo field is set.
     */
    public boolean hasAutoConnectInfo() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     * @return The autoConnectInfo.
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo getAutoConnectInfo() {
      if (autoConnectInfoBuilder_ == null) {
        return autoConnectInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.getDefaultInstance() : autoConnectInfo_;
      } else {
        return autoConnectInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    public Builder setAutoConnectInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo value) {
      if (autoConnectInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        autoConnectInfo_ = value;
      } else {
        autoConnectInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    public Builder setAutoConnectInfo(
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.Builder builderForValue) {
      if (autoConnectInfoBuilder_ == null) {
        autoConnectInfo_ = builderForValue.build();
      } else {
        autoConnectInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    public Builder mergeAutoConnectInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo value) {
      if (autoConnectInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          autoConnectInfo_ != null &&
          autoConnectInfo_ != com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.getDefaultInstance()) {
          getAutoConnectInfoBuilder().mergeFrom(value);
        } else {
          autoConnectInfo_ = value;
        }
      } else {
        autoConnectInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    public Builder clearAutoConnectInfo() {
      bitField0_ = (bitField0_ & ~0x00000010);
      autoConnectInfo_ = null;
      if (autoConnectInfoBuilder_ != null) {
        autoConnectInfoBuilder_.dispose();
        autoConnectInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.Builder getAutoConnectInfoBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getAutoConnectInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfoOrBuilder getAutoConnectInfoOrBuilder() {
      if (autoConnectInfoBuilder_ != null) {
        return autoConnectInfoBuilder_.getMessageOrBuilder();
      } else {
        return autoConnectInfo_ == null ?
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.getDefaultInstance() : autoConnectInfo_;
      }
    }
    /**
     * <pre>
     * Extra info about auto connect to foreground process
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAutoConnectInfo auto_connect_info = 5 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfoOrBuilder> 
        getAutoConnectInfoFieldBuilder() {
      if (autoConnectInfoBuilder_ == null) {
        autoConnectInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAutoConnectInfoOrBuilder>(
                getAutoConnectInfo(),
                getParentForChildren(),
                isClean());
        autoConnectInfo_ = null;
      }
      return autoConnectInfoBuilder_;
    }

    private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError transportError_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportErrorOrBuilder> transportErrorBuilder_;
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     * @return Whether the transportError field is set.
     */
    public boolean hasTransportError() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     * @return The transportError.
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError getTransportError() {
      if (transportErrorBuilder_ == null) {
        return transportError_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.getDefaultInstance() : transportError_;
      } else {
        return transportErrorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    public Builder setTransportError(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError value) {
      if (transportErrorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transportError_ = value;
      } else {
        transportErrorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    public Builder setTransportError(
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.Builder builderForValue) {
      if (transportErrorBuilder_ == null) {
        transportError_ = builderForValue.build();
      } else {
        transportErrorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    public Builder mergeTransportError(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError value) {
      if (transportErrorBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          transportError_ != null &&
          transportError_ != com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.getDefaultInstance()) {
          getTransportErrorBuilder().mergeFrom(value);
        } else {
          transportError_ = value;
        }
      } else {
        transportErrorBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    public Builder clearTransportError() {
      bitField0_ = (bitField0_ & ~0x00000020);
      transportError_ = null;
      if (transportErrorBuilder_ != null) {
        transportErrorBuilder_.dispose();
        transportErrorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.Builder getTransportErrorBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getTransportErrorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportErrorOrBuilder getTransportErrorOrBuilder() {
      if (transportErrorBuilder_ != null) {
        return transportErrorBuilder_.getMessageOrBuilder();
      } else {
        return transportError_ == null ?
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.getDefaultInstance() : transportError_;
      }
    }
    /**
     * <pre>
     * An error from the transport that prevents Layout Inspector from starting
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorTransportError transport_error = 6 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportErrorOrBuilder> 
        getTransportErrorFieldBuilder() {
      if (transportErrorBuilder_ == null) {
        transportErrorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportError.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorTransportErrorOrBuilder>(
                getTransportError(),
                getParentForChildren(),
                isClean());
        transportError_ = null;
      }
      return transportErrorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.DynamicLayoutInspectorEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.DynamicLayoutInspectorEvent)
  private static final com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent();
  }

  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<DynamicLayoutInspectorEvent>
      PARSER = new com.google.protobuf.AbstractParser<DynamicLayoutInspectorEvent>() {
    @java.lang.Override
    public DynamicLayoutInspectorEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DynamicLayoutInspectorEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DynamicLayoutInspectorEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

