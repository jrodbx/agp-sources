// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface AnnotationProcessorInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.AnnotationProcessorInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The user's original spec, e.g. 'org.immutables:value:2.4.4'
   * Often, though not always, in the form 'package:name:version'.
   * </pre>
   *
   * <code>optional string spec = 1;</code>
   * @return Whether the spec field is set.
   */
  boolean hasSpec();
  /**
   * <pre>
   * The user's original spec, e.g. 'org.immutables:value:2.4.4'
   * Often, though not always, in the form 'package:name:version'.
   * </pre>
   *
   * <code>optional string spec = 1;</code>
   * @return The spec.
   */
  java.lang.String getSpec();
  /**
   * <pre>
   * The user's original spec, e.g. 'org.immutables:value:2.4.4'
   * Often, though not always, in the form 'package:name:version'.
   * </pre>
   *
   * <code>optional string spec = 1;</code>
   * @return The bytes for spec.
   */
  com.google.protobuf.ByteString
      getSpecBytes();

  /**
   * <pre>
   * How the processor was included in the build file.
   * </pre>
   *
   * <code>optional .android_studio.AnnotationProcessorInfo.InclusionType inclusion_type = 2;</code>
   * @return Whether the inclusionType field is set.
   */
  boolean hasInclusionType();
  /**
   * <pre>
   * How the processor was included in the build file.
   * </pre>
   *
   * <code>optional .android_studio.AnnotationProcessorInfo.InclusionType inclusion_type = 2;</code>
   * @return The inclusionType.
   */
  com.google.wireless.android.sdk.stats.AnnotationProcessorInfo.InclusionType getInclusionType();

  /**
   * <pre>
   * Whether the annotation processor is
   * incremental(isolating/aggregating/dynamic)
   * </pre>
   *
   * <code>optional bool is_incremental = 3;</code>
   * @return Whether the isIncremental field is set.
   */
  boolean hasIsIncremental();
  /**
   * <pre>
   * Whether the annotation processor is
   * incremental(isolating/aggregating/dynamic)
   * </pre>
   *
   * <code>optional bool is_incremental = 3;</code>
   * @return The isIncremental.
   */
  boolean getIsIncremental();
}
