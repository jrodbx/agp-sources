// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorPercentileEstimatorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorPercentileEstimator)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Type of the performance metric.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorPercentileEstimator.EmulatorPerformanceMetric metric = 1;</code>
   * @return Whether the metric field is set.
   */
  boolean hasMetric();
  /**
   * <pre>
   * Type of the performance metric.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorPercentileEstimator.EmulatorPerformanceMetric metric = 1;</code>
   * @return The metric.
   */
  com.google.wireless.android.sdk.stats.EmulatorPercentileEstimator.EmulatorPerformanceMetric getMetric();

  /**
   * <pre>
   * Per-metric type context, e.g. UI element name if this is an event handling
   * time. Not set if there's no context for the specific metric type.
   * </pre>
   *
   * <code>optional string context = 2;</code>
   * @return Whether the context field is set.
   */
  boolean hasContext();
  /**
   * <pre>
   * Per-metric type context, e.g. UI element name if this is an event handling
   * time. Not set if there's no context for the specific metric type.
   * </pre>
   *
   * <code>optional string context = 2;</code>
   * @return The context.
   */
  java.lang.String getContext();
  /**
   * <pre>
   * Per-metric type context, e.g. UI element name if this is an event handling
   * time. Not set if there's no context for the specific metric type.
   * </pre>
   *
   * <code>optional string context = 2;</code>
   * @return The bytes for context.
   */
  com.google.protobuf.ByteString
      getContextBytes();

  /**
   * <pre>
   * Estimator for metric.
   * </pre>
   *
   * <code>optional .android_studio.PercentileEstimator estimator = 3;</code>
   * @return Whether the estimator field is set.
   */
  boolean hasEstimator();
  /**
   * <pre>
   * Estimator for metric.
   * </pre>
   *
   * <code>optional .android_studio.PercentileEstimator estimator = 3;</code>
   * @return The estimator.
   */
  com.google.wireless.android.sdk.stats.PercentileEstimator getEstimator();
  /**
   * <pre>
   * Estimator for metric.
   * </pre>
   *
   * <code>optional .android_studio.PercentileEstimator estimator = 3;</code>
   */
  com.google.wireless.android.sdk.stats.PercentileEstimatorOrBuilder getEstimatorOrBuilder();
}
