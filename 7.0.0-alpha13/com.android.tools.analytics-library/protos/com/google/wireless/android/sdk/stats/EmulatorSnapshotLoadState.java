// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Generic snapshot load states. Distinguished
 * from Quickboot load states.
 * </pre>
 *
 * Protobuf enum {@code android_studio.EmulatorSnapshotLoadState}
 */
public enum EmulatorSnapshotLoadState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Successful load.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_SUCCEEDED_NORMAL = 0;</code>
   */
  EMULATOR_SNAPSHOT_LOAD_SUCCEEDED_NORMAL(0),
  /**
   * <pre>
   * Generic failure when loading state.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_FAILED = 1;</code>
   */
  EMULATOR_SNAPSHOT_LOAD_FAILED(1),
  /**
   * <pre>
   * Loading snapshots not supported in current configuration.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_SKIPPED_UNSUPPORTED = 2;</code>
   */
  EMULATOR_SNAPSHOT_LOAD_SKIPPED_UNSUPPORTED(2),
  /**
   * <pre>
   * Loading snapshot failed because it doesn't exist.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_NO_SNAPSHOT = 3;</code>
   */
  EMULATOR_SNAPSHOT_LOAD_NO_SNAPSHOT(3),
  /**
   * <pre>
   * Loading snapshot failed because the snapshot is too old.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_OLD_SNAPSHOT = 4;</code>
   */
  EMULATOR_SNAPSHOT_LOAD_OLD_SNAPSHOT(4),
  /**
   * <pre>
   * The snapshot load hung.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_HUNG = 5;</code>
   */
  EMULATOR_SNAPSHOT_LOAD_HUNG(5),
  ;

  /**
   * <pre>
   * Successful load.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_SUCCEEDED_NORMAL = 0;</code>
   */
  public static final int EMULATOR_SNAPSHOT_LOAD_SUCCEEDED_NORMAL_VALUE = 0;
  /**
   * <pre>
   * Generic failure when loading state.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_FAILED = 1;</code>
   */
  public static final int EMULATOR_SNAPSHOT_LOAD_FAILED_VALUE = 1;
  /**
   * <pre>
   * Loading snapshots not supported in current configuration.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_SKIPPED_UNSUPPORTED = 2;</code>
   */
  public static final int EMULATOR_SNAPSHOT_LOAD_SKIPPED_UNSUPPORTED_VALUE = 2;
  /**
   * <pre>
   * Loading snapshot failed because it doesn't exist.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_NO_SNAPSHOT = 3;</code>
   */
  public static final int EMULATOR_SNAPSHOT_LOAD_NO_SNAPSHOT_VALUE = 3;
  /**
   * <pre>
   * Loading snapshot failed because the snapshot is too old.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_OLD_SNAPSHOT = 4;</code>
   */
  public static final int EMULATOR_SNAPSHOT_LOAD_OLD_SNAPSHOT_VALUE = 4;
  /**
   * <pre>
   * The snapshot load hung.
   * </pre>
   *
   * <code>EMULATOR_SNAPSHOT_LOAD_HUNG = 5;</code>
   */
  public static final int EMULATOR_SNAPSHOT_LOAD_HUNG_VALUE = 5;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EmulatorSnapshotLoadState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EmulatorSnapshotLoadState forNumber(int value) {
    switch (value) {
      case 0: return EMULATOR_SNAPSHOT_LOAD_SUCCEEDED_NORMAL;
      case 1: return EMULATOR_SNAPSHOT_LOAD_FAILED;
      case 2: return EMULATOR_SNAPSHOT_LOAD_SKIPPED_UNSUPPORTED;
      case 3: return EMULATOR_SNAPSHOT_LOAD_NO_SNAPSHOT;
      case 4: return EMULATOR_SNAPSHOT_LOAD_OLD_SNAPSHOT;
      case 5: return EMULATOR_SNAPSHOT_LOAD_HUNG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EmulatorSnapshotLoadState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EmulatorSnapshotLoadState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EmulatorSnapshotLoadState>() {
          public EmulatorSnapshotLoadState findValueByNumber(int number) {
            return EmulatorSnapshotLoadState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.getDescriptor().getEnumTypes().get(2);
  }

  private static final EmulatorSnapshotLoadState[] VALUES = values();

  public static EmulatorSnapshotLoadState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EmulatorSnapshotLoadState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:android_studio.EmulatorSnapshotLoadState)
}

