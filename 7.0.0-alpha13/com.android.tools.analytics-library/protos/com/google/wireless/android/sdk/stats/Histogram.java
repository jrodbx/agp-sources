// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Holds a histogram of values.
 * </pre>
 *
 * Protobuf type {@code android_studio.Histogram}
 */
public  final class Histogram extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.Histogram)
    HistogramOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Histogram.newBuilder() to construct.
  private Histogram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Histogram() {
    bin_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Histogram();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Histogram(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            bitField0_ |= 0x00000001;
            totalCount_ = input.readInt64();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              bin_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.HistogramBin>();
              mutable_bitField0_ |= 0x00000002;
            }
            bin_.add(
                input.readMessage(com.google.wireless.android.sdk.stats.HistogramBin.PARSER, extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        bin_ = java.util.Collections.unmodifiableList(bin_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_Histogram_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_Histogram_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.Histogram.class, com.google.wireless.android.sdk.stats.Histogram.Builder.class);
  }

  private int bitField0_;
  public static final int TOTAL_COUNT_FIELD_NUMBER = 1;
  private long totalCount_;
  /**
   * <pre>
   * Holds the total number of samples in the histogram
   * </pre>
   *
   * <code>optional int64 total_count = 1;</code>
   * @return Whether the totalCount field is set.
   */
  public boolean hasTotalCount() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Holds the total number of samples in the histogram
   * </pre>
   *
   * <code>optional int64 total_count = 1;</code>
   * @return The totalCount.
   */
  public long getTotalCount() {
    return totalCount_;
  }

  public static final int BIN_FIELD_NUMBER = 2;
  private java.util.List<com.google.wireless.android.sdk.stats.HistogramBin> bin_;
  /**
   * <pre>
   * Holds the bins for this histogram, in ascending order
   * </pre>
   *
   * <code>repeated .android_studio.HistogramBin bin = 2;</code>
   */
  public java.util.List<com.google.wireless.android.sdk.stats.HistogramBin> getBinList() {
    return bin_;
  }
  /**
   * <pre>
   * Holds the bins for this histogram, in ascending order
   * </pre>
   *
   * <code>repeated .android_studio.HistogramBin bin = 2;</code>
   */
  public java.util.List<? extends com.google.wireless.android.sdk.stats.HistogramBinOrBuilder>
      getBinOrBuilderList() {
    return bin_;
  }
  /**
   * <pre>
   * Holds the bins for this histogram, in ascending order
   * </pre>
   *
   * <code>repeated .android_studio.HistogramBin bin = 2;</code>
   */
  public int getBinCount() {
    return bin_.size();
  }
  /**
   * <pre>
   * Holds the bins for this histogram, in ascending order
   * </pre>
   *
   * <code>repeated .android_studio.HistogramBin bin = 2;</code>
   */
  public com.google.wireless.android.sdk.stats.HistogramBin getBin(int index) {
    return bin_.get(index);
  }
  /**
   * <pre>
   * Holds the bins for this histogram, in ascending order
   * </pre>
   *
   * <code>repeated .android_studio.HistogramBin bin = 2;</code>
   */
  public com.google.wireless.android.sdk.stats.HistogramBinOrBuilder getBinOrBuilder(
      int index) {
    return bin_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, totalCount_);
    }
    for (int i = 0; i < bin_.size(); i++) {
      output.writeMessage(2, bin_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, totalCount_);
    }
    for (int i = 0; i < bin_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, bin_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.Histogram)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.Histogram other = (com.google.wireless.android.sdk.stats.Histogram) obj;

    if (hasTotalCount() != other.hasTotalCount()) return false;
    if (hasTotalCount()) {
      if (getTotalCount()
          != other.getTotalCount()) return false;
    }
    if (!getBinList()
        .equals(other.getBinList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTotalCount()) {
      hash = (37 * hash) + TOTAL_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalCount());
    }
    if (getBinCount() > 0) {
      hash = (37 * hash) + BIN_FIELD_NUMBER;
      hash = (53 * hash) + getBinList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.Histogram parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.Histogram prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Holds a histogram of values.
   * </pre>
   *
   * Protobuf type {@code android_studio.Histogram}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.Histogram)
      com.google.wireless.android.sdk.stats.HistogramOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_Histogram_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_Histogram_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.Histogram.class, com.google.wireless.android.sdk.stats.Histogram.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.Histogram.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBinFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      totalCount_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (binBuilder_ == null) {
        bin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        binBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_Histogram_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.Histogram getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.Histogram.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.Histogram build() {
      com.google.wireless.android.sdk.stats.Histogram result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.Histogram buildPartial() {
      com.google.wireless.android.sdk.stats.Histogram result = new com.google.wireless.android.sdk.stats.Histogram(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.totalCount_ = totalCount_;
        to_bitField0_ |= 0x00000001;
      }
      if (binBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          bin_ = java.util.Collections.unmodifiableList(bin_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.bin_ = bin_;
      } else {
        result.bin_ = binBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.Histogram) {
        return mergeFrom((com.google.wireless.android.sdk.stats.Histogram)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.Histogram other) {
      if (other == com.google.wireless.android.sdk.stats.Histogram.getDefaultInstance()) return this;
      if (other.hasTotalCount()) {
        setTotalCount(other.getTotalCount());
      }
      if (binBuilder_ == null) {
        if (!other.bin_.isEmpty()) {
          if (bin_.isEmpty()) {
            bin_ = other.bin_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBinIsMutable();
            bin_.addAll(other.bin_);
          }
          onChanged();
        }
      } else {
        if (!other.bin_.isEmpty()) {
          if (binBuilder_.isEmpty()) {
            binBuilder_.dispose();
            binBuilder_ = null;
            bin_ = other.bin_;
            bitField0_ = (bitField0_ & ~0x00000002);
            binBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBinFieldBuilder() : null;
          } else {
            binBuilder_.addAllMessages(other.bin_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.Histogram parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.Histogram) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long totalCount_ ;
    /**
     * <pre>
     * Holds the total number of samples in the histogram
     * </pre>
     *
     * <code>optional int64 total_count = 1;</code>
     * @return Whether the totalCount field is set.
     */
    public boolean hasTotalCount() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Holds the total number of samples in the histogram
     * </pre>
     *
     * <code>optional int64 total_count = 1;</code>
     * @return The totalCount.
     */
    public long getTotalCount() {
      return totalCount_;
    }
    /**
     * <pre>
     * Holds the total number of samples in the histogram
     * </pre>
     *
     * <code>optional int64 total_count = 1;</code>
     * @param value The totalCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalCount(long value) {
      bitField0_ |= 0x00000001;
      totalCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Holds the total number of samples in the histogram
     * </pre>
     *
     * <code>optional int64 total_count = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      totalCount_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.HistogramBin> bin_ =
      java.util.Collections.emptyList();
    private void ensureBinIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        bin_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.HistogramBin>(bin_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.HistogramBin, com.google.wireless.android.sdk.stats.HistogramBin.Builder, com.google.wireless.android.sdk.stats.HistogramBinOrBuilder> binBuilder_;

    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.HistogramBin> getBinList() {
      if (binBuilder_ == null) {
        return java.util.Collections.unmodifiableList(bin_);
      } else {
        return binBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public int getBinCount() {
      if (binBuilder_ == null) {
        return bin_.size();
      } else {
        return binBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.HistogramBin getBin(int index) {
      if (binBuilder_ == null) {
        return bin_.get(index);
      } else {
        return binBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder setBin(
        int index, com.google.wireless.android.sdk.stats.HistogramBin value) {
      if (binBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBinIsMutable();
        bin_.set(index, value);
        onChanged();
      } else {
        binBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder setBin(
        int index, com.google.wireless.android.sdk.stats.HistogramBin.Builder builderForValue) {
      if (binBuilder_ == null) {
        ensureBinIsMutable();
        bin_.set(index, builderForValue.build());
        onChanged();
      } else {
        binBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder addBin(com.google.wireless.android.sdk.stats.HistogramBin value) {
      if (binBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBinIsMutable();
        bin_.add(value);
        onChanged();
      } else {
        binBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder addBin(
        int index, com.google.wireless.android.sdk.stats.HistogramBin value) {
      if (binBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBinIsMutable();
        bin_.add(index, value);
        onChanged();
      } else {
        binBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder addBin(
        com.google.wireless.android.sdk.stats.HistogramBin.Builder builderForValue) {
      if (binBuilder_ == null) {
        ensureBinIsMutable();
        bin_.add(builderForValue.build());
        onChanged();
      } else {
        binBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder addBin(
        int index, com.google.wireless.android.sdk.stats.HistogramBin.Builder builderForValue) {
      if (binBuilder_ == null) {
        ensureBinIsMutable();
        bin_.add(index, builderForValue.build());
        onChanged();
      } else {
        binBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder addAllBin(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.HistogramBin> values) {
      if (binBuilder_ == null) {
        ensureBinIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bin_);
        onChanged();
      } else {
        binBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder clearBin() {
      if (binBuilder_ == null) {
        bin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        binBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public Builder removeBin(int index) {
      if (binBuilder_ == null) {
        ensureBinIsMutable();
        bin_.remove(index);
        onChanged();
      } else {
        binBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.HistogramBin.Builder getBinBuilder(
        int index) {
      return getBinFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.HistogramBinOrBuilder getBinOrBuilder(
        int index) {
      if (binBuilder_ == null) {
        return bin_.get(index);  } else {
        return binBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.HistogramBinOrBuilder>
         getBinOrBuilderList() {
      if (binBuilder_ != null) {
        return binBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(bin_);
      }
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.HistogramBin.Builder addBinBuilder() {
      return getBinFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.HistogramBin.getDefaultInstance());
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public com.google.wireless.android.sdk.stats.HistogramBin.Builder addBinBuilder(
        int index) {
      return getBinFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.HistogramBin.getDefaultInstance());
    }
    /**
     * <pre>
     * Holds the bins for this histogram, in ascending order
     * </pre>
     *
     * <code>repeated .android_studio.HistogramBin bin = 2;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.HistogramBin.Builder>
         getBinBuilderList() {
      return getBinFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.HistogramBin, com.google.wireless.android.sdk.stats.HistogramBin.Builder, com.google.wireless.android.sdk.stats.HistogramBinOrBuilder>
        getBinFieldBuilder() {
      if (binBuilder_ == null) {
        binBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.HistogramBin, com.google.wireless.android.sdk.stats.HistogramBin.Builder, com.google.wireless.android.sdk.stats.HistogramBinOrBuilder>(
                bin_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        bin_ = null;
      }
      return binBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.Histogram)
  }

  // @@protoc_insertion_point(class_scope:android_studio.Histogram)
  private static final com.google.wireless.android.sdk.stats.Histogram DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.Histogram();
  }

  public static com.google.wireless.android.sdk.stats.Histogram getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Histogram>
      PARSER = new com.google.protobuf.AbstractParser<Histogram>() {
    @java.lang.Override
    public Histogram parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Histogram(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Histogram> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Histogram> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.Histogram getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

