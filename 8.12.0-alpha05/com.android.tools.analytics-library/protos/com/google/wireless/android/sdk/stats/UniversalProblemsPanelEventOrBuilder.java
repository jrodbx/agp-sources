// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface UniversalProblemsPanelEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.UniversalProblemsPanelEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * True if IJ's problems pane is visible, false otherwise.
   * </pre>
   *
   * <code>optional bool problems_panel_visibility = 1;</code>
   * @return Whether the problemsPanelVisibility field is set.
   */
  boolean hasProblemsPanelVisibility();
  /**
   * <pre>
   * True if IJ's problems pane is visible, false otherwise.
   * </pre>
   *
   * <code>optional bool problems_panel_visibility = 1;</code>
   * @return The problemsPanelVisibility.
   */
  boolean getProblemsPanelVisibility();

  /**
   * <pre>
   * User interactions event of universal problems panel.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
   * @return Whether the interactionEvent field is set.
   */
  boolean hasInteractionEvent();
  /**
   * <pre>
   * User interactions event of universal problems panel.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
   * @return The interactionEvent.
   */
  com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent getInteractionEvent();

  /**
   * <pre>
   * The type of the activated tab affected by this event
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
   * @return Whether the activatedTab field is set.
   */
  boolean hasActivatedTab();
  /**
   * <pre>
   * The type of the activated tab affected by this event
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
   * @return The activatedTab.
   */
  com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab getActivatedTab();

  /**
   * <pre>
   * The Navigation event of the issues.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
   * @return Whether the issueNavigated field is set.
   */
  boolean hasIssueNavigated();
  /**
   * <pre>
   * The Navigation event of the issues.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
   * @return The issueNavigated.
   */
  com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated getIssueNavigated();
}
