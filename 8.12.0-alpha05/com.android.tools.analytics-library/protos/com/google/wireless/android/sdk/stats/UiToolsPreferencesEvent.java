// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Events raised by user interactions with UI Tools preferences panel
 * </pre>
 *
 * Protobuf type {@code android_studio.UiToolsPreferencesEvent}
 */
public final class UiToolsPreferencesEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.UiToolsPreferencesEvent)
    UiToolsPreferencesEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UiToolsPreferencesEvent.newBuilder() to construct.
  private UiToolsPreferencesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UiToolsPreferencesEvent() {
    resourcesViewMode_ = 0;
    editorViewMode_ = 0;
    previewLayoutMode_ = 0;
    resourceUsage_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UiToolsPreferencesEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UiToolsPreferencesEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UiToolsPreferencesEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.class, com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.Builder.class);
  }

  /**
   * <pre>
   * Type of the view modes to show resources and code in the UI Tools.
   * Can show code, design and a split view showing both code and design
   * </pre>
   *
   * Protobuf enum {@code android_studio.UiToolsPreferencesEvent.ViewMode}
   */
  public enum ViewMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_VIEW_MODE = 0;</code>
     */
    UNKNOWN_VIEW_MODE(0),
    /**
     * <code>CODE = 1;</code>
     */
    CODE(1),
    /**
     * <code>SPLIT = 2;</code>
     */
    SPLIT(2),
    /**
     * <code>DESIGN = 3;</code>
     */
    DESIGN(3),
    ;

    /**
     * <code>UNKNOWN_VIEW_MODE = 0;</code>
     */
    public static final int UNKNOWN_VIEW_MODE_VALUE = 0;
    /**
     * <code>CODE = 1;</code>
     */
    public static final int CODE_VALUE = 1;
    /**
     * <code>SPLIT = 2;</code>
     */
    public static final int SPLIT_VALUE = 2;
    /**
     * <code>DESIGN = 3;</code>
     */
    public static final int DESIGN_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ViewMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ViewMode forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_VIEW_MODE;
        case 1: return CODE;
        case 2: return SPLIT;
        case 3: return DESIGN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ViewMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ViewMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ViewMode>() {
            public ViewMode findValueByNumber(int number) {
              return ViewMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final ViewMode[] VALUES = values();

    public static ViewMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ViewMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UiToolsPreferencesEvent.ViewMode)
  }

  /**
   * <pre>
   * Type of layout used when showing a Preview in a file, it can show a preview
   * organized on a grid layout, in a vertical list or gallery
   * mode where only a preview at a time is shown.
   * </pre>
   *
   * Protobuf enum {@code android_studio.UiToolsPreferencesEvent.LayoutMode}
   */
  public enum LayoutMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_LAYOUT_MODE = 0;</code>
     */
    UNKNOWN_LAYOUT_MODE(0),
    /**
     * <code>GRID = 1;</code>
     */
    GRID(1),
    /**
     * <code>LIST = 2;</code>
     */
    LIST(2),
    /**
     * <code>GALLERY = 3;</code>
     */
    GALLERY(3),
    ;

    /**
     * <code>UNKNOWN_LAYOUT_MODE = 0;</code>
     */
    public static final int UNKNOWN_LAYOUT_MODE_VALUE = 0;
    /**
     * <code>GRID = 1;</code>
     */
    public static final int GRID_VALUE = 1;
    /**
     * <code>LIST = 2;</code>
     */
    public static final int LIST_VALUE = 2;
    /**
     * <code>GALLERY = 3;</code>
     */
    public static final int GALLERY_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LayoutMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LayoutMode forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_LAYOUT_MODE;
        case 1: return GRID;
        case 2: return LIST;
        case 3: return GALLERY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LayoutMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LayoutMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LayoutMode>() {
            public LayoutMode findValueByNumber(int number) {
              return LayoutMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final LayoutMode[] VALUES = values();

    public static LayoutMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LayoutMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UiToolsPreferencesEvent.LayoutMode)
  }

  /**
   * <pre>
   * Type of resource usage when using a Preview, essential is using the minimum
   * possible resources to show the preview, default uses a regular amount of
   * resources, resource usages can be a bit higher when default is enabled
   * along with live updates
   * </pre>
   *
   * Protobuf enum {@code android_studio.UiToolsPreferencesEvent.ResourceUsage}
   */
  public enum ResourceUsage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEFAULT = 0;</code>
     */
    DEFAULT(0),
    /**
     * <code>DEFAULT_WITHOUT_LIVE_UPDATES = 1;</code>
     */
    DEFAULT_WITHOUT_LIVE_UPDATES(1),
    /**
     * <code>ESSENTIAL = 2;</code>
     */
    ESSENTIAL(2),
    ;

    /**
     * <code>DEFAULT = 0;</code>
     */
    public static final int DEFAULT_VALUE = 0;
    /**
     * <code>DEFAULT_WITHOUT_LIVE_UPDATES = 1;</code>
     */
    public static final int DEFAULT_WITHOUT_LIVE_UPDATES_VALUE = 1;
    /**
     * <code>ESSENTIAL = 2;</code>
     */
    public static final int ESSENTIAL_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceUsage valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceUsage forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT;
        case 1: return DEFAULT_WITHOUT_LIVE_UPDATES;
        case 2: return ESSENTIAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceUsage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceUsage> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceUsage>() {
            public ResourceUsage findValueByNumber(int number) {
              return ResourceUsage.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.getDescriptor().getEnumTypes().get(2);
    }

    private static final ResourceUsage[] VALUES = values();

    public static ResourceUsage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceUsage(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UiToolsPreferencesEvent.ResourceUsage)
  }

  private int bitField0_;
  public static final int RESOURCES_VIEW_MODE_FIELD_NUMBER = 1;
  private int resourcesViewMode_ = 0;
  /**
   * <pre>
   * View mode of the first opening of resources files. It can be code, split or
   * design
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode resources_view_mode = 1;</code>
   * @return Whether the resourcesViewMode field is set.
   */
  @java.lang.Override public boolean hasResourcesViewMode() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * View mode of the first opening of resources files. It can be code, split or
   * design
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode resources_view_mode = 1;</code>
   * @return The resourcesViewMode.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode getResourcesViewMode() {
    com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.forNumber(resourcesViewMode_);
    return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.UNKNOWN_VIEW_MODE : result;
  }

  public static final int EDITOR_VIEW_MODE_FIELD_NUMBER = 2;
  private int editorViewMode_ = 0;
  /**
   * <pre>
   * Kotlin files view mode can be code, split or design
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode editor_view_mode = 2;</code>
   * @return Whether the editorViewMode field is set.
   */
  @java.lang.Override public boolean hasEditorViewMode() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Kotlin files view mode can be code, split or design
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode editor_view_mode = 2;</code>
   * @return The editorViewMode.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode getEditorViewMode() {
    com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.forNumber(editorViewMode_);
    return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.UNKNOWN_VIEW_MODE : result;
  }

  public static final int SHOW_SPLIT_MODE_ON_ANNOTATIONS_FIELD_NUMBER = 3;
  private boolean showSplitModeOnAnnotations_ = false;
  /**
   * <pre>
   * When true, it always shows the split mode whenever a code file contains
   * &#64;Preview annotations
   * </pre>
   *
   * <code>optional bool show_split_mode_on_annotations = 3;</code>
   * @return Whether the showSplitModeOnAnnotations field is set.
   */
  @java.lang.Override
  public boolean hasShowSplitModeOnAnnotations() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * When true, it always shows the split mode whenever a code file contains
   * &#64;Preview annotations
   * </pre>
   *
   * <code>optional bool show_split_mode_on_annotations = 3;</code>
   * @return The showSplitModeOnAnnotations.
   */
  @java.lang.Override
  public boolean getShowSplitModeOnAnnotations() {
    return showSplitModeOnAnnotations_;
  }

  public static final int TRACK_PAD_SENSITIVITY_LEVEL_FIELD_NUMBER = 4;
  private int trackPadSensitivityLevel_ = 0;
  /**
   * <pre>
   * The percentage of sensitivity level of the Trackpad, the value is in an
   * interval between 0 and 100
   * </pre>
   *
   * <code>optional int32 track_pad_sensitivity_level = 4;</code>
   * @return Whether the trackPadSensitivityLevel field is set.
   */
  @java.lang.Override
  public boolean hasTrackPadSensitivityLevel() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The percentage of sensitivity level of the Trackpad, the value is in an
   * interval between 0 and 100
   * </pre>
   *
   * <code>optional int32 track_pad_sensitivity_level = 4;</code>
   * @return The trackPadSensitivityLevel.
   */
  @java.lang.Override
  public int getTrackPadSensitivityLevel() {
    return trackPadSensitivityLevel_;
  }

  public static final int PREVIEW_LAYOUT_MODE_FIELD_NUMBER = 6;
  private int previewLayoutMode_ = 0;
  /**
   * <pre>
   * The layout mode of previews when its file is opened for the first time, it
   * can be grid, list, or gallery.
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.LayoutMode preview_layout_mode = 6;</code>
   * @return Whether the previewLayoutMode field is set.
   */
  @java.lang.Override public boolean hasPreviewLayoutMode() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The layout mode of previews when its file is opened for the first time, it
   * can be grid, list, or gallery.
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.LayoutMode preview_layout_mode = 6;</code>
   * @return The previewLayoutMode.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode getPreviewLayoutMode() {
    com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode.forNumber(previewLayoutMode_);
    return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode.UNKNOWN_LAYOUT_MODE : result;
  }

  public static final int RESOURCE_USAGE_FIELD_NUMBER = 7;
  private int resourceUsage_ = 0;
  /**
   * <pre>
   * Amount or resources used to show previews: can be default, default without
   * live updates or essential
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.ResourceUsage resource_usage = 7;</code>
   * @return Whether the resourceUsage field is set.
   */
  @java.lang.Override public boolean hasResourceUsage() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Amount or resources used to show previews: can be default, default without
   * live updates or essential
   * </pre>
   *
   * <code>optional .android_studio.UiToolsPreferencesEvent.ResourceUsage resource_usage = 7;</code>
   * @return The resourceUsage.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage getResourceUsage() {
    com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage.forNumber(resourceUsage_);
    return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage.DEFAULT : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, resourcesViewMode_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, editorViewMode_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(3, showSplitModeOnAnnotations_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt32(4, trackPadSensitivityLevel_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeEnum(6, previewLayoutMode_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeEnum(7, resourceUsage_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, resourcesViewMode_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, editorViewMode_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, showSplitModeOnAnnotations_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, trackPadSensitivityLevel_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, previewLayoutMode_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, resourceUsage_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent other = (com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent) obj;

    if (hasResourcesViewMode() != other.hasResourcesViewMode()) return false;
    if (hasResourcesViewMode()) {
      if (resourcesViewMode_ != other.resourcesViewMode_) return false;
    }
    if (hasEditorViewMode() != other.hasEditorViewMode()) return false;
    if (hasEditorViewMode()) {
      if (editorViewMode_ != other.editorViewMode_) return false;
    }
    if (hasShowSplitModeOnAnnotations() != other.hasShowSplitModeOnAnnotations()) return false;
    if (hasShowSplitModeOnAnnotations()) {
      if (getShowSplitModeOnAnnotations()
          != other.getShowSplitModeOnAnnotations()) return false;
    }
    if (hasTrackPadSensitivityLevel() != other.hasTrackPadSensitivityLevel()) return false;
    if (hasTrackPadSensitivityLevel()) {
      if (getTrackPadSensitivityLevel()
          != other.getTrackPadSensitivityLevel()) return false;
    }
    if (hasPreviewLayoutMode() != other.hasPreviewLayoutMode()) return false;
    if (hasPreviewLayoutMode()) {
      if (previewLayoutMode_ != other.previewLayoutMode_) return false;
    }
    if (hasResourceUsage() != other.hasResourceUsage()) return false;
    if (hasResourceUsage()) {
      if (resourceUsage_ != other.resourceUsage_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasResourcesViewMode()) {
      hash = (37 * hash) + RESOURCES_VIEW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + resourcesViewMode_;
    }
    if (hasEditorViewMode()) {
      hash = (37 * hash) + EDITOR_VIEW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + editorViewMode_;
    }
    if (hasShowSplitModeOnAnnotations()) {
      hash = (37 * hash) + SHOW_SPLIT_MODE_ON_ANNOTATIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShowSplitModeOnAnnotations());
    }
    if (hasTrackPadSensitivityLevel()) {
      hash = (37 * hash) + TRACK_PAD_SENSITIVITY_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getTrackPadSensitivityLevel();
    }
    if (hasPreviewLayoutMode()) {
      hash = (37 * hash) + PREVIEW_LAYOUT_MODE_FIELD_NUMBER;
      hash = (53 * hash) + previewLayoutMode_;
    }
    if (hasResourceUsage()) {
      hash = (37 * hash) + RESOURCE_USAGE_FIELD_NUMBER;
      hash = (53 * hash) + resourceUsage_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Events raised by user interactions with UI Tools preferences panel
   * </pre>
   *
   * Protobuf type {@code android_studio.UiToolsPreferencesEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.UiToolsPreferencesEvent)
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UiToolsPreferencesEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UiToolsPreferencesEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.class, com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      resourcesViewMode_ = 0;
      editorViewMode_ = 0;
      showSplitModeOnAnnotations_ = false;
      trackPadSensitivityLevel_ = 0;
      previewLayoutMode_ = 0;
      resourceUsage_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UiToolsPreferencesEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent build() {
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent buildPartial() {
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent result = new com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.resourcesViewMode_ = resourcesViewMode_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.editorViewMode_ = editorViewMode_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.showSplitModeOnAnnotations_ = showSplitModeOnAnnotations_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.trackPadSensitivityLevel_ = trackPadSensitivityLevel_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.previewLayoutMode_ = previewLayoutMode_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.resourceUsage_ = resourceUsage_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent other) {
      if (other == com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.getDefaultInstance()) return this;
      if (other.hasResourcesViewMode()) {
        setResourcesViewMode(other.getResourcesViewMode());
      }
      if (other.hasEditorViewMode()) {
        setEditorViewMode(other.getEditorViewMode());
      }
      if (other.hasShowSplitModeOnAnnotations()) {
        setShowSplitModeOnAnnotations(other.getShowSplitModeOnAnnotations());
      }
      if (other.hasTrackPadSensitivityLevel()) {
        setTrackPadSensitivityLevel(other.getTrackPadSensitivityLevel());
      }
      if (other.hasPreviewLayoutMode()) {
        setPreviewLayoutMode(other.getPreviewLayoutMode());
      }
      if (other.hasResourceUsage()) {
        setResourceUsage(other.getResourceUsage());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode tmpValue =
                  com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                resourcesViewMode_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode tmpValue =
                  com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                editorViewMode_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              showSplitModeOnAnnotations_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              trackPadSensitivityLevel_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 48: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode tmpValue =
                  com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(6, tmpRaw);
              } else {
                previewLayoutMode_ = tmpRaw;
                bitField0_ |= 0x00000010;
              }
              break;
            } // case 48
            case 56: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage tmpValue =
                  com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(7, tmpRaw);
              } else {
                resourceUsage_ = tmpRaw;
                bitField0_ |= 0x00000020;
              }
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int resourcesViewMode_ = 0;
    /**
     * <pre>
     * View mode of the first opening of resources files. It can be code, split or
     * design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode resources_view_mode = 1;</code>
     * @return Whether the resourcesViewMode field is set.
     */
    @java.lang.Override public boolean hasResourcesViewMode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * View mode of the first opening of resources files. It can be code, split or
     * design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode resources_view_mode = 1;</code>
     * @return The resourcesViewMode.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode getResourcesViewMode() {
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.forNumber(resourcesViewMode_);
      return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.UNKNOWN_VIEW_MODE : result;
    }
    /**
     * <pre>
     * View mode of the first opening of resources files. It can be code, split or
     * design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode resources_view_mode = 1;</code>
     * @param value The resourcesViewMode to set.
     * @return This builder for chaining.
     */
    public Builder setResourcesViewMode(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      resourcesViewMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * View mode of the first opening of resources files. It can be code, split or
     * design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode resources_view_mode = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearResourcesViewMode() {
      bitField0_ = (bitField0_ & ~0x00000001);
      resourcesViewMode_ = 0;
      onChanged();
      return this;
    }

    private int editorViewMode_ = 0;
    /**
     * <pre>
     * Kotlin files view mode can be code, split or design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode editor_view_mode = 2;</code>
     * @return Whether the editorViewMode field is set.
     */
    @java.lang.Override public boolean hasEditorViewMode() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Kotlin files view mode can be code, split or design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode editor_view_mode = 2;</code>
     * @return The editorViewMode.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode getEditorViewMode() {
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.forNumber(editorViewMode_);
      return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode.UNKNOWN_VIEW_MODE : result;
    }
    /**
     * <pre>
     * Kotlin files view mode can be code, split or design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode editor_view_mode = 2;</code>
     * @param value The editorViewMode to set.
     * @return This builder for chaining.
     */
    public Builder setEditorViewMode(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ViewMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      editorViewMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Kotlin files view mode can be code, split or design
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ViewMode editor_view_mode = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEditorViewMode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      editorViewMode_ = 0;
      onChanged();
      return this;
    }

    private boolean showSplitModeOnAnnotations_ ;
    /**
     * <pre>
     * When true, it always shows the split mode whenever a code file contains
     * &#64;Preview annotations
     * </pre>
     *
     * <code>optional bool show_split_mode_on_annotations = 3;</code>
     * @return Whether the showSplitModeOnAnnotations field is set.
     */
    @java.lang.Override
    public boolean hasShowSplitModeOnAnnotations() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * When true, it always shows the split mode whenever a code file contains
     * &#64;Preview annotations
     * </pre>
     *
     * <code>optional bool show_split_mode_on_annotations = 3;</code>
     * @return The showSplitModeOnAnnotations.
     */
    @java.lang.Override
    public boolean getShowSplitModeOnAnnotations() {
      return showSplitModeOnAnnotations_;
    }
    /**
     * <pre>
     * When true, it always shows the split mode whenever a code file contains
     * &#64;Preview annotations
     * </pre>
     *
     * <code>optional bool show_split_mode_on_annotations = 3;</code>
     * @param value The showSplitModeOnAnnotations to set.
     * @return This builder for chaining.
     */
    public Builder setShowSplitModeOnAnnotations(boolean value) {

      showSplitModeOnAnnotations_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When true, it always shows the split mode whenever a code file contains
     * &#64;Preview annotations
     * </pre>
     *
     * <code>optional bool show_split_mode_on_annotations = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearShowSplitModeOnAnnotations() {
      bitField0_ = (bitField0_ & ~0x00000004);
      showSplitModeOnAnnotations_ = false;
      onChanged();
      return this;
    }

    private int trackPadSensitivityLevel_ ;
    /**
     * <pre>
     * The percentage of sensitivity level of the Trackpad, the value is in an
     * interval between 0 and 100
     * </pre>
     *
     * <code>optional int32 track_pad_sensitivity_level = 4;</code>
     * @return Whether the trackPadSensitivityLevel field is set.
     */
    @java.lang.Override
    public boolean hasTrackPadSensitivityLevel() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The percentage of sensitivity level of the Trackpad, the value is in an
     * interval between 0 and 100
     * </pre>
     *
     * <code>optional int32 track_pad_sensitivity_level = 4;</code>
     * @return The trackPadSensitivityLevel.
     */
    @java.lang.Override
    public int getTrackPadSensitivityLevel() {
      return trackPadSensitivityLevel_;
    }
    /**
     * <pre>
     * The percentage of sensitivity level of the Trackpad, the value is in an
     * interval between 0 and 100
     * </pre>
     *
     * <code>optional int32 track_pad_sensitivity_level = 4;</code>
     * @param value The trackPadSensitivityLevel to set.
     * @return This builder for chaining.
     */
    public Builder setTrackPadSensitivityLevel(int value) {

      trackPadSensitivityLevel_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The percentage of sensitivity level of the Trackpad, the value is in an
     * interval between 0 and 100
     * </pre>
     *
     * <code>optional int32 track_pad_sensitivity_level = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrackPadSensitivityLevel() {
      bitField0_ = (bitField0_ & ~0x00000008);
      trackPadSensitivityLevel_ = 0;
      onChanged();
      return this;
    }

    private int previewLayoutMode_ = 0;
    /**
     * <pre>
     * The layout mode of previews when its file is opened for the first time, it
     * can be grid, list, or gallery.
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.LayoutMode preview_layout_mode = 6;</code>
     * @return Whether the previewLayoutMode field is set.
     */
    @java.lang.Override public boolean hasPreviewLayoutMode() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The layout mode of previews when its file is opened for the first time, it
     * can be grid, list, or gallery.
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.LayoutMode preview_layout_mode = 6;</code>
     * @return The previewLayoutMode.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode getPreviewLayoutMode() {
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode.forNumber(previewLayoutMode_);
      return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode.UNKNOWN_LAYOUT_MODE : result;
    }
    /**
     * <pre>
     * The layout mode of previews when its file is opened for the first time, it
     * can be grid, list, or gallery.
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.LayoutMode preview_layout_mode = 6;</code>
     * @param value The previewLayoutMode to set.
     * @return This builder for chaining.
     */
    public Builder setPreviewLayoutMode(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.LayoutMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      previewLayoutMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The layout mode of previews when its file is opened for the first time, it
     * can be grid, list, or gallery.
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.LayoutMode preview_layout_mode = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreviewLayoutMode() {
      bitField0_ = (bitField0_ & ~0x00000010);
      previewLayoutMode_ = 0;
      onChanged();
      return this;
    }

    private int resourceUsage_ = 0;
    /**
     * <pre>
     * Amount or resources used to show previews: can be default, default without
     * live updates or essential
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ResourceUsage resource_usage = 7;</code>
     * @return Whether the resourceUsage field is set.
     */
    @java.lang.Override public boolean hasResourceUsage() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Amount or resources used to show previews: can be default, default without
     * live updates or essential
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ResourceUsage resource_usage = 7;</code>
     * @return The resourceUsage.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage getResourceUsage() {
      com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage result = com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage.forNumber(resourceUsage_);
      return result == null ? com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage.DEFAULT : result;
    }
    /**
     * <pre>
     * Amount or resources used to show previews: can be default, default without
     * live updates or essential
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ResourceUsage resource_usage = 7;</code>
     * @param value The resourceUsage to set.
     * @return This builder for chaining.
     */
    public Builder setResourceUsage(com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent.ResourceUsage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      resourceUsage_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount or resources used to show previews: can be default, default without
     * live updates or essential
     * </pre>
     *
     * <code>optional .android_studio.UiToolsPreferencesEvent.ResourceUsage resource_usage = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearResourceUsage() {
      bitField0_ = (bitField0_ & ~0x00000020);
      resourceUsage_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.UiToolsPreferencesEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.UiToolsPreferencesEvent)
  private static final com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent();
  }

  public static com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<UiToolsPreferencesEvent>
      PARSER = new com.google.protobuf.AbstractParser<UiToolsPreferencesEvent>() {
    @java.lang.Override
    public UiToolsPreferencesEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UiToolsPreferencesEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UiToolsPreferencesEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.UiToolsPreferencesEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

