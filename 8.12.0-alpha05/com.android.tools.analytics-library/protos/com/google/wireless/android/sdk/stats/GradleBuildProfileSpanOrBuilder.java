// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface GradleBuildProfileSpanOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.GradleBuildProfileSpan)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier for this span, created by sequentially allocating IDs to spans
   * as they start. Used only for the parent-child relationship of spans, to
   * show execution that is part of another span.
   * Not stable or meaningful across builds.
   * </pre>
   *
   * <code>optional int64 id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * Identifier for this span, created by sequentially allocating IDs to spans
   * as they start. Used only for the parent-child relationship of spans, to
   * show execution that is part of another span.
   * Not stable or meaningful across builds.
   * </pre>
   *
   * <code>optional int64 id = 1;</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * For nested spans: the id for containing span.
   * See GradleBuildProfileSpan.id.
   * </pre>
   *
   * <code>optional int64 parent_id = 2;</code>
   * @return Whether the parentId field is set.
   */
  boolean hasParentId();
  /**
   * <pre>
   * For nested spans: the id for containing span.
   * See GradleBuildProfileSpan.id.
   * </pre>
   *
   * <code>optional int64 parent_id = 2;</code>
   * @return The parentId.
   */
  long getParentId();

  /**
   * <pre>
   * The start time of this event
   * </pre>
   *
   * <code>optional int64 start_time_in_ms = 3;</code>
   * @return Whether the startTimeInMs field is set.
   */
  boolean hasStartTimeInMs();
  /**
   * <pre>
   * The start time of this event
   * </pre>
   *
   * <code>optional int64 start_time_in_ms = 3;</code>
   * @return The startTimeInMs.
   */
  long getStartTimeInMs();

  /**
   * <pre>
   * The duration of this event. May be zero.
   * </pre>
   *
   * <code>optional int64 duration_in_ms = 4;</code>
   * @return Whether the durationInMs field is set.
   */
  boolean hasDurationInMs();
  /**
   * <pre>
   * The duration of this event. May be zero.
   * </pre>
   *
   * <code>optional int64 duration_in_ms = 4;</code>
   * @return The durationInMs.
   */
  long getDurationInMs();

  /**
   * <pre>
   * The type of event recorded
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildProfileSpan.ExecutionType type = 5;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of event recorded
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildProfileSpan.ExecutionType type = 5;</code>
   * @return The type.
   */
  com.google.wireless.android.sdk.stats.GradleBuildProfileSpan.ExecutionType getType();

  /**
   * <pre>
   * More informations about the execution of TransformTasks.
   * Only used when executionType is TASK_TRANSFORM_PREPARATION or
   * TASK_TRANSFORM.
   * </pre>
   *
   * <code>optional .android_studio.GradleTransformExecution transform = 6 [lazy = true];</code>
   * @return Whether the transform field is set.
   */
  boolean hasTransform();
  /**
   * <pre>
   * More informations about the execution of TransformTasks.
   * Only used when executionType is TASK_TRANSFORM_PREPARATION or
   * TASK_TRANSFORM.
   * </pre>
   *
   * <code>optional .android_studio.GradleTransformExecution transform = 6 [lazy = true];</code>
   * @return The transform.
   */
  com.google.wireless.android.sdk.stats.GradleTransformExecution getTransform();
  /**
   * <pre>
   * More informations about the execution of TransformTasks.
   * Only used when executionType is TASK_TRANSFORM_PREPARATION or
   * TASK_TRANSFORM.
   * </pre>
   *
   * <code>optional .android_studio.GradleTransformExecution transform = 6 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.GradleTransformExecutionOrBuilder getTransformOrBuilder();

  /**
   * <pre>
   * More informations about the execution of Tasks.
   * Only used when executionType is TASK_EXECUTION
   * </pre>
   *
   * <code>optional .android_studio.GradleTaskExecution task = 9 [lazy = true];</code>
   * @return Whether the task field is set.
   */
  boolean hasTask();
  /**
   * <pre>
   * More informations about the execution of Tasks.
   * Only used when executionType is TASK_EXECUTION
   * </pre>
   *
   * <code>optional .android_studio.GradleTaskExecution task = 9 [lazy = true];</code>
   * @return The task.
   */
  com.google.wireless.android.sdk.stats.GradleTaskExecution getTask();
  /**
   * <pre>
   * More informations about the execution of Tasks.
   * Only used when executionType is TASK_EXECUTION
   * </pre>
   *
   * <code>optional .android_studio.GradleTaskExecution task = 9 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.GradleTaskExecutionOrBuilder getTaskOrBuilder();

  /**
   * <pre>
   * Session id of the GradleBuildProject that this span is part of.
   * The ID is not stable nor meaningful over multiple GradleBuildProfile.
   * See GradleBuildProfile.id
   * </pre>
   *
   * <code>optional int64 project = 7;</code>
   * @return Whether the project field is set.
   */
  boolean hasProject();
  /**
   * <pre>
   * Session id of the GradleBuildProject that this span is part of.
   * The ID is not stable nor meaningful over multiple GradleBuildProfile.
   * See GradleBuildProfile.id
   * </pre>
   *
   * <code>optional int64 project = 7;</code>
   * @return The project.
   */
  long getProject();

  /**
   * <pre>
   * Session id of the GradleBuildVariant that this span is part of.
   * The ID is not stable nor meaningful over multiple GradleBuildProfile.
   * See GradleBuildVariant.id
   * </pre>
   *
   * <code>optional int64 variant = 8;</code>
   * @return Whether the variant field is set.
   */
  boolean hasVariant();
  /**
   * <pre>
   * Session id of the GradleBuildVariant that this span is part of.
   * The ID is not stable nor meaningful over multiple GradleBuildProfile.
   * See GradleBuildVariant.id
   * </pre>
   *
   * <code>optional int64 variant = 8;</code>
   * @return The variant.
   */
  long getVariant();

  /**
   * <pre>
   * Thread that this execution occurs on.
   * Generated by sequentially numbering java threads that do work that is
   * recorded.
   * Will not be populated for async recorded events,
   * such as from the task execution listener.
   * </pre>
   *
   * <code>optional int64 thread_id = 10;</code>
   * @return Whether the threadId field is set.
   */
  boolean hasThreadId();
  /**
   * <pre>
   * Thread that this execution occurs on.
   * Generated by sequentially numbering java threads that do work that is
   * recorded.
   * Will not be populated for async recorded events,
   * such as from the task execution listener.
   * </pre>
   *
   * <code>optional int64 thread_id = 10;</code>
   * @return The threadId.
   */
  long getThreadId();
}
