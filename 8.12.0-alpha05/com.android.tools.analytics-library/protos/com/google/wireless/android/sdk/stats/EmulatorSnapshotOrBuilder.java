// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorSnapshotOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorSnapshot)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Anonymized snapshot name (SHA256 + salted).
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * Anonymized snapshot name (SHA256 + salted).
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Anonymized snapshot name (SHA256 + salted).
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * A combination of EmulatorSnapshotFlags describing the snapshot.
   * </pre>
   *
   * <code>optional int32 flags = 2;</code>
   * @return Whether the flags field is set.
   */
  boolean hasFlags();
  /**
   * <pre>
   * A combination of EmulatorSnapshotFlags describing the snapshot.
   * </pre>
   *
   * <code>optional int32 flags = 2;</code>
   * @return The flags.
   */
  int getFlags();

  /**
   * <pre>
   * Total size on disk, in bytes.
   * </pre>
   *
   * <code>optional int64 size_bytes = 3;</code>
   * @return Whether the sizeBytes field is set.
   */
  boolean hasSizeBytes();
  /**
   * <pre>
   * Total size on disk, in bytes.
   * </pre>
   *
   * <code>optional int64 size_bytes = 3;</code>
   * @return The sizeBytes.
   */
  long getSizeBytes();

  /**
   * <pre>
   * Snapshot save/load states.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotSaveState save_state = 4;</code>
   * @return Whether the saveState field is set.
   */
  boolean hasSaveState();
  /**
   * <pre>
   * Snapshot save/load states.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotSaveState save_state = 4;</code>
   * @return The saveState.
   */
  com.google.wireless.android.sdk.stats.EmulatorSnapshotSaveState getSaveState();

  /**
   * <code>optional .android_studio.EmulatorSnapshotLoadState load_state = 5;</code>
   * @return Whether the loadState field is set.
   */
  boolean hasLoadState();
  /**
   * <code>optional .android_studio.EmulatorSnapshotLoadState load_state = 5;</code>
   * @return The loadState.
   */
  com.google.wireless.android.sdk.stats.EmulatorSnapshotLoadState getLoadState();

  /**
   * <pre>
   * Detailed reason for non-success of snapshot load.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotFailureReason load_failure_reason = 6;</code>
   * @return Whether the loadFailureReason field is set.
   */
  boolean hasLoadFailureReason();
  /**
   * <pre>
   * Detailed reason for non-success of snapshot load.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotFailureReason load_failure_reason = 6;</code>
   * @return The loadFailureReason.
   */
  com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason getLoadFailureReason();

  /**
   * <pre>
   * Detailed reason for non-success of snapshot save.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotFailureReason save_failure_reason = 7;</code>
   * @return Whether the saveFailureReason field is set.
   */
  boolean hasSaveFailureReason();
  /**
   * <pre>
   * Detailed reason for non-success of snapshot save.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorSnapshotFailureReason save_failure_reason = 7;</code>
   * @return The saveFailureReason.
   */
  com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason getSaveFailureReason();

  /**
   * <pre>
   * Whether or not it was lazy loaded.
   * </pre>
   *
   * <code>optional bool lazy_loaded = 8;</code>
   * @return Whether the lazyLoaded field is set.
   */
  boolean hasLazyLoaded();
  /**
   * <pre>
   * Whether or not it was lazy loaded.
   * </pre>
   *
   * <code>optional bool lazy_loaded = 8;</code>
   * @return The lazyLoaded.
   */
  boolean getLazyLoaded();

  /**
   * <pre>
   * Whether or not it was incrementally saved.
   * </pre>
   *
   * <code>optional bool incrementally_saved = 9;</code>
   * @return Whether the incrementallySaved field is set.
   */
  boolean hasIncrementallySaved();
  /**
   * <pre>
   * Whether or not it was incrementally saved.
   * </pre>
   *
   * <code>optional bool incrementally_saved = 9;</code>
   * @return The incrementallySaved.
   */
  boolean getIncrementallySaved();

  /**
   * <pre>
   * Size of RAM (possibly incl. incremental / compression)
   * </pre>
   *
   * <code>optional int64 ram_size_bytes = 10;</code>
   * @return Whether the ramSizeBytes field is set.
   */
  boolean hasRamSizeBytes();
  /**
   * <pre>
   * Size of RAM (possibly incl. incremental / compression)
   * </pre>
   *
   * <code>optional int64 ram_size_bytes = 10;</code>
   * @return The ramSizeBytes.
   */
  long getRamSizeBytes();

  /**
   * <pre>
   * Size of textures (possibly incl. incremental / compression)
   * </pre>
   *
   * <code>optional int64 textures_size_bytes = 11;</code>
   * @return Whether the texturesSizeBytes field is set.
   */
  boolean hasTexturesSizeBytes();
  /**
   * <pre>
   * Size of textures (possibly incl. incremental / compression)
   * </pre>
   *
   * <code>optional int64 textures_size_bytes = 11;</code>
   * @return The texturesSizeBytes.
   */
  long getTexturesSizeBytes();

  /**
   * <pre>
   * Duration of load / save (total).
   * </pre>
   *
   * <code>optional uint64 load_duration_ms = 12;</code>
   * @return Whether the loadDurationMs field is set.
   */
  boolean hasLoadDurationMs();
  /**
   * <pre>
   * Duration of load / save (total).
   * </pre>
   *
   * <code>optional uint64 load_duration_ms = 12;</code>
   * @return The loadDurationMs.
   */
  long getLoadDurationMs();

  /**
   * <code>optional uint64 save_duration_ms = 13;</code>
   * @return Whether the saveDurationMs field is set.
   */
  boolean hasSaveDurationMs();
  /**
   * <code>optional uint64 save_duration_ms = 13;</code>
   * @return The saveDurationMs.
   */
  long getSaveDurationMs();

  /**
   * <pre>
   * Duration of load / save (ram).
   * </pre>
   *
   * <code>optional uint64 ram_load_duration_ms = 14;</code>
   * @return Whether the ramLoadDurationMs field is set.
   */
  boolean hasRamLoadDurationMs();
  /**
   * <pre>
   * Duration of load / save (ram).
   * </pre>
   *
   * <code>optional uint64 ram_load_duration_ms = 14;</code>
   * @return The ramLoadDurationMs.
   */
  long getRamLoadDurationMs();

  /**
   * <code>optional uint64 ram_save_duration_ms = 15;</code>
   * @return Whether the ramSaveDurationMs field is set.
   */
  boolean hasRamSaveDurationMs();
  /**
   * <code>optional uint64 ram_save_duration_ms = 15;</code>
   * @return The ramSaveDurationMs.
   */
  long getRamSaveDurationMs();

  /**
   * <pre>
   * Duration of load / save (textures).
   * </pre>
   *
   * <code>optional uint64 textures_load_duration_ms = 16;</code>
   * @return Whether the texturesLoadDurationMs field is set.
   */
  boolean hasTexturesLoadDurationMs();
  /**
   * <pre>
   * Duration of load / save (textures).
   * </pre>
   *
   * <code>optional uint64 textures_load_duration_ms = 16;</code>
   * @return The texturesLoadDurationMs.
   */
  long getTexturesLoadDurationMs();

  /**
   * <pre>
   * Next tag: 18
   * </pre>
   *
   * <code>optional uint64 textures_save_duration_ms = 17;</code>
   * @return Whether the texturesSaveDurationMs field is set.
   */
  boolean hasTexturesSaveDurationMs();
  /**
   * <pre>
   * Next tag: 18
   * </pre>
   *
   * <code>optional uint64 textures_save_duration_ms = 17;</code>
   * @return The texturesSaveDurationMs.
   */
  long getTexturesSaveDurationMs();
}
