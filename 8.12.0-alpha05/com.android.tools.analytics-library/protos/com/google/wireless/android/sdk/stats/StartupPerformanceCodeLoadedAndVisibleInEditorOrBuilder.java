// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface StartupPerformanceCodeLoadedAndVisibleInEditorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.StartupPerformanceCodeLoadedAndVisibleInEditor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * How long did it take to load the code and show it in the editor.
   * </pre>
   *
   * <code>optional uint32 duration_ms = 1;</code>
   * @return Whether the durationMs field is set.
   */
  boolean hasDurationMs();
  /**
   * <pre>
   * How long did it take to load the code and show it in the editor.
   * </pre>
   *
   * <code>optional uint32 duration_ms = 1;</code>
   * @return The durationMs.
   */
  int getDurationMs();

  /**
   * <pre>
   * Type of the file opened.
   * </pre>
   *
   * <code>optional string file_type = 2;</code>
   * @return Whether the fileType field is set.
   */
  boolean hasFileType();
  /**
   * <pre>
   * Type of the file opened.
   * </pre>
   *
   * <code>optional string file_type = 2;</code>
   * @return The fileType.
   */
  java.lang.String getFileType();
  /**
   * <pre>
   * Type of the file opened.
   * </pre>
   *
   * <code>optional string file_type = 2;</code>
   * @return The bytes for fileType.
   */
  com.google.protobuf.ByteString
      getFileTypeBytes();

  /**
   * <pre>
   * Shows if the opened project has settings to filter cases of importing which
   * may need more resources.
   * </pre>
   *
   * <code>optional bool has_settings = 3;</code>
   * @return Whether the hasSettings field is set.
   */
  boolean hasHasSettings();
  /**
   * <pre>
   * Shows if the opened project has settings to filter cases of importing which
   * may need more resources.
   * </pre>
   *
   * <code>optional bool has_settings = 3;</code>
   * @return The hasSettings.
   */
  boolean getHasSettings();

  /**
   * <pre>
   * While opening the file, the markup was loaded from the cache.
   * </pre>
   *
   * <code>optional bool loaded_cached_markup = 4;</code>
   * @return Whether the loadedCachedMarkup field is set.
   */
  boolean hasLoadedCachedMarkup();
  /**
   * <pre>
   * While opening the file, the markup was loaded from the cache.
   * </pre>
   *
   * <code>optional bool loaded_cached_markup = 4;</code>
   * @return The loadedCachedMarkup.
   */
  boolean getLoadedCachedMarkup();

  /**
   * <pre>
   * No editors were opened on the IDE startup.
   * </pre>
   *
   * <code>optional bool no_editors_to_open = 5;</code>
   * @return Whether the noEditorsToOpen field is set.
   */
  boolean hasNoEditorsToOpen();
  /**
   * <pre>
   * No editors were opened on the IDE startup.
   * </pre>
   *
   * <code>optional bool no_editors_to_open = 5;</code>
   * @return The noEditorsToOpen.
   */
  boolean getNoEditorsToOpen();

  /**
   * <pre>
   * The reason why the selected editor was opened.
   * </pre>
   *
   * <code>optional .android_studio.StartupPerformanceCodeLoadedAndVisibleInEditor.SourceOfSelectedEditor source_of_selected_editor = 6;</code>
   * @return Whether the sourceOfSelectedEditor field is set.
   */
  boolean hasSourceOfSelectedEditor();
  /**
   * <pre>
   * The reason why the selected editor was opened.
   * </pre>
   *
   * <code>optional .android_studio.StartupPerformanceCodeLoadedAndVisibleInEditor.SourceOfSelectedEditor source_of_selected_editor = 6;</code>
   * @return The sourceOfSelectedEditor.
   */
  com.google.wireless.android.sdk.stats.StartupPerformanceCodeLoadedAndVisibleInEditor.SourceOfSelectedEditor getSourceOfSelectedEditor();
}
