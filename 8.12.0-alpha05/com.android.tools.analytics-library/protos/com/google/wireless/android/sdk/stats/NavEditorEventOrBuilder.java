// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface NavEditorEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.NavEditorEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Type of event
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent.NavEditorEventType type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * Type of event
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent.NavEditorEventType type = 1;</code>
   * @return The type.
   */
  com.google.wireless.android.sdk.stats.NavEditorEvent.NavEditorEventType getType();

  /**
   * <pre>
   * Where the event was triggered
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent.Source source = 2;</code>
   * @return Whether the source field is set.
   */
  boolean hasSource();
  /**
   * <pre>
   * Where the event was triggered
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent.Source source = 2;</code>
   * @return The source.
   */
  com.google.wireless.android.sdk.stats.NavEditorEvent.Source getSource();

  /**
   * <pre>
   * If the event is property-related, information about the affected property
   * </pre>
   *
   * <code>optional .android_studio.NavPropertyInfo property_info = 3 [lazy = true];</code>
   * @return Whether the propertyInfo field is set.
   */
  boolean hasPropertyInfo();
  /**
   * <pre>
   * If the event is property-related, information about the affected property
   * </pre>
   *
   * <code>optional .android_studio.NavPropertyInfo property_info = 3 [lazy = true];</code>
   * @return The propertyInfo.
   */
  com.google.wireless.android.sdk.stats.NavPropertyInfo getPropertyInfo();
  /**
   * <pre>
   * If the event is property-related, information about the affected property
   * </pre>
   *
   * <code>optional .android_studio.NavPropertyInfo property_info = 3 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.NavPropertyInfoOrBuilder getPropertyInfoOrBuilder();

  /**
   * <pre>
   * If the event is action-related, information about the relevant action
   * </pre>
   *
   * <code>optional .android_studio.NavActionInfo action_info = 4 [lazy = true];</code>
   * @return Whether the actionInfo field is set.
   */
  boolean hasActionInfo();
  /**
   * <pre>
   * If the event is action-related, information about the relevant action
   * </pre>
   *
   * <code>optional .android_studio.NavActionInfo action_info = 4 [lazy = true];</code>
   * @return The actionInfo.
   */
  com.google.wireless.android.sdk.stats.NavActionInfo getActionInfo();
  /**
   * <pre>
   * If the event is action-related, information about the relevant action
   * </pre>
   *
   * <code>optional .android_studio.NavActionInfo action_info = 4 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.NavActionInfoOrBuilder getActionInfoOrBuilder();

  /**
   * <pre>
   * If the event is destination-related, information about the relevant
   * destination
   * </pre>
   *
   * <code>optional .android_studio.NavDestinationInfo destination_info = 5 [lazy = true];</code>
   * @return Whether the destinationInfo field is set.
   */
  boolean hasDestinationInfo();
  /**
   * <pre>
   * If the event is destination-related, information about the relevant
   * destination
   * </pre>
   *
   * <code>optional .android_studio.NavDestinationInfo destination_info = 5 [lazy = true];</code>
   * @return The destinationInfo.
   */
  com.google.wireless.android.sdk.stats.NavDestinationInfo getDestinationInfo();
  /**
   * <pre>
   * If the event is destination-related, information about the relevant
   * destination
   * </pre>
   *
   * <code>optional .android_studio.NavDestinationInfo destination_info = 5 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.NavDestinationInfoOrBuilder getDestinationInfoOrBuilder();

  /**
   * <pre>
   * Information about the current NavigationSchema
   * </pre>
   *
   * <code>optional .android_studio.NavSchemaInfo schema_info = 6 [lazy = true];</code>
   * @return Whether the schemaInfo field is set.
   */
  boolean hasSchemaInfo();
  /**
   * <pre>
   * Information about the current NavigationSchema
   * </pre>
   *
   * <code>optional .android_studio.NavSchemaInfo schema_info = 6 [lazy = true];</code>
   * @return The schemaInfo.
   */
  com.google.wireless.android.sdk.stats.NavSchemaInfo getSchemaInfo();
  /**
   * <pre>
   * Information about the current NavigationSchema
   * </pre>
   *
   * <code>optional .android_studio.NavSchemaInfo schema_info = 6 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.NavSchemaInfoOrBuilder getSchemaInfoOrBuilder();

  /**
   * <pre>
   * Information on the current contents of the navigation file
   * </pre>
   *
   * <code>optional .android_studio.NavigationContents contents = 7 [lazy = true];</code>
   * @return Whether the contents field is set.
   */
  boolean hasContents();
  /**
   * <pre>
   * Information on the current contents of the navigation file
   * </pre>
   *
   * <code>optional .android_studio.NavigationContents contents = 7 [lazy = true];</code>
   * @return The contents.
   */
  com.google.wireless.android.sdk.stats.NavigationContents getContents();
  /**
   * <pre>
   * Information on the current contents of the navigation file
   * </pre>
   *
   * <code>optional .android_studio.NavigationContents contents = 7 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.NavigationContentsOrBuilder getContentsOrBuilder();

  /**
   * <pre>
   * Mode of navigation editor: design-only, text-only, or split view
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent.NavEditorMode mode = 8;</code>
   * @return Whether the mode field is set.
   */
  boolean hasMode();
  /**
   * <pre>
   * Mode of navigation editor: design-only, text-only, or split view
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent.NavEditorMode mode = 8;</code>
   * @return The mode.
   */
  com.google.wireless.android.sdk.stats.NavEditorEvent.NavEditorMode getMode();
}
