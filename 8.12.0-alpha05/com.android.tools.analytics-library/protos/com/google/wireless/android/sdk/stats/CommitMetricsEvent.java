// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.CommitMetricsEvent}
 */
public final class CommitMetricsEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.CommitMetricsEvent)
    CommitMetricsEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CommitMetricsEvent.newBuilder() to construct.
  private CommitMetricsEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CommitMetricsEvent() {
    commitInfo_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CommitMetricsEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.CommitMetricsEvent.class, com.google.wireless.android.sdk.stats.CommitMetricsEvent.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.CommitMetricsEvent.CommitType}
   */
  public enum CommitType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_COMMIT_TYPE = 0;</code>
     */
    UNKNOWN_COMMIT_TYPE(0),
    /**
     * <pre>
     * The commit was made in local branches
     * </pre>
     *
     * <code>LOCAL = 1;</code>
     */
    LOCAL(1),
    /**
     * <pre>
     * The commit was pushed to the remote branch
     * </pre>
     *
     * <code>REMOTE = 2;</code>
     */
    REMOTE(2),
    ;

    /**
     * <code>UNKNOWN_COMMIT_TYPE = 0;</code>
     */
    public static final int UNKNOWN_COMMIT_TYPE_VALUE = 0;
    /**
     * <pre>
     * The commit was made in local branches
     * </pre>
     *
     * <code>LOCAL = 1;</code>
     */
    public static final int LOCAL_VALUE = 1;
    /**
     * <pre>
     * The commit was pushed to the remote branch
     * </pre>
     *
     * <code>REMOTE = 2;</code>
     */
    public static final int REMOTE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommitType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CommitType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_COMMIT_TYPE;
        case 1: return LOCAL;
        case 2: return REMOTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommitType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommitType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommitType>() {
            public CommitType findValueByNumber(int number) {
              return CommitType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.CommitMetricsEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final CommitType[] VALUES = values();

    public static CommitType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommitType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.CommitMetricsEvent.CommitType)
  }

  public interface CommitInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.CommitMetricsEvent.CommitInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unix timestamp of the commit date
     * </pre>
     *
     * <code>optional int64 commit_timestamp = 1;</code>
     * @return Whether the commitTimestamp field is set.
     */
    boolean hasCommitTimestamp();
    /**
     * <pre>
     * Unix timestamp of the commit date
     * </pre>
     *
     * <code>optional int64 commit_timestamp = 1;</code>
     * @return The commitTimestamp.
     */
    long getCommitTimestamp();

    /**
     * <pre>
     * Unix timestamp of the author date
     * </pre>
     *
     * <code>optional int64 author_timestamp = 2;</code>
     * @return Whether the authorTimestamp field is set.
     */
    boolean hasAuthorTimestamp();
    /**
     * <pre>
     * Unix timestamp of the author date
     * </pre>
     *
     * <code>optional int64 author_timestamp = 2;</code>
     * @return The authorTimestamp.
     */
    long getAuthorTimestamp();

    /**
     * <pre>
     * Is this the first commit recorded since install
     * </pre>
     *
     * <code>optional bool is_first_commit = 3;</code>
     * @return Whether the isFirstCommit field is set.
     */
    boolean hasIsFirstCommit();
    /**
     * <pre>
     * Is this the first commit recorded since install
     * </pre>
     *
     * <code>optional bool is_first_commit = 3;</code>
     * @return The isFirstCommit.
     */
    boolean getIsFirstCommit();

    /**
     * <pre>
     * True if the commit is pushed to the remote branch
     * </pre>
     *
     * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
     * @return Whether the commitType field is set.
     */
    boolean hasCommitType();
    /**
     * <pre>
     * True if the commit is pushed to the remote branch
     * </pre>
     *
     * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
     * @return The commitType.
     */
    com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType getCommitType();
  }
  /**
   * Protobuf type {@code android_studio.CommitMetricsEvent.CommitInfo}
   */
  public static final class CommitInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.CommitMetricsEvent.CommitInfo)
      CommitInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommitInfo.newBuilder() to construct.
    private CommitInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommitInfo() {
      commitType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommitInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_CommitInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_CommitInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.class, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder.class);
    }

    private int bitField0_;
    public static final int COMMIT_TIMESTAMP_FIELD_NUMBER = 1;
    private long commitTimestamp_ = 0L;
    /**
     * <pre>
     * Unix timestamp of the commit date
     * </pre>
     *
     * <code>optional int64 commit_timestamp = 1;</code>
     * @return Whether the commitTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasCommitTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Unix timestamp of the commit date
     * </pre>
     *
     * <code>optional int64 commit_timestamp = 1;</code>
     * @return The commitTimestamp.
     */
    @java.lang.Override
    public long getCommitTimestamp() {
      return commitTimestamp_;
    }

    public static final int AUTHOR_TIMESTAMP_FIELD_NUMBER = 2;
    private long authorTimestamp_ = 0L;
    /**
     * <pre>
     * Unix timestamp of the author date
     * </pre>
     *
     * <code>optional int64 author_timestamp = 2;</code>
     * @return Whether the authorTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasAuthorTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Unix timestamp of the author date
     * </pre>
     *
     * <code>optional int64 author_timestamp = 2;</code>
     * @return The authorTimestamp.
     */
    @java.lang.Override
    public long getAuthorTimestamp() {
      return authorTimestamp_;
    }

    public static final int IS_FIRST_COMMIT_FIELD_NUMBER = 3;
    private boolean isFirstCommit_ = false;
    /**
     * <pre>
     * Is this the first commit recorded since install
     * </pre>
     *
     * <code>optional bool is_first_commit = 3;</code>
     * @return Whether the isFirstCommit field is set.
     */
    @java.lang.Override
    public boolean hasIsFirstCommit() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Is this the first commit recorded since install
     * </pre>
     *
     * <code>optional bool is_first_commit = 3;</code>
     * @return The isFirstCommit.
     */
    @java.lang.Override
    public boolean getIsFirstCommit() {
      return isFirstCommit_;
    }

    public static final int COMMIT_TYPE_FIELD_NUMBER = 4;
    private int commitType_ = 0;
    /**
     * <pre>
     * True if the commit is pushed to the remote branch
     * </pre>
     *
     * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
     * @return Whether the commitType field is set.
     */
    @java.lang.Override public boolean hasCommitType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * True if the commit is pushed to the remote branch
     * </pre>
     *
     * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
     * @return The commitType.
     */
    @java.lang.Override public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType getCommitType() {
      com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType result = com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType.forNumber(commitType_);
      return result == null ? com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType.UNKNOWN_COMMIT_TYPE : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, commitTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, authorTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, isFirstCommit_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, commitType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, commitTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, authorTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isFirstCommit_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, commitType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo other = (com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo) obj;

      if (hasCommitTimestamp() != other.hasCommitTimestamp()) return false;
      if (hasCommitTimestamp()) {
        if (getCommitTimestamp()
            != other.getCommitTimestamp()) return false;
      }
      if (hasAuthorTimestamp() != other.hasAuthorTimestamp()) return false;
      if (hasAuthorTimestamp()) {
        if (getAuthorTimestamp()
            != other.getAuthorTimestamp()) return false;
      }
      if (hasIsFirstCommit() != other.hasIsFirstCommit()) return false;
      if (hasIsFirstCommit()) {
        if (getIsFirstCommit()
            != other.getIsFirstCommit()) return false;
      }
      if (hasCommitType() != other.hasCommitType()) return false;
      if (hasCommitType()) {
        if (commitType_ != other.commitType_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCommitTimestamp()) {
        hash = (37 * hash) + COMMIT_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCommitTimestamp());
      }
      if (hasAuthorTimestamp()) {
        hash = (37 * hash) + AUTHOR_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAuthorTimestamp());
      }
      if (hasIsFirstCommit()) {
        hash = (37 * hash) + IS_FIRST_COMMIT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsFirstCommit());
      }
      if (hasCommitType()) {
        hash = (37 * hash) + COMMIT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + commitType_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code android_studio.CommitMetricsEvent.CommitInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.CommitMetricsEvent.CommitInfo)
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_CommitInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_CommitInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.class, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        commitTimestamp_ = 0L;
        authorTimestamp_ = 0L;
        isFirstCommit_ = false;
        commitType_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_CommitInfo_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo build() {
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo buildPartial() {
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo result = new com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.commitTimestamp_ = commitTimestamp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.authorTimestamp_ = authorTimestamp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.isFirstCommit_ = isFirstCommit_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.commitType_ = commitType_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo) {
          return mergeFrom((com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo other) {
        if (other == com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.getDefaultInstance()) return this;
        if (other.hasCommitTimestamp()) {
          setCommitTimestamp(other.getCommitTimestamp());
        }
        if (other.hasAuthorTimestamp()) {
          setAuthorTimestamp(other.getAuthorTimestamp());
        }
        if (other.hasIsFirstCommit()) {
          setIsFirstCommit(other.getIsFirstCommit());
        }
        if (other.hasCommitType()) {
          setCommitType(other.getCommitType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                commitTimestamp_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                authorTimestamp_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                isFirstCommit_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType tmpValue =
                    com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  commitType_ = tmpRaw;
                  bitField0_ |= 0x00000008;
                }
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long commitTimestamp_ ;
      /**
       * <pre>
       * Unix timestamp of the commit date
       * </pre>
       *
       * <code>optional int64 commit_timestamp = 1;</code>
       * @return Whether the commitTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasCommitTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Unix timestamp of the commit date
       * </pre>
       *
       * <code>optional int64 commit_timestamp = 1;</code>
       * @return The commitTimestamp.
       */
      @java.lang.Override
      public long getCommitTimestamp() {
        return commitTimestamp_;
      }
      /**
       * <pre>
       * Unix timestamp of the commit date
       * </pre>
       *
       * <code>optional int64 commit_timestamp = 1;</code>
       * @param value The commitTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setCommitTimestamp(long value) {

        commitTimestamp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unix timestamp of the commit date
       * </pre>
       *
       * <code>optional int64 commit_timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommitTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        commitTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long authorTimestamp_ ;
      /**
       * <pre>
       * Unix timestamp of the author date
       * </pre>
       *
       * <code>optional int64 author_timestamp = 2;</code>
       * @return Whether the authorTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasAuthorTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Unix timestamp of the author date
       * </pre>
       *
       * <code>optional int64 author_timestamp = 2;</code>
       * @return The authorTimestamp.
       */
      @java.lang.Override
      public long getAuthorTimestamp() {
        return authorTimestamp_;
      }
      /**
       * <pre>
       * Unix timestamp of the author date
       * </pre>
       *
       * <code>optional int64 author_timestamp = 2;</code>
       * @param value The authorTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorTimestamp(long value) {

        authorTimestamp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unix timestamp of the author date
       * </pre>
       *
       * <code>optional int64 author_timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        authorTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private boolean isFirstCommit_ ;
      /**
       * <pre>
       * Is this the first commit recorded since install
       * </pre>
       *
       * <code>optional bool is_first_commit = 3;</code>
       * @return Whether the isFirstCommit field is set.
       */
      @java.lang.Override
      public boolean hasIsFirstCommit() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Is this the first commit recorded since install
       * </pre>
       *
       * <code>optional bool is_first_commit = 3;</code>
       * @return The isFirstCommit.
       */
      @java.lang.Override
      public boolean getIsFirstCommit() {
        return isFirstCommit_;
      }
      /**
       * <pre>
       * Is this the first commit recorded since install
       * </pre>
       *
       * <code>optional bool is_first_commit = 3;</code>
       * @param value The isFirstCommit to set.
       * @return This builder for chaining.
       */
      public Builder setIsFirstCommit(boolean value) {

        isFirstCommit_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Is this the first commit recorded since install
       * </pre>
       *
       * <code>optional bool is_first_commit = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsFirstCommit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isFirstCommit_ = false;
        onChanged();
        return this;
      }

      private int commitType_ = 0;
      /**
       * <pre>
       * True if the commit is pushed to the remote branch
       * </pre>
       *
       * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
       * @return Whether the commitType field is set.
       */
      @java.lang.Override public boolean hasCommitType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * True if the commit is pushed to the remote branch
       * </pre>
       *
       * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
       * @return The commitType.
       */
      @java.lang.Override
      public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType getCommitType() {
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType result = com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType.forNumber(commitType_);
        return result == null ? com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType.UNKNOWN_COMMIT_TYPE : result;
      }
      /**
       * <pre>
       * True if the commit is pushed to the remote branch
       * </pre>
       *
       * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
       * @param value The commitType to set.
       * @return This builder for chaining.
       */
      public Builder setCommitType(com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        commitType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True if the commit is pushed to the remote branch
       * </pre>
       *
       * <code>optional .android_studio.CommitMetricsEvent.CommitType commit_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommitType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        commitType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.CommitMetricsEvent.CommitInfo)
    }

    // @@protoc_insertion_point(class_scope:android_studio.CommitMetricsEvent.CommitInfo)
    private static final com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo();
    }

    public static com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CommitInfo>
        PARSER = new com.google.protobuf.AbstractParser<CommitInfo>() {
      @java.lang.Override
      public CommitInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CommitInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommitInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int COMMIT_INFO_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo> commitInfo_;
  /**
   * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo> getCommitInfoList() {
    return commitInfo_;
  }
  /**
   * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder> 
      getCommitInfoOrBuilderList() {
    return commitInfo_;
  }
  /**
   * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
   */
  @java.lang.Override
  public int getCommitInfoCount() {
    return commitInfo_.size();
  }
  /**
   * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo getCommitInfo(int index) {
    return commitInfo_.get(index);
  }
  /**
   * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder getCommitInfoOrBuilder(
      int index) {
    return commitInfo_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < commitInfo_.size(); i++) {
      output.writeMessage(1, commitInfo_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < commitInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, commitInfo_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.CommitMetricsEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.CommitMetricsEvent other = (com.google.wireless.android.sdk.stats.CommitMetricsEvent) obj;

    if (!getCommitInfoList()
        .equals(other.getCommitInfoList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCommitInfoCount() > 0) {
      hash = (37 * hash) + COMMIT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getCommitInfoList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.CommitMetricsEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.CommitMetricsEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.CommitMetricsEvent)
      com.google.wireless.android.sdk.stats.CommitMetricsEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.CommitMetricsEvent.class, com.google.wireless.android.sdk.stats.CommitMetricsEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.CommitMetricsEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (commitInfoBuilder_ == null) {
        commitInfo_ = java.util.Collections.emptyList();
      } else {
        commitInfo_ = null;
        commitInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_CommitMetricsEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.CommitMetricsEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent build() {
      com.google.wireless.android.sdk.stats.CommitMetricsEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent buildPartial() {
      com.google.wireless.android.sdk.stats.CommitMetricsEvent result = new com.google.wireless.android.sdk.stats.CommitMetricsEvent(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.wireless.android.sdk.stats.CommitMetricsEvent result) {
      if (commitInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          commitInfo_ = java.util.Collections.unmodifiableList(commitInfo_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.commitInfo_ = commitInfo_;
      } else {
        result.commitInfo_ = commitInfoBuilder_.build();
      }
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.CommitMetricsEvent result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.CommitMetricsEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.CommitMetricsEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.CommitMetricsEvent other) {
      if (other == com.google.wireless.android.sdk.stats.CommitMetricsEvent.getDefaultInstance()) return this;
      if (commitInfoBuilder_ == null) {
        if (!other.commitInfo_.isEmpty()) {
          if (commitInfo_.isEmpty()) {
            commitInfo_ = other.commitInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCommitInfoIsMutable();
            commitInfo_.addAll(other.commitInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.commitInfo_.isEmpty()) {
          if (commitInfoBuilder_.isEmpty()) {
            commitInfoBuilder_.dispose();
            commitInfoBuilder_ = null;
            commitInfo_ = other.commitInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
            commitInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCommitInfoFieldBuilder() : null;
          } else {
            commitInfoBuilder_.addAllMessages(other.commitInfo_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.PARSER,
                      extensionRegistry);
              if (commitInfoBuilder_ == null) {
                ensureCommitInfoIsMutable();
                commitInfo_.add(m);
              } else {
                commitInfoBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo> commitInfo_ =
      java.util.Collections.emptyList();
    private void ensureCommitInfoIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        commitInfo_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo>(commitInfo_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder> commitInfoBuilder_;

    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo> getCommitInfoList() {
      if (commitInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(commitInfo_);
      } else {
        return commitInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public int getCommitInfoCount() {
      if (commitInfoBuilder_ == null) {
        return commitInfo_.size();
      } else {
        return commitInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo getCommitInfo(int index) {
      if (commitInfoBuilder_ == null) {
        return commitInfo_.get(index);
      } else {
        return commitInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder setCommitInfo(
        int index, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo value) {
      if (commitInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCommitInfoIsMutable();
        commitInfo_.set(index, value);
        onChanged();
      } else {
        commitInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder setCommitInfo(
        int index, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder builderForValue) {
      if (commitInfoBuilder_ == null) {
        ensureCommitInfoIsMutable();
        commitInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        commitInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder addCommitInfo(com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo value) {
      if (commitInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCommitInfoIsMutable();
        commitInfo_.add(value);
        onChanged();
      } else {
        commitInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder addCommitInfo(
        int index, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo value) {
      if (commitInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCommitInfoIsMutable();
        commitInfo_.add(index, value);
        onChanged();
      } else {
        commitInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder addCommitInfo(
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder builderForValue) {
      if (commitInfoBuilder_ == null) {
        ensureCommitInfoIsMutable();
        commitInfo_.add(builderForValue.build());
        onChanged();
      } else {
        commitInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder addCommitInfo(
        int index, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder builderForValue) {
      if (commitInfoBuilder_ == null) {
        ensureCommitInfoIsMutable();
        commitInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        commitInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder addAllCommitInfo(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo> values) {
      if (commitInfoBuilder_ == null) {
        ensureCommitInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, commitInfo_);
        onChanged();
      } else {
        commitInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder clearCommitInfo() {
      if (commitInfoBuilder_ == null) {
        commitInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        commitInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public Builder removeCommitInfo(int index) {
      if (commitInfoBuilder_ == null) {
        ensureCommitInfoIsMutable();
        commitInfo_.remove(index);
        onChanged();
      } else {
        commitInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder getCommitInfoBuilder(
        int index) {
      return getCommitInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder getCommitInfoOrBuilder(
        int index) {
      if (commitInfoBuilder_ == null) {
        return commitInfo_.get(index);  } else {
        return commitInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder> 
         getCommitInfoOrBuilderList() {
      if (commitInfoBuilder_ != null) {
        return commitInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(commitInfo_);
      }
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder addCommitInfoBuilder() {
      return getCommitInfoFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder addCommitInfoBuilder(
        int index) {
      return getCommitInfoFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .android_studio.CommitMetricsEvent.CommitInfo commit_info = 1;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder> 
         getCommitInfoBuilderList() {
      return getCommitInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder> 
        getCommitInfoFieldBuilder() {
      if (commitInfoBuilder_ == null) {
        commitInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfo.Builder, com.google.wireless.android.sdk.stats.CommitMetricsEvent.CommitInfoOrBuilder>(
                commitInfo_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        commitInfo_ = null;
      }
      return commitInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.CommitMetricsEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.CommitMetricsEvent)
  private static final com.google.wireless.android.sdk.stats.CommitMetricsEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.CommitMetricsEvent();
  }

  public static com.google.wireless.android.sdk.stats.CommitMetricsEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<CommitMetricsEvent>
      PARSER = new com.google.protobuf.AbstractParser<CommitMetricsEvent>() {
    @java.lang.Override
    public CommitMetricsEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CommitMetricsEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CommitMetricsEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.CommitMetricsEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

