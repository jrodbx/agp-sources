// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface CpuProfilingConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.CpuProfilingConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The type of the tool which provides profiling results.
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig.Type type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of the tool which provides profiling results.
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig.Type type = 1;</code>
   * @return The type.
   */
  com.google.wireless.android.sdk.stats.CpuProfilingConfig.Type getType();

  /**
   * <pre>
   * The profiling mode, each of which has different pros / cons.
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig.Mode mode = 2;</code>
   * @return Whether the mode field is set.
   */
  boolean hasMode();
  /**
   * <pre>
   * The profiling mode, each of which has different pros / cons.
   * </pre>
   *
   * <code>optional .android_studio.CpuProfilingConfig.Mode mode = 2;</code>
   * @return The mode.
   */
  com.google.wireless.android.sdk.stats.CpuProfilingConfig.Mode getMode();

  /**
   * <pre>
   * The maximum size of the trace recording, in MB.
   * </pre>
   *
   * <code>optional uint32 size_limit = 3;</code>
   * @return Whether the sizeLimit field is set.
   */
  boolean hasSizeLimit();
  /**
   * <pre>
   * The maximum size of the trace recording, in MB.
   * </pre>
   *
   * <code>optional uint32 size_limit = 3;</code>
   * @return The sizeLimit.
   */
  int getSizeLimit();

  /**
   * <pre>
   * The sampling interval in μs, only used when |mode| is |SAMPLED|
   * </pre>
   *
   * <code>optional uint32 sample_interval = 4;</code>
   * @return Whether the sampleInterval field is set.
   */
  boolean hasSampleInterval();
  /**
   * <pre>
   * The sampling interval in μs, only used when |mode| is |SAMPLED|
   * </pre>
   *
   * <code>optional uint32 sample_interval = 4;</code>
   * @return The sampleInterval.
   */
  int getSampleInterval();
}
