// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Track Android Test Retention events.
 * </pre>
 *
 * Protobuf type {@code android_studio.AndroidTestRetentionEvent}
 */
public final class AndroidTestRetentionEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.AndroidTestRetentionEvent)
    AndroidTestRetentionEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AndroidTestRetentionEvent.newBuilder() to construct.
  private AndroidTestRetentionEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AndroidTestRetentionEvent() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AndroidTestRetentionEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.class, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.Builder.class);
  }

  public interface SnapshotCompatibilityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.AndroidTestRetentionEvent.SnapshotCompatibility)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Compatibility check result.
     * </pre>
     *
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <pre>
     * Compatibility check result.
     * </pre>
     *
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
     * @return The result.
     */
    com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result getResult();

    /**
     * <pre>
     * More detailed failure reason returned by the emulator. Only set when
     * result=EMULATOR_LOADABLE_CHECK_FAILURE.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
     * @return Whether the emulatorCheckFailureReason field is set.
     */
    boolean hasEmulatorCheckFailureReason();
    /**
     * <pre>
     * More detailed failure reason returned by the emulator. Only set when
     * result=EMULATOR_LOADABLE_CHECK_FAILURE.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
     * @return The emulatorCheckFailureReason.
     */
    com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason getEmulatorCheckFailureReason();
  }
  /**
   * <pre>
   * Compatibility check result related to one retention snapshot.
   * </pre>
   *
   * Protobuf type {@code android_studio.AndroidTestRetentionEvent.SnapshotCompatibility}
   */
  public static final class SnapshotCompatibility extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.AndroidTestRetentionEvent.SnapshotCompatibility)
      SnapshotCompatibilityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SnapshotCompatibility.newBuilder() to construct.
    private SnapshotCompatibility(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SnapshotCompatibility() {
      result_ = 0;
      emulatorCheckFailureReason_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SnapshotCompatibility();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_SnapshotCompatibility_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_SnapshotCompatibility_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.class, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder.class);
    }

    /**
     * Protobuf enum {@code android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_FAILURE = 0;</code>
       */
      UNKNOWN_FAILURE(0),
      /**
       * <code>LOADABLE = 1;</code>
       */
      LOADABLE(1),
      /**
       * <code>SNAPSHOT_FILE_NOT_FOUND = 2;</code>
       */
      SNAPSHOT_FILE_NOT_FOUND(2),
      /**
       * <code>EMULATOR_EXEC_NOT_FOUND = 3;</code>
       */
      EMULATOR_EXEC_NOT_FOUND(3),
      /**
       * <code>SNAPSHOT_PROTO_FILE_NOT_FOUND = 4;</code>
       */
      SNAPSHOT_PROTO_FILE_NOT_FOUND(4),
      /**
       * <code>EMULATOR_LOADABLE_CHECK_FAILURE = 5;</code>
       */
      EMULATOR_LOADABLE_CHECK_FAILURE(5),
      ;

      /**
       * <code>UNKNOWN_FAILURE = 0;</code>
       */
      public static final int UNKNOWN_FAILURE_VALUE = 0;
      /**
       * <code>LOADABLE = 1;</code>
       */
      public static final int LOADABLE_VALUE = 1;
      /**
       * <code>SNAPSHOT_FILE_NOT_FOUND = 2;</code>
       */
      public static final int SNAPSHOT_FILE_NOT_FOUND_VALUE = 2;
      /**
       * <code>EMULATOR_EXEC_NOT_FOUND = 3;</code>
       */
      public static final int EMULATOR_EXEC_NOT_FOUND_VALUE = 3;
      /**
       * <code>SNAPSHOT_PROTO_FILE_NOT_FOUND = 4;</code>
       */
      public static final int SNAPSHOT_PROTO_FILE_NOT_FOUND_VALUE = 4;
      /**
       * <code>EMULATOR_LOADABLE_CHECK_FAILURE = 5;</code>
       */
      public static final int EMULATOR_LOADABLE_CHECK_FAILURE_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Result forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_FAILURE;
          case 1: return LOADABLE;
          case 2: return SNAPSHOT_FILE_NOT_FOUND;
          case 3: return EMULATOR_EXEC_NOT_FOUND;
          case 4: return SNAPSHOT_PROTO_FILE_NOT_FOUND;
          case 5: return EMULATOR_LOADABLE_CHECK_FAILURE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <pre>
     * Compatibility check result.
     * </pre>
     *
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Compatibility check result.
     * </pre>
     *
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
     * @return The result.
     */
    @java.lang.Override public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result getResult() {
      com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result.forNumber(result_);
      return result == null ? com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result.UNKNOWN_FAILURE : result;
    }

    public static final int EMULATOR_CHECK_FAILURE_REASON_FIELD_NUMBER = 2;
    private int emulatorCheckFailureReason_ = 0;
    /**
     * <pre>
     * More detailed failure reason returned by the emulator. Only set when
     * result=EMULATOR_LOADABLE_CHECK_FAILURE.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
     * @return Whether the emulatorCheckFailureReason field is set.
     */
    @java.lang.Override public boolean hasEmulatorCheckFailureReason() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * More detailed failure reason returned by the emulator. Only set when
     * result=EMULATOR_LOADABLE_CHECK_FAILURE.
     * </pre>
     *
     * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
     * @return The emulatorCheckFailureReason.
     */
    @java.lang.Override public com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason getEmulatorCheckFailureReason() {
      com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason result = com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason.forNumber(emulatorCheckFailureReason_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason.EMULATOR_SNAPSHOT_FAILURE_REASON_UNSPECIFIED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, emulatorCheckFailureReason_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, emulatorCheckFailureReason_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility other = (com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (hasEmulatorCheckFailureReason() != other.hasEmulatorCheckFailureReason()) return false;
      if (hasEmulatorCheckFailureReason()) {
        if (emulatorCheckFailureReason_ != other.emulatorCheckFailureReason_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasEmulatorCheckFailureReason()) {
        hash = (37 * hash) + EMULATOR_CHECK_FAILURE_REASON_FIELD_NUMBER;
        hash = (53 * hash) + emulatorCheckFailureReason_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Compatibility check result related to one retention snapshot.
     * </pre>
     *
     * Protobuf type {@code android_studio.AndroidTestRetentionEvent.SnapshotCompatibility}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.AndroidTestRetentionEvent.SnapshotCompatibility)
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibilityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_SnapshotCompatibility_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_SnapshotCompatibility_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.class, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        emulatorCheckFailureReason_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_SnapshotCompatibility_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility build() {
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility buildPartial() {
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility result = new com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.emulatorCheckFailureReason_ = emulatorCheckFailureReason_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility) {
          return mergeFrom((com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility other) {
        if (other == com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasEmulatorCheckFailureReason()) {
          setEmulatorCheckFailureReason(other.getEmulatorCheckFailureReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result tmpValue =
                    com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason tmpValue =
                    com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  emulatorCheckFailureReason_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <pre>
       * Compatibility check result.
       * </pre>
       *
       * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Compatibility check result.
       * </pre>
       *
       * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result getResult() {
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result.forNumber(result_);
        return result == null ? com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result.UNKNOWN_FAILURE : result;
      }
      /**
       * <pre>
       * Compatibility check result.
       * </pre>
       *
       * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Compatibility check result.
       * </pre>
       *
       * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility.Result result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private int emulatorCheckFailureReason_ = 0;
      /**
       * <pre>
       * More detailed failure reason returned by the emulator. Only set when
       * result=EMULATOR_LOADABLE_CHECK_FAILURE.
       * </pre>
       *
       * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
       * @return Whether the emulatorCheckFailureReason field is set.
       */
      @java.lang.Override public boolean hasEmulatorCheckFailureReason() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * More detailed failure reason returned by the emulator. Only set when
       * result=EMULATOR_LOADABLE_CHECK_FAILURE.
       * </pre>
       *
       * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
       * @return The emulatorCheckFailureReason.
       */
      @java.lang.Override
      public com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason getEmulatorCheckFailureReason() {
        com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason result = com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason.forNumber(emulatorCheckFailureReason_);
        return result == null ? com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason.EMULATOR_SNAPSHOT_FAILURE_REASON_UNSPECIFIED : result;
      }
      /**
       * <pre>
       * More detailed failure reason returned by the emulator. Only set when
       * result=EMULATOR_LOADABLE_CHECK_FAILURE.
       * </pre>
       *
       * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
       * @param value The emulatorCheckFailureReason to set.
       * @return This builder for chaining.
       */
      public Builder setEmulatorCheckFailureReason(com.google.wireless.android.sdk.stats.EmulatorSnapshotFailureReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        emulatorCheckFailureReason_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * More detailed failure reason returned by the emulator. Only set when
       * result=EMULATOR_LOADABLE_CHECK_FAILURE.
       * </pre>
       *
       * <code>optional .android_studio.EmulatorSnapshotFailureReason emulator_check_failure_reason = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmulatorCheckFailureReason() {
        bitField0_ = (bitField0_ & ~0x00000002);
        emulatorCheckFailureReason_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.AndroidTestRetentionEvent.SnapshotCompatibility)
    }

    // @@protoc_insertion_point(class_scope:android_studio.AndroidTestRetentionEvent.SnapshotCompatibility)
    private static final com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility();
    }

    public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SnapshotCompatibility>
        PARSER = new com.google.protobuf.AbstractParser<SnapshotCompatibility>() {
      @java.lang.Override
      public SnapshotCompatibility parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SnapshotCompatibility> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SnapshotCompatibility> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int SNAPSHOT_COMPATIBILITY_FIELD_NUMBER = 1;
  private com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility snapshotCompatibility_;
  /**
   * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
   * @return Whether the snapshotCompatibility field is set.
   */
  @java.lang.Override
  public boolean hasSnapshotCompatibility() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
   * @return The snapshotCompatibility.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility getSnapshotCompatibility() {
    return snapshotCompatibility_ == null ? com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance() : snapshotCompatibility_;
  }
  /**
   * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibilityOrBuilder getSnapshotCompatibilityOrBuilder() {
    return snapshotCompatibility_ == null ? com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance() : snapshotCompatibility_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getSnapshotCompatibility());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSnapshotCompatibility());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent other = (com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent) obj;

    if (hasSnapshotCompatibility() != other.hasSnapshotCompatibility()) return false;
    if (hasSnapshotCompatibility()) {
      if (!getSnapshotCompatibility()
          .equals(other.getSnapshotCompatibility())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSnapshotCompatibility()) {
      hash = (37 * hash) + SNAPSHOT_COMPATIBILITY_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshotCompatibility().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Track Android Test Retention events.
   * </pre>
   *
   * Protobuf type {@code android_studio.AndroidTestRetentionEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.AndroidTestRetentionEvent)
      com.google.wireless.android.sdk.stats.AndroidTestRetentionEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.class, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSnapshotCompatibilityFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      snapshotCompatibility_ = null;
      if (snapshotCompatibilityBuilder_ != null) {
        snapshotCompatibilityBuilder_.dispose();
        snapshotCompatibilityBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AndroidTestRetentionEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent build() {
      com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent buildPartial() {
      com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent result = new com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.snapshotCompatibility_ = snapshotCompatibilityBuilder_ == null
            ? snapshotCompatibility_
            : snapshotCompatibilityBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent other) {
      if (other == com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.getDefaultInstance()) return this;
      if (other.hasSnapshotCompatibility()) {
        mergeSnapshotCompatibility(other.getSnapshotCompatibility());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getSnapshotCompatibilityFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility snapshotCompatibility_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibilityOrBuilder> snapshotCompatibilityBuilder_;
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     * @return Whether the snapshotCompatibility field is set.
     */
    public boolean hasSnapshotCompatibility() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     * @return The snapshotCompatibility.
     */
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility getSnapshotCompatibility() {
      if (snapshotCompatibilityBuilder_ == null) {
        return snapshotCompatibility_ == null ? com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance() : snapshotCompatibility_;
      } else {
        return snapshotCompatibilityBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    public Builder setSnapshotCompatibility(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility value) {
      if (snapshotCompatibilityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snapshotCompatibility_ = value;
      } else {
        snapshotCompatibilityBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    public Builder setSnapshotCompatibility(
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder builderForValue) {
      if (snapshotCompatibilityBuilder_ == null) {
        snapshotCompatibility_ = builderForValue.build();
      } else {
        snapshotCompatibilityBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    public Builder mergeSnapshotCompatibility(com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility value) {
      if (snapshotCompatibilityBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          snapshotCompatibility_ != null &&
          snapshotCompatibility_ != com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance()) {
          getSnapshotCompatibilityBuilder().mergeFrom(value);
        } else {
          snapshotCompatibility_ = value;
        }
      } else {
        snapshotCompatibilityBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    public Builder clearSnapshotCompatibility() {
      bitField0_ = (bitField0_ & ~0x00000001);
      snapshotCompatibility_ = null;
      if (snapshotCompatibilityBuilder_ != null) {
        snapshotCompatibilityBuilder_.dispose();
        snapshotCompatibilityBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder getSnapshotCompatibilityBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getSnapshotCompatibilityFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibilityOrBuilder getSnapshotCompatibilityOrBuilder() {
      if (snapshotCompatibilityBuilder_ != null) {
        return snapshotCompatibilityBuilder_.getMessageOrBuilder();
      } else {
        return snapshotCompatibility_ == null ?
            com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.getDefaultInstance() : snapshotCompatibility_;
      }
    }
    /**
     * <code>optional .android_studio.AndroidTestRetentionEvent.SnapshotCompatibility snapshot_compatibility = 1 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibilityOrBuilder> 
        getSnapshotCompatibilityFieldBuilder() {
      if (snapshotCompatibilityBuilder_ == null) {
        snapshotCompatibilityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibility.Builder, com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent.SnapshotCompatibilityOrBuilder>(
                getSnapshotCompatibility(),
                getParentForChildren(),
                isClean());
        snapshotCompatibility_ = null;
      }
      return snapshotCompatibilityBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.AndroidTestRetentionEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.AndroidTestRetentionEvent)
  private static final com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent();
  }

  public static com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<AndroidTestRetentionEvent>
      PARSER = new com.google.protobuf.AbstractParser<AndroidTestRetentionEvent>() {
    @java.lang.Override
    public AndroidTestRetentionEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AndroidTestRetentionEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AndroidTestRetentionEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.AndroidTestRetentionEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

