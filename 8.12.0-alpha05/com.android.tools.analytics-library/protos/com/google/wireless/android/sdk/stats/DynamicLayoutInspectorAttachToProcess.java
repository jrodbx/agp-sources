// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Session data for dynamic layout inspector (inspector v2) process attaching
 * </pre>
 *
 * Protobuf type {@code android_studio.DynamicLayoutInspectorAttachToProcess}
 */
public final class DynamicLayoutInspectorAttachToProcess extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.DynamicLayoutInspectorAttachToProcess)
    DynamicLayoutInspectorAttachToProcessOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DynamicLayoutInspectorAttachToProcess.newBuilder() to construct.
  private DynamicLayoutInspectorAttachToProcess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DynamicLayoutInspectorAttachToProcess() {
    clientType_ = 0;
    composeErrorCode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DynamicLayoutInspectorAttachToProcess();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorAttachToProcess_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorAttachToProcess_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.class, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.Builder.class);
  }

  /**
   * <pre>
   * The Client type
   * </pre>
   *
   * Protobuf enum {@code android_studio.DynamicLayoutInspectorAttachToProcess.ClientType}
   */
  public enum ClientType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown client
     * </pre>
     *
     * <code>UNKNOWN_CLIENT_TYPE = 0;</code>
     */
    UNKNOWN_CLIENT_TYPE(0),
    /**
     * <pre>
     * Client using DdmClient.dumpViewHierarchy to retrieve View information
     * </pre>
     *
     * <code>LEGACY_CLIENT = 1;</code>
     */
    LEGACY_CLIENT(1),
    /**
     * <pre>
     * Client using app inspection to retrieve View and Compose information
     * </pre>
     *
     * <code>APP_INSPECTION_CLIENT = 2;</code>
     */
    APP_INSPECTION_CLIENT(2),
    /**
     * <pre>
     * Data loaded from a file
     * </pre>
     *
     * <code>SNAPSHOT_CLIENT = 3;</code>
     */
    SNAPSHOT_CLIENT(3),
    ;

    /**
     * <pre>
     * Unknown client
     * </pre>
     *
     * <code>UNKNOWN_CLIENT_TYPE = 0;</code>
     */
    public static final int UNKNOWN_CLIENT_TYPE_VALUE = 0;
    /**
     * <pre>
     * Client using DdmClient.dumpViewHierarchy to retrieve View information
     * </pre>
     *
     * <code>LEGACY_CLIENT = 1;</code>
     */
    public static final int LEGACY_CLIENT_VALUE = 1;
    /**
     * <pre>
     * Client using app inspection to retrieve View and Compose information
     * </pre>
     *
     * <code>APP_INSPECTION_CLIENT = 2;</code>
     */
    public static final int APP_INSPECTION_CLIENT_VALUE = 2;
    /**
     * <pre>
     * Data loaded from a file
     * </pre>
     *
     * <code>SNAPSHOT_CLIENT = 3;</code>
     */
    public static final int SNAPSHOT_CLIENT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClientType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClientType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_CLIENT_TYPE;
        case 1: return LEGACY_CLIENT;
        case 2: return APP_INSPECTION_CLIENT;
        case 3: return SNAPSHOT_CLIENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClientType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClientType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClientType>() {
            public ClientType findValueByNumber(int number) {
              return ClientType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.getDescriptor().getEnumTypes().get(0);
    }

    private static final ClientType[] VALUES = values();

    public static ClientType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClientType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.DynamicLayoutInspectorAttachToProcess.ClientType)
  }

  private int bitField0_;
  public static final int CLIENT_TYPE_FIELD_NUMBER = 1;
  private int clientType_ = 0;
  /**
   * <pre>
   * Client type: Legacy or AppInspection
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAttachToProcess.ClientType client_type = 1;</code>
   * @return Whether the clientType field is set.
   */
  @java.lang.Override public boolean hasClientType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Client type: Legacy or AppInspection
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorAttachToProcess.ClientType client_type = 1;</code>
   * @return The clientType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType getClientType() {
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType.forNumber(clientType_);
    return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType.UNKNOWN_CLIENT_TYPE : result;
  }

  public static final int SUCCESS_FIELD_NUMBER = 2;
  private boolean success_ = false;
  /**
   * <pre>
   * True if the attach to process succeeded
   * </pre>
   *
   * <code>optional bool success = 2;</code>
   * @return Whether the success field is set.
   */
  @java.lang.Override
  public boolean hasSuccess() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * True if the attach to process succeeded
   * </pre>
   *
   * <code>optional bool success = 2;</code>
   * @return The success.
   */
  @java.lang.Override
  public boolean getSuccess() {
    return success_;
  }

  public static final int ERROR_INFO_FIELD_NUMBER = 3;
  private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo errorInfo_;
  /**
   * <pre>
   * Error information if the attach failed
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
   * @return Whether the errorInfo field is set.
   */
  @java.lang.Override
  public boolean hasErrorInfo() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Error information if the attach failed
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
   * @return The errorInfo.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getErrorInfo() {
    return errorInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
  }
  /**
   * <pre>
   * Error information if the attach failed
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder getErrorInfoOrBuilder() {
    return errorInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
  }

  public static final int COMPOSE_ERROR_CODE_FIELD_NUMBER = 4;
  private int composeErrorCode_ = 0;
  /**
   * <pre>
   * Error information if the compose inspector failed
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode compose_error_code = 4;</code>
   * @return Whether the composeErrorCode field is set.
   */
  @java.lang.Override public boolean hasComposeErrorCode() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Error information if the compose inspector failed
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode compose_error_code = 4;</code>
   * @return The composeErrorCode.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode getComposeErrorCode() {
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.forNumber(composeErrorCode_);
    return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.UNKNOWN_ERROR_CODE : result;
  }

  public static final int MULTIPLE_PROJECTS_OPEN_FIELD_NUMBER = 5;
  private boolean multipleProjectsOpen_ = false;
  /**
   * <pre>
   * When we attached to a process, were there multiple projects open?
   * </pre>
   *
   * <code>optional bool multiple_projects_open = 5;</code>
   * @return Whether the multipleProjectsOpen field is set.
   */
  @java.lang.Override
  public boolean hasMultipleProjectsOpen() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * When we attached to a process, were there multiple projects open?
   * </pre>
   *
   * <code>optional bool multiple_projects_open = 5;</code>
   * @return The multipleProjectsOpen.
   */
  @java.lang.Override
  public boolean getMultipleProjectsOpen() {
    return multipleProjectsOpen_;
  }

  public static final int DEBUGGER_ATTACHED_FIELD_NUMBER = 6;
  private boolean debuggerAttached_ = false;
  /**
   * <pre>
   * Was the debugger running for this session
   * </pre>
   *
   * <code>optional bool debugger_attached = 6;</code>
   * @return Whether the debuggerAttached field is set.
   */
  @java.lang.Override
  public boolean hasDebuggerAttached() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Was the debugger running for this session
   * </pre>
   *
   * <code>optional bool debugger_attached = 6;</code>
   * @return The debuggerAttached.
   */
  @java.lang.Override
  public boolean getDebuggerAttached() {
    return debuggerAttached_;
  }

  public static final int DEBUGGER_PAUSED_DURING_ATTACH_FIELD_NUMBER = 7;
  private boolean debuggerPausedDuringAttach_ = false;
  /**
   * <pre>
   * Was the debugger paused during the attach
   * </pre>
   *
   * <code>optional bool debugger_paused_during_attach = 7;</code>
   * @return Whether the debuggerPausedDuringAttach field is set.
   */
  @java.lang.Override
  public boolean hasDebuggerPausedDuringAttach() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Was the debugger paused during the attach
   * </pre>
   *
   * <code>optional bool debugger_paused_during_attach = 7;</code>
   * @return The debuggerPausedDuringAttach.
   */
  @java.lang.Override
  public boolean getDebuggerPausedDuringAttach() {
    return debuggerPausedDuringAttach_;
  }

  public static final int AUTO_CONNECT_ENABLED_FIELD_NUMBER = 8;
  private boolean autoConnectEnabled_ = false;
  /**
   * <pre>
   * Was auto connect enabled for this session
   * </pre>
   *
   * <code>optional bool auto_connect_enabled = 8;</code>
   * @return Whether the autoConnectEnabled field is set.
   */
  @java.lang.Override
  public boolean hasAutoConnectEnabled() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Was auto connect enabled for this session
   * </pre>
   *
   * <code>optional bool auto_connect_enabled = 8;</code>
   * @return The autoConnectEnabled.
   */
  @java.lang.Override
  public boolean getAutoConnectEnabled() {
    return autoConnectEnabled_;
  }

  public static final int IS_EMBEDDED_LAYOUT_INSPECTOR_FIELD_NUMBER = 9;
  private boolean isEmbeddedLayoutInspector_ = false;
  /**
   * <pre>
   * Was Layout Inspector embedded in the Running Devices Tool Window
   * </pre>
   *
   * <code>optional bool is_embedded_layout_inspector = 9;</code>
   * @return Whether the isEmbeddedLayoutInspector field is set.
   */
  @java.lang.Override
  public boolean hasIsEmbeddedLayoutInspector() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Was Layout Inspector embedded in the Running Devices Tool Window
   * </pre>
   *
   * <code>optional bool is_embedded_layout_inspector = 9;</code>
   * @return The isEmbeddedLayoutInspector.
   */
  @java.lang.Override
  public boolean getIsEmbeddedLayoutInspector() {
    return isEmbeddedLayoutInspector_;
  }

  public static final int ATTACH_DURATION_MS_FIELD_NUMBER = 10;
  private long attachDurationMs_ = 0L;
  /**
   * <pre>
   * The time it took for attach to start and end.
   * It can end because of success, error or cancellation.
   * </pre>
   *
   * <code>optional int64 attach_duration_ms = 10;</code>
   * @return Whether the attachDurationMs field is set.
   */
  @java.lang.Override
  public boolean hasAttachDurationMs() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * The time it took for attach to start and end.
   * It can end because of success, error or cancellation.
   * </pre>
   *
   * <code>optional int64 attach_duration_ms = 10;</code>
   * @return The attachDurationMs.
   */
  @java.lang.Override
  public long getAttachDurationMs() {
    return attachDurationMs_;
  }

  public static final int IS_XR_FIELD_NUMBER = 11;
  private boolean isXr_ = false;
  /**
   * <pre>
   * True if connected to a process running on an XR device.
   * </pre>
   *
   * <code>optional bool is_xr = 11;</code>
   * @return Whether the isXr field is set.
   */
  @java.lang.Override
  public boolean hasIsXr() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * True if connected to a process running on an XR device.
   * </pre>
   *
   * <code>optional bool is_xr = 11;</code>
   * @return The isXr.
   */
  @java.lang.Override
  public boolean getIsXr() {
    return isXr_;
  }

  public static final int IS_ON_DEVICE_RENDER_ENABLED_FIELD_NUMBER = 12;
  private boolean isOnDeviceRenderEnabled_ = false;
  /**
   * <pre>
   * True if on-device render is enabled for this session.
   * </pre>
   *
   * <code>optional bool is_on_device_render_enabled = 12;</code>
   * @return Whether the isOnDeviceRenderEnabled field is set.
   */
  @java.lang.Override
  public boolean hasIsOnDeviceRenderEnabled() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * True if on-device render is enabled for this session.
   * </pre>
   *
   * <code>optional bool is_on_device_render_enabled = 12;</code>
   * @return The isOnDeviceRenderEnabled.
   */
  @java.lang.Override
  public boolean getIsOnDeviceRenderEnabled() {
    return isOnDeviceRenderEnabled_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, clientType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(2, success_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getErrorInfo());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(4, composeErrorCode_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeBool(5, multipleProjectsOpen_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeBool(6, debuggerAttached_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeBool(7, debuggerPausedDuringAttach_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(8, autoConnectEnabled_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeBool(9, isEmbeddedLayoutInspector_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeInt64(10, attachDurationMs_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeBool(11, isXr_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeBool(12, isOnDeviceRenderEnabled_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, clientType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, success_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getErrorInfo());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, composeErrorCode_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, multipleProjectsOpen_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, debuggerAttached_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, debuggerPausedDuringAttach_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, autoConnectEnabled_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, isEmbeddedLayoutInspector_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, attachDurationMs_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, isXr_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, isOnDeviceRenderEnabled_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess other = (com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess) obj;

    if (hasClientType() != other.hasClientType()) return false;
    if (hasClientType()) {
      if (clientType_ != other.clientType_) return false;
    }
    if (hasSuccess() != other.hasSuccess()) return false;
    if (hasSuccess()) {
      if (getSuccess()
          != other.getSuccess()) return false;
    }
    if (hasErrorInfo() != other.hasErrorInfo()) return false;
    if (hasErrorInfo()) {
      if (!getErrorInfo()
          .equals(other.getErrorInfo())) return false;
    }
    if (hasComposeErrorCode() != other.hasComposeErrorCode()) return false;
    if (hasComposeErrorCode()) {
      if (composeErrorCode_ != other.composeErrorCode_) return false;
    }
    if (hasMultipleProjectsOpen() != other.hasMultipleProjectsOpen()) return false;
    if (hasMultipleProjectsOpen()) {
      if (getMultipleProjectsOpen()
          != other.getMultipleProjectsOpen()) return false;
    }
    if (hasDebuggerAttached() != other.hasDebuggerAttached()) return false;
    if (hasDebuggerAttached()) {
      if (getDebuggerAttached()
          != other.getDebuggerAttached()) return false;
    }
    if (hasDebuggerPausedDuringAttach() != other.hasDebuggerPausedDuringAttach()) return false;
    if (hasDebuggerPausedDuringAttach()) {
      if (getDebuggerPausedDuringAttach()
          != other.getDebuggerPausedDuringAttach()) return false;
    }
    if (hasAutoConnectEnabled() != other.hasAutoConnectEnabled()) return false;
    if (hasAutoConnectEnabled()) {
      if (getAutoConnectEnabled()
          != other.getAutoConnectEnabled()) return false;
    }
    if (hasIsEmbeddedLayoutInspector() != other.hasIsEmbeddedLayoutInspector()) return false;
    if (hasIsEmbeddedLayoutInspector()) {
      if (getIsEmbeddedLayoutInspector()
          != other.getIsEmbeddedLayoutInspector()) return false;
    }
    if (hasAttachDurationMs() != other.hasAttachDurationMs()) return false;
    if (hasAttachDurationMs()) {
      if (getAttachDurationMs()
          != other.getAttachDurationMs()) return false;
    }
    if (hasIsXr() != other.hasIsXr()) return false;
    if (hasIsXr()) {
      if (getIsXr()
          != other.getIsXr()) return false;
    }
    if (hasIsOnDeviceRenderEnabled() != other.hasIsOnDeviceRenderEnabled()) return false;
    if (hasIsOnDeviceRenderEnabled()) {
      if (getIsOnDeviceRenderEnabled()
          != other.getIsOnDeviceRenderEnabled()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasClientType()) {
      hash = (37 * hash) + CLIENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + clientType_;
    }
    if (hasSuccess()) {
      hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSuccess());
    }
    if (hasErrorInfo()) {
      hash = (37 * hash) + ERROR_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getErrorInfo().hashCode();
    }
    if (hasComposeErrorCode()) {
      hash = (37 * hash) + COMPOSE_ERROR_CODE_FIELD_NUMBER;
      hash = (53 * hash) + composeErrorCode_;
    }
    if (hasMultipleProjectsOpen()) {
      hash = (37 * hash) + MULTIPLE_PROJECTS_OPEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMultipleProjectsOpen());
    }
    if (hasDebuggerAttached()) {
      hash = (37 * hash) + DEBUGGER_ATTACHED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebuggerAttached());
    }
    if (hasDebuggerPausedDuringAttach()) {
      hash = (37 * hash) + DEBUGGER_PAUSED_DURING_ATTACH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebuggerPausedDuringAttach());
    }
    if (hasAutoConnectEnabled()) {
      hash = (37 * hash) + AUTO_CONNECT_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutoConnectEnabled());
    }
    if (hasIsEmbeddedLayoutInspector()) {
      hash = (37 * hash) + IS_EMBEDDED_LAYOUT_INSPECTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsEmbeddedLayoutInspector());
    }
    if (hasAttachDurationMs()) {
      hash = (37 * hash) + ATTACH_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAttachDurationMs());
    }
    if (hasIsXr()) {
      hash = (37 * hash) + IS_XR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsXr());
    }
    if (hasIsOnDeviceRenderEnabled()) {
      hash = (37 * hash) + IS_ON_DEVICE_RENDER_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsOnDeviceRenderEnabled());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Session data for dynamic layout inspector (inspector v2) process attaching
   * </pre>
   *
   * Protobuf type {@code android_studio.DynamicLayoutInspectorAttachToProcess}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.DynamicLayoutInspectorAttachToProcess)
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcessOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorAttachToProcess_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorAttachToProcess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.class, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getErrorInfoFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      clientType_ = 0;
      success_ = false;
      errorInfo_ = null;
      if (errorInfoBuilder_ != null) {
        errorInfoBuilder_.dispose();
        errorInfoBuilder_ = null;
      }
      composeErrorCode_ = 0;
      multipleProjectsOpen_ = false;
      debuggerAttached_ = false;
      debuggerPausedDuringAttach_ = false;
      autoConnectEnabled_ = false;
      isEmbeddedLayoutInspector_ = false;
      attachDurationMs_ = 0L;
      isXr_ = false;
      isOnDeviceRenderEnabled_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DynamicLayoutInspectorAttachToProcess_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess build() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess buildPartial() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess result = new com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.clientType_ = clientType_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.success_ = success_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.errorInfo_ = errorInfoBuilder_ == null
            ? errorInfo_
            : errorInfoBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.composeErrorCode_ = composeErrorCode_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.multipleProjectsOpen_ = multipleProjectsOpen_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.debuggerAttached_ = debuggerAttached_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.debuggerPausedDuringAttach_ = debuggerPausedDuringAttach_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.autoConnectEnabled_ = autoConnectEnabled_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.isEmbeddedLayoutInspector_ = isEmbeddedLayoutInspector_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.attachDurationMs_ = attachDurationMs_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.isXr_ = isXr_;
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.isOnDeviceRenderEnabled_ = isOnDeviceRenderEnabled_;
        to_bitField0_ |= 0x00000800;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess) {
        return mergeFrom((com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess other) {
      if (other == com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.getDefaultInstance()) return this;
      if (other.hasClientType()) {
        setClientType(other.getClientType());
      }
      if (other.hasSuccess()) {
        setSuccess(other.getSuccess());
      }
      if (other.hasErrorInfo()) {
        mergeErrorInfo(other.getErrorInfo());
      }
      if (other.hasComposeErrorCode()) {
        setComposeErrorCode(other.getComposeErrorCode());
      }
      if (other.hasMultipleProjectsOpen()) {
        setMultipleProjectsOpen(other.getMultipleProjectsOpen());
      }
      if (other.hasDebuggerAttached()) {
        setDebuggerAttached(other.getDebuggerAttached());
      }
      if (other.hasDebuggerPausedDuringAttach()) {
        setDebuggerPausedDuringAttach(other.getDebuggerPausedDuringAttach());
      }
      if (other.hasAutoConnectEnabled()) {
        setAutoConnectEnabled(other.getAutoConnectEnabled());
      }
      if (other.hasIsEmbeddedLayoutInspector()) {
        setIsEmbeddedLayoutInspector(other.getIsEmbeddedLayoutInspector());
      }
      if (other.hasAttachDurationMs()) {
        setAttachDurationMs(other.getAttachDurationMs());
      }
      if (other.hasIsXr()) {
        setIsXr(other.getIsXr());
      }
      if (other.hasIsOnDeviceRenderEnabled()) {
        setIsOnDeviceRenderEnabled(other.getIsOnDeviceRenderEnabled());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType tmpValue =
                  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                clientType_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              success_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getErrorInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode tmpValue =
                  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(4, tmpRaw);
              } else {
                composeErrorCode_ = tmpRaw;
                bitField0_ |= 0x00000008;
              }
              break;
            } // case 32
            case 40: {
              multipleProjectsOpen_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              debuggerAttached_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              debuggerPausedDuringAttach_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              autoConnectEnabled_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              isEmbeddedLayoutInspector_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              attachDurationMs_ = input.readInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              isXr_ = input.readBool();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 96: {
              isOnDeviceRenderEnabled_ = input.readBool();
              bitField0_ |= 0x00000800;
              break;
            } // case 96
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int clientType_ = 0;
    /**
     * <pre>
     * Client type: Legacy or AppInspection
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAttachToProcess.ClientType client_type = 1;</code>
     * @return Whether the clientType field is set.
     */
    @java.lang.Override public boolean hasClientType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Client type: Legacy or AppInspection
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAttachToProcess.ClientType client_type = 1;</code>
     * @return The clientType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType getClientType() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType.forNumber(clientType_);
      return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType.UNKNOWN_CLIENT_TYPE : result;
    }
    /**
     * <pre>
     * Client type: Legacy or AppInspection
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAttachToProcess.ClientType client_type = 1;</code>
     * @param value The clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientType(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess.ClientType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      clientType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Client type: Legacy or AppInspection
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorAttachToProcess.ClientType client_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientType_ = 0;
      onChanged();
      return this;
    }

    private boolean success_ ;
    /**
     * <pre>
     * True if the attach to process succeeded
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     * @return Whether the success field is set.
     */
    @java.lang.Override
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * True if the attach to process succeeded
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     * @return The success.
     */
    @java.lang.Override
    public boolean getSuccess() {
      return success_;
    }
    /**
     * <pre>
     * True if the attach to process succeeded
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     * @param value The success to set.
     * @return This builder for chaining.
     */
    public Builder setSuccess(boolean value) {

      success_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if the attach to process succeeded
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSuccess() {
      bitField0_ = (bitField0_ & ~0x00000002);
      success_ = false;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo errorInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder> errorInfoBuilder_;
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     * @return Whether the errorInfo field is set.
     */
    public boolean hasErrorInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     * @return The errorInfo.
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo getErrorInfo() {
      if (errorInfoBuilder_ == null) {
        return errorInfo_ == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
      } else {
        return errorInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    public Builder setErrorInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo value) {
      if (errorInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        errorInfo_ = value;
      } else {
        errorInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    public Builder setErrorInfo(
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder builderForValue) {
      if (errorInfoBuilder_ == null) {
        errorInfo_ = builderForValue.build();
      } else {
        errorInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    public Builder mergeErrorInfo(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo value) {
      if (errorInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          errorInfo_ != null &&
          errorInfo_ != com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance()) {
          getErrorInfoBuilder().mergeFrom(value);
        } else {
          errorInfo_ = value;
        }
      } else {
        errorInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    public Builder clearErrorInfo() {
      bitField0_ = (bitField0_ & ~0x00000004);
      errorInfo_ = null;
      if (errorInfoBuilder_ != null) {
        errorInfoBuilder_.dispose();
        errorInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder getErrorInfoBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getErrorInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder getErrorInfoOrBuilder() {
      if (errorInfoBuilder_ != null) {
        return errorInfoBuilder_.getMessageOrBuilder();
      } else {
        return errorInfo_ == null ?
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.getDefaultInstance() : errorInfo_;
      }
    }
    /**
     * <pre>
     * Error information if the attach failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo error_info = 3 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder> 
        getErrorInfoFieldBuilder() {
      if (errorInfoBuilder_ == null) {
        errorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.Builder, com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfoOrBuilder>(
                getErrorInfo(),
                getParentForChildren(),
                isClean());
        errorInfo_ = null;
      }
      return errorInfoBuilder_;
    }

    private int composeErrorCode_ = 0;
    /**
     * <pre>
     * Error information if the compose inspector failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode compose_error_code = 4;</code>
     * @return Whether the composeErrorCode field is set.
     */
    @java.lang.Override public boolean hasComposeErrorCode() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Error information if the compose inspector failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode compose_error_code = 4;</code>
     * @return The composeErrorCode.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode getComposeErrorCode() {
      com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode result = com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.forNumber(composeErrorCode_);
      return result == null ? com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode.UNKNOWN_ERROR_CODE : result;
    }
    /**
     * <pre>
     * Error information if the compose inspector failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode compose_error_code = 4;</code>
     * @param value The composeErrorCode to set.
     * @return This builder for chaining.
     */
    public Builder setComposeErrorCode(com.google.wireless.android.sdk.stats.DynamicLayoutInspectorErrorInfo.AttachErrorCode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      composeErrorCode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Error information if the compose inspector failed
     * </pre>
     *
     * <code>optional .android_studio.DynamicLayoutInspectorErrorInfo.AttachErrorCode compose_error_code = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearComposeErrorCode() {
      bitField0_ = (bitField0_ & ~0x00000008);
      composeErrorCode_ = 0;
      onChanged();
      return this;
    }

    private boolean multipleProjectsOpen_ ;
    /**
     * <pre>
     * When we attached to a process, were there multiple projects open?
     * </pre>
     *
     * <code>optional bool multiple_projects_open = 5;</code>
     * @return Whether the multipleProjectsOpen field is set.
     */
    @java.lang.Override
    public boolean hasMultipleProjectsOpen() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * When we attached to a process, were there multiple projects open?
     * </pre>
     *
     * <code>optional bool multiple_projects_open = 5;</code>
     * @return The multipleProjectsOpen.
     */
    @java.lang.Override
    public boolean getMultipleProjectsOpen() {
      return multipleProjectsOpen_;
    }
    /**
     * <pre>
     * When we attached to a process, were there multiple projects open?
     * </pre>
     *
     * <code>optional bool multiple_projects_open = 5;</code>
     * @param value The multipleProjectsOpen to set.
     * @return This builder for chaining.
     */
    public Builder setMultipleProjectsOpen(boolean value) {

      multipleProjectsOpen_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When we attached to a process, were there multiple projects open?
     * </pre>
     *
     * <code>optional bool multiple_projects_open = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMultipleProjectsOpen() {
      bitField0_ = (bitField0_ & ~0x00000010);
      multipleProjectsOpen_ = false;
      onChanged();
      return this;
    }

    private boolean debuggerAttached_ ;
    /**
     * <pre>
     * Was the debugger running for this session
     * </pre>
     *
     * <code>optional bool debugger_attached = 6;</code>
     * @return Whether the debuggerAttached field is set.
     */
    @java.lang.Override
    public boolean hasDebuggerAttached() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Was the debugger running for this session
     * </pre>
     *
     * <code>optional bool debugger_attached = 6;</code>
     * @return The debuggerAttached.
     */
    @java.lang.Override
    public boolean getDebuggerAttached() {
      return debuggerAttached_;
    }
    /**
     * <pre>
     * Was the debugger running for this session
     * </pre>
     *
     * <code>optional bool debugger_attached = 6;</code>
     * @param value The debuggerAttached to set.
     * @return This builder for chaining.
     */
    public Builder setDebuggerAttached(boolean value) {

      debuggerAttached_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Was the debugger running for this session
     * </pre>
     *
     * <code>optional bool debugger_attached = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDebuggerAttached() {
      bitField0_ = (bitField0_ & ~0x00000020);
      debuggerAttached_ = false;
      onChanged();
      return this;
    }

    private boolean debuggerPausedDuringAttach_ ;
    /**
     * <pre>
     * Was the debugger paused during the attach
     * </pre>
     *
     * <code>optional bool debugger_paused_during_attach = 7;</code>
     * @return Whether the debuggerPausedDuringAttach field is set.
     */
    @java.lang.Override
    public boolean hasDebuggerPausedDuringAttach() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Was the debugger paused during the attach
     * </pre>
     *
     * <code>optional bool debugger_paused_during_attach = 7;</code>
     * @return The debuggerPausedDuringAttach.
     */
    @java.lang.Override
    public boolean getDebuggerPausedDuringAttach() {
      return debuggerPausedDuringAttach_;
    }
    /**
     * <pre>
     * Was the debugger paused during the attach
     * </pre>
     *
     * <code>optional bool debugger_paused_during_attach = 7;</code>
     * @param value The debuggerPausedDuringAttach to set.
     * @return This builder for chaining.
     */
    public Builder setDebuggerPausedDuringAttach(boolean value) {

      debuggerPausedDuringAttach_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Was the debugger paused during the attach
     * </pre>
     *
     * <code>optional bool debugger_paused_during_attach = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDebuggerPausedDuringAttach() {
      bitField0_ = (bitField0_ & ~0x00000040);
      debuggerPausedDuringAttach_ = false;
      onChanged();
      return this;
    }

    private boolean autoConnectEnabled_ ;
    /**
     * <pre>
     * Was auto connect enabled for this session
     * </pre>
     *
     * <code>optional bool auto_connect_enabled = 8;</code>
     * @return Whether the autoConnectEnabled field is set.
     */
    @java.lang.Override
    public boolean hasAutoConnectEnabled() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Was auto connect enabled for this session
     * </pre>
     *
     * <code>optional bool auto_connect_enabled = 8;</code>
     * @return The autoConnectEnabled.
     */
    @java.lang.Override
    public boolean getAutoConnectEnabled() {
      return autoConnectEnabled_;
    }
    /**
     * <pre>
     * Was auto connect enabled for this session
     * </pre>
     *
     * <code>optional bool auto_connect_enabled = 8;</code>
     * @param value The autoConnectEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setAutoConnectEnabled(boolean value) {

      autoConnectEnabled_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Was auto connect enabled for this session
     * </pre>
     *
     * <code>optional bool auto_connect_enabled = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearAutoConnectEnabled() {
      bitField0_ = (bitField0_ & ~0x00000080);
      autoConnectEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean isEmbeddedLayoutInspector_ ;
    /**
     * <pre>
     * Was Layout Inspector embedded in the Running Devices Tool Window
     * </pre>
     *
     * <code>optional bool is_embedded_layout_inspector = 9;</code>
     * @return Whether the isEmbeddedLayoutInspector field is set.
     */
    @java.lang.Override
    public boolean hasIsEmbeddedLayoutInspector() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Was Layout Inspector embedded in the Running Devices Tool Window
     * </pre>
     *
     * <code>optional bool is_embedded_layout_inspector = 9;</code>
     * @return The isEmbeddedLayoutInspector.
     */
    @java.lang.Override
    public boolean getIsEmbeddedLayoutInspector() {
      return isEmbeddedLayoutInspector_;
    }
    /**
     * <pre>
     * Was Layout Inspector embedded in the Running Devices Tool Window
     * </pre>
     *
     * <code>optional bool is_embedded_layout_inspector = 9;</code>
     * @param value The isEmbeddedLayoutInspector to set.
     * @return This builder for chaining.
     */
    public Builder setIsEmbeddedLayoutInspector(boolean value) {

      isEmbeddedLayoutInspector_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Was Layout Inspector embedded in the Running Devices Tool Window
     * </pre>
     *
     * <code>optional bool is_embedded_layout_inspector = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsEmbeddedLayoutInspector() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isEmbeddedLayoutInspector_ = false;
      onChanged();
      return this;
    }

    private long attachDurationMs_ ;
    /**
     * <pre>
     * The time it took for attach to start and end.
     * It can end because of success, error or cancellation.
     * </pre>
     *
     * <code>optional int64 attach_duration_ms = 10;</code>
     * @return Whether the attachDurationMs field is set.
     */
    @java.lang.Override
    public boolean hasAttachDurationMs() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The time it took for attach to start and end.
     * It can end because of success, error or cancellation.
     * </pre>
     *
     * <code>optional int64 attach_duration_ms = 10;</code>
     * @return The attachDurationMs.
     */
    @java.lang.Override
    public long getAttachDurationMs() {
      return attachDurationMs_;
    }
    /**
     * <pre>
     * The time it took for attach to start and end.
     * It can end because of success, error or cancellation.
     * </pre>
     *
     * <code>optional int64 attach_duration_ms = 10;</code>
     * @param value The attachDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setAttachDurationMs(long value) {

      attachDurationMs_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The time it took for attach to start and end.
     * It can end because of success, error or cancellation.
     * </pre>
     *
     * <code>optional int64 attach_duration_ms = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttachDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000200);
      attachDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private boolean isXr_ ;
    /**
     * <pre>
     * True if connected to a process running on an XR device.
     * </pre>
     *
     * <code>optional bool is_xr = 11;</code>
     * @return Whether the isXr field is set.
     */
    @java.lang.Override
    public boolean hasIsXr() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * True if connected to a process running on an XR device.
     * </pre>
     *
     * <code>optional bool is_xr = 11;</code>
     * @return The isXr.
     */
    @java.lang.Override
    public boolean getIsXr() {
      return isXr_;
    }
    /**
     * <pre>
     * True if connected to a process running on an XR device.
     * </pre>
     *
     * <code>optional bool is_xr = 11;</code>
     * @param value The isXr to set.
     * @return This builder for chaining.
     */
    public Builder setIsXr(boolean value) {

      isXr_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if connected to a process running on an XR device.
     * </pre>
     *
     * <code>optional bool is_xr = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsXr() {
      bitField0_ = (bitField0_ & ~0x00000400);
      isXr_ = false;
      onChanged();
      return this;
    }

    private boolean isOnDeviceRenderEnabled_ ;
    /**
     * <pre>
     * True if on-device render is enabled for this session.
     * </pre>
     *
     * <code>optional bool is_on_device_render_enabled = 12;</code>
     * @return Whether the isOnDeviceRenderEnabled field is set.
     */
    @java.lang.Override
    public boolean hasIsOnDeviceRenderEnabled() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * True if on-device render is enabled for this session.
     * </pre>
     *
     * <code>optional bool is_on_device_render_enabled = 12;</code>
     * @return The isOnDeviceRenderEnabled.
     */
    @java.lang.Override
    public boolean getIsOnDeviceRenderEnabled() {
      return isOnDeviceRenderEnabled_;
    }
    /**
     * <pre>
     * True if on-device render is enabled for this session.
     * </pre>
     *
     * <code>optional bool is_on_device_render_enabled = 12;</code>
     * @param value The isOnDeviceRenderEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setIsOnDeviceRenderEnabled(boolean value) {

      isOnDeviceRenderEnabled_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if on-device render is enabled for this session.
     * </pre>
     *
     * <code>optional bool is_on_device_render_enabled = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsOnDeviceRenderEnabled() {
      bitField0_ = (bitField0_ & ~0x00000800);
      isOnDeviceRenderEnabled_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.DynamicLayoutInspectorAttachToProcess)
  }

  // @@protoc_insertion_point(class_scope:android_studio.DynamicLayoutInspectorAttachToProcess)
  private static final com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess();
  }

  public static com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<DynamicLayoutInspectorAttachToProcess>
      PARSER = new com.google.protobuf.AbstractParser<DynamicLayoutInspectorAttachToProcess>() {
    @java.lang.Override
    public DynamicLayoutInspectorAttachToProcess parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DynamicLayoutInspectorAttachToProcess> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DynamicLayoutInspectorAttachToProcess> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DynamicLayoutInspectorAttachToProcess getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

