// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface GfxTracingDetailsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.GfxTracingDetails)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * total time the trace took
   * </pre>
   *
   * <code>optional int64 total_time = 1;</code>
   * @return Whether the totalTime field is set.
   */
  boolean hasTotalTime();
  /**
   * <pre>
   * total time the trace took
   * </pre>
   *
   * <code>optional int64 total_time = 1;</code>
   * @return The totalTime.
   */
  long getTotalTime();

  /**
   * <pre>
   * class name of the UI command selected to affect the tracing.
   * </pre>
   *
   * <code>optional string command = 2;</code>
   * @return Whether the command field is set.
   */
  boolean hasCommand();
  /**
   * <pre>
   * class name of the UI command selected to affect the tracing.
   * </pre>
   *
   * <code>optional string command = 2;</code>
   * @return The command.
   */
  java.lang.String getCommand();
  /**
   * <pre>
   * class name of the UI command selected to affect the tracing.
   * </pre>
   *
   * <code>optional string command = 2;</code>
   * @return The bytes for command.
   */
  com.google.protobuf.ByteString
      getCommandBytes();

  /**
   * <pre>
   * Error message when tracing fails.
   * </pre>
   *
   * <code>optional string error_message = 3;</code>
   * @return Whether the errorMessage field is set.
   */
  boolean hasErrorMessage();
  /**
   * <pre>
   * Error message when tracing fails.
   * </pre>
   *
   * <code>optional string error_message = 3;</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * Error message when tracing fails.
   * </pre>
   *
   * <code>optional string error_message = 3;</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   * A path describing the kind of details from the trace. This is a mix
   * of class names (of our code) and random ids generated for the trace.
   * e.g. 'Capture(7c6e72eebe2e6d76751b0328971e7fb29ceed82b).Atoms[6307].' +
   *      'Resource&lt;e1b2a028ce62a97b235172963ddee35f386c6940&gt;.' +
   *      'Thumbnail&lt;RGBA,100x100&gt;.As&lt;RGBA&gt;'
   * </pre>
   *
   * <code>optional string trace_path = 4;</code>
   * @return Whether the tracePath field is set.
   */
  boolean hasTracePath();
  /**
   * <pre>
   * A path describing the kind of details from the trace. This is a mix
   * of class names (of our code) and random ids generated for the trace.
   * e.g. 'Capture(7c6e72eebe2e6d76751b0328971e7fb29ceed82b).Atoms[6307].' +
   *      'Resource&lt;e1b2a028ce62a97b235172963ddee35f386c6940&gt;.' +
   *      'Thumbnail&lt;RGBA,100x100&gt;.As&lt;RGBA&gt;'
   * </pre>
   *
   * <code>optional string trace_path = 4;</code>
   * @return The tracePath.
   */
  java.lang.String getTracePath();
  /**
   * <pre>
   * A path describing the kind of details from the trace. This is a mix
   * of class names (of our code) and random ids generated for the trace.
   * e.g. 'Capture(7c6e72eebe2e6d76751b0328971e7fb29ceed82b).Atoms[6307].' +
   *      'Resource&lt;e1b2a028ce62a97b235172963ddee35f386c6940&gt;.' +
   *      'Thumbnail&lt;RGBA,100x100&gt;.As&lt;RGBA&gt;'
   * </pre>
   *
   * <code>optional string trace_path = 4;</code>
   * @return The bytes for tracePath.
   */
  com.google.protobuf.ByteString
      getTracePathBytes();

  /**
   * <pre>
   * the image format of the gpu image being traced. e.g. 'image/png'
   * </pre>
   *
   * <code>optional string image_format = 5;</code>
   * @return Whether the imageFormat field is set.
   */
  boolean hasImageFormat();
  /**
   * <pre>
   * the image format of the gpu image being traced. e.g. 'image/png'
   * </pre>
   *
   * <code>optional string image_format = 5;</code>
   * @return The imageFormat.
   */
  java.lang.String getImageFormat();
  /**
   * <pre>
   * the image format of the gpu image being traced. e.g. 'image/png'
   * </pre>
   *
   * <code>optional string image_format = 5;</code>
   * @return The bytes for imageFormat.
   */
  com.google.protobuf.ByteString
      getImageFormatBytes();

  /**
   * <pre>
   * the width of the image being traced.
   * </pre>
   *
   * <code>optional int64 image_width = 6;</code>
   * @return Whether the imageWidth field is set.
   */
  boolean hasImageWidth();
  /**
   * <pre>
   * the width of the image being traced.
   * </pre>
   *
   * <code>optional int64 image_width = 6;</code>
   * @return The imageWidth.
   */
  long getImageWidth();

  /**
   * <pre>
   * the height of the image being traced.
   * </pre>
   *
   * <code>optional int64 image_height = 7;</code>
   * @return Whether the imageHeight field is set.
   */
  boolean hasImageHeight();
  /**
   * <pre>
   * the height of the image being traced.
   * </pre>
   *
   * <code>optional int64 image_height = 7;</code>
   * @return The imageHeight.
   */
  long getImageHeight();
}
