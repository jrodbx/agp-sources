// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.EmulatorCompatibilityInfo}
 */
public final class EmulatorCompatibilityInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorCompatibilityInfo)
    EmulatorCompatibilityInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorCompatibilityInfo.newBuilder() to construct.
  private EmulatorCompatibilityInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorCompatibilityInfo() {
    status_ = 0;
    check_ = 0;
    details_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorCompatibilityInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCompatibilityInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCompatibilityInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.class, com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.Builder.class);
  }

  /**
   * <pre>
   * Represents the compatibility status of an AVD (Android Virtual Device).
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus}
   */
  public enum AvdCompatibilityStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The AVD compatibility is unknown.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_UNKNOWN = 0;</code>
     */
    AVD_COMPATIBILITY_STATUS_UNKNOWN(0),
    /**
     * <pre>
     * The check succeeded; the AVD is fully compatible.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_OK = 1;</code>
     */
    AVD_COMPATIBILITY_STATUS_OK(1),
    /**
     * <pre>
     * The AVD can run, but with limited functionality. The user should be
     * informed.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_WARNING = 2;</code>
     */
    AVD_COMPATIBILITY_STATUS_WARNING(2),
    /**
     * <pre>
     * The AVD cannot run with the current configuration.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_ERROR = 3;</code>
     */
    AVD_COMPATIBILITY_STATUS_ERROR(3),
    ;

    /**
     * <pre>
     * The AVD compatibility is unknown.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_UNKNOWN = 0;</code>
     */
    public static final int AVD_COMPATIBILITY_STATUS_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * The check succeeded; the AVD is fully compatible.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_OK = 1;</code>
     */
    public static final int AVD_COMPATIBILITY_STATUS_OK_VALUE = 1;
    /**
     * <pre>
     * The AVD can run, but with limited functionality. The user should be
     * informed.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_WARNING = 2;</code>
     */
    public static final int AVD_COMPATIBILITY_STATUS_WARNING_VALUE = 2;
    /**
     * <pre>
     * The AVD cannot run with the current configuration.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_STATUS_ERROR = 3;</code>
     */
    public static final int AVD_COMPATIBILITY_STATUS_ERROR_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AvdCompatibilityStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AvdCompatibilityStatus forNumber(int value) {
      switch (value) {
        case 0: return AVD_COMPATIBILITY_STATUS_UNKNOWN;
        case 1: return AVD_COMPATIBILITY_STATUS_OK;
        case 2: return AVD_COMPATIBILITY_STATUS_WARNING;
        case 3: return AVD_COMPATIBILITY_STATUS_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AvdCompatibilityStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AvdCompatibilityStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AvdCompatibilityStatus>() {
            public AvdCompatibilityStatus findValueByNumber(int number) {
              return AvdCompatibilityStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final AvdCompatibilityStatus[] VALUES = values();

    public static AvdCompatibilityStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AvdCompatibilityStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus)
  }

  /**
   * Protobuf enum {@code android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck}
   */
  public enum AvdCompatibilityCheck
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AVD_COMPATIBILITY_CHECK_UNKNOWN = 0;</code>
     */
    AVD_COMPATIBILITY_CHECK_UNKNOWN(0),
    /**
     * <pre>
     * No AVD was found to perform the check.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_NO_AVD = 1;</code>
     */
    AVD_COMPATIBILITY_CHECK_NO_AVD(1),
    /**
     * <pre>
     * Insufficient disk space is available to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_INSUFFICIENT_DISK_SPACE = 2;</code>
     */
    AVD_COMPATIBILITY_CHECK_INSUFFICIENT_DISK_SPACE(2),
    /**
     * <pre>
     * GPU checks are disabled.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_DISABLED = 3;</code>
     */
    AVD_COMPATIBILITY_CHECK_GPU_CHECK_DISABLED(3),
    /**
     * <pre>
     * Vulkan is not supported on the host system.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_NO_VULKAN = 4;</code>
     */
    AVD_COMPATIBILITY_CHECK_GPU_CHECK_NO_VULKAN(4),
    /**
     * <pre>
     * The Vulkan version on the host system is not supported.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION = 5;</code>
     */
    AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION(5),
    /**
     * <pre>
     * Insufficient GPU memory is available to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_INSUFFICIENT_MEMORY = 6;</code>
     */
    AVD_COMPATIBILITY_CHECK_GPU_CHECK_INSUFFICIENT_MEMORY(6),
    /**
     * <pre>
     * System compatibility checks are skipped due to the
     * ANDROID_EMU_SKIP_SYSTEM_CHECKS environment variable being set.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_SKIP = 7;</code>
     */
    AVD_COMPATIBILITY_CHECK_SYSTEM_SKIP(7),
    /**
     * <pre>
     * A system compatibility error is forced due to the
     * ANDROID_EMU_ABORT_SYSTEM_CHECKS environment variable being set.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_ABORT = 8;</code>
     */
    AVD_COMPATIBILITY_CHECK_SYSTEM_ABORT(8),
    /**
     * <pre>
     * The host system has insufficient CPU cores to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_CORE = 9;</code>
     */
    AVD_COMPATIBILITY_CHECK_SYSTEM_CORE(9),
    /**
     * <pre>
     * The host system has insufficient RAM to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_MEMORY = 10;</code>
     */
    AVD_COMPATIBILITY_CHECK_SYSTEM_MEMORY(10),
    /**
     * <pre>
     * Skip the gpu compatibility checks
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_SKIP = 11;</code>
     */
    AVD_COMPATIBILITY_CHECK_GPU_CHECK_SKIP(11),
    ;

    /**
     * <code>AVD_COMPATIBILITY_CHECK_UNKNOWN = 0;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * No AVD was found to perform the check.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_NO_AVD = 1;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_NO_AVD_VALUE = 1;
    /**
     * <pre>
     * Insufficient disk space is available to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_INSUFFICIENT_DISK_SPACE = 2;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_INSUFFICIENT_DISK_SPACE_VALUE = 2;
    /**
     * <pre>
     * GPU checks are disabled.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_DISABLED = 3;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_GPU_CHECK_DISABLED_VALUE = 3;
    /**
     * <pre>
     * Vulkan is not supported on the host system.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_NO_VULKAN = 4;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_GPU_CHECK_NO_VULKAN_VALUE = 4;
    /**
     * <pre>
     * The Vulkan version on the host system is not supported.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION = 5;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION_VALUE = 5;
    /**
     * <pre>
     * Insufficient GPU memory is available to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_INSUFFICIENT_MEMORY = 6;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_GPU_CHECK_INSUFFICIENT_MEMORY_VALUE = 6;
    /**
     * <pre>
     * System compatibility checks are skipped due to the
     * ANDROID_EMU_SKIP_SYSTEM_CHECKS environment variable being set.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_SKIP = 7;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_SYSTEM_SKIP_VALUE = 7;
    /**
     * <pre>
     * A system compatibility error is forced due to the
     * ANDROID_EMU_ABORT_SYSTEM_CHECKS environment variable being set.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_ABORT = 8;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_SYSTEM_ABORT_VALUE = 8;
    /**
     * <pre>
     * The host system has insufficient CPU cores to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_CORE = 9;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_SYSTEM_CORE_VALUE = 9;
    /**
     * <pre>
     * The host system has insufficient RAM to run the AVD.
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_SYSTEM_MEMORY = 10;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_SYSTEM_MEMORY_VALUE = 10;
    /**
     * <pre>
     * Skip the gpu compatibility checks
     * </pre>
     *
     * <code>AVD_COMPATIBILITY_CHECK_GPU_CHECK_SKIP = 11;</code>
     */
    public static final int AVD_COMPATIBILITY_CHECK_GPU_CHECK_SKIP_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AvdCompatibilityCheck valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AvdCompatibilityCheck forNumber(int value) {
      switch (value) {
        case 0: return AVD_COMPATIBILITY_CHECK_UNKNOWN;
        case 1: return AVD_COMPATIBILITY_CHECK_NO_AVD;
        case 2: return AVD_COMPATIBILITY_CHECK_INSUFFICIENT_DISK_SPACE;
        case 3: return AVD_COMPATIBILITY_CHECK_GPU_CHECK_DISABLED;
        case 4: return AVD_COMPATIBILITY_CHECK_GPU_CHECK_NO_VULKAN;
        case 5: return AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION;
        case 6: return AVD_COMPATIBILITY_CHECK_GPU_CHECK_INSUFFICIENT_MEMORY;
        case 7: return AVD_COMPATIBILITY_CHECK_SYSTEM_SKIP;
        case 8: return AVD_COMPATIBILITY_CHECK_SYSTEM_ABORT;
        case 9: return AVD_COMPATIBILITY_CHECK_SYSTEM_CORE;
        case 10: return AVD_COMPATIBILITY_CHECK_SYSTEM_MEMORY;
        case 11: return AVD_COMPATIBILITY_CHECK_GPU_CHECK_SKIP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AvdCompatibilityCheck>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AvdCompatibilityCheck> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AvdCompatibilityCheck>() {
            public AvdCompatibilityCheck findValueByNumber(int number) {
              return AvdCompatibilityCheck.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.getDescriptor().getEnumTypes().get(1);
    }

    private static final AvdCompatibilityCheck[] VALUES = values();

    public static AvdCompatibilityCheck valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AvdCompatibilityCheck(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck)
  }

  private int bitField0_;
  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_ = 0;
  /**
   * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus status = 1;</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override public boolean hasStatus() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus status = 1;</code>
   * @return The status.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus getStatus() {
    com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus result = com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus.forNumber(status_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus.AVD_COMPATIBILITY_STATUS_UNKNOWN : result;
  }

  public static final int CHECK_FIELD_NUMBER = 2;
  private int check_ = 0;
  /**
   * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck check = 2;</code>
   * @return Whether the check field is set.
   */
  @java.lang.Override public boolean hasCheck() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck check = 2;</code>
   * @return The check.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck getCheck() {
    com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck result = com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck.forNumber(check_);
    return result == null ? com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck.AVD_COMPATIBILITY_CHECK_UNKNOWN : result;
  }

  public static final int DETAILS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object details_ = "";
  /**
   * <pre>
   * Generic string with system details. For example in the case of
   * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
   * contain the version string "GPU: Intel API: 1.2.3"
   * </pre>
   *
   * <code>optional string details = 3;</code>
   * @return Whether the details field is set.
   */
  @java.lang.Override
  public boolean hasDetails() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Generic string with system details. For example in the case of
   * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
   * contain the version string "GPU: Intel API: 1.2.3"
   * </pre>
   *
   * <code>optional string details = 3;</code>
   * @return The details.
   */
  @java.lang.Override
  public java.lang.String getDetails() {
    java.lang.Object ref = details_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        details_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Generic string with system details. For example in the case of
   * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
   * contain the version string "GPU: Intel API: 1.2.3"
   * </pre>
   *
   * <code>optional string details = 3;</code>
   * @return The bytes for details.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDetailsBytes() {
    java.lang.Object ref = details_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      details_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, status_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, check_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, details_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, check_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, details_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo other = (com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo) obj;

    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (status_ != other.status_) return false;
    }
    if (hasCheck() != other.hasCheck()) return false;
    if (hasCheck()) {
      if (check_ != other.check_) return false;
    }
    if (hasDetails() != other.hasDetails()) return false;
    if (hasDetails()) {
      if (!getDetails()
          .equals(other.getDetails())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
    }
    if (hasCheck()) {
      hash = (37 * hash) + CHECK_FIELD_NUMBER;
      hash = (53 * hash) + check_;
    }
    if (hasDetails()) {
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getDetails().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.EmulatorCompatibilityInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorCompatibilityInfo)
      com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCompatibilityInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCompatibilityInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.class, com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      status_ = 0;
      check_ = 0;
      details_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorCompatibilityInfo_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo build() {
      com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo result = new com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.status_ = status_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.check_ = check_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.details_ = details_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.getDefaultInstance()) return this;
      if (other.hasStatus()) {
        setStatus(other.getStatus());
      }
      if (other.hasCheck()) {
        setCheck(other.getCheck());
      }
      if (other.hasDetails()) {
        details_ = other.details_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                status_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                check_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 26: {
              details_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus status = 1;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus getStatus() {
      com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus result = com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus.forNumber(status_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus.AVD_COMPATIBILITY_STATUS_UNKNOWN : result;
    }
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus status = 1;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityStatus status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      status_ = 0;
      onChanged();
      return this;
    }

    private int check_ = 0;
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck check = 2;</code>
     * @return Whether the check field is set.
     */
    @java.lang.Override public boolean hasCheck() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck check = 2;</code>
     * @return The check.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck getCheck() {
      com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck result = com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck.forNumber(check_);
      return result == null ? com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck.AVD_COMPATIBILITY_CHECK_UNKNOWN : result;
    }
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck check = 2;</code>
     * @param value The check to set.
     * @return This builder for chaining.
     */
    public Builder setCheck(com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo.AvdCompatibilityCheck value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      check_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.EmulatorCompatibilityInfo.AvdCompatibilityCheck check = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCheck() {
      bitField0_ = (bitField0_ & ~0x00000002);
      check_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object details_ = "";
    /**
     * <pre>
     * Generic string with system details. For example in the case of
     * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
     * contain the version string "GPU: Intel API: 1.2.3"
     * </pre>
     *
     * <code>optional string details = 3;</code>
     * @return Whether the details field is set.
     */
    public boolean hasDetails() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Generic string with system details. For example in the case of
     * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
     * contain the version string "GPU: Intel API: 1.2.3"
     * </pre>
     *
     * <code>optional string details = 3;</code>
     * @return The details.
     */
    public java.lang.String getDetails() {
      java.lang.Object ref = details_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          details_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Generic string with system details. For example in the case of
     * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
     * contain the version string "GPU: Intel API: 1.2.3"
     * </pre>
     *
     * <code>optional string details = 3;</code>
     * @return The bytes for details.
     */
    public com.google.protobuf.ByteString
        getDetailsBytes() {
      java.lang.Object ref = details_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        details_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Generic string with system details. For example in the case of
     * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
     * contain the version string "GPU: Intel API: 1.2.3"
     * </pre>
     *
     * <code>optional string details = 3;</code>
     * @param value The details to set.
     * @return This builder for chaining.
     */
    public Builder setDetails(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      details_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Generic string with system details. For example in the case of
     * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
     * contain the version string "GPU: Intel API: 1.2.3"
     * </pre>
     *
     * <code>optional string details = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDetails() {
      details_ = getDefaultInstance().getDetails();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Generic string with system details. For example in the case of
     * AVD_COMPATIBILITY_CHECK_GPU_CHECK_UNSUPPORTED_VULKAN_VERSION, this could
     * contain the version string "GPU: Intel API: 1.2.3"
     * </pre>
     *
     * <code>optional string details = 3;</code>
     * @param value The bytes for details to set.
     * @return This builder for chaining.
     */
    public Builder setDetailsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      details_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorCompatibilityInfo)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorCompatibilityInfo)
  private static final com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorCompatibilityInfo>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorCompatibilityInfo>() {
    @java.lang.Override
    public EmulatorCompatibilityInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EmulatorCompatibilityInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorCompatibilityInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorCompatibilityInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

