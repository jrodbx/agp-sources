// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.GraphicsResourceUsage}
 */
public final class GraphicsResourceUsage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.GraphicsResourceUsage)
    GraphicsResourceUsageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GraphicsResourceUsage.newBuilder() to construct.
  private GraphicsResourceUsage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GraphicsResourceUsage() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GraphicsResourceUsage();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_GraphicsResourceUsage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_GraphicsResourceUsage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.GraphicsResourceUsage.class, com.google.wireless.android.sdk.stats.GraphicsResourceUsage.Builder.class);
  }

  private int bitField0_;
  public static final int COLORBUFFER_COUNT_FIELD_NUMBER = 1;
  private int colorbufferCount_ = 0;
  /**
   * <pre>
   * common betweek OpenGL and Vulkan
   * </pre>
   *
   * <code>optional uint32 colorbuffer_count = 1;</code>
   * @return Whether the colorbufferCount field is set.
   */
  @java.lang.Override
  public boolean hasColorbufferCount() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * common betweek OpenGL and Vulkan
   * </pre>
   *
   * <code>optional uint32 colorbuffer_count = 1;</code>
   * @return The colorbufferCount.
   */
  @java.lang.Override
  public int getColorbufferCount() {
    return colorbufferCount_;
  }

  public static final int SHADER_COUNT_FIELD_NUMBER = 2;
  private int shaderCount_ = 0;
  /**
   * <code>optional uint32 shader_count = 2;</code>
   * @return Whether the shaderCount field is set.
   */
  @java.lang.Override
  public boolean hasShaderCount() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional uint32 shader_count = 2;</code>
   * @return The shaderCount.
   */
  @java.lang.Override
  public int getShaderCount() {
    return shaderCount_;
  }

  public static final int RENDERTHREAD_COUNT_FIELD_NUMBER = 3;
  private int renderthreadCount_ = 0;
  /**
   * <code>optional uint32 renderthread_count = 3;</code>
   * @return Whether the renderthreadCount field is set.
   */
  @java.lang.Override
  public boolean hasRenderthreadCount() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional uint32 renderthread_count = 3;</code>
   * @return The renderthreadCount.
   */
  @java.lang.Override
  public int getRenderthreadCount() {
    return renderthreadCount_;
  }

  public static final int COLORBUFFER_TOTAL_ALLOCATION_BYTES_FIELD_NUMBER = 4;
  private long colorbufferTotalAllocationBytes_ = 0L;
  /**
   * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
   * @return Whether the colorbufferTotalAllocationBytes field is set.
   */
  @java.lang.Override
  public boolean hasColorbufferTotalAllocationBytes() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
   * @return The colorbufferTotalAllocationBytes.
   */
  @java.lang.Override
  public long getColorbufferTotalAllocationBytes() {
    return colorbufferTotalAllocationBytes_;
  }

  public static final int VULKAN_RESOURCE_USAGE_FIELD_NUMBER = 5;
  private com.google.wireless.android.sdk.stats.VulkanResourceUsage vulkanResourceUsage_;
  /**
   * <pre>
   * Vulkan
   * </pre>
   *
   * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
   * @return Whether the vulkanResourceUsage field is set.
   */
  @java.lang.Override
  public boolean hasVulkanResourceUsage() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Vulkan
   * </pre>
   *
   * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
   * @return The vulkanResourceUsage.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VulkanResourceUsage getVulkanResourceUsage() {
    return vulkanResourceUsage_ == null ? com.google.wireless.android.sdk.stats.VulkanResourceUsage.getDefaultInstance() : vulkanResourceUsage_;
  }
  /**
   * <pre>
   * Vulkan
   * </pre>
   *
   * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VulkanResourceUsageOrBuilder getVulkanResourceUsageOrBuilder() {
    return vulkanResourceUsage_ == null ? com.google.wireless.android.sdk.stats.VulkanResourceUsage.getDefaultInstance() : vulkanResourceUsage_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeUInt32(1, colorbufferCount_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt32(2, shaderCount_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt32(3, renderthreadCount_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt64(4, colorbufferTotalAllocationBytes_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getVulkanResourceUsage());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, colorbufferCount_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, shaderCount_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, renderthreadCount_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, colorbufferTotalAllocationBytes_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getVulkanResourceUsage());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.GraphicsResourceUsage)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.GraphicsResourceUsage other = (com.google.wireless.android.sdk.stats.GraphicsResourceUsage) obj;

    if (hasColorbufferCount() != other.hasColorbufferCount()) return false;
    if (hasColorbufferCount()) {
      if (getColorbufferCount()
          != other.getColorbufferCount()) return false;
    }
    if (hasShaderCount() != other.hasShaderCount()) return false;
    if (hasShaderCount()) {
      if (getShaderCount()
          != other.getShaderCount()) return false;
    }
    if (hasRenderthreadCount() != other.hasRenderthreadCount()) return false;
    if (hasRenderthreadCount()) {
      if (getRenderthreadCount()
          != other.getRenderthreadCount()) return false;
    }
    if (hasColorbufferTotalAllocationBytes() != other.hasColorbufferTotalAllocationBytes()) return false;
    if (hasColorbufferTotalAllocationBytes()) {
      if (getColorbufferTotalAllocationBytes()
          != other.getColorbufferTotalAllocationBytes()) return false;
    }
    if (hasVulkanResourceUsage() != other.hasVulkanResourceUsage()) return false;
    if (hasVulkanResourceUsage()) {
      if (!getVulkanResourceUsage()
          .equals(other.getVulkanResourceUsage())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasColorbufferCount()) {
      hash = (37 * hash) + COLORBUFFER_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getColorbufferCount();
    }
    if (hasShaderCount()) {
      hash = (37 * hash) + SHADER_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getShaderCount();
    }
    if (hasRenderthreadCount()) {
      hash = (37 * hash) + RENDERTHREAD_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getRenderthreadCount();
    }
    if (hasColorbufferTotalAllocationBytes()) {
      hash = (37 * hash) + COLORBUFFER_TOTAL_ALLOCATION_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getColorbufferTotalAllocationBytes());
    }
    if (hasVulkanResourceUsage()) {
      hash = (37 * hash) + VULKAN_RESOURCE_USAGE_FIELD_NUMBER;
      hash = (53 * hash) + getVulkanResourceUsage().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.GraphicsResourceUsage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.GraphicsResourceUsage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.GraphicsResourceUsage)
      com.google.wireless.android.sdk.stats.GraphicsResourceUsageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_GraphicsResourceUsage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_GraphicsResourceUsage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.GraphicsResourceUsage.class, com.google.wireless.android.sdk.stats.GraphicsResourceUsage.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.GraphicsResourceUsage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getVulkanResourceUsageFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      colorbufferCount_ = 0;
      shaderCount_ = 0;
      renderthreadCount_ = 0;
      colorbufferTotalAllocationBytes_ = 0L;
      vulkanResourceUsage_ = null;
      if (vulkanResourceUsageBuilder_ != null) {
        vulkanResourceUsageBuilder_.dispose();
        vulkanResourceUsageBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_GraphicsResourceUsage_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.GraphicsResourceUsage getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.GraphicsResourceUsage.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.GraphicsResourceUsage build() {
      com.google.wireless.android.sdk.stats.GraphicsResourceUsage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.GraphicsResourceUsage buildPartial() {
      com.google.wireless.android.sdk.stats.GraphicsResourceUsage result = new com.google.wireless.android.sdk.stats.GraphicsResourceUsage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.GraphicsResourceUsage result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.colorbufferCount_ = colorbufferCount_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.shaderCount_ = shaderCount_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.renderthreadCount_ = renderthreadCount_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.colorbufferTotalAllocationBytes_ = colorbufferTotalAllocationBytes_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.vulkanResourceUsage_ = vulkanResourceUsageBuilder_ == null
            ? vulkanResourceUsage_
            : vulkanResourceUsageBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.GraphicsResourceUsage) {
        return mergeFrom((com.google.wireless.android.sdk.stats.GraphicsResourceUsage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.GraphicsResourceUsage other) {
      if (other == com.google.wireless.android.sdk.stats.GraphicsResourceUsage.getDefaultInstance()) return this;
      if (other.hasColorbufferCount()) {
        setColorbufferCount(other.getColorbufferCount());
      }
      if (other.hasShaderCount()) {
        setShaderCount(other.getShaderCount());
      }
      if (other.hasRenderthreadCount()) {
        setRenderthreadCount(other.getRenderthreadCount());
      }
      if (other.hasColorbufferTotalAllocationBytes()) {
        setColorbufferTotalAllocationBytes(other.getColorbufferTotalAllocationBytes());
      }
      if (other.hasVulkanResourceUsage()) {
        mergeVulkanResourceUsage(other.getVulkanResourceUsage());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              colorbufferCount_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              shaderCount_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              renderthreadCount_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              colorbufferTotalAllocationBytes_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getVulkanResourceUsageFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int colorbufferCount_ ;
    /**
     * <pre>
     * common betweek OpenGL and Vulkan
     * </pre>
     *
     * <code>optional uint32 colorbuffer_count = 1;</code>
     * @return Whether the colorbufferCount field is set.
     */
    @java.lang.Override
    public boolean hasColorbufferCount() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * common betweek OpenGL and Vulkan
     * </pre>
     *
     * <code>optional uint32 colorbuffer_count = 1;</code>
     * @return The colorbufferCount.
     */
    @java.lang.Override
    public int getColorbufferCount() {
      return colorbufferCount_;
    }
    /**
     * <pre>
     * common betweek OpenGL and Vulkan
     * </pre>
     *
     * <code>optional uint32 colorbuffer_count = 1;</code>
     * @param value The colorbufferCount to set.
     * @return This builder for chaining.
     */
    public Builder setColorbufferCount(int value) {

      colorbufferCount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * common betweek OpenGL and Vulkan
     * </pre>
     *
     * <code>optional uint32 colorbuffer_count = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearColorbufferCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      colorbufferCount_ = 0;
      onChanged();
      return this;
    }

    private int shaderCount_ ;
    /**
     * <code>optional uint32 shader_count = 2;</code>
     * @return Whether the shaderCount field is set.
     */
    @java.lang.Override
    public boolean hasShaderCount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 shader_count = 2;</code>
     * @return The shaderCount.
     */
    @java.lang.Override
    public int getShaderCount() {
      return shaderCount_;
    }
    /**
     * <code>optional uint32 shader_count = 2;</code>
     * @param value The shaderCount to set.
     * @return This builder for chaining.
     */
    public Builder setShaderCount(int value) {

      shaderCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 shader_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearShaderCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      shaderCount_ = 0;
      onChanged();
      return this;
    }

    private int renderthreadCount_ ;
    /**
     * <code>optional uint32 renderthread_count = 3;</code>
     * @return Whether the renderthreadCount field is set.
     */
    @java.lang.Override
    public boolean hasRenderthreadCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 renderthread_count = 3;</code>
     * @return The renderthreadCount.
     */
    @java.lang.Override
    public int getRenderthreadCount() {
      return renderthreadCount_;
    }
    /**
     * <code>optional uint32 renderthread_count = 3;</code>
     * @param value The renderthreadCount to set.
     * @return This builder for chaining.
     */
    public Builder setRenderthreadCount(int value) {

      renderthreadCount_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 renderthread_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRenderthreadCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      renderthreadCount_ = 0;
      onChanged();
      return this;
    }

    private long colorbufferTotalAllocationBytes_ ;
    /**
     * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
     * @return Whether the colorbufferTotalAllocationBytes field is set.
     */
    @java.lang.Override
    public boolean hasColorbufferTotalAllocationBytes() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
     * @return The colorbufferTotalAllocationBytes.
     */
    @java.lang.Override
    public long getColorbufferTotalAllocationBytes() {
      return colorbufferTotalAllocationBytes_;
    }
    /**
     * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
     * @param value The colorbufferTotalAllocationBytes to set.
     * @return This builder for chaining.
     */
    public Builder setColorbufferTotalAllocationBytes(long value) {

      colorbufferTotalAllocationBytes_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearColorbufferTotalAllocationBytes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      colorbufferTotalAllocationBytes_ = 0L;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.VulkanResourceUsage vulkanResourceUsage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.VulkanResourceUsage, com.google.wireless.android.sdk.stats.VulkanResourceUsage.Builder, com.google.wireless.android.sdk.stats.VulkanResourceUsageOrBuilder> vulkanResourceUsageBuilder_;
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     * @return Whether the vulkanResourceUsage field is set.
     */
    public boolean hasVulkanResourceUsage() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     * @return The vulkanResourceUsage.
     */
    public com.google.wireless.android.sdk.stats.VulkanResourceUsage getVulkanResourceUsage() {
      if (vulkanResourceUsageBuilder_ == null) {
        return vulkanResourceUsage_ == null ? com.google.wireless.android.sdk.stats.VulkanResourceUsage.getDefaultInstance() : vulkanResourceUsage_;
      } else {
        return vulkanResourceUsageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    public Builder setVulkanResourceUsage(com.google.wireless.android.sdk.stats.VulkanResourceUsage value) {
      if (vulkanResourceUsageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vulkanResourceUsage_ = value;
      } else {
        vulkanResourceUsageBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    public Builder setVulkanResourceUsage(
        com.google.wireless.android.sdk.stats.VulkanResourceUsage.Builder builderForValue) {
      if (vulkanResourceUsageBuilder_ == null) {
        vulkanResourceUsage_ = builderForValue.build();
      } else {
        vulkanResourceUsageBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    public Builder mergeVulkanResourceUsage(com.google.wireless.android.sdk.stats.VulkanResourceUsage value) {
      if (vulkanResourceUsageBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          vulkanResourceUsage_ != null &&
          vulkanResourceUsage_ != com.google.wireless.android.sdk.stats.VulkanResourceUsage.getDefaultInstance()) {
          getVulkanResourceUsageBuilder().mergeFrom(value);
        } else {
          vulkanResourceUsage_ = value;
        }
      } else {
        vulkanResourceUsageBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    public Builder clearVulkanResourceUsage() {
      bitField0_ = (bitField0_ & ~0x00000010);
      vulkanResourceUsage_ = null;
      if (vulkanResourceUsageBuilder_ != null) {
        vulkanResourceUsageBuilder_.dispose();
        vulkanResourceUsageBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.VulkanResourceUsage.Builder getVulkanResourceUsageBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getVulkanResourceUsageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.VulkanResourceUsageOrBuilder getVulkanResourceUsageOrBuilder() {
      if (vulkanResourceUsageBuilder_ != null) {
        return vulkanResourceUsageBuilder_.getMessageOrBuilder();
      } else {
        return vulkanResourceUsage_ == null ?
            com.google.wireless.android.sdk.stats.VulkanResourceUsage.getDefaultInstance() : vulkanResourceUsage_;
      }
    }
    /**
     * <pre>
     * Vulkan
     * </pre>
     *
     * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.VulkanResourceUsage, com.google.wireless.android.sdk.stats.VulkanResourceUsage.Builder, com.google.wireless.android.sdk.stats.VulkanResourceUsageOrBuilder> 
        getVulkanResourceUsageFieldBuilder() {
      if (vulkanResourceUsageBuilder_ == null) {
        vulkanResourceUsageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.VulkanResourceUsage, com.google.wireless.android.sdk.stats.VulkanResourceUsage.Builder, com.google.wireless.android.sdk.stats.VulkanResourceUsageOrBuilder>(
                getVulkanResourceUsage(),
                getParentForChildren(),
                isClean());
        vulkanResourceUsage_ = null;
      }
      return vulkanResourceUsageBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.GraphicsResourceUsage)
  }

  // @@protoc_insertion_point(class_scope:android_studio.GraphicsResourceUsage)
  private static final com.google.wireless.android.sdk.stats.GraphicsResourceUsage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.GraphicsResourceUsage();
  }

  public static com.google.wireless.android.sdk.stats.GraphicsResourceUsage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<GraphicsResourceUsage>
      PARSER = new com.google.protobuf.AbstractParser<GraphicsResourceUsage>() {
    @java.lang.Override
    public GraphicsResourceUsage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GraphicsResourceUsage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GraphicsResourceUsage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.GraphicsResourceUsage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

