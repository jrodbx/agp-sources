// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kotlin_multiplatform_android_models.proto

package com.android.kotlin.multiplatform.models;

public interface AndroidCompilationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:AndroidCompilation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The type of the compilation.
   * </pre>
   *
   * <code>optional .AndroidCompilation.CompilationType type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of the compilation.
   * </pre>
   *
   * <code>optional .AndroidCompilation.CompilationType type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * The type of the compilation.
   * </pre>
   *
   * <code>optional .AndroidCompilation.CompilationType type = 1;</code>
   * @return The type.
   */
  com.android.kotlin.multiplatform.models.AndroidCompilation.CompilationType getType();

  /**
   * <pre>
   * The info of the main variant, will be available iff compilation type is MAIN.
   * </pre>
   *
   * <code>optional .MainVariantInfo main_info = 2;</code>
   * @return Whether the mainInfo field is set.
   */
  boolean hasMainInfo();
  /**
   * <pre>
   * The info of the main variant, will be available iff compilation type is MAIN.
   * </pre>
   *
   * <code>optional .MainVariantInfo main_info = 2;</code>
   * @return The mainInfo.
   */
  com.android.kotlin.multiplatform.models.MainVariantInfo getMainInfo();
  /**
   * <pre>
   * The info of the main variant, will be available iff compilation type is MAIN.
   * </pre>
   *
   * <code>optional .MainVariantInfo main_info = 2;</code>
   */
  com.android.kotlin.multiplatform.models.MainVariantInfoOrBuilder getMainInfoOrBuilder();

  /**
   * <pre>
   * The info of the unit test component, will be available iff compilation type is UNIT_TEST.
   * </pre>
   *
   * <code>optional .UnitTestInfo unit_test_info = 3;</code>
   * @return Whether the unitTestInfo field is set.
   */
  boolean hasUnitTestInfo();
  /**
   * <pre>
   * The info of the unit test component, will be available iff compilation type is UNIT_TEST.
   * </pre>
   *
   * <code>optional .UnitTestInfo unit_test_info = 3;</code>
   * @return The unitTestInfo.
   */
  com.android.kotlin.multiplatform.models.UnitTestInfo getUnitTestInfo();
  /**
   * <pre>
   * The info of the unit test component, will be available iff compilation type is UNIT_TEST.
   * </pre>
   *
   * <code>optional .UnitTestInfo unit_test_info = 3;</code>
   */
  com.android.kotlin.multiplatform.models.UnitTestInfoOrBuilder getUnitTestInfoOrBuilder();

  /**
   * <pre>
   * The info of the instrumented test component, will be available iff compilation type is INSTRUMENTED_TEST.
   * </pre>
   *
   * <code>optional .InstrumentedTestInfo instrumented_test_info = 4;</code>
   * @return Whether the instrumentedTestInfo field is set.
   */
  boolean hasInstrumentedTestInfo();
  /**
   * <pre>
   * The info of the instrumented test component, will be available iff compilation type is INSTRUMENTED_TEST.
   * </pre>
   *
   * <code>optional .InstrumentedTestInfo instrumented_test_info = 4;</code>
   * @return The instrumentedTestInfo.
   */
  com.android.kotlin.multiplatform.models.InstrumentedTestInfo getInstrumentedTestInfo();
  /**
   * <pre>
   * The info of the instrumented test component, will be available iff compilation type is INSTRUMENTED_TEST.
   * </pre>
   *
   * <code>optional .InstrumentedTestInfo instrumented_test_info = 4;</code>
   */
  com.android.kotlin.multiplatform.models.InstrumentedTestInfoOrBuilder getInstrumentedTestInfoOrBuilder();

  /**
   * <pre>
   * The name of the default sourceSet of the compilation.
   * </pre>
   *
   * <code>optional string default_source_set_name = 5;</code>
   * @return Whether the defaultSourceSetName field is set.
   */
  boolean hasDefaultSourceSetName();
  /**
   * <pre>
   * The name of the default sourceSet of the compilation.
   * </pre>
   *
   * <code>optional string default_source_set_name = 5;</code>
   * @return The defaultSourceSetName.
   */
  java.lang.String getDefaultSourceSetName();
  /**
   * <pre>
   * The name of the default sourceSet of the compilation.
   * </pre>
   *
   * <code>optional string default_source_set_name = 5;</code>
   * @return The bytes for defaultSourceSetName.
   */
  com.google.protobuf.ByteString
      getDefaultSourceSetNameBytes();

  /**
   * <pre>
   * The gradle assemble task name.
   * </pre>
   *
   * <code>optional string assemble_task_name = 6;</code>
   * @return Whether the assembleTaskName field is set.
   */
  boolean hasAssembleTaskName();
  /**
   * <pre>
   * The gradle assemble task name.
   * </pre>
   *
   * <code>optional string assemble_task_name = 6;</code>
   * @return The assembleTaskName.
   */
  java.lang.String getAssembleTaskName();
  /**
   * <pre>
   * The gradle assemble task name.
   * </pre>
   *
   * <code>optional string assemble_task_name = 6;</code>
   * @return The bytes for assembleTaskName.
   */
  com.google.protobuf.ByteString
      getAssembleTaskNameBytes();

  /**
   * <pre>
   * The kotlin gradle compilation task name.
   * </pre>
   *
   * <code>optional string kotlin_compile_task_name = 7;</code>
   * @return Whether the kotlinCompileTaskName field is set.
   */
  boolean hasKotlinCompileTaskName();
  /**
   * <pre>
   * The kotlin gradle compilation task name.
   * </pre>
   *
   * <code>optional string kotlin_compile_task_name = 7;</code>
   * @return The kotlinCompileTaskName.
   */
  java.lang.String getKotlinCompileTaskName();
  /**
   * <pre>
   * The kotlin gradle compilation task name.
   * </pre>
   *
   * <code>optional string kotlin_compile_task_name = 7;</code>
   * @return The bytes for kotlinCompileTaskName.
   */
  com.google.protobuf.ByteString
      getKotlinCompileTaskNameBytes();
}
