// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ide_models.proto

package com.android.builder.model.proto.ide;

public interface LibraryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Library)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A Unique key representing the library, and allowing to match it with [GraphItem] instances
   * </pre>
   *
   * <code>optional string key = 1;</code>
   * @return Whether the key field is set.
   */
  boolean hasKey();
  /**
   * <pre>
   * A Unique key representing the library, and allowing to match it with [GraphItem] instances
   * </pre>
   *
   * <code>optional string key = 1;</code>
   * @return The key.
   */
  java.lang.String getKey();
  /**
   * <pre>
   * A Unique key representing the library, and allowing to match it with [GraphItem] instances
   * </pre>
   *
   * <code>optional string key = 1;</code>
   * @return The bytes for key.
   */
  com.google.protobuf.ByteString
      getKeyBytes();

  /**
   * <pre>
   * The type of the dependency.
   * </pre>
   *
   * <code>optional .LibraryType type = 2;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of the dependency.
   * </pre>
   *
   * <code>optional .LibraryType type = 2;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * The type of the dependency.
   * </pre>
   *
   * <code>optional .LibraryType type = 2;</code>
   * @return The type.
   */
  com.android.builder.model.proto.ide.LibraryType getType();

  /**
   * <pre>
   * Returns the project info to uniquely identify it (and its variant)
   *
   * Only valid for instances where [type] is [LibraryType.PROJECT]. It is null in other cases.
   * </pre>
   *
   * <code>optional .ProjectInfo project_info = 3;</code>
   * @return Whether the projectInfo field is set.
   */
  boolean hasProjectInfo();
  /**
   * <pre>
   * Returns the project info to uniquely identify it (and its variant)
   *
   * Only valid for instances where [type] is [LibraryType.PROJECT]. It is null in other cases.
   * </pre>
   *
   * <code>optional .ProjectInfo project_info = 3;</code>
   * @return The projectInfo.
   */
  com.android.builder.model.proto.ide.ProjectInfo getProjectInfo();
  /**
   * <pre>
   * Returns the project info to uniquely identify it (and its variant)
   *
   * Only valid for instances where [type] is [LibraryType.PROJECT]. It is null in other cases.
   * </pre>
   *
   * <code>optional .ProjectInfo project_info = 3;</code>
   */
  com.android.builder.model.proto.ide.ProjectInfoOrBuilder getProjectInfoOrBuilder();

  /**
   * <pre>
   * Returns the external library info to uniquely identify it (and its variant)
   *
   * Only valid for instances where [type] is [LibraryType.ANDROID_LIBRARY], or
   * [LibraryType.JAVA_LIBRARY]. It is null in other cases.
   * </pre>
   *
   * <code>optional .LibraryInfo library_info = 4;</code>
   * @return Whether the libraryInfo field is set.
   */
  boolean hasLibraryInfo();
  /**
   * <pre>
   * Returns the external library info to uniquely identify it (and its variant)
   *
   * Only valid for instances where [type] is [LibraryType.ANDROID_LIBRARY], or
   * [LibraryType.JAVA_LIBRARY]. It is null in other cases.
   * </pre>
   *
   * <code>optional .LibraryInfo library_info = 4;</code>
   * @return The libraryInfo.
   */
  com.android.builder.model.proto.ide.LibraryInfo getLibraryInfo();
  /**
   * <pre>
   * Returns the external library info to uniquely identify it (and its variant)
   *
   * Only valid for instances where [type] is [LibraryType.ANDROID_LIBRARY], or
   * [LibraryType.JAVA_LIBRARY]. It is null in other cases.
   * </pre>
   *
   * <code>optional .LibraryInfo library_info = 4;</code>
   */
  com.android.builder.model.proto.ide.LibraryInfoOrBuilder getLibraryInfoOrBuilder();

  /**
   * <pre>
   * The artifact location.
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File artifact = 5;</code>
   * @return Whether the artifact field is set.
   */
  boolean hasArtifact();
  /**
   * <pre>
   * The artifact location.
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File artifact = 5;</code>
   * @return The artifact.
   */
  com.android.builder.model.proto.ide.File getArtifact();
  /**
   * <pre>
   * The artifact location.
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File artifact = 5;</code>
   */
  com.android.builder.model.proto.ide.FileOrBuilder getArtifactOrBuilder();

  /**
   * <pre>
   * The jar containing custom lint checks for consumers to use. This is filled by the
   * lintPublish configuration.
   *
   * The file may not exist.
   *
   * Only valid for instances where [type] is [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File lint_jar = 6;</code>
   * @return Whether the lintJar field is set.
   */
  boolean hasLintJar();
  /**
   * <pre>
   * The jar containing custom lint checks for consumers to use. This is filled by the
   * lintPublish configuration.
   *
   * The file may not exist.
   *
   * Only valid for instances where [type] is [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File lint_jar = 6;</code>
   * @return The lintJar.
   */
  com.android.builder.model.proto.ide.File getLintJar();
  /**
   * <pre>
   * The jar containing custom lint checks for consumers to use. This is filled by the
   * lintPublish configuration.
   *
   * The file may not exist.
   *
   * Only valid for instances where [type] is [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File lint_jar = 6;</code>
   */
  com.android.builder.model.proto.ide.FileOrBuilder getLintJarOrBuilder();

  /**
   * <pre>
   * The jar containing the sources for the [artifact]
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File src_jar = 7;</code>
   * @return Whether the srcJar field is set.
   */
  boolean hasSrcJar();
  /**
   * <pre>
   * The jar containing the sources for the [artifact]
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File src_jar = 7;</code>
   * @return The srcJar.
   */
  com.android.builder.model.proto.ide.File getSrcJar();
  /**
   * <pre>
   * The jar containing the sources for the [artifact]
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File src_jar = 7;</code>
   */
  com.android.builder.model.proto.ide.FileOrBuilder getSrcJarOrBuilder();

  /**
   * <pre>
   * The jar containing the documentation for the [artifact]
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File doc_jar = 8;</code>
   * @return Whether the docJar field is set.
   */
  boolean hasDocJar();
  /**
   * <pre>
   * The jar containing the documentation for the [artifact]
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File doc_jar = 8;</code>
   * @return The docJar.
   */
  com.android.builder.model.proto.ide.File getDocJar();
  /**
   * <pre>
   * The jar containing the documentation for the [artifact]
   *
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File doc_jar = 8;</code>
   */
  com.android.builder.model.proto.ide.FileOrBuilder getDocJarOrBuilder();

  /**
   * <pre>
   * The jar containing samples for the [artifact]
   *
   * Only valid for instance where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File samples_jar = 9;</code>
   * @return Whether the samplesJar field is set.
   */
  boolean hasSamplesJar();
  /**
   * <pre>
   * The jar containing samples for the [artifact]
   *
   * Only valid for instance where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File samples_jar = 9;</code>
   * @return The samplesJar.
   */
  com.android.builder.model.proto.ide.File getSamplesJar();
  /**
   * <pre>
   * The jar containing samples for the [artifact]
   *
   * Only valid for instance where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>optional .File samples_jar = 9;</code>
   */
  com.android.builder.model.proto.ide.FileOrBuilder getSamplesJarOrBuilder();

  /**
   * <pre>
   * Data for libraries of type [LibraryType.ANDROID_LIBRARY]. It is null in other cases.
   * </pre>
   *
   * <code>optional .AndroidLibraryData android_library_data = 10;</code>
   * @return Whether the androidLibraryData field is set.
   */
  boolean hasAndroidLibraryData();
  /**
   * <pre>
   * Data for libraries of type [LibraryType.ANDROID_LIBRARY]. It is null in other cases.
   * </pre>
   *
   * <code>optional .AndroidLibraryData android_library_data = 10;</code>
   * @return The androidLibraryData.
   */
  com.android.builder.model.proto.ide.AndroidLibraryData getAndroidLibraryData();
  /**
   * <pre>
   * Data for libraries of type [LibraryType.ANDROID_LIBRARY]. It is null in other cases.
   * </pre>
   *
   * <code>optional .AndroidLibraryData android_library_data = 10;</code>
   */
  com.android.builder.model.proto.ide.AndroidLibraryDataOrBuilder getAndroidLibraryDataOrBuilder();

  /**
   * <pre>
   * Provides the sources for the [artifact] including regular source and sample source
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>repeated .File src_jars = 11;</code>
   */
  java.util.List<com.android.builder.model.proto.ide.File> 
      getSrcJarsList();
  /**
   * <pre>
   * Provides the sources for the [artifact] including regular source and sample source
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>repeated .File src_jars = 11;</code>
   */
  com.android.builder.model.proto.ide.File getSrcJars(int index);
  /**
   * <pre>
   * Provides the sources for the [artifact] including regular source and sample source
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>repeated .File src_jars = 11;</code>
   */
  int getSrcJarsCount();
  /**
   * <pre>
   * Provides the sources for the [artifact] including regular source and sample source
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>repeated .File src_jars = 11;</code>
   */
  java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
      getSrcJarsOrBuilderList();
  /**
   * <pre>
   * Provides the sources for the [artifact] including regular source and sample source
   * Only valid for instances where [type] is [LibraryType.JAVA_LIBRARY] or
   * [LibraryType.ANDROID_LIBRARY]
   * </pre>
   *
   * <code>repeated .File src_jars = 11;</code>
   */
  com.android.builder.model.proto.ide.FileOrBuilder getSrcJarsOrBuilder(
      int index);
}
