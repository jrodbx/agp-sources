// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface BuildAttributionPluginIdentifierOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.BuildAttributionPluginIdentifier)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Either a binary plugin or a build script plugin
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionPluginIdentifier.PluginType type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * Either a binary plugin or a build script plugin
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionPluginIdentifier.PluginType type = 1;</code>
   * @return The type.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionPluginIdentifier.PluginType getType();

  /**
   * <pre>
   * The display name of the plugin, that is the string used in the build script
   * when calling apply. ex: com.android.application, kotlin-android
   * Should not be set in the case of a build script
   * </pre>
   *
   * <code>optional string plugin_display_name = 2;</code>
   * @return Whether the pluginDisplayName field is set.
   */
  boolean hasPluginDisplayName();
  /**
   * <pre>
   * The display name of the plugin, that is the string used in the build script
   * when calling apply. ex: com.android.application, kotlin-android
   * Should not be set in the case of a build script
   * </pre>
   *
   * <code>optional string plugin_display_name = 2;</code>
   * @return The pluginDisplayName.
   */
  java.lang.String getPluginDisplayName();
  /**
   * <pre>
   * The display name of the plugin, that is the string used in the build script
   * when calling apply. ex: com.android.application, kotlin-android
   * Should not be set in the case of a build script
   * </pre>
   *
   * <code>optional string plugin_display_name = 2;</code>
   * @return The bytes for pluginDisplayName.
   */
  com.google.protobuf.ByteString
      getPluginDisplayNameBytes();
}
