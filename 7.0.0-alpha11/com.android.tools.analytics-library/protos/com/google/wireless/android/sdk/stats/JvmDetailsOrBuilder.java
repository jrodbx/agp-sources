// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface JvmDetailsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.JvmDetails)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the JVM (e.g. "OpenJDK 64-Bit Server by JetBrains s.r.o").
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * Name of the JVM (e.g. "OpenJDK 64-Bit Server by JetBrains s.r.o").
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the JVM (e.g. "OpenJDK 64-Bit Server by JetBrains s.r.o").
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Version of the JVM (e.g. "1.8.0_76-release-b198 amd")
   * </pre>
   *
   * <code>optional string version = 2;</code>
   * @return Whether the version field is set.
   */
  boolean hasVersion();
  /**
   * <pre>
   * Version of the JVM (e.g. "1.8.0_76-release-b198 amd")
   * </pre>
   *
   * <code>optional string version = 2;</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * Version of the JVM (e.g. "1.8.0_76-release-b198 amd")
   * </pre>
   *
   * <code>optional string version = 2;</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * Vendor of the JVM (e.g. "JetBrains s.r.o.")
   * </pre>
   *
   * <code>optional string vendor = 3;</code>
   * @return Whether the vendor field is set.
   */
  boolean hasVendor();
  /**
   * <pre>
   * Vendor of the JVM (e.g. "JetBrains s.r.o.")
   * </pre>
   *
   * <code>optional string vendor = 3;</code>
   * @return The vendor.
   */
  java.lang.String getVendor();
  /**
   * <pre>
   * Vendor of the JVM (e.g. "JetBrains s.r.o.")
   * </pre>
   *
   * <code>optional string vendor = 3;</code>
   * @return The bytes for vendor.
   */
  com.google.protobuf.ByteString
      getVendorBytes();

  /**
   * <pre>
   * VM Option specified to set minimum heap_size in bytes ("-Xms" flag).
   * </pre>
   *
   * <code>optional int64 minimum_heap_size = 4;</code>
   * @return Whether the minimumHeapSize field is set.
   */
  boolean hasMinimumHeapSize();
  /**
   * <pre>
   * VM Option specified to set minimum heap_size in bytes ("-Xms" flag).
   * </pre>
   *
   * <code>optional int64 minimum_heap_size = 4;</code>
   * @return The minimumHeapSize.
   */
  long getMinimumHeapSize();

  /**
   * <pre>
   * VM Option specified to set maximum heap_size in bytes ("-Xmx" flag).
   * </pre>
   *
   * <code>optional int64 maximum_heap_size = 5;</code>
   * @return Whether the maximumHeapSize field is set.
   */
  boolean hasMaximumHeapSize();
  /**
   * <pre>
   * VM Option specified to set maximum heap_size in bytes ("-Xmx" flag).
   * </pre>
   *
   * <code>optional int64 maximum_heap_size = 5;</code>
   * @return The maximumHeapSize.
   */
  long getMaximumHeapSize();

  /**
   * <pre>
   * VM Option specified to set maximum permanent space size in bytes.
   * ("-XX:MaxPermSize" flag)
   * </pre>
   *
   * <code>optional int64 maximum_permanent_space_size = 6;</code>
   * @return Whether the maximumPermanentSpaceSize field is set.
   */
  boolean hasMaximumPermanentSpaceSize();
  /**
   * <pre>
   * VM Option specified to set maximum permanent space size in bytes.
   * ("-XX:MaxPermSize" flag)
   * </pre>
   *
   * <code>optional int64 maximum_permanent_space_size = 6;</code>
   * @return The maximumPermanentSpaceSize.
   */
  long getMaximumPermanentSpaceSize();

  /**
   * <pre>
   * VM Option specified to set maximum permanent space size in bytes.
   * ("-XX:ReservedCodeCacheSize" flag)
   * </pre>
   *
   * <code>optional int64 maximum_code_cache_size = 7;</code>
   * @return Whether the maximumCodeCacheSize field is set.
   */
  boolean hasMaximumCodeCacheSize();
  /**
   * <pre>
   * VM Option specified to set maximum permanent space size in bytes.
   * ("-XX:ReservedCodeCacheSize" flag)
   * </pre>
   *
   * <code>optional int64 maximum_code_cache_size = 7;</code>
   * @return The maximumCodeCacheSize.
   */
  long getMaximumCodeCacheSize();

  /**
   * <pre>
   * VM Option specified to set time soft referenced objects remain alive in ms.
   * ("-XX:SoftRefLRUPolicyMSPerMB" flag)
   * </pre>
   *
   * <code>optional int64 soft_reference_lru_policy = 8;</code>
   * @return Whether the softReferenceLruPolicy field is set.
   */
  boolean hasSoftReferenceLruPolicy();
  /**
   * <pre>
   * VM Option specified to set time soft referenced objects remain alive in ms.
   * ("-XX:SoftRefLRUPolicyMSPerMB" flag)
   * </pre>
   *
   * <code>optional int64 soft_reference_lru_policy = 8;</code>
   * @return The softReferenceLruPolicy.
   */
  long getSoftReferenceLruPolicy();

  /**
   * <pre>
   * Type of Garbage Collector to use (various VM Option flags).
   * </pre>
   *
   * <code>optional .android_studio.JvmDetails.GarbageCollector garbage_collector = 9;</code>
   * @return Whether the garbageCollector field is set.
   */
  boolean hasGarbageCollector();
  /**
   * <pre>
   * Type of Garbage Collector to use (various VM Option flags).
   * </pre>
   *
   * <code>optional .android_studio.JvmDetails.GarbageCollector garbage_collector = 9;</code>
   * @return The garbageCollector.
   */
  com.google.wireless.android.sdk.stats.JvmDetails.GarbageCollector getGarbageCollector();
}
