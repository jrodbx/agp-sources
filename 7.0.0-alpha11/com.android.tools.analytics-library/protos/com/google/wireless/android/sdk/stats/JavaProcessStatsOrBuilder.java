// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface JavaProcessStatsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.JavaProcessStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Number of bytes of memory in use as heap memory.
   * </pre>
   *
   * <code>optional int64 heap_memory_usage = 1;</code>
   * @return Whether the heapMemoryUsage field is set.
   */
  boolean hasHeapMemoryUsage();
  /**
   * <pre>
   * Number of bytes of memory in use as heap memory.
   * </pre>
   *
   * <code>optional int64 heap_memory_usage = 1;</code>
   * @return The heapMemoryUsage.
   */
  long getHeapMemoryUsage();

  /**
   * <pre>
   * Number of bytes of memory in use as non heap memory.
   * </pre>
   *
   * <code>optional int64 non_heap_memory_usage = 2;</code>
   * @return Whether the nonHeapMemoryUsage field is set.
   */
  boolean hasNonHeapMemoryUsage();
  /**
   * <pre>
   * Number of bytes of memory in use as non heap memory.
   * </pre>
   *
   * <code>optional int64 non_heap_memory_usage = 2;</code>
   * @return The nonHeapMemoryUsage.
   */
  long getNonHeapMemoryUsage();

  /**
   * <pre>
   * Current amount of java classes loaded.
   * </pre>
   *
   * <code>optional int32 loaded_class_count = 3;</code>
   * @return Whether the loadedClassCount field is set.
   */
  boolean hasLoadedClassCount();
  /**
   * <pre>
   * Current amount of java classes loaded.
   * </pre>
   *
   * <code>optional int32 loaded_class_count = 3;</code>
   * @return The loadedClassCount.
   */
  int getLoadedClassCount();

  /**
   * <pre>
   * Current amount of threads.
   * </pre>
   *
   * <code>optional int32 thread_count = 4;</code>
   * @return Whether the threadCount field is set.
   */
  boolean hasThreadCount();
  /**
   * <pre>
   * Current amount of threads.
   * </pre>
   *
   * <code>optional int32 thread_count = 4;</code>
   * @return The threadCount.
   */
  int getThreadCount();

  /**
   * <pre>
   * Statistics about the garbage collectors used in this process.
   * </pre>
   *
   * <code>repeated .android_studio.GarbageCollectionStats garbage_collection_stats = 5;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.GarbageCollectionStats>
      getGarbageCollectionStatsList();
  /**
   * <pre>
   * Statistics about the garbage collectors used in this process.
   * </pre>
   *
   * <code>repeated .android_studio.GarbageCollectionStats garbage_collection_stats = 5;</code>
   */
  com.google.wireless.android.sdk.stats.GarbageCollectionStats getGarbageCollectionStats(int index);
  /**
   * <pre>
   * Statistics about the garbage collectors used in this process.
   * </pre>
   *
   * <code>repeated .android_studio.GarbageCollectionStats garbage_collection_stats = 5;</code>
   */
  int getGarbageCollectionStatsCount();
  /**
   * <pre>
   * Statistics about the garbage collectors used in this process.
   * </pre>
   *
   * <code>repeated .android_studio.GarbageCollectionStats garbage_collection_stats = 5;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.GarbageCollectionStatsOrBuilder>
      getGarbageCollectionStatsOrBuilderList();
  /**
   * <pre>
   * Statistics about the garbage collectors used in this process.
   * </pre>
   *
   * <code>repeated .android_studio.GarbageCollectionStats garbage_collection_stats = 5;</code>
   */
  com.google.wireless.android.sdk.stats.GarbageCollectionStatsOrBuilder getGarbageCollectionStatsOrBuilder(
      int index);
}
