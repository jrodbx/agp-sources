// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.RunEvent}
 */
public  final class RunEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.RunEvent)
    RunEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RunEvent.newBuilder() to construct.
  private RunEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RunEvent() {
    status_ = 0;
    executor_ = "";
    launchTaskDetail_ = java.util.Collections.emptyList();
    deployFailureId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RunEvent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RunEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.RunEvent.Status value = com.google.wireless.android.sdk.stats.RunEvent.Status.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              status_ = rawValue;
            }
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            executor_ = bs;
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            debuggable_ = input.readBool();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            instantRunEnabled_ = input.readBool();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            applyChanges_ = input.readBool();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            userSelectedTarget_ = input.readBool();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            launchedDevices_ = input.readBool();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            deviceCount_ = input.readInt32();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000100;
            partial_ = input.readBool();
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
              launchTaskDetail_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.LaunchTaskDetail>();
              mutable_bitField0_ |= 0x00000200;
            }
            launchTaskDetail_.add(
                input.readMessage(com.google.wireless.android.sdk.stats.LaunchTaskDetail.PARSER, extensionRegistry));
            break;
          }
          case 88: {
            bitField0_ |= 0x00000200;
            beginTimestampMs_ = input.readInt64();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000400;
            beginBeforeRunTasksTimestampMs_ = input.readInt64();
            break;
          }
          case 104: {
            bitField0_ |= 0x00000800;
            endBeforeRunTasksTimestampMs_ = input.readInt64();
            break;
          }
          case 112: {
            bitField0_ |= 0x00001000;
            beginWaitForDeviceTimestampMs_ = input.readInt64();
            break;
          }
          case 120: {
            bitField0_ |= 0x00002000;
            endWaitForDeviceTimestampMs_ = input.readInt64();
            break;
          }
          case 128: {
            bitField0_ |= 0x00004000;
            beginLaunchTasksTimestampMs_ = input.readInt64();
            break;
          }
          case 136: {
            bitField0_ |= 0x00008000;
            endLaunchTasksTimestampMs_ = input.readInt64();
            break;
          }
          case 144: {
            bitField0_ |= 0x00010000;
            endTimestampMs_ = input.readInt64();
            break;
          }
          case 152: {
            bitField0_ |= 0x00020000;
            deployedAsInstant_ = input.readBool();
            break;
          }
          case 160: {
            bitField0_ |= 0x00040000;
            deployedFromBundle_ = input.readBool();
            break;
          }
          case 170: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00080000;
            deployFailureId_ = bs;
            break;
          }
          case 176: {
            bitField0_ |= 0x00100000;
            applyChangesFallbackToRun_ = input.readBool();
            break;
          }
          case 184: {
            bitField0_ |= 0x00200000;
            applyCodeChangesFallbackToRun_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000200) != 0)) {
        launchTaskDetail_ = java.util.Collections.unmodifiableList(launchTaskDetail_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_RunEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_RunEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.RunEvent.class, com.google.wireless.android.sdk.stats.RunEvent.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.RunEvent.Status}
   */
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    UNKNOWN_STATUS(0),
    /**
     * <pre>
     * The run finished successfully
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    SUCCESS(1),
    /**
     * <pre>
     * The run finished with an error
     * </pre>
     *
     * <code>FAIL = 2;</code>
     */
    FAIL(2),
    /**
     * <pre>
     * The run was aborted mid-way
     * </pre>
     *
     * <code>ABORT = 3;</code>
     */
    ABORT(3),
    ;

    /**
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    public static final int UNKNOWN_STATUS_VALUE = 0;
    /**
     * <pre>
     * The run finished successfully
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <pre>
     * The run finished with an error
     * </pre>
     *
     * <code>FAIL = 2;</code>
     */
    public static final int FAIL_VALUE = 2;
    /**
     * <pre>
     * The run was aborted mid-way
     * </pre>
     *
     * <code>ABORT = 3;</code>
     */
    public static final int ABORT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Status forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_STATUS;
        case 1: return SUCCESS;
        case 2: return FAIL;
        case 3: return ABORT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.RunEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.RunEvent.Status)
  }

  private int bitField0_;
  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_;
  /**
   * <code>optional .android_studio.RunEvent.Status status = 1;</code>
   * @return Whether the status field is set.
   */
  public boolean hasStatus() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .android_studio.RunEvent.Status status = 1;</code>
   * @return The status.
   */
  public com.google.wireless.android.sdk.stats.RunEvent.Status getStatus() {
    @SuppressWarnings("deprecation")
    com.google.wireless.android.sdk.stats.RunEvent.Status result = com.google.wireless.android.sdk.stats.RunEvent.Status.valueOf(status_);
    return result == null ? com.google.wireless.android.sdk.stats.RunEvent.Status.UNKNOWN_STATUS : result;
  }

  public static final int EXECUTOR_FIELD_NUMBER = 2;
  private volatile java.lang.Object executor_;
  /**
   * <pre>
   * The executor used, from Executor::getId()
   * </pre>
   *
   * <code>optional string executor = 2;</code>
   * @return Whether the executor field is set.
   */
  public boolean hasExecutor() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The executor used, from Executor::getId()
   * </pre>
   *
   * <code>optional string executor = 2;</code>
   * @return The executor.
   */
  public java.lang.String getExecutor() {
    java.lang.Object ref = executor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        executor_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The executor used, from Executor::getId()
   * </pre>
   *
   * <code>optional string executor = 2;</code>
   * @return The bytes for executor.
   */
  public com.google.protobuf.ByteString
      getExecutorBytes() {
    java.lang.Object ref = executor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      executor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEBUGGABLE_FIELD_NUMBER = 3;
  private boolean debuggable_;
  /**
   * <pre>
   * Whether the app is debuggable
   * </pre>
   *
   * <code>optional bool debuggable = 3;</code>
   * @return Whether the debuggable field is set.
   */
  public boolean hasDebuggable() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Whether the app is debuggable
   * </pre>
   *
   * <code>optional bool debuggable = 3;</code>
   * @return The debuggable.
   */
  public boolean getDebuggable() {
    return debuggable_;
  }

  public static final int INSTANT_RUN_ENABLED_FIELD_NUMBER = 4;
  private boolean instantRunEnabled_;
  /**
   * <pre>
   * Whether instant run is enabled
   * </pre>
   *
   * <code>optional bool instant_run_enabled = 4;</code>
   * @return Whether the instantRunEnabled field is set.
   */
  public boolean hasInstantRunEnabled() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Whether instant run is enabled
   * </pre>
   *
   * <code>optional bool instant_run_enabled = 4;</code>
   * @return The instantRunEnabled.
   */
  public boolean getInstantRunEnabled() {
    return instantRunEnabled_;
  }

  public static final int APPLY_CHANGES_FIELD_NUMBER = 5;
  private boolean applyChanges_;
  /**
   * <pre>
   * Whether the apply changes button was used
   * </pre>
   *
   * <code>optional bool apply_changes = 5;</code>
   * @return Whether the applyChanges field is set.
   */
  public boolean hasApplyChanges() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Whether the apply changes button was used
   * </pre>
   *
   * <code>optional bool apply_changes = 5;</code>
   * @return The applyChanges.
   */
  public boolean getApplyChanges() {
    return applyChanges_;
  }

  public static final int USER_SELECTED_TARGET_FIELD_NUMBER = 6;
  private boolean userSelectedTarget_;
  /**
   * <pre>
   * Whether the device dialog was open
   * </pre>
   *
   * <code>optional bool user_selected_target = 6;</code>
   * @return Whether the userSelectedTarget field is set.
   */
  public boolean hasUserSelectedTarget() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Whether the device dialog was open
   * </pre>
   *
   * <code>optional bool user_selected_target = 6;</code>
   * @return The userSelectedTarget.
   */
  public boolean getUserSelectedTarget() {
    return userSelectedTarget_;
  }

  public static final int LAUNCHED_DEVICES_FIELD_NUMBER = 7;
  private boolean launchedDevices_;
  /**
   * <pre>
   * Weather a device, like the emulator, was launched
   * </pre>
   *
   * <code>optional bool launched_devices = 7;</code>
   * @return Whether the launchedDevices field is set.
   */
  public boolean hasLaunchedDevices() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Weather a device, like the emulator, was launched
   * </pre>
   *
   * <code>optional bool launched_devices = 7;</code>
   * @return The launchedDevices.
   */
  public boolean getLaunchedDevices() {
    return launchedDevices_;
  }

  public static final int DEVICE_COUNT_FIELD_NUMBER = 8;
  private int deviceCount_;
  /**
   * <pre>
   * How many devices were targeted
   * </pre>
   *
   * <code>optional int32 device_count = 8;</code>
   * @return Whether the deviceCount field is set.
   */
  public boolean hasDeviceCount() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * How many devices were targeted
   * </pre>
   *
   * <code>optional int32 device_count = 8;</code>
   * @return The deviceCount.
   */
  public int getDeviceCount() {
    return deviceCount_;
  }

  public static final int PARTIAL_FIELD_NUMBER = 9;
  private boolean partial_;
  /**
   * <pre>
   * True if this run event started mid-way
   * </pre>
   *
   * <code>optional bool partial = 9;</code>
   * @return Whether the partial field is set.
   */
  public boolean hasPartial() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * True if this run event started mid-way
   * </pre>
   *
   * <code>optional bool partial = 9;</code>
   * @return The partial.
   */
  public boolean getPartial() {
    return partial_;
  }

  public static final int LAUNCH_TASK_DETAIL_FIELD_NUMBER = 10;
  private java.util.List<com.google.wireless.android.sdk.stats.LaunchTaskDetail> launchTaskDetail_;
  /**
   * <pre>
   * All the launch tasks executed during deploy
   * </pre>
   *
   * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
   */
  public java.util.List<com.google.wireless.android.sdk.stats.LaunchTaskDetail> getLaunchTaskDetailList() {
    return launchTaskDetail_;
  }
  /**
   * <pre>
   * All the launch tasks executed during deploy
   * </pre>
   *
   * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
   */
  public java.util.List<? extends com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder>
      getLaunchTaskDetailOrBuilderList() {
    return launchTaskDetail_;
  }
  /**
   * <pre>
   * All the launch tasks executed during deploy
   * </pre>
   *
   * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
   */
  public int getLaunchTaskDetailCount() {
    return launchTaskDetail_.size();
  }
  /**
   * <pre>
   * All the launch tasks executed during deploy
   * </pre>
   *
   * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
   */
  public com.google.wireless.android.sdk.stats.LaunchTaskDetail getLaunchTaskDetail(int index) {
    return launchTaskDetail_.get(index);
  }
  /**
   * <pre>
   * All the launch tasks executed during deploy
   * </pre>
   *
   * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
   */
  public com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder getLaunchTaskDetailOrBuilder(
      int index) {
    return launchTaskDetail_.get(index);
  }

  public static final int BEGIN_TIMESTAMP_MS_FIELD_NUMBER = 11;
  private long beginTimestampMs_;
  /**
   * <pre>
   * Timestamps in expected order
   * The run cycle begins
   * </pre>
   *
   * <code>optional int64 begin_timestamp_ms = 11;</code>
   * @return Whether the beginTimestampMs field is set.
   */
  public boolean hasBeginTimestampMs() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Timestamps in expected order
   * The run cycle begins
   * </pre>
   *
   * <code>optional int64 begin_timestamp_ms = 11;</code>
   * @return The beginTimestampMs.
   */
  public long getBeginTimestampMs() {
    return beginTimestampMs_;
  }

  public static final int BEGIN_BEFORE_RUN_TASKS_TIMESTAMP_MS_FIELD_NUMBER = 12;
  private long beginBeforeRunTasksTimestampMs_;
  /**
   * <pre>
   * The before-run tasks start (i.e. running gradle)
   * </pre>
   *
   * <code>optional int64 begin_before_run_tasks_timestamp_ms = 12;</code>
   * @return Whether the beginBeforeRunTasksTimestampMs field is set.
   */
  public boolean hasBeginBeforeRunTasksTimestampMs() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * The before-run tasks start (i.e. running gradle)
   * </pre>
   *
   * <code>optional int64 begin_before_run_tasks_timestamp_ms = 12;</code>
   * @return The beginBeforeRunTasksTimestampMs.
   */
  public long getBeginBeforeRunTasksTimestampMs() {
    return beginBeforeRunTasksTimestampMs_;
  }

  public static final int END_BEFORE_RUN_TASKS_TIMESTAMP_MS_FIELD_NUMBER = 13;
  private long endBeforeRunTasksTimestampMs_;
  /**
   * <pre>
   * End of the before-run tasks
   * </pre>
   *
   * <code>optional int64 end_before_run_tasks_timestamp_ms = 13;</code>
   * @return Whether the endBeforeRunTasksTimestampMs field is set.
   */
  public boolean hasEndBeforeRunTasksTimestampMs() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * End of the before-run tasks
   * </pre>
   *
   * <code>optional int64 end_before_run_tasks_timestamp_ms = 13;</code>
   * @return The endBeforeRunTasksTimestampMs.
   */
  public long getEndBeforeRunTasksTimestampMs() {
    return endBeforeRunTasksTimestampMs_;
  }

  public static final int BEGIN_WAIT_FOR_DEVICE_TIMESTAMP_MS_FIELD_NUMBER = 14;
  private long beginWaitForDeviceTimestampMs_;
  /**
   * <pre>
   * Before launching, we must wait for devices
   * </pre>
   *
   * <code>optional int64 begin_wait_for_device_timestamp_ms = 14;</code>
   * @return Whether the beginWaitForDeviceTimestampMs field is set.
   */
  public boolean hasBeginWaitForDeviceTimestampMs() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * Before launching, we must wait for devices
   * </pre>
   *
   * <code>optional int64 begin_wait_for_device_timestamp_ms = 14;</code>
   * @return The beginWaitForDeviceTimestampMs.
   */
  public long getBeginWaitForDeviceTimestampMs() {
    return beginWaitForDeviceTimestampMs_;
  }

  public static final int END_WAIT_FOR_DEVICE_TIMESTAMP_MS_FIELD_NUMBER = 15;
  private long endWaitForDeviceTimestampMs_;
  /**
   * <pre>
   * All devices are now ready
   * </pre>
   *
   * <code>optional int64 end_wait_for_device_timestamp_ms = 15;</code>
   * @return Whether the endWaitForDeviceTimestampMs field is set.
   */
  public boolean hasEndWaitForDeviceTimestampMs() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * All devices are now ready
   * </pre>
   *
   * <code>optional int64 end_wait_for_device_timestamp_ms = 15;</code>
   * @return The endWaitForDeviceTimestampMs.
   */
  public long getEndWaitForDeviceTimestampMs() {
    return endWaitForDeviceTimestampMs_;
  }

  public static final int BEGIN_LAUNCH_TASKS_TIMESTAMP_MS_FIELD_NUMBER = 16;
  private long beginLaunchTasksTimestampMs_;
  /**
   * <pre>
   * Launch tasks start being executed
   * </pre>
   *
   * <code>optional int64 begin_launch_tasks_timestamp_ms = 16;</code>
   * @return Whether the beginLaunchTasksTimestampMs field is set.
   */
  public boolean hasBeginLaunchTasksTimestampMs() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <pre>
   * Launch tasks start being executed
   * </pre>
   *
   * <code>optional int64 begin_launch_tasks_timestamp_ms = 16;</code>
   * @return The beginLaunchTasksTimestampMs.
   */
  public long getBeginLaunchTasksTimestampMs() {
    return beginLaunchTasksTimestampMs_;
  }

  public static final int END_LAUNCH_TASKS_TIMESTAMP_MS_FIELD_NUMBER = 17;
  private long endLaunchTasksTimestampMs_;
  /**
   * <pre>
   * All launch tasks completed
   * </pre>
   *
   * <code>optional int64 end_launch_tasks_timestamp_ms = 17;</code>
   * @return Whether the endLaunchTasksTimestampMs field is set.
   */
  public boolean hasEndLaunchTasksTimestampMs() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <pre>
   * All launch tasks completed
   * </pre>
   *
   * <code>optional int64 end_launch_tasks_timestamp_ms = 17;</code>
   * @return The endLaunchTasksTimestampMs.
   */
  public long getEndLaunchTasksTimestampMs() {
    return endLaunchTasksTimestampMs_;
  }

  public static final int END_TIMESTAMP_MS_FIELD_NUMBER = 18;
  private long endTimestampMs_;
  /**
   * <pre>
   * The run cycle finished
   * </pre>
   *
   * <code>optional int64 end_timestamp_ms = 18;</code>
   * @return Whether the endTimestampMs field is set.
   */
  public boolean hasEndTimestampMs() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <pre>
   * The run cycle finished
   * </pre>
   *
   * <code>optional int64 end_timestamp_ms = 18;</code>
   * @return The endTimestampMs.
   */
  public long getEndTimestampMs() {
    return endTimestampMs_;
  }

  public static final int DEPLOYED_AS_INSTANT_FIELD_NUMBER = 19;
  private boolean deployedAsInstant_;
  /**
   * <pre>
   * Whether the run configuration was set to deploy as instant
   * </pre>
   *
   * <code>optional bool deployed_as_instant = 19;</code>
   * @return Whether the deployedAsInstant field is set.
   */
  public boolean hasDeployedAsInstant() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <pre>
   * Whether the run configuration was set to deploy as instant
   * </pre>
   *
   * <code>optional bool deployed_as_instant = 19;</code>
   * @return The deployedAsInstant.
   */
  public boolean getDeployedAsInstant() {
    return deployedAsInstant_;
  }

  public static final int DEPLOYED_FROM_BUNDLE_FIELD_NUMBER = 20;
  private boolean deployedFromBundle_;
  /**
   * <pre>
   * Whether the run configuration was set to deploy from app bundle
   * </pre>
   *
   * <code>optional bool deployed_from_bundle = 20;</code>
   * @return Whether the deployedFromBundle field is set.
   */
  public boolean hasDeployedFromBundle() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <pre>
   * Whether the run configuration was set to deploy from app bundle
   * </pre>
   *
   * <code>optional bool deployed_from_bundle = 20;</code>
   * @return The deployedFromBundle.
   */
  public boolean getDeployedFromBundle() {
    return deployedFromBundle_;
  }

  public static final int DEPLOY_FAILURE_ID_FIELD_NUMBER = 21;
  private volatile java.lang.Object deployFailureId_;
  /**
   * <pre>
   * Enum name representing deploy failure reason
   * </pre>
   *
   * <code>optional string deploy_failure_id = 21;</code>
   * @return Whether the deployFailureId field is set.
   */
  public boolean hasDeployFailureId() {
    return ((bitField0_ & 0x00080000) != 0);
  }
  /**
   * <pre>
   * Enum name representing deploy failure reason
   * </pre>
   *
   * <code>optional string deploy_failure_id = 21;</code>
   * @return The deployFailureId.
   */
  public java.lang.String getDeployFailureId() {
    java.lang.Object ref = deployFailureId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        deployFailureId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Enum name representing deploy failure reason
   * </pre>
   *
   * <code>optional string deploy_failure_id = 21;</code>
   * @return The bytes for deployFailureId.
   */
  public com.google.protobuf.ByteString
      getDeployFailureIdBytes() {
    java.lang.Object ref = deployFailureId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deployFailureId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APPLY_CHANGES_FALLBACK_TO_RUN_FIELD_NUMBER = 22;
  private boolean applyChangesFallbackToRun_;
  /**
   * <pre>
   * Whether the user configured AC to fall back to Run
   * </pre>
   *
   * <code>optional bool apply_changes_fallback_to_run = 22;</code>
   * @return Whether the applyChangesFallbackToRun field is set.
   */
  public boolean hasApplyChangesFallbackToRun() {
    return ((bitField0_ & 0x00100000) != 0);
  }
  /**
   * <pre>
   * Whether the user configured AC to fall back to Run
   * </pre>
   *
   * <code>optional bool apply_changes_fallback_to_run = 22;</code>
   * @return The applyChangesFallbackToRun.
   */
  public boolean getApplyChangesFallbackToRun() {
    return applyChangesFallbackToRun_;
  }

  public static final int APPLY_CODE_CHANGES_FALLBACK_TO_RUN_FIELD_NUMBER = 23;
  private boolean applyCodeChangesFallbackToRun_;
  /**
   * <pre>
   * Whether the user configured ACC to fall back to Run
   * </pre>
   *
   * <code>optional bool apply_code_changes_fallback_to_run = 23;</code>
   * @return Whether the applyCodeChangesFallbackToRun field is set.
   */
  public boolean hasApplyCodeChangesFallbackToRun() {
    return ((bitField0_ & 0x00200000) != 0);
  }
  /**
   * <pre>
   * Whether the user configured ACC to fall back to Run
   * </pre>
   *
   * <code>optional bool apply_code_changes_fallback_to_run = 23;</code>
   * @return The applyCodeChangesFallbackToRun.
   */
  public boolean getApplyCodeChangesFallbackToRun() {
    return applyCodeChangesFallbackToRun_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, status_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, executor_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(3, debuggable_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBool(4, instantRunEnabled_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeBool(5, applyChanges_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeBool(6, userSelectedTarget_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeBool(7, launchedDevices_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeInt32(8, deviceCount_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeBool(9, partial_);
    }
    for (int i = 0; i < launchTaskDetail_.size(); i++) {
      output.writeMessage(10, launchTaskDetail_.get(i));
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeInt64(11, beginTimestampMs_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeInt64(12, beginBeforeRunTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeInt64(13, endBeforeRunTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      output.writeInt64(14, beginWaitForDeviceTimestampMs_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      output.writeInt64(15, endWaitForDeviceTimestampMs_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      output.writeInt64(16, beginLaunchTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      output.writeInt64(17, endLaunchTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      output.writeInt64(18, endTimestampMs_);
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      output.writeBool(19, deployedAsInstant_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      output.writeBool(20, deployedFromBundle_);
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 21, deployFailureId_);
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      output.writeBool(22, applyChangesFallbackToRun_);
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      output.writeBool(23, applyCodeChangesFallbackToRun_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, executor_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, debuggable_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, instantRunEnabled_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, applyChanges_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, userSelectedTarget_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, launchedDevices_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, deviceCount_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, partial_);
    }
    for (int i = 0; i < launchTaskDetail_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, launchTaskDetail_.get(i));
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, beginTimestampMs_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(12, beginBeforeRunTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(13, endBeforeRunTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(14, beginWaitForDeviceTimestampMs_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(15, endWaitForDeviceTimestampMs_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(16, beginLaunchTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(17, endLaunchTasksTimestampMs_);
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(18, endTimestampMs_);
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(19, deployedAsInstant_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(20, deployedFromBundle_);
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, deployFailureId_);
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(22, applyChangesFallbackToRun_);
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(23, applyCodeChangesFallbackToRun_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.RunEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.RunEvent other = (com.google.wireless.android.sdk.stats.RunEvent) obj;

    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (status_ != other.status_) return false;
    }
    if (hasExecutor() != other.hasExecutor()) return false;
    if (hasExecutor()) {
      if (!getExecutor()
          .equals(other.getExecutor())) return false;
    }
    if (hasDebuggable() != other.hasDebuggable()) return false;
    if (hasDebuggable()) {
      if (getDebuggable()
          != other.getDebuggable()) return false;
    }
    if (hasInstantRunEnabled() != other.hasInstantRunEnabled()) return false;
    if (hasInstantRunEnabled()) {
      if (getInstantRunEnabled()
          != other.getInstantRunEnabled()) return false;
    }
    if (hasApplyChanges() != other.hasApplyChanges()) return false;
    if (hasApplyChanges()) {
      if (getApplyChanges()
          != other.getApplyChanges()) return false;
    }
    if (hasUserSelectedTarget() != other.hasUserSelectedTarget()) return false;
    if (hasUserSelectedTarget()) {
      if (getUserSelectedTarget()
          != other.getUserSelectedTarget()) return false;
    }
    if (hasLaunchedDevices() != other.hasLaunchedDevices()) return false;
    if (hasLaunchedDevices()) {
      if (getLaunchedDevices()
          != other.getLaunchedDevices()) return false;
    }
    if (hasDeviceCount() != other.hasDeviceCount()) return false;
    if (hasDeviceCount()) {
      if (getDeviceCount()
          != other.getDeviceCount()) return false;
    }
    if (hasPartial() != other.hasPartial()) return false;
    if (hasPartial()) {
      if (getPartial()
          != other.getPartial()) return false;
    }
    if (!getLaunchTaskDetailList()
        .equals(other.getLaunchTaskDetailList())) return false;
    if (hasBeginTimestampMs() != other.hasBeginTimestampMs()) return false;
    if (hasBeginTimestampMs()) {
      if (getBeginTimestampMs()
          != other.getBeginTimestampMs()) return false;
    }
    if (hasBeginBeforeRunTasksTimestampMs() != other.hasBeginBeforeRunTasksTimestampMs()) return false;
    if (hasBeginBeforeRunTasksTimestampMs()) {
      if (getBeginBeforeRunTasksTimestampMs()
          != other.getBeginBeforeRunTasksTimestampMs()) return false;
    }
    if (hasEndBeforeRunTasksTimestampMs() != other.hasEndBeforeRunTasksTimestampMs()) return false;
    if (hasEndBeforeRunTasksTimestampMs()) {
      if (getEndBeforeRunTasksTimestampMs()
          != other.getEndBeforeRunTasksTimestampMs()) return false;
    }
    if (hasBeginWaitForDeviceTimestampMs() != other.hasBeginWaitForDeviceTimestampMs()) return false;
    if (hasBeginWaitForDeviceTimestampMs()) {
      if (getBeginWaitForDeviceTimestampMs()
          != other.getBeginWaitForDeviceTimestampMs()) return false;
    }
    if (hasEndWaitForDeviceTimestampMs() != other.hasEndWaitForDeviceTimestampMs()) return false;
    if (hasEndWaitForDeviceTimestampMs()) {
      if (getEndWaitForDeviceTimestampMs()
          != other.getEndWaitForDeviceTimestampMs()) return false;
    }
    if (hasBeginLaunchTasksTimestampMs() != other.hasBeginLaunchTasksTimestampMs()) return false;
    if (hasBeginLaunchTasksTimestampMs()) {
      if (getBeginLaunchTasksTimestampMs()
          != other.getBeginLaunchTasksTimestampMs()) return false;
    }
    if (hasEndLaunchTasksTimestampMs() != other.hasEndLaunchTasksTimestampMs()) return false;
    if (hasEndLaunchTasksTimestampMs()) {
      if (getEndLaunchTasksTimestampMs()
          != other.getEndLaunchTasksTimestampMs()) return false;
    }
    if (hasEndTimestampMs() != other.hasEndTimestampMs()) return false;
    if (hasEndTimestampMs()) {
      if (getEndTimestampMs()
          != other.getEndTimestampMs()) return false;
    }
    if (hasDeployedAsInstant() != other.hasDeployedAsInstant()) return false;
    if (hasDeployedAsInstant()) {
      if (getDeployedAsInstant()
          != other.getDeployedAsInstant()) return false;
    }
    if (hasDeployedFromBundle() != other.hasDeployedFromBundle()) return false;
    if (hasDeployedFromBundle()) {
      if (getDeployedFromBundle()
          != other.getDeployedFromBundle()) return false;
    }
    if (hasDeployFailureId() != other.hasDeployFailureId()) return false;
    if (hasDeployFailureId()) {
      if (!getDeployFailureId()
          .equals(other.getDeployFailureId())) return false;
    }
    if (hasApplyChangesFallbackToRun() != other.hasApplyChangesFallbackToRun()) return false;
    if (hasApplyChangesFallbackToRun()) {
      if (getApplyChangesFallbackToRun()
          != other.getApplyChangesFallbackToRun()) return false;
    }
    if (hasApplyCodeChangesFallbackToRun() != other.hasApplyCodeChangesFallbackToRun()) return false;
    if (hasApplyCodeChangesFallbackToRun()) {
      if (getApplyCodeChangesFallbackToRun()
          != other.getApplyCodeChangesFallbackToRun()) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
    }
    if (hasExecutor()) {
      hash = (37 * hash) + EXECUTOR_FIELD_NUMBER;
      hash = (53 * hash) + getExecutor().hashCode();
    }
    if (hasDebuggable()) {
      hash = (37 * hash) + DEBUGGABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebuggable());
    }
    if (hasInstantRunEnabled()) {
      hash = (37 * hash) + INSTANT_RUN_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInstantRunEnabled());
    }
    if (hasApplyChanges()) {
      hash = (37 * hash) + APPLY_CHANGES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getApplyChanges());
    }
    if (hasUserSelectedTarget()) {
      hash = (37 * hash) + USER_SELECTED_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUserSelectedTarget());
    }
    if (hasLaunchedDevices()) {
      hash = (37 * hash) + LAUNCHED_DEVICES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLaunchedDevices());
    }
    if (hasDeviceCount()) {
      hash = (37 * hash) + DEVICE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCount();
    }
    if (hasPartial()) {
      hash = (37 * hash) + PARTIAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPartial());
    }
    if (getLaunchTaskDetailCount() > 0) {
      hash = (37 * hash) + LAUNCH_TASK_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getLaunchTaskDetailList().hashCode();
    }
    if (hasBeginTimestampMs()) {
      hash = (37 * hash) + BEGIN_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBeginTimestampMs());
    }
    if (hasBeginBeforeRunTasksTimestampMs()) {
      hash = (37 * hash) + BEGIN_BEFORE_RUN_TASKS_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBeginBeforeRunTasksTimestampMs());
    }
    if (hasEndBeforeRunTasksTimestampMs()) {
      hash = (37 * hash) + END_BEFORE_RUN_TASKS_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndBeforeRunTasksTimestampMs());
    }
    if (hasBeginWaitForDeviceTimestampMs()) {
      hash = (37 * hash) + BEGIN_WAIT_FOR_DEVICE_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBeginWaitForDeviceTimestampMs());
    }
    if (hasEndWaitForDeviceTimestampMs()) {
      hash = (37 * hash) + END_WAIT_FOR_DEVICE_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndWaitForDeviceTimestampMs());
    }
    if (hasBeginLaunchTasksTimestampMs()) {
      hash = (37 * hash) + BEGIN_LAUNCH_TASKS_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBeginLaunchTasksTimestampMs());
    }
    if (hasEndLaunchTasksTimestampMs()) {
      hash = (37 * hash) + END_LAUNCH_TASKS_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndLaunchTasksTimestampMs());
    }
    if (hasEndTimestampMs()) {
      hash = (37 * hash) + END_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTimestampMs());
    }
    if (hasDeployedAsInstant()) {
      hash = (37 * hash) + DEPLOYED_AS_INSTANT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDeployedAsInstant());
    }
    if (hasDeployedFromBundle()) {
      hash = (37 * hash) + DEPLOYED_FROM_BUNDLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDeployedFromBundle());
    }
    if (hasDeployFailureId()) {
      hash = (37 * hash) + DEPLOY_FAILURE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeployFailureId().hashCode();
    }
    if (hasApplyChangesFallbackToRun()) {
      hash = (37 * hash) + APPLY_CHANGES_FALLBACK_TO_RUN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getApplyChangesFallbackToRun());
    }
    if (hasApplyCodeChangesFallbackToRun()) {
      hash = (37 * hash) + APPLY_CODE_CHANGES_FALLBACK_TO_RUN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getApplyCodeChangesFallbackToRun());
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.RunEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.RunEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.RunEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.RunEvent)
      com.google.wireless.android.sdk.stats.RunEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_RunEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_RunEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.RunEvent.class, com.google.wireless.android.sdk.stats.RunEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.RunEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getLaunchTaskDetailFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      status_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      executor_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      debuggable_ = false;
      bitField0_ = (bitField0_ & ~0x00000004);
      instantRunEnabled_ = false;
      bitField0_ = (bitField0_ & ~0x00000008);
      applyChanges_ = false;
      bitField0_ = (bitField0_ & ~0x00000010);
      userSelectedTarget_ = false;
      bitField0_ = (bitField0_ & ~0x00000020);
      launchedDevices_ = false;
      bitField0_ = (bitField0_ & ~0x00000040);
      deviceCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      partial_ = false;
      bitField0_ = (bitField0_ & ~0x00000100);
      if (launchTaskDetailBuilder_ == null) {
        launchTaskDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
      } else {
        launchTaskDetailBuilder_.clear();
      }
      beginTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000400);
      beginBeforeRunTasksTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000800);
      endBeforeRunTasksTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00001000);
      beginWaitForDeviceTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00002000);
      endWaitForDeviceTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00004000);
      beginLaunchTasksTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00008000);
      endLaunchTasksTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00010000);
      endTimestampMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00020000);
      deployedAsInstant_ = false;
      bitField0_ = (bitField0_ & ~0x00040000);
      deployedFromBundle_ = false;
      bitField0_ = (bitField0_ & ~0x00080000);
      deployFailureId_ = "";
      bitField0_ = (bitField0_ & ~0x00100000);
      applyChangesFallbackToRun_ = false;
      bitField0_ = (bitField0_ & ~0x00200000);
      applyCodeChangesFallbackToRun_ = false;
      bitField0_ = (bitField0_ & ~0x00400000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_RunEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.RunEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.RunEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.RunEvent build() {
      com.google.wireless.android.sdk.stats.RunEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.RunEvent buildPartial() {
      com.google.wireless.android.sdk.stats.RunEvent result = new com.google.wireless.android.sdk.stats.RunEvent(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.status_ = status_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.executor_ = executor_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.debuggable_ = debuggable_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.instantRunEnabled_ = instantRunEnabled_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.applyChanges_ = applyChanges_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.userSelectedTarget_ = userSelectedTarget_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.launchedDevices_ = launchedDevices_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.deviceCount_ = deviceCount_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.partial_ = partial_;
        to_bitField0_ |= 0x00000100;
      }
      if (launchTaskDetailBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          launchTaskDetail_ = java.util.Collections.unmodifiableList(launchTaskDetail_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.launchTaskDetail_ = launchTaskDetail_;
      } else {
        result.launchTaskDetail_ = launchTaskDetailBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.beginTimestampMs_ = beginTimestampMs_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.beginBeforeRunTasksTimestampMs_ = beginBeforeRunTasksTimestampMs_;
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.endBeforeRunTasksTimestampMs_ = endBeforeRunTasksTimestampMs_;
        to_bitField0_ |= 0x00000800;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.beginWaitForDeviceTimestampMs_ = beginWaitForDeviceTimestampMs_;
        to_bitField0_ |= 0x00001000;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.endWaitForDeviceTimestampMs_ = endWaitForDeviceTimestampMs_;
        to_bitField0_ |= 0x00002000;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.beginLaunchTasksTimestampMs_ = beginLaunchTasksTimestampMs_;
        to_bitField0_ |= 0x00004000;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.endLaunchTasksTimestampMs_ = endLaunchTasksTimestampMs_;
        to_bitField0_ |= 0x00008000;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.endTimestampMs_ = endTimestampMs_;
        to_bitField0_ |= 0x00010000;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.deployedAsInstant_ = deployedAsInstant_;
        to_bitField0_ |= 0x00020000;
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.deployedFromBundle_ = deployedFromBundle_;
        to_bitField0_ |= 0x00040000;
      }
      if (((from_bitField0_ & 0x00100000) != 0)) {
        to_bitField0_ |= 0x00080000;
      }
      result.deployFailureId_ = deployFailureId_;
      if (((from_bitField0_ & 0x00200000) != 0)) {
        result.applyChangesFallbackToRun_ = applyChangesFallbackToRun_;
        to_bitField0_ |= 0x00100000;
      }
      if (((from_bitField0_ & 0x00400000) != 0)) {
        result.applyCodeChangesFallbackToRun_ = applyCodeChangesFallbackToRun_;
        to_bitField0_ |= 0x00200000;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.RunEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.RunEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.RunEvent other) {
      if (other == com.google.wireless.android.sdk.stats.RunEvent.getDefaultInstance()) return this;
      if (other.hasStatus()) {
        setStatus(other.getStatus());
      }
      if (other.hasExecutor()) {
        bitField0_ |= 0x00000002;
        executor_ = other.executor_;
        onChanged();
      }
      if (other.hasDebuggable()) {
        setDebuggable(other.getDebuggable());
      }
      if (other.hasInstantRunEnabled()) {
        setInstantRunEnabled(other.getInstantRunEnabled());
      }
      if (other.hasApplyChanges()) {
        setApplyChanges(other.getApplyChanges());
      }
      if (other.hasUserSelectedTarget()) {
        setUserSelectedTarget(other.getUserSelectedTarget());
      }
      if (other.hasLaunchedDevices()) {
        setLaunchedDevices(other.getLaunchedDevices());
      }
      if (other.hasDeviceCount()) {
        setDeviceCount(other.getDeviceCount());
      }
      if (other.hasPartial()) {
        setPartial(other.getPartial());
      }
      if (launchTaskDetailBuilder_ == null) {
        if (!other.launchTaskDetail_.isEmpty()) {
          if (launchTaskDetail_.isEmpty()) {
            launchTaskDetail_ = other.launchTaskDetail_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureLaunchTaskDetailIsMutable();
            launchTaskDetail_.addAll(other.launchTaskDetail_);
          }
          onChanged();
        }
      } else {
        if (!other.launchTaskDetail_.isEmpty()) {
          if (launchTaskDetailBuilder_.isEmpty()) {
            launchTaskDetailBuilder_.dispose();
            launchTaskDetailBuilder_ = null;
            launchTaskDetail_ = other.launchTaskDetail_;
            bitField0_ = (bitField0_ & ~0x00000200);
            launchTaskDetailBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLaunchTaskDetailFieldBuilder() : null;
          } else {
            launchTaskDetailBuilder_.addAllMessages(other.launchTaskDetail_);
          }
        }
      }
      if (other.hasBeginTimestampMs()) {
        setBeginTimestampMs(other.getBeginTimestampMs());
      }
      if (other.hasBeginBeforeRunTasksTimestampMs()) {
        setBeginBeforeRunTasksTimestampMs(other.getBeginBeforeRunTasksTimestampMs());
      }
      if (other.hasEndBeforeRunTasksTimestampMs()) {
        setEndBeforeRunTasksTimestampMs(other.getEndBeforeRunTasksTimestampMs());
      }
      if (other.hasBeginWaitForDeviceTimestampMs()) {
        setBeginWaitForDeviceTimestampMs(other.getBeginWaitForDeviceTimestampMs());
      }
      if (other.hasEndWaitForDeviceTimestampMs()) {
        setEndWaitForDeviceTimestampMs(other.getEndWaitForDeviceTimestampMs());
      }
      if (other.hasBeginLaunchTasksTimestampMs()) {
        setBeginLaunchTasksTimestampMs(other.getBeginLaunchTasksTimestampMs());
      }
      if (other.hasEndLaunchTasksTimestampMs()) {
        setEndLaunchTasksTimestampMs(other.getEndLaunchTasksTimestampMs());
      }
      if (other.hasEndTimestampMs()) {
        setEndTimestampMs(other.getEndTimestampMs());
      }
      if (other.hasDeployedAsInstant()) {
        setDeployedAsInstant(other.getDeployedAsInstant());
      }
      if (other.hasDeployedFromBundle()) {
        setDeployedFromBundle(other.getDeployedFromBundle());
      }
      if (other.hasDeployFailureId()) {
        bitField0_ |= 0x00100000;
        deployFailureId_ = other.deployFailureId_;
        onChanged();
      }
      if (other.hasApplyChangesFallbackToRun()) {
        setApplyChangesFallbackToRun(other.getApplyChangesFallbackToRun());
      }
      if (other.hasApplyCodeChangesFallbackToRun()) {
        setApplyCodeChangesFallbackToRun(other.getApplyCodeChangesFallbackToRun());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.RunEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.RunEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <code>optional .android_studio.RunEvent.Status status = 1;</code>
     * @return Whether the status field is set.
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .android_studio.RunEvent.Status status = 1;</code>
     * @return The status.
     */
    public com.google.wireless.android.sdk.stats.RunEvent.Status getStatus() {
      @SuppressWarnings("deprecation")
      com.google.wireless.android.sdk.stats.RunEvent.Status result = com.google.wireless.android.sdk.stats.RunEvent.Status.valueOf(status_);
      return result == null ? com.google.wireless.android.sdk.stats.RunEvent.Status.UNKNOWN_STATUS : result;
    }
    /**
     * <code>optional .android_studio.RunEvent.Status status = 1;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.google.wireless.android.sdk.stats.RunEvent.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.RunEvent.Status status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      status_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object executor_ = "";
    /**
     * <pre>
     * The executor used, from Executor::getId()
     * </pre>
     *
     * <code>optional string executor = 2;</code>
     * @return Whether the executor field is set.
     */
    public boolean hasExecutor() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The executor used, from Executor::getId()
     * </pre>
     *
     * <code>optional string executor = 2;</code>
     * @return The executor.
     */
    public java.lang.String getExecutor() {
      java.lang.Object ref = executor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          executor_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The executor used, from Executor::getId()
     * </pre>
     *
     * <code>optional string executor = 2;</code>
     * @return The bytes for executor.
     */
    public com.google.protobuf.ByteString
        getExecutorBytes() {
      java.lang.Object ref = executor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The executor used, from Executor::getId()
     * </pre>
     *
     * <code>optional string executor = 2;</code>
     * @param value The executor to set.
     * @return This builder for chaining.
     */
    public Builder setExecutor(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      executor_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The executor used, from Executor::getId()
     * </pre>
     *
     * <code>optional string executor = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExecutor() {
      bitField0_ = (bitField0_ & ~0x00000002);
      executor_ = getDefaultInstance().getExecutor();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The executor used, from Executor::getId()
     * </pre>
     *
     * <code>optional string executor = 2;</code>
     * @param value The bytes for executor to set.
     * @return This builder for chaining.
     */
    public Builder setExecutorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      executor_ = value;
      onChanged();
      return this;
    }

    private boolean debuggable_ ;
    /**
     * <pre>
     * Whether the app is debuggable
     * </pre>
     *
     * <code>optional bool debuggable = 3;</code>
     * @return Whether the debuggable field is set.
     */
    public boolean hasDebuggable() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Whether the app is debuggable
     * </pre>
     *
     * <code>optional bool debuggable = 3;</code>
     * @return The debuggable.
     */
    public boolean getDebuggable() {
      return debuggable_;
    }
    /**
     * <pre>
     * Whether the app is debuggable
     * </pre>
     *
     * <code>optional bool debuggable = 3;</code>
     * @param value The debuggable to set.
     * @return This builder for chaining.
     */
    public Builder setDebuggable(boolean value) {
      bitField0_ |= 0x00000004;
      debuggable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the app is debuggable
     * </pre>
     *
     * <code>optional bool debuggable = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDebuggable() {
      bitField0_ = (bitField0_ & ~0x00000004);
      debuggable_ = false;
      onChanged();
      return this;
    }

    private boolean instantRunEnabled_ ;
    /**
     * <pre>
     * Whether instant run is enabled
     * </pre>
     *
     * <code>optional bool instant_run_enabled = 4;</code>
     * @return Whether the instantRunEnabled field is set.
     */
    public boolean hasInstantRunEnabled() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Whether instant run is enabled
     * </pre>
     *
     * <code>optional bool instant_run_enabled = 4;</code>
     * @return The instantRunEnabled.
     */
    public boolean getInstantRunEnabled() {
      return instantRunEnabled_;
    }
    /**
     * <pre>
     * Whether instant run is enabled
     * </pre>
     *
     * <code>optional bool instant_run_enabled = 4;</code>
     * @param value The instantRunEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setInstantRunEnabled(boolean value) {
      bitField0_ |= 0x00000008;
      instantRunEnabled_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether instant run is enabled
     * </pre>
     *
     * <code>optional bool instant_run_enabled = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstantRunEnabled() {
      bitField0_ = (bitField0_ & ~0x00000008);
      instantRunEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean applyChanges_ ;
    /**
     * <pre>
     * Whether the apply changes button was used
     * </pre>
     *
     * <code>optional bool apply_changes = 5;</code>
     * @return Whether the applyChanges field is set.
     */
    public boolean hasApplyChanges() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Whether the apply changes button was used
     * </pre>
     *
     * <code>optional bool apply_changes = 5;</code>
     * @return The applyChanges.
     */
    public boolean getApplyChanges() {
      return applyChanges_;
    }
    /**
     * <pre>
     * Whether the apply changes button was used
     * </pre>
     *
     * <code>optional bool apply_changes = 5;</code>
     * @param value The applyChanges to set.
     * @return This builder for chaining.
     */
    public Builder setApplyChanges(boolean value) {
      bitField0_ |= 0x00000010;
      applyChanges_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the apply changes button was used
     * </pre>
     *
     * <code>optional bool apply_changes = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplyChanges() {
      bitField0_ = (bitField0_ & ~0x00000010);
      applyChanges_ = false;
      onChanged();
      return this;
    }

    private boolean userSelectedTarget_ ;
    /**
     * <pre>
     * Whether the device dialog was open
     * </pre>
     *
     * <code>optional bool user_selected_target = 6;</code>
     * @return Whether the userSelectedTarget field is set.
     */
    public boolean hasUserSelectedTarget() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Whether the device dialog was open
     * </pre>
     *
     * <code>optional bool user_selected_target = 6;</code>
     * @return The userSelectedTarget.
     */
    public boolean getUserSelectedTarget() {
      return userSelectedTarget_;
    }
    /**
     * <pre>
     * Whether the device dialog was open
     * </pre>
     *
     * <code>optional bool user_selected_target = 6;</code>
     * @param value The userSelectedTarget to set.
     * @return This builder for chaining.
     */
    public Builder setUserSelectedTarget(boolean value) {
      bitField0_ |= 0x00000020;
      userSelectedTarget_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the device dialog was open
     * </pre>
     *
     * <code>optional bool user_selected_target = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserSelectedTarget() {
      bitField0_ = (bitField0_ & ~0x00000020);
      userSelectedTarget_ = false;
      onChanged();
      return this;
    }

    private boolean launchedDevices_ ;
    /**
     * <pre>
     * Weather a device, like the emulator, was launched
     * </pre>
     *
     * <code>optional bool launched_devices = 7;</code>
     * @return Whether the launchedDevices field is set.
     */
    public boolean hasLaunchedDevices() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Weather a device, like the emulator, was launched
     * </pre>
     *
     * <code>optional bool launched_devices = 7;</code>
     * @return The launchedDevices.
     */
    public boolean getLaunchedDevices() {
      return launchedDevices_;
    }
    /**
     * <pre>
     * Weather a device, like the emulator, was launched
     * </pre>
     *
     * <code>optional bool launched_devices = 7;</code>
     * @param value The launchedDevices to set.
     * @return This builder for chaining.
     */
    public Builder setLaunchedDevices(boolean value) {
      bitField0_ |= 0x00000040;
      launchedDevices_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Weather a device, like the emulator, was launched
     * </pre>
     *
     * <code>optional bool launched_devices = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearLaunchedDevices() {
      bitField0_ = (bitField0_ & ~0x00000040);
      launchedDevices_ = false;
      onChanged();
      return this;
    }

    private int deviceCount_ ;
    /**
     * <pre>
     * How many devices were targeted
     * </pre>
     *
     * <code>optional int32 device_count = 8;</code>
     * @return Whether the deviceCount field is set.
     */
    public boolean hasDeviceCount() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * How many devices were targeted
     * </pre>
     *
     * <code>optional int32 device_count = 8;</code>
     * @return The deviceCount.
     */
    public int getDeviceCount() {
      return deviceCount_;
    }
    /**
     * <pre>
     * How many devices were targeted
     * </pre>
     *
     * <code>optional int32 device_count = 8;</code>
     * @param value The deviceCount to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceCount(int value) {
      bitField0_ |= 0x00000080;
      deviceCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How many devices were targeted
     * </pre>
     *
     * <code>optional int32 device_count = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeviceCount() {
      bitField0_ = (bitField0_ & ~0x00000080);
      deviceCount_ = 0;
      onChanged();
      return this;
    }

    private boolean partial_ ;
    /**
     * <pre>
     * True if this run event started mid-way
     * </pre>
     *
     * <code>optional bool partial = 9;</code>
     * @return Whether the partial field is set.
     */
    public boolean hasPartial() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * True if this run event started mid-way
     * </pre>
     *
     * <code>optional bool partial = 9;</code>
     * @return The partial.
     */
    public boolean getPartial() {
      return partial_;
    }
    /**
     * <pre>
     * True if this run event started mid-way
     * </pre>
     *
     * <code>optional bool partial = 9;</code>
     * @param value The partial to set.
     * @return This builder for chaining.
     */
    public Builder setPartial(boolean value) {
      bitField0_ |= 0x00000100;
      partial_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if this run event started mid-way
     * </pre>
     *
     * <code>optional bool partial = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearPartial() {
      bitField0_ = (bitField0_ & ~0x00000100);
      partial_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.LaunchTaskDetail> launchTaskDetail_ =
      java.util.Collections.emptyList();
    private void ensureLaunchTaskDetailIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        launchTaskDetail_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.LaunchTaskDetail>(launchTaskDetail_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LaunchTaskDetail, com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder, com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder> launchTaskDetailBuilder_;

    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.LaunchTaskDetail> getLaunchTaskDetailList() {
      if (launchTaskDetailBuilder_ == null) {
        return java.util.Collections.unmodifiableList(launchTaskDetail_);
      } else {
        return launchTaskDetailBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public int getLaunchTaskDetailCount() {
      if (launchTaskDetailBuilder_ == null) {
        return launchTaskDetail_.size();
      } else {
        return launchTaskDetailBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public com.google.wireless.android.sdk.stats.LaunchTaskDetail getLaunchTaskDetail(int index) {
      if (launchTaskDetailBuilder_ == null) {
        return launchTaskDetail_.get(index);
      } else {
        return launchTaskDetailBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder setLaunchTaskDetail(
        int index, com.google.wireless.android.sdk.stats.LaunchTaskDetail value) {
      if (launchTaskDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.set(index, value);
        onChanged();
      } else {
        launchTaskDetailBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder setLaunchTaskDetail(
        int index, com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder builderForValue) {
      if (launchTaskDetailBuilder_ == null) {
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.set(index, builderForValue.build());
        onChanged();
      } else {
        launchTaskDetailBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder addLaunchTaskDetail(com.google.wireless.android.sdk.stats.LaunchTaskDetail value) {
      if (launchTaskDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.add(value);
        onChanged();
      } else {
        launchTaskDetailBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder addLaunchTaskDetail(
        int index, com.google.wireless.android.sdk.stats.LaunchTaskDetail value) {
      if (launchTaskDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.add(index, value);
        onChanged();
      } else {
        launchTaskDetailBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder addLaunchTaskDetail(
        com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder builderForValue) {
      if (launchTaskDetailBuilder_ == null) {
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.add(builderForValue.build());
        onChanged();
      } else {
        launchTaskDetailBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder addLaunchTaskDetail(
        int index, com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder builderForValue) {
      if (launchTaskDetailBuilder_ == null) {
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.add(index, builderForValue.build());
        onChanged();
      } else {
        launchTaskDetailBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder addAllLaunchTaskDetail(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.LaunchTaskDetail> values) {
      if (launchTaskDetailBuilder_ == null) {
        ensureLaunchTaskDetailIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, launchTaskDetail_);
        onChanged();
      } else {
        launchTaskDetailBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder clearLaunchTaskDetail() {
      if (launchTaskDetailBuilder_ == null) {
        launchTaskDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        launchTaskDetailBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public Builder removeLaunchTaskDetail(int index) {
      if (launchTaskDetailBuilder_ == null) {
        ensureLaunchTaskDetailIsMutable();
        launchTaskDetail_.remove(index);
        onChanged();
      } else {
        launchTaskDetailBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder getLaunchTaskDetailBuilder(
        int index) {
      return getLaunchTaskDetailFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder getLaunchTaskDetailOrBuilder(
        int index) {
      if (launchTaskDetailBuilder_ == null) {
        return launchTaskDetail_.get(index);  } else {
        return launchTaskDetailBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder>
         getLaunchTaskDetailOrBuilderList() {
      if (launchTaskDetailBuilder_ != null) {
        return launchTaskDetailBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(launchTaskDetail_);
      }
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder addLaunchTaskDetailBuilder() {
      return getLaunchTaskDetailFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.LaunchTaskDetail.getDefaultInstance());
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder addLaunchTaskDetailBuilder(
        int index) {
      return getLaunchTaskDetailFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.LaunchTaskDetail.getDefaultInstance());
    }
    /**
     * <pre>
     * All the launch tasks executed during deploy
     * </pre>
     *
     * <code>repeated .android_studio.LaunchTaskDetail launch_task_detail = 10;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder>
         getLaunchTaskDetailBuilderList() {
      return getLaunchTaskDetailFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LaunchTaskDetail, com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder, com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder>
        getLaunchTaskDetailFieldBuilder() {
      if (launchTaskDetailBuilder_ == null) {
        launchTaskDetailBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.LaunchTaskDetail, com.google.wireless.android.sdk.stats.LaunchTaskDetail.Builder, com.google.wireless.android.sdk.stats.LaunchTaskDetailOrBuilder>(
                launchTaskDetail_,
                ((bitField0_ & 0x00000200) != 0),
                getParentForChildren(),
                isClean());
        launchTaskDetail_ = null;
      }
      return launchTaskDetailBuilder_;
    }

    private long beginTimestampMs_ ;
    /**
     * <pre>
     * Timestamps in expected order
     * The run cycle begins
     * </pre>
     *
     * <code>optional int64 begin_timestamp_ms = 11;</code>
     * @return Whether the beginTimestampMs field is set.
     */
    public boolean hasBeginTimestampMs() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Timestamps in expected order
     * The run cycle begins
     * </pre>
     *
     * <code>optional int64 begin_timestamp_ms = 11;</code>
     * @return The beginTimestampMs.
     */
    public long getBeginTimestampMs() {
      return beginTimestampMs_;
    }
    /**
     * <pre>
     * Timestamps in expected order
     * The run cycle begins
     * </pre>
     *
     * <code>optional int64 begin_timestamp_ms = 11;</code>
     * @param value The beginTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setBeginTimestampMs(long value) {
      bitField0_ |= 0x00000400;
      beginTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timestamps in expected order
     * The run cycle begins
     * </pre>
     *
     * <code>optional int64 begin_timestamp_ms = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearBeginTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000400);
      beginTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long beginBeforeRunTasksTimestampMs_ ;
    /**
     * <pre>
     * The before-run tasks start (i.e. running gradle)
     * </pre>
     *
     * <code>optional int64 begin_before_run_tasks_timestamp_ms = 12;</code>
     * @return Whether the beginBeforeRunTasksTimestampMs field is set.
     */
    public boolean hasBeginBeforeRunTasksTimestampMs() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * The before-run tasks start (i.e. running gradle)
     * </pre>
     *
     * <code>optional int64 begin_before_run_tasks_timestamp_ms = 12;</code>
     * @return The beginBeforeRunTasksTimestampMs.
     */
    public long getBeginBeforeRunTasksTimestampMs() {
      return beginBeforeRunTasksTimestampMs_;
    }
    /**
     * <pre>
     * The before-run tasks start (i.e. running gradle)
     * </pre>
     *
     * <code>optional int64 begin_before_run_tasks_timestamp_ms = 12;</code>
     * @param value The beginBeforeRunTasksTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setBeginBeforeRunTasksTimestampMs(long value) {
      bitField0_ |= 0x00000800;
      beginBeforeRunTasksTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The before-run tasks start (i.e. running gradle)
     * </pre>
     *
     * <code>optional int64 begin_before_run_tasks_timestamp_ms = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearBeginBeforeRunTasksTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000800);
      beginBeforeRunTasksTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long endBeforeRunTasksTimestampMs_ ;
    /**
     * <pre>
     * End of the before-run tasks
     * </pre>
     *
     * <code>optional int64 end_before_run_tasks_timestamp_ms = 13;</code>
     * @return Whether the endBeforeRunTasksTimestampMs field is set.
     */
    public boolean hasEndBeforeRunTasksTimestampMs() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * End of the before-run tasks
     * </pre>
     *
     * <code>optional int64 end_before_run_tasks_timestamp_ms = 13;</code>
     * @return The endBeforeRunTasksTimestampMs.
     */
    public long getEndBeforeRunTasksTimestampMs() {
      return endBeforeRunTasksTimestampMs_;
    }
    /**
     * <pre>
     * End of the before-run tasks
     * </pre>
     *
     * <code>optional int64 end_before_run_tasks_timestamp_ms = 13;</code>
     * @param value The endBeforeRunTasksTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setEndBeforeRunTasksTimestampMs(long value) {
      bitField0_ |= 0x00001000;
      endBeforeRunTasksTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * End of the before-run tasks
     * </pre>
     *
     * <code>optional int64 end_before_run_tasks_timestamp_ms = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndBeforeRunTasksTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00001000);
      endBeforeRunTasksTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long beginWaitForDeviceTimestampMs_ ;
    /**
     * <pre>
     * Before launching, we must wait for devices
     * </pre>
     *
     * <code>optional int64 begin_wait_for_device_timestamp_ms = 14;</code>
     * @return Whether the beginWaitForDeviceTimestampMs field is set.
     */
    public boolean hasBeginWaitForDeviceTimestampMs() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Before launching, we must wait for devices
     * </pre>
     *
     * <code>optional int64 begin_wait_for_device_timestamp_ms = 14;</code>
     * @return The beginWaitForDeviceTimestampMs.
     */
    public long getBeginWaitForDeviceTimestampMs() {
      return beginWaitForDeviceTimestampMs_;
    }
    /**
     * <pre>
     * Before launching, we must wait for devices
     * </pre>
     *
     * <code>optional int64 begin_wait_for_device_timestamp_ms = 14;</code>
     * @param value The beginWaitForDeviceTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setBeginWaitForDeviceTimestampMs(long value) {
      bitField0_ |= 0x00002000;
      beginWaitForDeviceTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Before launching, we must wait for devices
     * </pre>
     *
     * <code>optional int64 begin_wait_for_device_timestamp_ms = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearBeginWaitForDeviceTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00002000);
      beginWaitForDeviceTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long endWaitForDeviceTimestampMs_ ;
    /**
     * <pre>
     * All devices are now ready
     * </pre>
     *
     * <code>optional int64 end_wait_for_device_timestamp_ms = 15;</code>
     * @return Whether the endWaitForDeviceTimestampMs field is set.
     */
    public boolean hasEndWaitForDeviceTimestampMs() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * All devices are now ready
     * </pre>
     *
     * <code>optional int64 end_wait_for_device_timestamp_ms = 15;</code>
     * @return The endWaitForDeviceTimestampMs.
     */
    public long getEndWaitForDeviceTimestampMs() {
      return endWaitForDeviceTimestampMs_;
    }
    /**
     * <pre>
     * All devices are now ready
     * </pre>
     *
     * <code>optional int64 end_wait_for_device_timestamp_ms = 15;</code>
     * @param value The endWaitForDeviceTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setEndWaitForDeviceTimestampMs(long value) {
      bitField0_ |= 0x00004000;
      endWaitForDeviceTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * All devices are now ready
     * </pre>
     *
     * <code>optional int64 end_wait_for_device_timestamp_ms = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndWaitForDeviceTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00004000);
      endWaitForDeviceTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long beginLaunchTasksTimestampMs_ ;
    /**
     * <pre>
     * Launch tasks start being executed
     * </pre>
     *
     * <code>optional int64 begin_launch_tasks_timestamp_ms = 16;</code>
     * @return Whether the beginLaunchTasksTimestampMs field is set.
     */
    public boolean hasBeginLaunchTasksTimestampMs() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * Launch tasks start being executed
     * </pre>
     *
     * <code>optional int64 begin_launch_tasks_timestamp_ms = 16;</code>
     * @return The beginLaunchTasksTimestampMs.
     */
    public long getBeginLaunchTasksTimestampMs() {
      return beginLaunchTasksTimestampMs_;
    }
    /**
     * <pre>
     * Launch tasks start being executed
     * </pre>
     *
     * <code>optional int64 begin_launch_tasks_timestamp_ms = 16;</code>
     * @param value The beginLaunchTasksTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setBeginLaunchTasksTimestampMs(long value) {
      bitField0_ |= 0x00008000;
      beginLaunchTasksTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Launch tasks start being executed
     * </pre>
     *
     * <code>optional int64 begin_launch_tasks_timestamp_ms = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearBeginLaunchTasksTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00008000);
      beginLaunchTasksTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long endLaunchTasksTimestampMs_ ;
    /**
     * <pre>
     * All launch tasks completed
     * </pre>
     *
     * <code>optional int64 end_launch_tasks_timestamp_ms = 17;</code>
     * @return Whether the endLaunchTasksTimestampMs field is set.
     */
    public boolean hasEndLaunchTasksTimestampMs() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * All launch tasks completed
     * </pre>
     *
     * <code>optional int64 end_launch_tasks_timestamp_ms = 17;</code>
     * @return The endLaunchTasksTimestampMs.
     */
    public long getEndLaunchTasksTimestampMs() {
      return endLaunchTasksTimestampMs_;
    }
    /**
     * <pre>
     * All launch tasks completed
     * </pre>
     *
     * <code>optional int64 end_launch_tasks_timestamp_ms = 17;</code>
     * @param value The endLaunchTasksTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setEndLaunchTasksTimestampMs(long value) {
      bitField0_ |= 0x00010000;
      endLaunchTasksTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * All launch tasks completed
     * </pre>
     *
     * <code>optional int64 end_launch_tasks_timestamp_ms = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndLaunchTasksTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00010000);
      endLaunchTasksTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long endTimestampMs_ ;
    /**
     * <pre>
     * The run cycle finished
     * </pre>
     *
     * <code>optional int64 end_timestamp_ms = 18;</code>
     * @return Whether the endTimestampMs field is set.
     */
    public boolean hasEndTimestampMs() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * The run cycle finished
     * </pre>
     *
     * <code>optional int64 end_timestamp_ms = 18;</code>
     * @return The endTimestampMs.
     */
    public long getEndTimestampMs() {
      return endTimestampMs_;
    }
    /**
     * <pre>
     * The run cycle finished
     * </pre>
     *
     * <code>optional int64 end_timestamp_ms = 18;</code>
     * @param value The endTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setEndTimestampMs(long value) {
      bitField0_ |= 0x00020000;
      endTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The run cycle finished
     * </pre>
     *
     * <code>optional int64 end_timestamp_ms = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00020000);
      endTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private boolean deployedAsInstant_ ;
    /**
     * <pre>
     * Whether the run configuration was set to deploy as instant
     * </pre>
     *
     * <code>optional bool deployed_as_instant = 19;</code>
     * @return Whether the deployedAsInstant field is set.
     */
    public boolean hasDeployedAsInstant() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * Whether the run configuration was set to deploy as instant
     * </pre>
     *
     * <code>optional bool deployed_as_instant = 19;</code>
     * @return The deployedAsInstant.
     */
    public boolean getDeployedAsInstant() {
      return deployedAsInstant_;
    }
    /**
     * <pre>
     * Whether the run configuration was set to deploy as instant
     * </pre>
     *
     * <code>optional bool deployed_as_instant = 19;</code>
     * @param value The deployedAsInstant to set.
     * @return This builder for chaining.
     */
    public Builder setDeployedAsInstant(boolean value) {
      bitField0_ |= 0x00040000;
      deployedAsInstant_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the run configuration was set to deploy as instant
     * </pre>
     *
     * <code>optional bool deployed_as_instant = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeployedAsInstant() {
      bitField0_ = (bitField0_ & ~0x00040000);
      deployedAsInstant_ = false;
      onChanged();
      return this;
    }

    private boolean deployedFromBundle_ ;
    /**
     * <pre>
     * Whether the run configuration was set to deploy from app bundle
     * </pre>
     *
     * <code>optional bool deployed_from_bundle = 20;</code>
     * @return Whether the deployedFromBundle field is set.
     */
    public boolean hasDeployedFromBundle() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     * Whether the run configuration was set to deploy from app bundle
     * </pre>
     *
     * <code>optional bool deployed_from_bundle = 20;</code>
     * @return The deployedFromBundle.
     */
    public boolean getDeployedFromBundle() {
      return deployedFromBundle_;
    }
    /**
     * <pre>
     * Whether the run configuration was set to deploy from app bundle
     * </pre>
     *
     * <code>optional bool deployed_from_bundle = 20;</code>
     * @param value The deployedFromBundle to set.
     * @return This builder for chaining.
     */
    public Builder setDeployedFromBundle(boolean value) {
      bitField0_ |= 0x00080000;
      deployedFromBundle_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the run configuration was set to deploy from app bundle
     * </pre>
     *
     * <code>optional bool deployed_from_bundle = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeployedFromBundle() {
      bitField0_ = (bitField0_ & ~0x00080000);
      deployedFromBundle_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object deployFailureId_ = "";
    /**
     * <pre>
     * Enum name representing deploy failure reason
     * </pre>
     *
     * <code>optional string deploy_failure_id = 21;</code>
     * @return Whether the deployFailureId field is set.
     */
    public boolean hasDeployFailureId() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <pre>
     * Enum name representing deploy failure reason
     * </pre>
     *
     * <code>optional string deploy_failure_id = 21;</code>
     * @return The deployFailureId.
     */
    public java.lang.String getDeployFailureId() {
      java.lang.Object ref = deployFailureId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deployFailureId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Enum name representing deploy failure reason
     * </pre>
     *
     * <code>optional string deploy_failure_id = 21;</code>
     * @return The bytes for deployFailureId.
     */
    public com.google.protobuf.ByteString
        getDeployFailureIdBytes() {
      java.lang.Object ref = deployFailureId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deployFailureId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Enum name representing deploy failure reason
     * </pre>
     *
     * <code>optional string deploy_failure_id = 21;</code>
     * @param value The deployFailureId to set.
     * @return This builder for chaining.
     */
    public Builder setDeployFailureId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
      deployFailureId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enum name representing deploy failure reason
     * </pre>
     *
     * <code>optional string deploy_failure_id = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeployFailureId() {
      bitField0_ = (bitField0_ & ~0x00100000);
      deployFailureId_ = getDefaultInstance().getDeployFailureId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enum name representing deploy failure reason
     * </pre>
     *
     * <code>optional string deploy_failure_id = 21;</code>
     * @param value The bytes for deployFailureId to set.
     * @return This builder for chaining.
     */
    public Builder setDeployFailureIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
      deployFailureId_ = value;
      onChanged();
      return this;
    }

    private boolean applyChangesFallbackToRun_ ;
    /**
     * <pre>
     * Whether the user configured AC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_changes_fallback_to_run = 22;</code>
     * @return Whether the applyChangesFallbackToRun field is set.
     */
    public boolean hasApplyChangesFallbackToRun() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * Whether the user configured AC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_changes_fallback_to_run = 22;</code>
     * @return The applyChangesFallbackToRun.
     */
    public boolean getApplyChangesFallbackToRun() {
      return applyChangesFallbackToRun_;
    }
    /**
     * <pre>
     * Whether the user configured AC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_changes_fallback_to_run = 22;</code>
     * @param value The applyChangesFallbackToRun to set.
     * @return This builder for chaining.
     */
    public Builder setApplyChangesFallbackToRun(boolean value) {
      bitField0_ |= 0x00200000;
      applyChangesFallbackToRun_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the user configured AC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_changes_fallback_to_run = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplyChangesFallbackToRun() {
      bitField0_ = (bitField0_ & ~0x00200000);
      applyChangesFallbackToRun_ = false;
      onChanged();
      return this;
    }

    private boolean applyCodeChangesFallbackToRun_ ;
    /**
     * <pre>
     * Whether the user configured ACC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_code_changes_fallback_to_run = 23;</code>
     * @return Whether the applyCodeChangesFallbackToRun field is set.
     */
    public boolean hasApplyCodeChangesFallbackToRun() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <pre>
     * Whether the user configured ACC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_code_changes_fallback_to_run = 23;</code>
     * @return The applyCodeChangesFallbackToRun.
     */
    public boolean getApplyCodeChangesFallbackToRun() {
      return applyCodeChangesFallbackToRun_;
    }
    /**
     * <pre>
     * Whether the user configured ACC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_code_changes_fallback_to_run = 23;</code>
     * @param value The applyCodeChangesFallbackToRun to set.
     * @return This builder for chaining.
     */
    public Builder setApplyCodeChangesFallbackToRun(boolean value) {
      bitField0_ |= 0x00400000;
      applyCodeChangesFallbackToRun_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the user configured ACC to fall back to Run
     * </pre>
     *
     * <code>optional bool apply_code_changes_fallback_to_run = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplyCodeChangesFallbackToRun() {
      bitField0_ = (bitField0_ & ~0x00400000);
      applyCodeChangesFallbackToRun_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.RunEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.RunEvent)
  private static final com.google.wireless.android.sdk.stats.RunEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.RunEvent();
  }

  public static com.google.wireless.android.sdk.stats.RunEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<RunEvent>
      PARSER = new com.google.protobuf.AbstractParser<RunEvent>() {
    @java.lang.Override
    public RunEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RunEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RunEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RunEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.RunEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

