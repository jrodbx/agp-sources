// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface GraphicsResourceUsageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.GraphicsResourceUsage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * common betweek OpenGL and Vulkan
   * </pre>
   *
   * <code>optional uint32 colorbuffer_count = 1;</code>
   * @return Whether the colorbufferCount field is set.
   */
  boolean hasColorbufferCount();
  /**
   * <pre>
   * common betweek OpenGL and Vulkan
   * </pre>
   *
   * <code>optional uint32 colorbuffer_count = 1;</code>
   * @return The colorbufferCount.
   */
  int getColorbufferCount();

  /**
   * <code>optional uint32 shader_count = 2;</code>
   * @return Whether the shaderCount field is set.
   */
  boolean hasShaderCount();
  /**
   * <code>optional uint32 shader_count = 2;</code>
   * @return The shaderCount.
   */
  int getShaderCount();

  /**
   * <code>optional uint32 renderthread_count = 3;</code>
   * @return Whether the renderthreadCount field is set.
   */
  boolean hasRenderthreadCount();
  /**
   * <code>optional uint32 renderthread_count = 3;</code>
   * @return The renderthreadCount.
   */
  int getRenderthreadCount();

  /**
   * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
   * @return Whether the colorbufferTotalAllocationBytes field is set.
   */
  boolean hasColorbufferTotalAllocationBytes();
  /**
   * <code>optional uint64 colorbuffer_total_allocation_bytes = 4;</code>
   * @return The colorbufferTotalAllocationBytes.
   */
  long getColorbufferTotalAllocationBytes();

  /**
   * <pre>
   * Vulkan
   * </pre>
   *
   * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5;</code>
   * @return Whether the vulkanResourceUsage field is set.
   */
  boolean hasVulkanResourceUsage();
  /**
   * <pre>
   * Vulkan
   * </pre>
   *
   * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5;</code>
   * @return The vulkanResourceUsage.
   */
  com.google.wireless.android.sdk.stats.VulkanResourceUsage getVulkanResourceUsage();
  /**
   * <pre>
   * Vulkan
   * </pre>
   *
   * <code>optional .android_studio.VulkanResourceUsage vulkan_resource_usage = 5;</code>
   */
  com.google.wireless.android.sdk.stats.VulkanResourceUsageOrBuilder getVulkanResourceUsageOrBuilder();
}
