// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorResourceUsageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorResourceUsage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .android_studio.EmulatorResourceUsage.RunCondition run_condition = 1;</code>
   * @return Whether the runCondition field is set.
   */
  boolean hasRunCondition();
  /**
   * <code>optional .android_studio.EmulatorResourceUsage.RunCondition run_condition = 1;</code>
   * @return The runCondition.
   */
  com.google.wireless.android.sdk.stats.EmulatorResourceUsage.RunCondition getRunCondition();

  /**
   * <code>optional .android_studio.CpuTimeSlice main_loop_slice = 2;</code>
   * @return Whether the mainLoopSlice field is set.
   */
  boolean hasMainLoopSlice();
  /**
   * <code>optional .android_studio.CpuTimeSlice main_loop_slice = 2;</code>
   * @return The mainLoopSlice.
   */
  com.google.wireless.android.sdk.stats.CpuTimeSlice getMainLoopSlice();
  /**
   * <code>optional .android_studio.CpuTimeSlice main_loop_slice = 2;</code>
   */
  com.google.wireless.android.sdk.stats.CpuTimeSliceOrBuilder getMainLoopSliceOrBuilder();

  /**
   * <code>repeated .android_studio.CpuTimeSlice vcpu_slices = 3;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.CpuTimeSlice>
      getVcpuSlicesList();
  /**
   * <code>repeated .android_studio.CpuTimeSlice vcpu_slices = 3;</code>
   */
  com.google.wireless.android.sdk.stats.CpuTimeSlice getVcpuSlices(int index);
  /**
   * <code>repeated .android_studio.CpuTimeSlice vcpu_slices = 3;</code>
   */
  int getVcpuSlicesCount();
  /**
   * <code>repeated .android_studio.CpuTimeSlice vcpu_slices = 3;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.CpuTimeSliceOrBuilder>
      getVcpuSlicesOrBuilderList();
  /**
   * <code>repeated .android_studio.CpuTimeSlice vcpu_slices = 3;</code>
   */
  com.google.wireless.android.sdk.stats.CpuTimeSliceOrBuilder getVcpuSlicesOrBuilder(
      int index);

  /**
   * <code>repeated .android_studio.CpuTimeSlice guest_cpu_slices = 4;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.CpuTimeSlice>
      getGuestCpuSlicesList();
  /**
   * <code>repeated .android_studio.CpuTimeSlice guest_cpu_slices = 4;</code>
   */
  com.google.wireless.android.sdk.stats.CpuTimeSlice getGuestCpuSlices(int index);
  /**
   * <code>repeated .android_studio.CpuTimeSlice guest_cpu_slices = 4;</code>
   */
  int getGuestCpuSlicesCount();
  /**
   * <code>repeated .android_studio.CpuTimeSlice guest_cpu_slices = 4;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.CpuTimeSliceOrBuilder>
      getGuestCpuSlicesOrBuilderList();
  /**
   * <code>repeated .android_studio.CpuTimeSlice guest_cpu_slices = 4;</code>
   */
  com.google.wireless.android.sdk.stats.CpuTimeSliceOrBuilder getGuestCpuSlicesOrBuilder(
      int index);

  /**
   * <code>repeated .android_studio.EmulatorResourceUsage.GuestCpuUsageSource top_guest_cpu_usage_sources = 5;</code>
   * @return A list containing the topGuestCpuUsageSources.
   */
  java.util.List<com.google.wireless.android.sdk.stats.EmulatorResourceUsage.GuestCpuUsageSource> getTopGuestCpuUsageSourcesList();
  /**
   * <code>repeated .android_studio.EmulatorResourceUsage.GuestCpuUsageSource top_guest_cpu_usage_sources = 5;</code>
   * @return The count of topGuestCpuUsageSources.
   */
  int getTopGuestCpuUsageSourcesCount();
  /**
   * <code>repeated .android_studio.EmulatorResourceUsage.GuestCpuUsageSource top_guest_cpu_usage_sources = 5;</code>
   * @param index The index of the element to return.
   * @return The topGuestCpuUsageSources at the given index.
   */
  com.google.wireless.android.sdk.stats.EmulatorResourceUsage.GuestCpuUsageSource getTopGuestCpuUsageSources(int index);

  /**
   * <code>optional .android_studio.EmulatorMemoryUsage memory_usage = 6;</code>
   * @return Whether the memoryUsage field is set.
   */
  boolean hasMemoryUsage();
  /**
   * <code>optional .android_studio.EmulatorMemoryUsage memory_usage = 6;</code>
   * @return The memoryUsage.
   */
  com.google.wireless.android.sdk.stats.EmulatorMemoryUsage getMemoryUsage();
  /**
   * <code>optional .android_studio.EmulatorMemoryUsage memory_usage = 6;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorMemoryUsageOrBuilder getMemoryUsageOrBuilder();

  /**
   * <code>optional .android_studio.GraphicsResourceUsage graphics_resource_usage = 7;</code>
   * @return Whether the graphicsResourceUsage field is set.
   */
  boolean hasGraphicsResourceUsage();
  /**
   * <code>optional .android_studio.GraphicsResourceUsage graphics_resource_usage = 7;</code>
   * @return The graphicsResourceUsage.
   */
  com.google.wireless.android.sdk.stats.GraphicsResourceUsage getGraphicsResourceUsage();
  /**
   * <code>optional .android_studio.GraphicsResourceUsage graphics_resource_usage = 7;</code>
   */
  com.google.wireless.android.sdk.stats.GraphicsResourceUsageOrBuilder getGraphicsResourceUsageOrBuilder();
}
