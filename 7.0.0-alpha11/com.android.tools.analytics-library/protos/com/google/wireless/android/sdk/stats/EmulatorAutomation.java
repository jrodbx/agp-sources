// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Per-session metrics for automation/macros.
 * </pre>
 *
 * Protobuf type {@code android_studio.EmulatorAutomation}
 */
public  final class EmulatorAutomation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorAutomation)
    EmulatorAutomationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorAutomation.newBuilder() to construct.
  private EmulatorAutomation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorAutomation() {
    playedPresetMacro_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorAutomation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EmulatorAutomation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            bitField0_ |= 0x00000001;
            totalDurationMs_ = input.readUInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            macroPlaybackCount_ = input.readUInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            previewReplayCount_ = input.readUInt64();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            @SuppressWarnings("deprecation")
            com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro value = com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(4, rawValue);
            } else {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                playedPresetMacro_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              playedPresetMacro_.add(rawValue);
            }
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
              com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro value = com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  playedPresetMacro_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                playedPresetMacro_.add(rawValue);
              }
            }
            input.popLimit(oldLimit);
            break;
          }
          case 40: {
            bitField0_ |= 0x00000008;
            recordMacroCount_ = input.readUInt64();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000010;
            deleteMacroCount_ = input.readUInt64();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000020;
            editMacroCount_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        playedPresetMacro_ = java.util.Collections.unmodifiableList(playedPresetMacro_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorAutomation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorAutomation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorAutomation.class, com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder.class);
  }

  /**
   * <pre>
   * List of possible preset macros played.
   * </pre>
   *
   * Protobuf enum {@code android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro}
   */
  public enum EmulatorAutomationPresetMacro
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Reset position.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_RESET = 0;</code>
     */
    EMULATOR_AUTOMATION_PRESET_MACRO_RESET(0),
    /**
     * <pre>
     * Track horizontal plane.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_HORIZONTAL = 1;</code>
     */
    EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_HORIZONTAL(1),
    /**
     * <pre>
     * Track vertical plane.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_VERTICAL = 2;</code>
     */
    EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_VERTICAL(2),
    /**
     * <pre>
     * Walk to image room.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_IMAGE_ROOM = 3;</code>
     */
    EMULATOR_AUTOMATION_PRESET_MACRO_IMAGE_ROOM(3),
    ;

    /**
     * <pre>
     * Reset position.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_RESET = 0;</code>
     */
    public static final int EMULATOR_AUTOMATION_PRESET_MACRO_RESET_VALUE = 0;
    /**
     * <pre>
     * Track horizontal plane.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_HORIZONTAL = 1;</code>
     */
    public static final int EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_HORIZONTAL_VALUE = 1;
    /**
     * <pre>
     * Track vertical plane.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_VERTICAL = 2;</code>
     */
    public static final int EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_VERTICAL_VALUE = 2;
    /**
     * <pre>
     * Walk to image room.
     * </pre>
     *
     * <code>EMULATOR_AUTOMATION_PRESET_MACRO_IMAGE_ROOM = 3;</code>
     */
    public static final int EMULATOR_AUTOMATION_PRESET_MACRO_IMAGE_ROOM_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorAutomationPresetMacro valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorAutomationPresetMacro forNumber(int value) {
      switch (value) {
        case 0: return EMULATOR_AUTOMATION_PRESET_MACRO_RESET;
        case 1: return EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_HORIZONTAL;
        case 2: return EMULATOR_AUTOMATION_PRESET_MACRO_TRACK_VERTICAL;
        case 3: return EMULATOR_AUTOMATION_PRESET_MACRO_IMAGE_ROOM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorAutomationPresetMacro>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorAutomationPresetMacro> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorAutomationPresetMacro>() {
            public EmulatorAutomationPresetMacro findValueByNumber(int number) {
              return EmulatorAutomationPresetMacro.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorAutomation.getDescriptor().getEnumTypes().get(0);
    }

    private static final EmulatorAutomationPresetMacro[] VALUES = values();

    public static EmulatorAutomationPresetMacro valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorAutomationPresetMacro(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro)
  }

  private int bitField0_;
  public static final int TOTAL_DURATION_MS_FIELD_NUMBER = 1;
  private long totalDurationMs_;
  /**
   * <pre>
   * Total sum of time of macros playing -&gt; Sum(Stop-Play).
   * </pre>
   *
   * <code>optional uint64 total_duration_ms = 1;</code>
   * @return Whether the totalDurationMs field is set.
   */
  public boolean hasTotalDurationMs() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Total sum of time of macros playing -&gt; Sum(Stop-Play).
   * </pre>
   *
   * <code>optional uint64 total_duration_ms = 1;</code>
   * @return The totalDurationMs.
   */
  public long getTotalDurationMs() {
    return totalDurationMs_;
  }

  public static final int MACRO_PLAYBACK_COUNT_FIELD_NUMBER = 2;
  private long macroPlaybackCount_;
  /**
   * <pre>
   * Total amount of times macros played.
   * </pre>
   *
   * <code>optional uint64 macro_playback_count = 2;</code>
   * @return Whether the macroPlaybackCount field is set.
   */
  public boolean hasMacroPlaybackCount() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Total amount of times macros played.
   * </pre>
   *
   * <code>optional uint64 macro_playback_count = 2;</code>
   * @return The macroPlaybackCount.
   */
  public long getMacroPlaybackCount() {
    return macroPlaybackCount_;
  }

  public static final int PREVIEW_REPLAY_COUNT_FIELD_NUMBER = 3;
  private long previewReplayCount_;
  /**
   * <pre>
   * Total amount of times previews replayed.
   * </pre>
   *
   * <code>optional uint64 preview_replay_count = 3;</code>
   * @return Whether the previewReplayCount field is set.
   */
  public boolean hasPreviewReplayCount() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Total amount of times previews replayed.
   * </pre>
   *
   * <code>optional uint64 preview_replay_count = 3;</code>
   * @return The previewReplayCount.
   */
  public long getPreviewReplayCount() {
    return previewReplayCount_;
  }

  public static final int PLAYED_PRESET_MACRO_FIELD_NUMBER = 4;
  private java.util.List<java.lang.Integer> playedPresetMacro_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro> playedPresetMacro_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro>() {
            public com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro result = com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro.valueOf(from);
              return result == null ? com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro.EMULATOR_AUTOMATION_PRESET_MACRO_RESET : result;
            }
          };
  /**
   * <pre>
   * Played preset-macros.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
   * @return A list containing the playedPresetMacro.
   */
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro> getPlayedPresetMacroList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro>(playedPresetMacro_, playedPresetMacro_converter_);
  }
  /**
   * <pre>
   * Played preset-macros.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
   * @param value The playedPresetMacro to add.
   */
  public int getPlayedPresetMacroCount() {
    return playedPresetMacro_.size();
  }
  /**
   * <pre>
   * Played preset-macros.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
   * @param index The index of the element to return.
   * @return The playedPresetMacro at the given index.
   */
  public com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro getPlayedPresetMacro(int index) {
    return playedPresetMacro_converter_.convert(playedPresetMacro_.get(index));
  }

  public static final int RECORD_MACRO_COUNT_FIELD_NUMBER = 5;
  private long recordMacroCount_;
  /**
   * <pre>
   * Total amount of macros recorded.
   * </pre>
   *
   * <code>optional uint64 record_macro_count = 5;</code>
   * @return Whether the recordMacroCount field is set.
   */
  public boolean hasRecordMacroCount() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Total amount of macros recorded.
   * </pre>
   *
   * <code>optional uint64 record_macro_count = 5;</code>
   * @return The recordMacroCount.
   */
  public long getRecordMacroCount() {
    return recordMacroCount_;
  }

  public static final int DELETE_MACRO_COUNT_FIELD_NUMBER = 6;
  private long deleteMacroCount_;
  /**
   * <pre>
   * Total amount of macros deleted.
   * </pre>
   *
   * <code>optional uint64 delete_macro_count = 6;</code>
   * @return Whether the deleteMacroCount field is set.
   */
  public boolean hasDeleteMacroCount() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Total amount of macros deleted.
   * </pre>
   *
   * <code>optional uint64 delete_macro_count = 6;</code>
   * @return The deleteMacroCount.
   */
  public long getDeleteMacroCount() {
    return deleteMacroCount_;
  }

  public static final int EDIT_MACRO_COUNT_FIELD_NUMBER = 7;
  private long editMacroCount_;
  /**
   * <pre>
   * Total amount of macros edited.
   * </pre>
   *
   * <code>optional uint64 edit_macro_count = 7;</code>
   * @return Whether the editMacroCount field is set.
   */
  public boolean hasEditMacroCount() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Total amount of macros edited.
   * </pre>
   *
   * <code>optional uint64 edit_macro_count = 7;</code>
   * @return The editMacroCount.
   */
  public long getEditMacroCount() {
    return editMacroCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeUInt64(1, totalDurationMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt64(2, macroPlaybackCount_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt64(3, previewReplayCount_);
    }
    for (int i = 0; i < playedPresetMacro_.size(); i++) {
      output.writeEnum(4, playedPresetMacro_.get(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt64(5, recordMacroCount_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeUInt64(6, deleteMacroCount_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeUInt64(7, editMacroCount_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, totalDurationMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, macroPlaybackCount_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, previewReplayCount_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < playedPresetMacro_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(playedPresetMacro_.get(i));
      }
      size += dataSize;
      size += 1 * playedPresetMacro_.size();
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, recordMacroCount_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, deleteMacroCount_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, editMacroCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorAutomation)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorAutomation other = (com.google.wireless.android.sdk.stats.EmulatorAutomation) obj;

    if (hasTotalDurationMs() != other.hasTotalDurationMs()) return false;
    if (hasTotalDurationMs()) {
      if (getTotalDurationMs()
          != other.getTotalDurationMs()) return false;
    }
    if (hasMacroPlaybackCount() != other.hasMacroPlaybackCount()) return false;
    if (hasMacroPlaybackCount()) {
      if (getMacroPlaybackCount()
          != other.getMacroPlaybackCount()) return false;
    }
    if (hasPreviewReplayCount() != other.hasPreviewReplayCount()) return false;
    if (hasPreviewReplayCount()) {
      if (getPreviewReplayCount()
          != other.getPreviewReplayCount()) return false;
    }
    if (!playedPresetMacro_.equals(other.playedPresetMacro_)) return false;
    if (hasRecordMacroCount() != other.hasRecordMacroCount()) return false;
    if (hasRecordMacroCount()) {
      if (getRecordMacroCount()
          != other.getRecordMacroCount()) return false;
    }
    if (hasDeleteMacroCount() != other.hasDeleteMacroCount()) return false;
    if (hasDeleteMacroCount()) {
      if (getDeleteMacroCount()
          != other.getDeleteMacroCount()) return false;
    }
    if (hasEditMacroCount() != other.hasEditMacroCount()) return false;
    if (hasEditMacroCount()) {
      if (getEditMacroCount()
          != other.getEditMacroCount()) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTotalDurationMs()) {
      hash = (37 * hash) + TOTAL_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalDurationMs());
    }
    if (hasMacroPlaybackCount()) {
      hash = (37 * hash) + MACRO_PLAYBACK_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMacroPlaybackCount());
    }
    if (hasPreviewReplayCount()) {
      hash = (37 * hash) + PREVIEW_REPLAY_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPreviewReplayCount());
    }
    if (getPlayedPresetMacroCount() > 0) {
      hash = (37 * hash) + PLAYED_PRESET_MACRO_FIELD_NUMBER;
      hash = (53 * hash) + playedPresetMacro_.hashCode();
    }
    if (hasRecordMacroCount()) {
      hash = (37 * hash) + RECORD_MACRO_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecordMacroCount());
    }
    if (hasDeleteMacroCount()) {
      hash = (37 * hash) + DELETE_MACRO_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDeleteMacroCount());
    }
    if (hasEditMacroCount()) {
      hash = (37 * hash) + EDIT_MACRO_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEditMacroCount());
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorAutomation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorAutomation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Per-session metrics for automation/macros.
   * </pre>
   *
   * Protobuf type {@code android_studio.EmulatorAutomation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorAutomation)
      com.google.wireless.android.sdk.stats.EmulatorAutomationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorAutomation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorAutomation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorAutomation.class, com.google.wireless.android.sdk.stats.EmulatorAutomation.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorAutomation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      totalDurationMs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      macroPlaybackCount_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      previewReplayCount_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      playedPresetMacro_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      recordMacroCount_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      deleteMacroCount_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      editMacroCount_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorAutomation_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorAutomation getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorAutomation build() {
      com.google.wireless.android.sdk.stats.EmulatorAutomation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorAutomation buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorAutomation result = new com.google.wireless.android.sdk.stats.EmulatorAutomation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.totalDurationMs_ = totalDurationMs_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.macroPlaybackCount_ = macroPlaybackCount_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.previewReplayCount_ = previewReplayCount_;
        to_bitField0_ |= 0x00000004;
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        playedPresetMacro_ = java.util.Collections.unmodifiableList(playedPresetMacro_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.playedPresetMacro_ = playedPresetMacro_;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.recordMacroCount_ = recordMacroCount_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.deleteMacroCount_ = deleteMacroCount_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.editMacroCount_ = editMacroCount_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorAutomation) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorAutomation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorAutomation other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorAutomation.getDefaultInstance()) return this;
      if (other.hasTotalDurationMs()) {
        setTotalDurationMs(other.getTotalDurationMs());
      }
      if (other.hasMacroPlaybackCount()) {
        setMacroPlaybackCount(other.getMacroPlaybackCount());
      }
      if (other.hasPreviewReplayCount()) {
        setPreviewReplayCount(other.getPreviewReplayCount());
      }
      if (!other.playedPresetMacro_.isEmpty()) {
        if (playedPresetMacro_.isEmpty()) {
          playedPresetMacro_ = other.playedPresetMacro_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensurePlayedPresetMacroIsMutable();
          playedPresetMacro_.addAll(other.playedPresetMacro_);
        }
        onChanged();
      }
      if (other.hasRecordMacroCount()) {
        setRecordMacroCount(other.getRecordMacroCount());
      }
      if (other.hasDeleteMacroCount()) {
        setDeleteMacroCount(other.getDeleteMacroCount());
      }
      if (other.hasEditMacroCount()) {
        setEditMacroCount(other.getEditMacroCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.wireless.android.sdk.stats.EmulatorAutomation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.wireless.android.sdk.stats.EmulatorAutomation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long totalDurationMs_ ;
    /**
     * <pre>
     * Total sum of time of macros playing -&gt; Sum(Stop-Play).
     * </pre>
     *
     * <code>optional uint64 total_duration_ms = 1;</code>
     * @return Whether the totalDurationMs field is set.
     */
    public boolean hasTotalDurationMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Total sum of time of macros playing -&gt; Sum(Stop-Play).
     * </pre>
     *
     * <code>optional uint64 total_duration_ms = 1;</code>
     * @return The totalDurationMs.
     */
    public long getTotalDurationMs() {
      return totalDurationMs_;
    }
    /**
     * <pre>
     * Total sum of time of macros playing -&gt; Sum(Stop-Play).
     * </pre>
     *
     * <code>optional uint64 total_duration_ms = 1;</code>
     * @param value The totalDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setTotalDurationMs(long value) {
      bitField0_ |= 0x00000001;
      totalDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total sum of time of macros playing -&gt; Sum(Stop-Play).
     * </pre>
     *
     * <code>optional uint64 total_duration_ms = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      totalDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private long macroPlaybackCount_ ;
    /**
     * <pre>
     * Total amount of times macros played.
     * </pre>
     *
     * <code>optional uint64 macro_playback_count = 2;</code>
     * @return Whether the macroPlaybackCount field is set.
     */
    public boolean hasMacroPlaybackCount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Total amount of times macros played.
     * </pre>
     *
     * <code>optional uint64 macro_playback_count = 2;</code>
     * @return The macroPlaybackCount.
     */
    public long getMacroPlaybackCount() {
      return macroPlaybackCount_;
    }
    /**
     * <pre>
     * Total amount of times macros played.
     * </pre>
     *
     * <code>optional uint64 macro_playback_count = 2;</code>
     * @param value The macroPlaybackCount to set.
     * @return This builder for chaining.
     */
    public Builder setMacroPlaybackCount(long value) {
      bitField0_ |= 0x00000002;
      macroPlaybackCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total amount of times macros played.
     * </pre>
     *
     * <code>optional uint64 macro_playback_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMacroPlaybackCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      macroPlaybackCount_ = 0L;
      onChanged();
      return this;
    }

    private long previewReplayCount_ ;
    /**
     * <pre>
     * Total amount of times previews replayed.
     * </pre>
     *
     * <code>optional uint64 preview_replay_count = 3;</code>
     * @return Whether the previewReplayCount field is set.
     */
    public boolean hasPreviewReplayCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Total amount of times previews replayed.
     * </pre>
     *
     * <code>optional uint64 preview_replay_count = 3;</code>
     * @return The previewReplayCount.
     */
    public long getPreviewReplayCount() {
      return previewReplayCount_;
    }
    /**
     * <pre>
     * Total amount of times previews replayed.
     * </pre>
     *
     * <code>optional uint64 preview_replay_count = 3;</code>
     * @param value The previewReplayCount to set.
     * @return This builder for chaining.
     */
    public Builder setPreviewReplayCount(long value) {
      bitField0_ |= 0x00000004;
      previewReplayCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total amount of times previews replayed.
     * </pre>
     *
     * <code>optional uint64 preview_replay_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreviewReplayCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      previewReplayCount_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> playedPresetMacro_ =
      java.util.Collections.emptyList();
    private void ensurePlayedPresetMacroIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        playedPresetMacro_ = new java.util.ArrayList<java.lang.Integer>(playedPresetMacro_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @return A list containing the playedPresetMacro.
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro> getPlayedPresetMacroList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro>(playedPresetMacro_, playedPresetMacro_converter_);
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @return The count of playedPresetMacro.
     */
    public int getPlayedPresetMacroCount() {
      return playedPresetMacro_.size();
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @param index The index of the element to return.
     * @return The playedPresetMacro at the given index.
     */
    public com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro getPlayedPresetMacro(int index) {
      return playedPresetMacro_converter_.convert(playedPresetMacro_.get(index));
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @param index The index to set the value at.
     * @param value The playedPresetMacro to set.
     * @return This builder for chaining.
     */
    public Builder setPlayedPresetMacro(
        int index, com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayedPresetMacroIsMutable();
      playedPresetMacro_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @param value The playedPresetMacro to add.
     * @return This builder for chaining.
     */
    public Builder addPlayedPresetMacro(com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayedPresetMacroIsMutable();
      playedPresetMacro_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @param values The playedPresetMacro to add.
     * @return This builder for chaining.
     */
    public Builder addAllPlayedPresetMacro(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro> values) {
      ensurePlayedPresetMacroIsMutable();
      for (com.google.wireless.android.sdk.stats.EmulatorAutomation.EmulatorAutomationPresetMacro value : values) {
        playedPresetMacro_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Played preset-macros.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorAutomation.EmulatorAutomationPresetMacro played_preset_macro = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayedPresetMacro() {
      playedPresetMacro_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private long recordMacroCount_ ;
    /**
     * <pre>
     * Total amount of macros recorded.
     * </pre>
     *
     * <code>optional uint64 record_macro_count = 5;</code>
     * @return Whether the recordMacroCount field is set.
     */
    public boolean hasRecordMacroCount() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Total amount of macros recorded.
     * </pre>
     *
     * <code>optional uint64 record_macro_count = 5;</code>
     * @return The recordMacroCount.
     */
    public long getRecordMacroCount() {
      return recordMacroCount_;
    }
    /**
     * <pre>
     * Total amount of macros recorded.
     * </pre>
     *
     * <code>optional uint64 record_macro_count = 5;</code>
     * @param value The recordMacroCount to set.
     * @return This builder for chaining.
     */
    public Builder setRecordMacroCount(long value) {
      bitField0_ |= 0x00000010;
      recordMacroCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total amount of macros recorded.
     * </pre>
     *
     * <code>optional uint64 record_macro_count = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRecordMacroCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      recordMacroCount_ = 0L;
      onChanged();
      return this;
    }

    private long deleteMacroCount_ ;
    /**
     * <pre>
     * Total amount of macros deleted.
     * </pre>
     *
     * <code>optional uint64 delete_macro_count = 6;</code>
     * @return Whether the deleteMacroCount field is set.
     */
    public boolean hasDeleteMacroCount() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Total amount of macros deleted.
     * </pre>
     *
     * <code>optional uint64 delete_macro_count = 6;</code>
     * @return The deleteMacroCount.
     */
    public long getDeleteMacroCount() {
      return deleteMacroCount_;
    }
    /**
     * <pre>
     * Total amount of macros deleted.
     * </pre>
     *
     * <code>optional uint64 delete_macro_count = 6;</code>
     * @param value The deleteMacroCount to set.
     * @return This builder for chaining.
     */
    public Builder setDeleteMacroCount(long value) {
      bitField0_ |= 0x00000020;
      deleteMacroCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total amount of macros deleted.
     * </pre>
     *
     * <code>optional uint64 delete_macro_count = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeleteMacroCount() {
      bitField0_ = (bitField0_ & ~0x00000020);
      deleteMacroCount_ = 0L;
      onChanged();
      return this;
    }

    private long editMacroCount_ ;
    /**
     * <pre>
     * Total amount of macros edited.
     * </pre>
     *
     * <code>optional uint64 edit_macro_count = 7;</code>
     * @return Whether the editMacroCount field is set.
     */
    public boolean hasEditMacroCount() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Total amount of macros edited.
     * </pre>
     *
     * <code>optional uint64 edit_macro_count = 7;</code>
     * @return The editMacroCount.
     */
    public long getEditMacroCount() {
      return editMacroCount_;
    }
    /**
     * <pre>
     * Total amount of macros edited.
     * </pre>
     *
     * <code>optional uint64 edit_macro_count = 7;</code>
     * @param value The editMacroCount to set.
     * @return This builder for chaining.
     */
    public Builder setEditMacroCount(long value) {
      bitField0_ |= 0x00000040;
      editMacroCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total amount of macros edited.
     * </pre>
     *
     * <code>optional uint64 edit_macro_count = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearEditMacroCount() {
      bitField0_ = (bitField0_ & ~0x00000040);
      editMacroCount_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorAutomation)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorAutomation)
  private static final com.google.wireless.android.sdk.stats.EmulatorAutomation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorAutomation();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorAutomation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorAutomation>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorAutomation>() {
    @java.lang.Override
    public EmulatorAutomation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EmulatorAutomation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EmulatorAutomation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorAutomation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorAutomation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

