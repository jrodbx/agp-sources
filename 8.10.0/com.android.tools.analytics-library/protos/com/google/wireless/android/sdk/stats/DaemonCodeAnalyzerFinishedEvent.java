// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Event related to finishing of the DaemonCodeAnalyzer iteration.
 * DaemonCodeAnalyzer manages the background highlighting and auto-import
 * for files displayed in editors.
 * </pre>
 *
 * Protobuf type {@code android_studio.DaemonCodeAnalyzerFinishedEvent}
 */
public final class DaemonCodeAnalyzerFinishedEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.DaemonCodeAnalyzerFinishedEvent)
    DaemonCodeAnalyzerFinishedEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DaemonCodeAnalyzerFinishedEvent.newBuilder() to construct.
  private DaemonCodeAnalyzerFinishedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DaemonCodeAnalyzerFinishedEvent() {
    fileType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DaemonCodeAnalyzerFinishedEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DaemonCodeAnalyzerFinishedEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DaemonCodeAnalyzerFinishedEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.class, com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.Builder.class);
  }

  private int bitField0_;
  public static final int SEGMENT_DURATION_MS_FIELD_NUMBER = 1;
  private long segmentDurationMs_ = 0L;
  /**
   * <pre>
   * Daemon highlighting segment duration until it was finished or restarted for
   * some reason.
   * </pre>
   *
   * <code>optional uint64 segment_duration_ms = 1;</code>
   * @return Whether the segmentDurationMs field is set.
   */
  @java.lang.Override
  public boolean hasSegmentDurationMs() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Daemon highlighting segment duration until it was finished or restarted for
   * some reason.
   * </pre>
   *
   * <code>optional uint64 segment_duration_ms = 1;</code>
   * @return The segmentDurationMs.
   */
  @java.lang.Override
  public long getSegmentDurationMs() {
    return segmentDurationMs_;
  }

  public static final int FULL_DURATION_SINCE_STARTED_MS_FIELD_NUMBER = 2;
  private long fullDurationSinceStartedMs_ = 0L;
  /**
   * <pre>
   * Full highlighting duration since the file was modified and/or dumb mode
   * status changed. It should be equal to the sum of segments.
   * </pre>
   *
   * <code>optional uint64 full_duration_since_started_ms = 2;</code>
   * @return Whether the fullDurationSinceStartedMs field is set.
   */
  @java.lang.Override
  public boolean hasFullDurationSinceStartedMs() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Full highlighting duration since the file was modified and/or dumb mode
   * status changed. It should be equal to the sum of segments.
   * </pre>
   *
   * <code>optional uint64 full_duration_since_started_ms = 2;</code>
   * @return The fullDurationSinceStartedMs.
   */
  @java.lang.Override
  public long getFullDurationSinceStartedMs() {
    return fullDurationSinceStartedMs_;
  }

  public static final int ERRORS_FIELD_NUMBER = 3;
  private int errors_ = 0;
  /**
   * <pre>
   * Number of errors found by the DaemonCodeAnalyzer.
   * </pre>
   *
   * <code>optional uint32 errors = 3;</code>
   * @return Whether the errors field is set.
   */
  @java.lang.Override
  public boolean hasErrors() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Number of errors found by the DaemonCodeAnalyzer.
   * </pre>
   *
   * <code>optional uint32 errors = 3;</code>
   * @return The errors.
   */
  @java.lang.Override
  public int getErrors() {
    return errors_;
  }

  public static final int WARNINGS_FIELD_NUMBER = 4;
  private int warnings_ = 0;
  /**
   * <pre>
   * Number of warnings found by the DaemonCodeAnalyzer.
   * </pre>
   *
   * <code>optional uint32 warnings = 4;</code>
   * @return Whether the warnings field is set.
   */
  @java.lang.Override
  public boolean hasWarnings() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Number of warnings found by the DaemonCodeAnalyzer.
   * </pre>
   *
   * <code>optional uint32 warnings = 4;</code>
   * @return The warnings.
   */
  @java.lang.Override
  public int getWarnings() {
    return warnings_;
  }

  public static final int LINES_FIELD_NUMBER = 5;
  private int lines_ = 0;
  /**
   * <pre>
   * Total number of lines analyzed by the DaemonCodeAnalyzer.
   * </pre>
   *
   * <code>optional uint32 lines = 5;</code>
   * @return Whether the lines field is set.
   */
  @java.lang.Override
  public boolean hasLines() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Total number of lines analyzed by the DaemonCodeAnalyzer.
   * </pre>
   *
   * <code>optional uint32 lines = 5;</code>
   * @return The lines.
   */
  @java.lang.Override
  public int getLines() {
    return lines_;
  }

  public static final int FILE_TYPE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object fileType_ = "";
  /**
   * <pre>
   * Type of the file that was analyzed.
   * </pre>
   *
   * <code>optional string file_type = 6;</code>
   * @return Whether the fileType field is set.
   */
  @java.lang.Override
  public boolean hasFileType() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Type of the file that was analyzed.
   * </pre>
   *
   * <code>optional string file_type = 6;</code>
   * @return The fileType.
   */
  @java.lang.Override
  public java.lang.String getFileType() {
    java.lang.Object ref = fileType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        fileType_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Type of the file that was analyzed.
   * </pre>
   *
   * <code>optional string file_type = 6;</code>
   * @return The bytes for fileType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileTypeBytes() {
    java.lang.Object ref = fileType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HIGHLIGHTING_COMPLETED_FIELD_NUMBER = 7;
  private boolean highlightingCompleted_ = false;
  /**
   * <pre>
   * Was the highlighting completed.
   * </pre>
   *
   * <code>optional bool highlighting_completed = 7;</code>
   * @return Whether the highlightingCompleted field is set.
   */
  @java.lang.Override
  public boolean hasHighlightingCompleted() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Was the highlighting completed.
   * </pre>
   *
   * <code>optional bool highlighting_completed = 7;</code>
   * @return The highlightingCompleted.
   */
  @java.lang.Override
  public boolean getHighlightingCompleted() {
    return highlightingCompleted_;
  }

  public static final int DUMB_MODE_FIELD_NUMBER = 8;
  private boolean dumbMode_ = false;
  /**
   * <pre>
   * Did the iteration happened while the IDE was in the dumb mode.
   * </pre>
   *
   * <code>optional bool dumb_mode = 8;</code>
   * @return Whether the dumbMode field is set.
   */
  @java.lang.Override
  public boolean hasDumbMode() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Did the iteration happened while the IDE was in the dumb mode.
   * </pre>
   *
   * <code>optional bool dumb_mode = 8;</code>
   * @return The dumbMode.
   */
  @java.lang.Override
  public boolean getDumbMode() {
    return dumbMode_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeUInt64(1, segmentDurationMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt64(2, fullDurationSinceStartedMs_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt32(3, errors_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt32(4, warnings_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeUInt32(5, lines_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, fileType_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeBool(7, highlightingCompleted_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(8, dumbMode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, segmentDurationMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, fullDurationSinceStartedMs_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, errors_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, warnings_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, lines_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, fileType_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, highlightingCompleted_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, dumbMode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent other = (com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent) obj;

    if (hasSegmentDurationMs() != other.hasSegmentDurationMs()) return false;
    if (hasSegmentDurationMs()) {
      if (getSegmentDurationMs()
          != other.getSegmentDurationMs()) return false;
    }
    if (hasFullDurationSinceStartedMs() != other.hasFullDurationSinceStartedMs()) return false;
    if (hasFullDurationSinceStartedMs()) {
      if (getFullDurationSinceStartedMs()
          != other.getFullDurationSinceStartedMs()) return false;
    }
    if (hasErrors() != other.hasErrors()) return false;
    if (hasErrors()) {
      if (getErrors()
          != other.getErrors()) return false;
    }
    if (hasWarnings() != other.hasWarnings()) return false;
    if (hasWarnings()) {
      if (getWarnings()
          != other.getWarnings()) return false;
    }
    if (hasLines() != other.hasLines()) return false;
    if (hasLines()) {
      if (getLines()
          != other.getLines()) return false;
    }
    if (hasFileType() != other.hasFileType()) return false;
    if (hasFileType()) {
      if (!getFileType()
          .equals(other.getFileType())) return false;
    }
    if (hasHighlightingCompleted() != other.hasHighlightingCompleted()) return false;
    if (hasHighlightingCompleted()) {
      if (getHighlightingCompleted()
          != other.getHighlightingCompleted()) return false;
    }
    if (hasDumbMode() != other.hasDumbMode()) return false;
    if (hasDumbMode()) {
      if (getDumbMode()
          != other.getDumbMode()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSegmentDurationMs()) {
      hash = (37 * hash) + SEGMENT_DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSegmentDurationMs());
    }
    if (hasFullDurationSinceStartedMs()) {
      hash = (37 * hash) + FULL_DURATION_SINCE_STARTED_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFullDurationSinceStartedMs());
    }
    if (hasErrors()) {
      hash = (37 * hash) + ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getErrors();
    }
    if (hasWarnings()) {
      hash = (37 * hash) + WARNINGS_FIELD_NUMBER;
      hash = (53 * hash) + getWarnings();
    }
    if (hasLines()) {
      hash = (37 * hash) + LINES_FIELD_NUMBER;
      hash = (53 * hash) + getLines();
    }
    if (hasFileType()) {
      hash = (37 * hash) + FILE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getFileType().hashCode();
    }
    if (hasHighlightingCompleted()) {
      hash = (37 * hash) + HIGHLIGHTING_COMPLETED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHighlightingCompleted());
    }
    if (hasDumbMode()) {
      hash = (37 * hash) + DUMB_MODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDumbMode());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Event related to finishing of the DaemonCodeAnalyzer iteration.
   * DaemonCodeAnalyzer manages the background highlighting and auto-import
   * for files displayed in editors.
   * </pre>
   *
   * Protobuf type {@code android_studio.DaemonCodeAnalyzerFinishedEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.DaemonCodeAnalyzerFinishedEvent)
      com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DaemonCodeAnalyzerFinishedEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DaemonCodeAnalyzerFinishedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.class, com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      segmentDurationMs_ = 0L;
      fullDurationSinceStartedMs_ = 0L;
      errors_ = 0;
      warnings_ = 0;
      lines_ = 0;
      fileType_ = "";
      highlightingCompleted_ = false;
      dumbMode_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_DaemonCodeAnalyzerFinishedEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent build() {
      com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent buildPartial() {
      com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent result = new com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.segmentDurationMs_ = segmentDurationMs_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.fullDurationSinceStartedMs_ = fullDurationSinceStartedMs_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.errors_ = errors_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.warnings_ = warnings_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.lines_ = lines_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.fileType_ = fileType_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.highlightingCompleted_ = highlightingCompleted_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.dumbMode_ = dumbMode_;
        to_bitField0_ |= 0x00000080;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent other) {
      if (other == com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent.getDefaultInstance()) return this;
      if (other.hasSegmentDurationMs()) {
        setSegmentDurationMs(other.getSegmentDurationMs());
      }
      if (other.hasFullDurationSinceStartedMs()) {
        setFullDurationSinceStartedMs(other.getFullDurationSinceStartedMs());
      }
      if (other.hasErrors()) {
        setErrors(other.getErrors());
      }
      if (other.hasWarnings()) {
        setWarnings(other.getWarnings());
      }
      if (other.hasLines()) {
        setLines(other.getLines());
      }
      if (other.hasFileType()) {
        fileType_ = other.fileType_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasHighlightingCompleted()) {
        setHighlightingCompleted(other.getHighlightingCompleted());
      }
      if (other.hasDumbMode()) {
        setDumbMode(other.getDumbMode());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              segmentDurationMs_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              fullDurationSinceStartedMs_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              errors_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              warnings_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              lines_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              fileType_ = input.readBytes();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              highlightingCompleted_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              dumbMode_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long segmentDurationMs_ ;
    /**
     * <pre>
     * Daemon highlighting segment duration until it was finished or restarted for
     * some reason.
     * </pre>
     *
     * <code>optional uint64 segment_duration_ms = 1;</code>
     * @return Whether the segmentDurationMs field is set.
     */
    @java.lang.Override
    public boolean hasSegmentDurationMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Daemon highlighting segment duration until it was finished or restarted for
     * some reason.
     * </pre>
     *
     * <code>optional uint64 segment_duration_ms = 1;</code>
     * @return The segmentDurationMs.
     */
    @java.lang.Override
    public long getSegmentDurationMs() {
      return segmentDurationMs_;
    }
    /**
     * <pre>
     * Daemon highlighting segment duration until it was finished or restarted for
     * some reason.
     * </pre>
     *
     * <code>optional uint64 segment_duration_ms = 1;</code>
     * @param value The segmentDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setSegmentDurationMs(long value) {

      segmentDurationMs_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Daemon highlighting segment duration until it was finished or restarted for
     * some reason.
     * </pre>
     *
     * <code>optional uint64 segment_duration_ms = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSegmentDurationMs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      segmentDurationMs_ = 0L;
      onChanged();
      return this;
    }

    private long fullDurationSinceStartedMs_ ;
    /**
     * <pre>
     * Full highlighting duration since the file was modified and/or dumb mode
     * status changed. It should be equal to the sum of segments.
     * </pre>
     *
     * <code>optional uint64 full_duration_since_started_ms = 2;</code>
     * @return Whether the fullDurationSinceStartedMs field is set.
     */
    @java.lang.Override
    public boolean hasFullDurationSinceStartedMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Full highlighting duration since the file was modified and/or dumb mode
     * status changed. It should be equal to the sum of segments.
     * </pre>
     *
     * <code>optional uint64 full_duration_since_started_ms = 2;</code>
     * @return The fullDurationSinceStartedMs.
     */
    @java.lang.Override
    public long getFullDurationSinceStartedMs() {
      return fullDurationSinceStartedMs_;
    }
    /**
     * <pre>
     * Full highlighting duration since the file was modified and/or dumb mode
     * status changed. It should be equal to the sum of segments.
     * </pre>
     *
     * <code>optional uint64 full_duration_since_started_ms = 2;</code>
     * @param value The fullDurationSinceStartedMs to set.
     * @return This builder for chaining.
     */
    public Builder setFullDurationSinceStartedMs(long value) {

      fullDurationSinceStartedMs_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Full highlighting duration since the file was modified and/or dumb mode
     * status changed. It should be equal to the sum of segments.
     * </pre>
     *
     * <code>optional uint64 full_duration_since_started_ms = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFullDurationSinceStartedMs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fullDurationSinceStartedMs_ = 0L;
      onChanged();
      return this;
    }

    private int errors_ ;
    /**
     * <pre>
     * Number of errors found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 errors = 3;</code>
     * @return Whether the errors field is set.
     */
    @java.lang.Override
    public boolean hasErrors() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Number of errors found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 errors = 3;</code>
     * @return The errors.
     */
    @java.lang.Override
    public int getErrors() {
      return errors_;
    }
    /**
     * <pre>
     * Number of errors found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 errors = 3;</code>
     * @param value The errors to set.
     * @return This builder for chaining.
     */
    public Builder setErrors(int value) {

      errors_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of errors found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 errors = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearErrors() {
      bitField0_ = (bitField0_ & ~0x00000004);
      errors_ = 0;
      onChanged();
      return this;
    }

    private int warnings_ ;
    /**
     * <pre>
     * Number of warnings found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 warnings = 4;</code>
     * @return Whether the warnings field is set.
     */
    @java.lang.Override
    public boolean hasWarnings() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Number of warnings found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 warnings = 4;</code>
     * @return The warnings.
     */
    @java.lang.Override
    public int getWarnings() {
      return warnings_;
    }
    /**
     * <pre>
     * Number of warnings found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 warnings = 4;</code>
     * @param value The warnings to set.
     * @return This builder for chaining.
     */
    public Builder setWarnings(int value) {

      warnings_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of warnings found by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 warnings = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearWarnings() {
      bitField0_ = (bitField0_ & ~0x00000008);
      warnings_ = 0;
      onChanged();
      return this;
    }

    private int lines_ ;
    /**
     * <pre>
     * Total number of lines analyzed by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 lines = 5;</code>
     * @return Whether the lines field is set.
     */
    @java.lang.Override
    public boolean hasLines() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Total number of lines analyzed by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 lines = 5;</code>
     * @return The lines.
     */
    @java.lang.Override
    public int getLines() {
      return lines_;
    }
    /**
     * <pre>
     * Total number of lines analyzed by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 lines = 5;</code>
     * @param value The lines to set.
     * @return This builder for chaining.
     */
    public Builder setLines(int value) {

      lines_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total number of lines analyzed by the DaemonCodeAnalyzer.
     * </pre>
     *
     * <code>optional uint32 lines = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearLines() {
      bitField0_ = (bitField0_ & ~0x00000010);
      lines_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object fileType_ = "";
    /**
     * <pre>
     * Type of the file that was analyzed.
     * </pre>
     *
     * <code>optional string file_type = 6;</code>
     * @return Whether the fileType field is set.
     */
    public boolean hasFileType() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Type of the file that was analyzed.
     * </pre>
     *
     * <code>optional string file_type = 6;</code>
     * @return The fileType.
     */
    public java.lang.String getFileType() {
      java.lang.Object ref = fileType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileType_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Type of the file that was analyzed.
     * </pre>
     *
     * <code>optional string file_type = 6;</code>
     * @return The bytes for fileType.
     */
    public com.google.protobuf.ByteString
        getFileTypeBytes() {
      java.lang.Object ref = fileType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Type of the file that was analyzed.
     * </pre>
     *
     * <code>optional string file_type = 6;</code>
     * @param value The fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      fileType_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of the file that was analyzed.
     * </pre>
     *
     * <code>optional string file_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileType() {
      fileType_ = getDefaultInstance().getFileType();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of the file that was analyzed.
     * </pre>
     *
     * <code>optional string file_type = 6;</code>
     * @param value The bytes for fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      fileType_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private boolean highlightingCompleted_ ;
    /**
     * <pre>
     * Was the highlighting completed.
     * </pre>
     *
     * <code>optional bool highlighting_completed = 7;</code>
     * @return Whether the highlightingCompleted field is set.
     */
    @java.lang.Override
    public boolean hasHighlightingCompleted() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Was the highlighting completed.
     * </pre>
     *
     * <code>optional bool highlighting_completed = 7;</code>
     * @return The highlightingCompleted.
     */
    @java.lang.Override
    public boolean getHighlightingCompleted() {
      return highlightingCompleted_;
    }
    /**
     * <pre>
     * Was the highlighting completed.
     * </pre>
     *
     * <code>optional bool highlighting_completed = 7;</code>
     * @param value The highlightingCompleted to set.
     * @return This builder for chaining.
     */
    public Builder setHighlightingCompleted(boolean value) {

      highlightingCompleted_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Was the highlighting completed.
     * </pre>
     *
     * <code>optional bool highlighting_completed = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearHighlightingCompleted() {
      bitField0_ = (bitField0_ & ~0x00000040);
      highlightingCompleted_ = false;
      onChanged();
      return this;
    }

    private boolean dumbMode_ ;
    /**
     * <pre>
     * Did the iteration happened while the IDE was in the dumb mode.
     * </pre>
     *
     * <code>optional bool dumb_mode = 8;</code>
     * @return Whether the dumbMode field is set.
     */
    @java.lang.Override
    public boolean hasDumbMode() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Did the iteration happened while the IDE was in the dumb mode.
     * </pre>
     *
     * <code>optional bool dumb_mode = 8;</code>
     * @return The dumbMode.
     */
    @java.lang.Override
    public boolean getDumbMode() {
      return dumbMode_;
    }
    /**
     * <pre>
     * Did the iteration happened while the IDE was in the dumb mode.
     * </pre>
     *
     * <code>optional bool dumb_mode = 8;</code>
     * @param value The dumbMode to set.
     * @return This builder for chaining.
     */
    public Builder setDumbMode(boolean value) {

      dumbMode_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Did the iteration happened while the IDE was in the dumb mode.
     * </pre>
     *
     * <code>optional bool dumb_mode = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDumbMode() {
      bitField0_ = (bitField0_ & ~0x00000080);
      dumbMode_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.DaemonCodeAnalyzerFinishedEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.DaemonCodeAnalyzerFinishedEvent)
  private static final com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent();
  }

  public static com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<DaemonCodeAnalyzerFinishedEvent>
      PARSER = new com.google.protobuf.AbstractParser<DaemonCodeAnalyzerFinishedEvent>() {
    @java.lang.Override
    public DaemonCodeAnalyzerFinishedEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DaemonCodeAnalyzerFinishedEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DaemonCodeAnalyzerFinishedEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DaemonCodeAnalyzerFinishedEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

