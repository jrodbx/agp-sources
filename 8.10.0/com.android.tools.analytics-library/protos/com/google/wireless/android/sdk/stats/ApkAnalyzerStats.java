// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * APK Analyzer stats
 * </pre>
 *
 * Protobuf type {@code android_studio.ApkAnalyzerStats}
 */
public final class ApkAnalyzerStats extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.ApkAnalyzerStats)
    ApkAnalyzerStatsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ApkAnalyzerStats.newBuilder() to construct.
  private ApkAnalyzerStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ApkAnalyzerStats() {
    align16Type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ApkAnalyzerStats();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ApkAnalyzerStats_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ApkAnalyzerStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.ApkAnalyzerStats.class, com.google.wireless.android.sdk.stats.ApkAnalyzerStats.Builder.class);
  }

  /**
   * <pre>
   * 16 KB Alignment
   * </pre>
   *
   * Protobuf enum {@code android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType}
   */
  public enum ApkAnalyzerAlignNative16kbEventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    UNKNOWN_TYPE(0),
    /**
     * <pre>
     * Below here, the event is only sent if the app has native
     * libraries---------------------
     * </pre>
     *
     * <code>ALIGN_NATIVE_COMPLIANT_APK_ANALYZED = 1;</code>
     */
    ALIGN_NATIVE_COMPLIANT_APK_ANALYZED(1),
    /**
     * <pre>
     * When a non-16 KB compliant app is analyzed by APK Analyzer
     * </pre>
     *
     * <code>ALIGN_NATIVE_NON_COMPLIANT_APK_ANALYZED = 2;</code>
     */
    ALIGN_NATIVE_NON_COMPLIANT_APK_ANALYZED(2),
    ;

    /**
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    public static final int UNKNOWN_TYPE_VALUE = 0;
    /**
     * <pre>
     * Below here, the event is only sent if the app has native
     * libraries---------------------
     * </pre>
     *
     * <code>ALIGN_NATIVE_COMPLIANT_APK_ANALYZED = 1;</code>
     */
    public static final int ALIGN_NATIVE_COMPLIANT_APK_ANALYZED_VALUE = 1;
    /**
     * <pre>
     * When a non-16 KB compliant app is analyzed by APK Analyzer
     * </pre>
     *
     * <code>ALIGN_NATIVE_NON_COMPLIANT_APK_ANALYZED = 2;</code>
     */
    public static final int ALIGN_NATIVE_NON_COMPLIANT_APK_ANALYZED_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ApkAnalyzerAlignNative16kbEventType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ApkAnalyzerAlignNative16kbEventType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TYPE;
        case 1: return ALIGN_NATIVE_COMPLIANT_APK_ANALYZED;
        case 2: return ALIGN_NATIVE_NON_COMPLIANT_APK_ANALYZED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ApkAnalyzerAlignNative16kbEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ApkAnalyzerAlignNative16kbEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ApkAnalyzerAlignNative16kbEventType>() {
            public ApkAnalyzerAlignNative16kbEventType findValueByNumber(int number) {
              return ApkAnalyzerAlignNative16kbEventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.ApkAnalyzerStats.getDescriptor().getEnumTypes().get(0);
    }

    private static final ApkAnalyzerAlignNative16kbEventType[] VALUES = values();

    public static ApkAnalyzerAlignNative16kbEventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ApkAnalyzerAlignNative16kbEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType)
  }

  private int bitField0_;
  public static final int UNCOMPRESSED_SIZE_FIELD_NUMBER = 1;
  private long uncompressedSize_ = 0L;
  /**
   * <pre>
   * size of the APK
   * </pre>
   *
   * <code>optional uint64 uncompressed_size = 1;</code>
   * @return Whether the uncompressedSize field is set.
   */
  @java.lang.Override
  public boolean hasUncompressedSize() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * size of the APK
   * </pre>
   *
   * <code>optional uint64 uncompressed_size = 1;</code>
   * @return The uncompressedSize.
   */
  @java.lang.Override
  public long getUncompressedSize() {
    return uncompressedSize_;
  }

  public static final int COMPRESSED_SIZE_FIELD_NUMBER = 2;
  private long compressedSize_ = 0L;
  /**
   * <pre>
   * size of the APK after compression
   * </pre>
   *
   * <code>optional uint64 compressed_size = 2;</code>
   * @return Whether the compressedSize field is set.
   */
  @java.lang.Override
  public boolean hasCompressedSize() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * size of the APK after compression
   * </pre>
   *
   * <code>optional uint64 compressed_size = 2;</code>
   * @return The compressedSize.
   */
  @java.lang.Override
  public long getCompressedSize() {
    return compressedSize_;
  }

  public static final int ALIGN16_TYPE_FIELD_NUMBER = 3;
  private int align16Type_ = 0;
  /**
   * <code>optional .android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType align16_type = 3;</code>
   * @return Whether the align16Type field is set.
   */
  @java.lang.Override public boolean hasAlign16Type() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional .android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType align16_type = 3;</code>
   * @return The align16Type.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType getAlign16Type() {
    com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType result = com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType.forNumber(align16Type_);
    return result == null ? com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType.UNKNOWN_TYPE : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeUInt64(1, uncompressedSize_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeUInt64(2, compressedSize_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeEnum(3, align16Type_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, uncompressedSize_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, compressedSize_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, align16Type_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.ApkAnalyzerStats)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.ApkAnalyzerStats other = (com.google.wireless.android.sdk.stats.ApkAnalyzerStats) obj;

    if (hasUncompressedSize() != other.hasUncompressedSize()) return false;
    if (hasUncompressedSize()) {
      if (getUncompressedSize()
          != other.getUncompressedSize()) return false;
    }
    if (hasCompressedSize() != other.hasCompressedSize()) return false;
    if (hasCompressedSize()) {
      if (getCompressedSize()
          != other.getCompressedSize()) return false;
    }
    if (hasAlign16Type() != other.hasAlign16Type()) return false;
    if (hasAlign16Type()) {
      if (align16Type_ != other.align16Type_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasUncompressedSize()) {
      hash = (37 * hash) + UNCOMPRESSED_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUncompressedSize());
    }
    if (hasCompressedSize()) {
      hash = (37 * hash) + COMPRESSED_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCompressedSize());
    }
    if (hasAlign16Type()) {
      hash = (37 * hash) + ALIGN16_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + align16Type_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.ApkAnalyzerStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * APK Analyzer stats
   * </pre>
   *
   * Protobuf type {@code android_studio.ApkAnalyzerStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.ApkAnalyzerStats)
      com.google.wireless.android.sdk.stats.ApkAnalyzerStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ApkAnalyzerStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ApkAnalyzerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.ApkAnalyzerStats.class, com.google.wireless.android.sdk.stats.ApkAnalyzerStats.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.ApkAnalyzerStats.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      uncompressedSize_ = 0L;
      compressedSize_ = 0L;
      align16Type_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ApkAnalyzerStats_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ApkAnalyzerStats getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.ApkAnalyzerStats.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ApkAnalyzerStats build() {
      com.google.wireless.android.sdk.stats.ApkAnalyzerStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ApkAnalyzerStats buildPartial() {
      com.google.wireless.android.sdk.stats.ApkAnalyzerStats result = new com.google.wireless.android.sdk.stats.ApkAnalyzerStats(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.ApkAnalyzerStats result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.uncompressedSize_ = uncompressedSize_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.compressedSize_ = compressedSize_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.align16Type_ = align16Type_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.ApkAnalyzerStats) {
        return mergeFrom((com.google.wireless.android.sdk.stats.ApkAnalyzerStats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.ApkAnalyzerStats other) {
      if (other == com.google.wireless.android.sdk.stats.ApkAnalyzerStats.getDefaultInstance()) return this;
      if (other.hasUncompressedSize()) {
        setUncompressedSize(other.getUncompressedSize());
      }
      if (other.hasCompressedSize()) {
        setCompressedSize(other.getCompressedSize());
      }
      if (other.hasAlign16Type()) {
        setAlign16Type(other.getAlign16Type());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              uncompressedSize_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              compressedSize_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType tmpValue =
                  com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(3, tmpRaw);
              } else {
                align16Type_ = tmpRaw;
                bitField0_ |= 0x00000004;
              }
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long uncompressedSize_ ;
    /**
     * <pre>
     * size of the APK
     * </pre>
     *
     * <code>optional uint64 uncompressed_size = 1;</code>
     * @return Whether the uncompressedSize field is set.
     */
    @java.lang.Override
    public boolean hasUncompressedSize() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * size of the APK
     * </pre>
     *
     * <code>optional uint64 uncompressed_size = 1;</code>
     * @return The uncompressedSize.
     */
    @java.lang.Override
    public long getUncompressedSize() {
      return uncompressedSize_;
    }
    /**
     * <pre>
     * size of the APK
     * </pre>
     *
     * <code>optional uint64 uncompressed_size = 1;</code>
     * @param value The uncompressedSize to set.
     * @return This builder for chaining.
     */
    public Builder setUncompressedSize(long value) {

      uncompressedSize_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * size of the APK
     * </pre>
     *
     * <code>optional uint64 uncompressed_size = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUncompressedSize() {
      bitField0_ = (bitField0_ & ~0x00000001);
      uncompressedSize_ = 0L;
      onChanged();
      return this;
    }

    private long compressedSize_ ;
    /**
     * <pre>
     * size of the APK after compression
     * </pre>
     *
     * <code>optional uint64 compressed_size = 2;</code>
     * @return Whether the compressedSize field is set.
     */
    @java.lang.Override
    public boolean hasCompressedSize() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * size of the APK after compression
     * </pre>
     *
     * <code>optional uint64 compressed_size = 2;</code>
     * @return The compressedSize.
     */
    @java.lang.Override
    public long getCompressedSize() {
      return compressedSize_;
    }
    /**
     * <pre>
     * size of the APK after compression
     * </pre>
     *
     * <code>optional uint64 compressed_size = 2;</code>
     * @param value The compressedSize to set.
     * @return This builder for chaining.
     */
    public Builder setCompressedSize(long value) {

      compressedSize_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * size of the APK after compression
     * </pre>
     *
     * <code>optional uint64 compressed_size = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressedSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      compressedSize_ = 0L;
      onChanged();
      return this;
    }

    private int align16Type_ = 0;
    /**
     * <code>optional .android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType align16_type = 3;</code>
     * @return Whether the align16Type field is set.
     */
    @java.lang.Override public boolean hasAlign16Type() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType align16_type = 3;</code>
     * @return The align16Type.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType getAlign16Type() {
      com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType result = com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType.forNumber(align16Type_);
      return result == null ? com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType.UNKNOWN_TYPE : result;
    }
    /**
     * <code>optional .android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType align16_type = 3;</code>
     * @param value The align16Type to set.
     * @return This builder for chaining.
     */
    public Builder setAlign16Type(com.google.wireless.android.sdk.stats.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      align16Type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.ApkAnalyzerStats.ApkAnalyzerAlignNative16kbEventType align16_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAlign16Type() {
      bitField0_ = (bitField0_ & ~0x00000004);
      align16Type_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.ApkAnalyzerStats)
  }

  // @@protoc_insertion_point(class_scope:android_studio.ApkAnalyzerStats)
  private static final com.google.wireless.android.sdk.stats.ApkAnalyzerStats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.ApkAnalyzerStats();
  }

  public static com.google.wireless.android.sdk.stats.ApkAnalyzerStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<ApkAnalyzerStats>
      PARSER = new com.google.protobuf.AbstractParser<ApkAnalyzerStats>() {
    @java.lang.Override
    public ApkAnalyzerStats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ApkAnalyzerStats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ApkAnalyzerStats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.ApkAnalyzerStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

