// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface GradleSyncStatsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.GradleSyncStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Cause of sync
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.Trigger trigger = 1;</code>
   * @return Whether the trigger field is set.
   */
  boolean hasTrigger();
  /**
   * <pre>
   * Cause of sync
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.Trigger trigger = 1;</code>
   * @return The trigger.
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.Trigger getTrigger();

  /**
   * <pre>
   * Total time, the rest of the non negative times should add to this value
   * </pre>
   *
   * <code>optional int64 total_time_ms = 2;</code>
   * @return Whether the totalTimeMs field is set.
   */
  boolean hasTotalTimeMs();
  /**
   * <pre>
   * Total time, the rest of the non negative times should add to this value
   * </pre>
   *
   * <code>optional int64 total_time_ms = 2;</code>
   * @return The totalTimeMs.
   */
  long getTotalTimeMs();

  /**
   * <pre>
   * Time in ms spent on gradle (can be negative in case of failure)
   * </pre>
   *
   * <code>optional int64 gradle_time_ms = 3;</code>
   * @return Whether the gradleTimeMs field is set.
   */
  boolean hasGradleTimeMs();
  /**
   * <pre>
   * Time in ms spent on gradle (can be negative in case of failure)
   * </pre>
   *
   * <code>optional int64 gradle_time_ms = 3;</code>
   * @return The gradleTimeMs.
   */
  long getGradleTimeMs();

  /**
   * <pre>
   * Time in ms spent on IDE (can be negative in case of failure)
   * </pre>
   *
   * <code>optional int64 ide_time_ms = 4;</code>
   * @return Whether the ideTimeMs field is set.
   */
  boolean hasIdeTimeMs();
  /**
   * <pre>
   * Time in ms spent on IDE (can be negative in case of failure)
   * </pre>
   *
   * <code>optional int64 ide_time_ms = 4;</code>
   * @return The ideTimeMs.
   */
  long getIdeTimeMs();

  /**
   * <pre>
   * Whether the embedded maven repository is enabled
   * </pre>
   *
   * <code>optional bool embedded_repo_enabled = 5;</code>
   * @return Whether the embeddedRepoEnabled field is set.
   */
  boolean hasEmbeddedRepoEnabled();
  /**
   * <pre>
   * Whether the embedded maven repository is enabled
   * </pre>
   *
   * <code>optional bool embedded_repo_enabled = 5;</code>
   * @return The embeddedRepoEnabled.
   */
  boolean getEmbeddedRepoEnabled();

  /**
   * <pre>
   * What type of sync was requested
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.GradleSyncType sync_type = 6;</code>
   * @return Whether the syncType field is set.
   */
  boolean hasSyncType();
  /**
   * <pre>
   * What type of sync was requested
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.GradleSyncType sync_type = 6;</code>
   * @return The syncType.
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncType getSyncType();

  /**
   * <pre>
   * What type of sync was actually performed
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.GradleSyncType actual_sync_type = 7;</code>
   * @return Whether the actualSyncType field is set.
   */
  boolean hasActualSyncType();
  /**
   * <pre>
   * What type of sync was actually performed
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.GradleSyncType actual_sync_type = 7;</code>
   * @return The actualSyncType.
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncType getActualSyncType();

  /**
   * <pre>
   * The version of our Android Gradle plugin from the last known successful
   * sync. (e.g. 3.5.0-dev)
   * </pre>
   *
   * <code>optional string last_known_android_gradle_plugin_version = 8;</code>
   * @return Whether the lastKnownAndroidGradlePluginVersion field is set.
   */
  boolean hasLastKnownAndroidGradlePluginVersion();
  /**
   * <pre>
   * The version of our Android Gradle plugin from the last known successful
   * sync. (e.g. 3.5.0-dev)
   * </pre>
   *
   * <code>optional string last_known_android_gradle_plugin_version = 8;</code>
   * @return The lastKnownAndroidGradlePluginVersion.
   */
  java.lang.String getLastKnownAndroidGradlePluginVersion();
  /**
   * <pre>
   * The version of our Android Gradle plugin from the last known successful
   * sync. (e.g. 3.5.0-dev)
   * </pre>
   *
   * <code>optional string last_known_android_gradle_plugin_version = 8;</code>
   * @return The bytes for lastKnownAndroidGradlePluginVersion.
   */
  com.google.protobuf.ByteString
      getLastKnownAndroidGradlePluginVersionBytes();

  /**
   * <pre>
   * The version of AGP used for this sync, if known. (e.g. 3.5.0)
   * </pre>
   *
   * <code>optional string android_gradle_plugin_version = 9;</code>
   * @return Whether the androidGradlePluginVersion field is set.
   */
  boolean hasAndroidGradlePluginVersion();
  /**
   * <pre>
   * The version of AGP used for this sync, if known. (e.g. 3.5.0)
   * </pre>
   *
   * <code>optional string android_gradle_plugin_version = 9;</code>
   * @return The androidGradlePluginVersion.
   */
  java.lang.String getAndroidGradlePluginVersion();
  /**
   * <pre>
   * The version of AGP used for this sync, if known. (e.g. 3.5.0)
   * </pre>
   *
   * <code>optional string android_gradle_plugin_version = 9;</code>
   * @return The bytes for androidGradlePluginVersion.
   */
  com.google.protobuf.ByteString
      getAndroidGradlePluginVersionBytes();

  /**
   * <pre>
   * Whether or not the project uses Groovy build files ("build.gradle")
   * </pre>
   *
   * <code>optional bool uses_build_gradle = 10;</code>
   * @return Whether the usesBuildGradle field is set.
   */
  boolean hasUsesBuildGradle();
  /**
   * <pre>
   * Whether or not the project uses Groovy build files ("build.gradle")
   * </pre>
   *
   * <code>optional bool uses_build_gradle = 10;</code>
   * @return The usesBuildGradle.
   */
  boolean getUsesBuildGradle();

  /**
   * <pre>
   * Whether or not the project uses Kotlin build files ("build.gradle.kts")
   * </pre>
   *
   * <code>optional bool uses_build_gradle_kts = 11;</code>
   * @return Whether the usesBuildGradleKts field is set.
   */
  boolean hasUsesBuildGradleKts();
  /**
   * <pre>
   * Whether or not the project uses Kotlin build files ("build.gradle.kts")
   * </pre>
   *
   * <code>optional bool uses_build_gradle_kts = 11;</code>
   * @return The usesBuildGradleKts.
   */
  boolean getUsesBuildGradleKts();

  /**
   * <pre>
   * Deprecated.
   * Use user_requested_sync_type and studio_requested_sync_execution_type.
   * The Sync execution type: whether it uses Sequential or parallel model
   * fetching.
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.GradleSyncExecutionType sync_execution_type = 12 [deprecated = true];</code>
   * @deprecated android_studio.GradleSyncStats.sync_execution_type is deprecated.
   *     See studio_stats.proto;l=8565
   * @return Whether the syncExecutionType field is set.
   */
  @java.lang.Deprecated boolean hasSyncExecutionType();
  /**
   * <pre>
   * Deprecated.
   * Use user_requested_sync_type and studio_requested_sync_execution_type.
   * The Sync execution type: whether it uses Sequential or parallel model
   * fetching.
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.GradleSyncExecutionType sync_execution_type = 12 [deprecated = true];</code>
   * @deprecated android_studio.GradleSyncStats.sync_execution_type is deprecated.
   *     See studio_stats.proto;l=8565
   * @return The syncExecutionType.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncExecutionType getSyncExecutionType();

  /**
   * <pre>
   * The type of sync execution user requested. Note that this may be overridden
   * by [sync_execution_type] property.
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.UserRequestedExecution user_requested_sync_type = 13;</code>
   * @return Whether the userRequestedSyncType field is set.
   */
  boolean hasUserRequestedSyncType();
  /**
   * <pre>
   * The type of sync execution user requested. Note that this may be overridden
   * by [sync_execution_type] property.
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.UserRequestedExecution user_requested_sync_type = 13;</code>
   * @return The userRequestedSyncType.
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.UserRequestedExecution getUserRequestedSyncType();

  /**
   * <pre>
   * The type of sync execution Studio requested. Note that e.g. even if
   * parallel is requested, Gradle may decide to run it sequentially.
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.StudioRequestedExecution studio_requested_sync_type = 14;</code>
   * @return Whether the studioRequestedSyncType field is set.
   */
  boolean hasStudioRequestedSyncType();
  /**
   * <pre>
   * The type of sync execution Studio requested. Note that e.g. even if
   * parallel is requested, Gradle may decide to run it sequentially.
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats.StudioRequestedExecution studio_requested_sync_type = 14;</code>
   * @return The studioRequestedSyncType.
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.StudioRequestedExecution getStudioRequestedSyncType();

  /**
   * <pre>
   * Data on downloads happened during sync.
   * </pre>
   *
   * <code>optional .android_studio.BuildDownloadsAnalysisData downloads_data = 15 [lazy = true];</code>
   * @return Whether the downloadsData field is set.
   */
  boolean hasDownloadsData();
  /**
   * <pre>
   * Data on downloads happened during sync.
   * </pre>
   *
   * <code>optional .android_studio.BuildDownloadsAnalysisData downloads_data = 15 [lazy = true];</code>
   * @return The downloadsData.
   */
  com.google.wireless.android.sdk.stats.BuildDownloadsAnalysisData getDownloadsData();
  /**
   * <pre>
   * Data on downloads happened during sync.
   * </pre>
   *
   * <code>optional .android_studio.BuildDownloadsAnalysisData downloads_data = 15 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.BuildDownloadsAnalysisDataOrBuilder getDownloadsDataOrBuilder();

  /**
   * <pre>
   * Data on Version Catalog use.
   * </pre>
   *
   * <code>optional .android_studio.GradleVersionCatalogDetectorEvent.State version_catalog_detector_state = 16;</code>
   * @return Whether the versionCatalogDetectorState field is set.
   */
  boolean hasVersionCatalogDetectorState();
  /**
   * <pre>
   * Data on Version Catalog use.
   * </pre>
   *
   * <code>optional .android_studio.GradleVersionCatalogDetectorEvent.State version_catalog_detector_state = 16;</code>
   * @return The versionCatalogDetectorState.
   */
  com.google.wireless.android.sdk.stats.GradleVersionCatalogDetectorEvent.State getVersionCatalogDetectorState();

  /**
   * <pre>
   * Data on phases executed during sync.
   * Set only for sync finish events, when kind = GRADLE_SYNC_ENDED,
   * GRADLE_SYNC_CANCELLED, GRADLE_SYNC_FAILURE or GRADLE_SYNC_FAILURE_DETAILS
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncStats.GradleSyncPhaseData gradle_sync_phases_data = 17;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncPhaseData> 
      getGradleSyncPhasesDataList();
  /**
   * <pre>
   * Data on phases executed during sync.
   * Set only for sync finish events, when kind = GRADLE_SYNC_ENDED,
   * GRADLE_SYNC_CANCELLED, GRADLE_SYNC_FAILURE or GRADLE_SYNC_FAILURE_DETAILS
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncStats.GradleSyncPhaseData gradle_sync_phases_data = 17;</code>
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncPhaseData getGradleSyncPhasesData(int index);
  /**
   * <pre>
   * Data on phases executed during sync.
   * Set only for sync finish events, when kind = GRADLE_SYNC_ENDED,
   * GRADLE_SYNC_CANCELLED, GRADLE_SYNC_FAILURE or GRADLE_SYNC_FAILURE_DETAILS
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncStats.GradleSyncPhaseData gradle_sync_phases_data = 17;</code>
   */
  int getGradleSyncPhasesDataCount();
  /**
   * <pre>
   * Data on phases executed during sync.
   * Set only for sync finish events, when kind = GRADLE_SYNC_ENDED,
   * GRADLE_SYNC_CANCELLED, GRADLE_SYNC_FAILURE or GRADLE_SYNC_FAILURE_DETAILS
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncStats.GradleSyncPhaseData gradle_sync_phases_data = 17;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncPhaseDataOrBuilder> 
      getGradleSyncPhasesDataOrBuilderList();
  /**
   * <pre>
   * Data on phases executed during sync.
   * Set only for sync finish events, when kind = GRADLE_SYNC_ENDED,
   * GRADLE_SYNC_CANCELLED, GRADLE_SYNC_FAILURE or GRADLE_SYNC_FAILURE_DETAILS
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncStats.GradleSyncPhaseData gradle_sync_phases_data = 17;</code>
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats.GradleSyncPhaseDataOrBuilder getGradleSyncPhasesDataOrBuilder(
      int index);
}
