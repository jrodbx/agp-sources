// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Details for Preview refresh event
 * </pre>
 *
 * Protobuf type {@code android_studio.PreviewRefreshEvent}
 */
public final class PreviewRefreshEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.PreviewRefreshEvent)
    PreviewRefreshEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PreviewRefreshEvent.newBuilder() to construct.
  private PreviewRefreshEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PreviewRefreshEvent() {
    type_ = 0;
    result_ = 0;
    previewRenders_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PreviewRefreshEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.PreviewRefreshEvent.class, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.Builder.class);
  }

  /**
   * <pre>
   * A type corresponding to a preview tool or context in which the refresh
   * happened
   * </pre>
   *
   * Protobuf enum {@code android_studio.PreviewRefreshEvent.PreviewType}
   */
  public enum PreviewType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    UNKNOWN_TYPE(0),
    /**
     * <code>COMPOSE = 1;</code>
     */
    COMPOSE(1),
    /**
     * <code>WEAR = 2;</code>
     */
    WEAR(2),
    /**
     * <code>GLANCE = 3;</code>
     */
    GLANCE(3),
    /**
     * <code>CUSTOM_VIEW = 4;</code>
     */
    CUSTOM_VIEW(4),
    ;

    /**
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    public static final int UNKNOWN_TYPE_VALUE = 0;
    /**
     * <code>COMPOSE = 1;</code>
     */
    public static final int COMPOSE_VALUE = 1;
    /**
     * <code>WEAR = 2;</code>
     */
    public static final int WEAR_VALUE = 2;
    /**
     * <code>GLANCE = 3;</code>
     */
    public static final int GLANCE_VALUE = 3;
    /**
     * <code>CUSTOM_VIEW = 4;</code>
     */
    public static final int CUSTOM_VIEW_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PreviewType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PreviewType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TYPE;
        case 1: return COMPOSE;
        case 2: return WEAR;
        case 3: return GLANCE;
        case 4: return CUSTOM_VIEW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PreviewType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PreviewType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PreviewType>() {
            public PreviewType findValueByNumber(int number) {
              return PreviewType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.PreviewRefreshEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final PreviewType[] VALUES = values();

    public static PreviewType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PreviewType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.PreviewRefreshEvent.PreviewType)
  }

  /**
   * <pre>
   * The result of the refresh process as a whole. Note that this is not
   * directly tied to the RenderResult of each preview being refreshed
   * </pre>
   *
   * Protobuf enum {@code android_studio.PreviewRefreshEvent.RefreshResult}
   */
  public enum RefreshResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_RESULT = 0;</code>
     */
    UNKNOWN_RESULT(0),
    /**
     * <code>SUCCESS = 1;</code>
     */
    SUCCESS(1),
    /**
     * <code>SKIPPED = 2;</code>
     */
    SKIPPED(2),
    /**
     * <code>USER_CANCELLED = 3;</code>
     */
    USER_CANCELLED(3),
    /**
     * <code>AUTOMATICALLY_CANCELLED = 4;</code>
     */
    AUTOMATICALLY_CANCELLED(4),
    /**
     * <code>FAILED = 5;</code>
     */
    FAILED(5),
    ;

    /**
     * <code>UNKNOWN_RESULT = 0;</code>
     */
    public static final int UNKNOWN_RESULT_VALUE = 0;
    /**
     * <code>SUCCESS = 1;</code>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <code>SKIPPED = 2;</code>
     */
    public static final int SKIPPED_VALUE = 2;
    /**
     * <code>USER_CANCELLED = 3;</code>
     */
    public static final int USER_CANCELLED_VALUE = 3;
    /**
     * <code>AUTOMATICALLY_CANCELLED = 4;</code>
     */
    public static final int AUTOMATICALLY_CANCELLED_VALUE = 4;
    /**
     * <code>FAILED = 5;</code>
     */
    public static final int FAILED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RefreshResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RefreshResult forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_RESULT;
        case 1: return SUCCESS;
        case 2: return SKIPPED;
        case 3: return USER_CANCELLED;
        case 4: return AUTOMATICALLY_CANCELLED;
        case 5: return FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RefreshResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RefreshResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RefreshResult>() {
            public RefreshResult findValueByNumber(int number) {
              return RefreshResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.PreviewRefreshEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final RefreshResult[] VALUES = values();

    public static RefreshResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RefreshResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.PreviewRefreshEvent.RefreshResult)
  }

  public interface SinglePreviewRenderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.PreviewRefreshEvent.SinglePreviewRender)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
     * @return The result.
     */
    com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult getResult();

    /**
     * <pre>
     * True when the render also included executing the inflation step
     * </pre>
     *
     * <code>optional bool inflate = 2;</code>
     * @return Whether the inflate field is set.
     */
    boolean hasInflate();
    /**
     * <pre>
     * True when the render also included executing the inflation step
     * </pre>
     *
     * <code>optional bool inflate = 2;</code>
     * @return The inflate.
     */
    boolean getInflate();

    /**
     * <pre>
     * Quality value between 0 and 1 used for rendering
     * </pre>
     *
     * <code>optional float render_quality = 3;</code>
     * @return Whether the renderQuality field is set.
     */
    boolean hasRenderQuality();
    /**
     * <pre>
     * Quality value between 0 and 1 used for rendering
     * </pre>
     *
     * <code>optional float render_quality = 3;</code>
     * @return The renderQuality.
     */
    float getRenderQuality();

    /**
     * <pre>
     * Time taken by the render, including inflation time when corresponds
     * </pre>
     *
     * <code>optional int32 render_time_millis = 4;</code>
     * @return Whether the renderTimeMillis field is set.
     */
    boolean hasRenderTimeMillis();
    /**
     * <pre>
     * Time taken by the render, including inflation time when corresponds
     * </pre>
     *
     * <code>optional int32 render_time_millis = 4;</code>
     * @return The renderTimeMillis.
     */
    int getRenderTimeMillis();

    /**
     * <pre>
     * Simple class name of the exception thrown in a render error, e.g.
     * IllegalStateException or ClassNotFoundException
     * </pre>
     *
     * <code>optional string render_exception_simple_name = 5;</code>
     * @return Whether the renderExceptionSimpleName field is set.
     */
    boolean hasRenderExceptionSimpleName();
    /**
     * <pre>
     * Simple class name of the exception thrown in a render error, e.g.
     * IllegalStateException or ClassNotFoundException
     * </pre>
     *
     * <code>optional string render_exception_simple_name = 5;</code>
     * @return The renderExceptionSimpleName.
     */
    java.lang.String getRenderExceptionSimpleName();
    /**
     * <pre>
     * Simple class name of the exception thrown in a render error, e.g.
     * IllegalStateException or ClassNotFoundException
     * </pre>
     *
     * <code>optional string render_exception_simple_name = 5;</code>
     * @return The bytes for renderExceptionSimpleName.
     */
    com.google.protobuf.ByteString
        getRenderExceptionSimpleNameBytes();
  }
  /**
   * Protobuf type {@code android_studio.PreviewRefreshEvent.SinglePreviewRender}
   */
  public static final class SinglePreviewRender extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.PreviewRefreshEvent.SinglePreviewRender)
      SinglePreviewRenderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SinglePreviewRender.newBuilder() to construct.
    private SinglePreviewRender(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SinglePreviewRender() {
      result_ = 0;
      renderExceptionSimpleName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SinglePreviewRender();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_SinglePreviewRender_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_SinglePreviewRender_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.class, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder.class);
    }

    /**
     * Protobuf enum {@code android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult}
     */
    public enum RenderResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_RESULT = 0;</code>
       */
      UNKNOWN_RESULT(0),
      /**
       * <code>SUCCESS = 1;</code>
       */
      SUCCESS(1),
      /**
       * <code>ERROR = 2;</code>
       */
      ERROR(2),
      ;

      /**
       * <code>UNKNOWN_RESULT = 0;</code>
       */
      public static final int UNKNOWN_RESULT_VALUE = 0;
      /**
       * <code>SUCCESS = 1;</code>
       */
      public static final int SUCCESS_VALUE = 1;
      /**
       * <code>ERROR = 2;</code>
       */
      public static final int ERROR_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RenderResult valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RenderResult forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_RESULT;
          case 1: return SUCCESS;
          case 2: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RenderResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RenderResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RenderResult>() {
              public RenderResult findValueByNumber(int number) {
                return RenderResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.getDescriptor().getEnumTypes().get(0);
      }

      private static final RenderResult[] VALUES = values();

      public static RenderResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RenderResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
     * @return The result.
     */
    @java.lang.Override public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult getResult() {
      com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult.forNumber(result_);
      return result == null ? com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult.UNKNOWN_RESULT : result;
    }

    public static final int INFLATE_FIELD_NUMBER = 2;
    private boolean inflate_ = false;
    /**
     * <pre>
     * True when the render also included executing the inflation step
     * </pre>
     *
     * <code>optional bool inflate = 2;</code>
     * @return Whether the inflate field is set.
     */
    @java.lang.Override
    public boolean hasInflate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * True when the render also included executing the inflation step
     * </pre>
     *
     * <code>optional bool inflate = 2;</code>
     * @return The inflate.
     */
    @java.lang.Override
    public boolean getInflate() {
      return inflate_;
    }

    public static final int RENDER_QUALITY_FIELD_NUMBER = 3;
    private float renderQuality_ = 0F;
    /**
     * <pre>
     * Quality value between 0 and 1 used for rendering
     * </pre>
     *
     * <code>optional float render_quality = 3;</code>
     * @return Whether the renderQuality field is set.
     */
    @java.lang.Override
    public boolean hasRenderQuality() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Quality value between 0 and 1 used for rendering
     * </pre>
     *
     * <code>optional float render_quality = 3;</code>
     * @return The renderQuality.
     */
    @java.lang.Override
    public float getRenderQuality() {
      return renderQuality_;
    }

    public static final int RENDER_TIME_MILLIS_FIELD_NUMBER = 4;
    private int renderTimeMillis_ = 0;
    /**
     * <pre>
     * Time taken by the render, including inflation time when corresponds
     * </pre>
     *
     * <code>optional int32 render_time_millis = 4;</code>
     * @return Whether the renderTimeMillis field is set.
     */
    @java.lang.Override
    public boolean hasRenderTimeMillis() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Time taken by the render, including inflation time when corresponds
     * </pre>
     *
     * <code>optional int32 render_time_millis = 4;</code>
     * @return The renderTimeMillis.
     */
    @java.lang.Override
    public int getRenderTimeMillis() {
      return renderTimeMillis_;
    }

    public static final int RENDER_EXCEPTION_SIMPLE_NAME_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object renderExceptionSimpleName_ = "";
    /**
     * <pre>
     * Simple class name of the exception thrown in a render error, e.g.
     * IllegalStateException or ClassNotFoundException
     * </pre>
     *
     * <code>optional string render_exception_simple_name = 5;</code>
     * @return Whether the renderExceptionSimpleName field is set.
     */
    @java.lang.Override
    public boolean hasRenderExceptionSimpleName() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Simple class name of the exception thrown in a render error, e.g.
     * IllegalStateException or ClassNotFoundException
     * </pre>
     *
     * <code>optional string render_exception_simple_name = 5;</code>
     * @return The renderExceptionSimpleName.
     */
    @java.lang.Override
    public java.lang.String getRenderExceptionSimpleName() {
      java.lang.Object ref = renderExceptionSimpleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          renderExceptionSimpleName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Simple class name of the exception thrown in a render error, e.g.
     * IllegalStateException or ClassNotFoundException
     * </pre>
     *
     * <code>optional string render_exception_simple_name = 5;</code>
     * @return The bytes for renderExceptionSimpleName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRenderExceptionSimpleNameBytes() {
      java.lang.Object ref = renderExceptionSimpleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        renderExceptionSimpleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, inflate_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, renderQuality_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, renderTimeMillis_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, renderExceptionSimpleName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, inflate_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, renderQuality_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, renderTimeMillis_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, renderExceptionSimpleName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender other = (com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (hasInflate() != other.hasInflate()) return false;
      if (hasInflate()) {
        if (getInflate()
            != other.getInflate()) return false;
      }
      if (hasRenderQuality() != other.hasRenderQuality()) return false;
      if (hasRenderQuality()) {
        if (java.lang.Float.floatToIntBits(getRenderQuality())
            != java.lang.Float.floatToIntBits(
                other.getRenderQuality())) return false;
      }
      if (hasRenderTimeMillis() != other.hasRenderTimeMillis()) return false;
      if (hasRenderTimeMillis()) {
        if (getRenderTimeMillis()
            != other.getRenderTimeMillis()) return false;
      }
      if (hasRenderExceptionSimpleName() != other.hasRenderExceptionSimpleName()) return false;
      if (hasRenderExceptionSimpleName()) {
        if (!getRenderExceptionSimpleName()
            .equals(other.getRenderExceptionSimpleName())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasInflate()) {
        hash = (37 * hash) + INFLATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInflate());
      }
      if (hasRenderQuality()) {
        hash = (37 * hash) + RENDER_QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRenderQuality());
      }
      if (hasRenderTimeMillis()) {
        hash = (37 * hash) + RENDER_TIME_MILLIS_FIELD_NUMBER;
        hash = (53 * hash) + getRenderTimeMillis();
      }
      if (hasRenderExceptionSimpleName()) {
        hash = (37 * hash) + RENDER_EXCEPTION_SIMPLE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getRenderExceptionSimpleName().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code android_studio.PreviewRefreshEvent.SinglePreviewRender}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.PreviewRefreshEvent.SinglePreviewRender)
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_SinglePreviewRender_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_SinglePreviewRender_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.class, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        inflate_ = false;
        renderQuality_ = 0F;
        renderTimeMillis_ = 0;
        renderExceptionSimpleName_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_SinglePreviewRender_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender build() {
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender buildPartial() {
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender result = new com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.inflate_ = inflate_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.renderQuality_ = renderQuality_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.renderTimeMillis_ = renderTimeMillis_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.renderExceptionSimpleName_ = renderExceptionSimpleName_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender) {
          return mergeFrom((com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender other) {
        if (other == com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInflate()) {
          setInflate(other.getInflate());
        }
        if (other.hasRenderQuality()) {
          setRenderQuality(other.getRenderQuality());
        }
        if (other.hasRenderTimeMillis()) {
          setRenderTimeMillis(other.getRenderTimeMillis());
        }
        if (other.hasRenderExceptionSimpleName()) {
          renderExceptionSimpleName_ = other.renderExceptionSimpleName_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult tmpValue =
                    com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                inflate_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 29: {
                renderQuality_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 32: {
                renderTimeMillis_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                renderExceptionSimpleName_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult getResult() {
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult.forNumber(result_);
        return result == null ? com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult.UNKNOWN_RESULT : result;
      }
      /**
       * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.RenderResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .android_studio.PreviewRefreshEvent.SinglePreviewRender.RenderResult result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private boolean inflate_ ;
      /**
       * <pre>
       * True when the render also included executing the inflation step
       * </pre>
       *
       * <code>optional bool inflate = 2;</code>
       * @return Whether the inflate field is set.
       */
      @java.lang.Override
      public boolean hasInflate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * True when the render also included executing the inflation step
       * </pre>
       *
       * <code>optional bool inflate = 2;</code>
       * @return The inflate.
       */
      @java.lang.Override
      public boolean getInflate() {
        return inflate_;
      }
      /**
       * <pre>
       * True when the render also included executing the inflation step
       * </pre>
       *
       * <code>optional bool inflate = 2;</code>
       * @param value The inflate to set.
       * @return This builder for chaining.
       */
      public Builder setInflate(boolean value) {

        inflate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True when the render also included executing the inflation step
       * </pre>
       *
       * <code>optional bool inflate = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInflate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        inflate_ = false;
        onChanged();
        return this;
      }

      private float renderQuality_ ;
      /**
       * <pre>
       * Quality value between 0 and 1 used for rendering
       * </pre>
       *
       * <code>optional float render_quality = 3;</code>
       * @return Whether the renderQuality field is set.
       */
      @java.lang.Override
      public boolean hasRenderQuality() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Quality value between 0 and 1 used for rendering
       * </pre>
       *
       * <code>optional float render_quality = 3;</code>
       * @return The renderQuality.
       */
      @java.lang.Override
      public float getRenderQuality() {
        return renderQuality_;
      }
      /**
       * <pre>
       * Quality value between 0 and 1 used for rendering
       * </pre>
       *
       * <code>optional float render_quality = 3;</code>
       * @param value The renderQuality to set.
       * @return This builder for chaining.
       */
      public Builder setRenderQuality(float value) {

        renderQuality_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Quality value between 0 and 1 used for rendering
       * </pre>
       *
       * <code>optional float render_quality = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRenderQuality() {
        bitField0_ = (bitField0_ & ~0x00000004);
        renderQuality_ = 0F;
        onChanged();
        return this;
      }

      private int renderTimeMillis_ ;
      /**
       * <pre>
       * Time taken by the render, including inflation time when corresponds
       * </pre>
       *
       * <code>optional int32 render_time_millis = 4;</code>
       * @return Whether the renderTimeMillis field is set.
       */
      @java.lang.Override
      public boolean hasRenderTimeMillis() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Time taken by the render, including inflation time when corresponds
       * </pre>
       *
       * <code>optional int32 render_time_millis = 4;</code>
       * @return The renderTimeMillis.
       */
      @java.lang.Override
      public int getRenderTimeMillis() {
        return renderTimeMillis_;
      }
      /**
       * <pre>
       * Time taken by the render, including inflation time when corresponds
       * </pre>
       *
       * <code>optional int32 render_time_millis = 4;</code>
       * @param value The renderTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setRenderTimeMillis(int value) {

        renderTimeMillis_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time taken by the render, including inflation time when corresponds
       * </pre>
       *
       * <code>optional int32 render_time_millis = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRenderTimeMillis() {
        bitField0_ = (bitField0_ & ~0x00000008);
        renderTimeMillis_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object renderExceptionSimpleName_ = "";
      /**
       * <pre>
       * Simple class name of the exception thrown in a render error, e.g.
       * IllegalStateException or ClassNotFoundException
       * </pre>
       *
       * <code>optional string render_exception_simple_name = 5;</code>
       * @return Whether the renderExceptionSimpleName field is set.
       */
      public boolean hasRenderExceptionSimpleName() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Simple class name of the exception thrown in a render error, e.g.
       * IllegalStateException or ClassNotFoundException
       * </pre>
       *
       * <code>optional string render_exception_simple_name = 5;</code>
       * @return The renderExceptionSimpleName.
       */
      public java.lang.String getRenderExceptionSimpleName() {
        java.lang.Object ref = renderExceptionSimpleName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            renderExceptionSimpleName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Simple class name of the exception thrown in a render error, e.g.
       * IllegalStateException or ClassNotFoundException
       * </pre>
       *
       * <code>optional string render_exception_simple_name = 5;</code>
       * @return The bytes for renderExceptionSimpleName.
       */
      public com.google.protobuf.ByteString
          getRenderExceptionSimpleNameBytes() {
        java.lang.Object ref = renderExceptionSimpleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          renderExceptionSimpleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Simple class name of the exception thrown in a render error, e.g.
       * IllegalStateException or ClassNotFoundException
       * </pre>
       *
       * <code>optional string render_exception_simple_name = 5;</code>
       * @param value The renderExceptionSimpleName to set.
       * @return This builder for chaining.
       */
      public Builder setRenderExceptionSimpleName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        renderExceptionSimpleName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Simple class name of the exception thrown in a render error, e.g.
       * IllegalStateException or ClassNotFoundException
       * </pre>
       *
       * <code>optional string render_exception_simple_name = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRenderExceptionSimpleName() {
        renderExceptionSimpleName_ = getDefaultInstance().getRenderExceptionSimpleName();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Simple class name of the exception thrown in a render error, e.g.
       * IllegalStateException or ClassNotFoundException
       * </pre>
       *
       * <code>optional string render_exception_simple_name = 5;</code>
       * @param value The bytes for renderExceptionSimpleName to set.
       * @return This builder for chaining.
       */
      public Builder setRenderExceptionSimpleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        renderExceptionSimpleName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.PreviewRefreshEvent.SinglePreviewRender)
    }

    // @@protoc_insertion_point(class_scope:android_studio.PreviewRefreshEvent.SinglePreviewRender)
    private static final com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender();
    }

    public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SinglePreviewRender>
        PARSER = new com.google.protobuf.AbstractParser<SinglePreviewRender>() {
      @java.lang.Override
      public SinglePreviewRender parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SinglePreviewRender> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SinglePreviewRender> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <code>optional .android_studio.PreviewRefreshEvent.PreviewType type = 1;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .android_studio.PreviewRefreshEvent.PreviewType type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType getType() {
    com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType result = com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType.forNumber(type_);
    return result == null ? com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType.UNKNOWN_TYPE : result;
  }

  public static final int RESULT_FIELD_NUMBER = 2;
  private int result_ = 0;
  /**
   * <code>optional .android_studio.PreviewRefreshEvent.RefreshResult result = 2;</code>
   * @return Whether the result field is set.
   */
  @java.lang.Override public boolean hasResult() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .android_studio.PreviewRefreshEvent.RefreshResult result = 2;</code>
   * @return The result.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult getResult() {
    com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult result = com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult.forNumber(result_);
    return result == null ? com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult.UNKNOWN_RESULT : result;
  }

  public static final int IN_QUEUE_TIME_MILLIS_FIELD_NUMBER = 3;
  private int inQueueTimeMillis_ = 0;
  /**
   * <pre>
   * The in queue time corresponds to the time that a refresh request waits
   * inside the queue of a RefreshManager before being processed or skipped
   * </pre>
   *
   * <code>optional int32 in_queue_time_millis = 3;</code>
   * @return Whether the inQueueTimeMillis field is set.
   */
  @java.lang.Override
  public boolean hasInQueueTimeMillis() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The in queue time corresponds to the time that a refresh request waits
   * inside the queue of a RefreshManager before being processed or skipped
   * </pre>
   *
   * <code>optional int32 in_queue_time_millis = 3;</code>
   * @return The inQueueTimeMillis.
   */
  @java.lang.Override
  public int getInQueueTimeMillis() {
    return inQueueTimeMillis_;
  }

  public static final int REFRESH_TIME_MILLIS_FIELD_NUMBER = 4;
  private int refreshTimeMillis_ = 0;
  /**
   * <pre>
   * The refresh time starts when the refresh request is taken out of the
   * queue and starts to be processed and ends when the refresh process
   * finishes or gets cancelled.
   * </pre>
   *
   * <code>optional int32 refresh_time_millis = 4;</code>
   * @return Whether the refreshTimeMillis field is set.
   */
  @java.lang.Override
  public boolean hasRefreshTimeMillis() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The refresh time starts when the refresh request is taken out of the
   * queue and starts to be processed and ends when the refresh process
   * finishes or gets cancelled.
   * </pre>
   *
   * <code>optional int32 refresh_time_millis = 4;</code>
   * @return The refreshTimeMillis.
   */
  @java.lang.Override
  public int getRefreshTimeMillis() {
    return refreshTimeMillis_;
  }

  public static final int PREVIEWS_COUNT_FIELD_NUMBER = 5;
  private int previewsCount_ = 0;
  /**
   * <pre>
   * The total number of previews not filtered out by the flows and present
   * in the panel at once
   * </pre>
   *
   * <code>optional int32 previews_count = 5;</code>
   * @return Whether the previewsCount field is set.
   */
  @java.lang.Override
  public boolean hasPreviewsCount() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The total number of previews not filtered out by the flows and present
   * in the panel at once
   * </pre>
   *
   * <code>optional int32 previews_count = 5;</code>
   * @return The previewsCount.
   */
  @java.lang.Override
  public int getPreviewsCount() {
    return previewsCount_;
  }

  public static final int PREVIEWS_TO_REFRESH_FIELD_NUMBER = 6;
  private int previewsToRefresh_ = 0;
  /**
   * <pre>
   * The number of previews out of previews_count that this refresh should
   * have refreshed
   * </pre>
   *
   * <code>optional int32 previews_to_refresh = 6;</code>
   * @return Whether the previewsToRefresh field is set.
   */
  @java.lang.Override
  public boolean hasPreviewsToRefresh() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The number of previews out of previews_count that this refresh should
   * have refreshed
   * </pre>
   *
   * <code>optional int32 previews_to_refresh = 6;</code>
   * @return The previewsToRefresh.
   */
  @java.lang.Override
  public int getPreviewsToRefresh() {
    return previewsToRefresh_;
  }

  public static final int PREVIEW_RENDERS_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender> previewRenders_;
  /**
   * <pre>
   * Some information for each preview that was actually rendered
   * </pre>
   *
   * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender> getPreviewRendersList() {
    return previewRenders_;
  }
  /**
   * <pre>
   * Some information for each preview that was actually rendered
   * </pre>
   *
   * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder> 
      getPreviewRendersOrBuilderList() {
    return previewRenders_;
  }
  /**
   * <pre>
   * Some information for each preview that was actually rendered
   * </pre>
   *
   * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
   */
  @java.lang.Override
  public int getPreviewRendersCount() {
    return previewRenders_.size();
  }
  /**
   * <pre>
   * Some information for each preview that was actually rendered
   * </pre>
   *
   * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender getPreviewRenders(int index) {
    return previewRenders_.get(index);
  }
  /**
   * <pre>
   * Some information for each preview that was actually rendered
   * </pre>
   *
   * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder getPreviewRendersOrBuilder(
      int index) {
    return previewRenders_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, result_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt32(3, inQueueTimeMillis_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt32(4, refreshTimeMillis_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt32(5, previewsCount_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeInt32(6, previewsToRefresh_);
    }
    for (int i = 0; i < previewRenders_.size(); i++) {
      output.writeMessage(7, previewRenders_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, result_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, inQueueTimeMillis_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, refreshTimeMillis_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, previewsCount_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, previewsToRefresh_);
    }
    for (int i = 0; i < previewRenders_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, previewRenders_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.PreviewRefreshEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.PreviewRefreshEvent other = (com.google.wireless.android.sdk.stats.PreviewRefreshEvent) obj;

    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasResult() != other.hasResult()) return false;
    if (hasResult()) {
      if (result_ != other.result_) return false;
    }
    if (hasInQueueTimeMillis() != other.hasInQueueTimeMillis()) return false;
    if (hasInQueueTimeMillis()) {
      if (getInQueueTimeMillis()
          != other.getInQueueTimeMillis()) return false;
    }
    if (hasRefreshTimeMillis() != other.hasRefreshTimeMillis()) return false;
    if (hasRefreshTimeMillis()) {
      if (getRefreshTimeMillis()
          != other.getRefreshTimeMillis()) return false;
    }
    if (hasPreviewsCount() != other.hasPreviewsCount()) return false;
    if (hasPreviewsCount()) {
      if (getPreviewsCount()
          != other.getPreviewsCount()) return false;
    }
    if (hasPreviewsToRefresh() != other.hasPreviewsToRefresh()) return false;
    if (hasPreviewsToRefresh()) {
      if (getPreviewsToRefresh()
          != other.getPreviewsToRefresh()) return false;
    }
    if (!getPreviewRendersList()
        .equals(other.getPreviewRendersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasResult()) {
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + result_;
    }
    if (hasInQueueTimeMillis()) {
      hash = (37 * hash) + IN_QUEUE_TIME_MILLIS_FIELD_NUMBER;
      hash = (53 * hash) + getInQueueTimeMillis();
    }
    if (hasRefreshTimeMillis()) {
      hash = (37 * hash) + REFRESH_TIME_MILLIS_FIELD_NUMBER;
      hash = (53 * hash) + getRefreshTimeMillis();
    }
    if (hasPreviewsCount()) {
      hash = (37 * hash) + PREVIEWS_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getPreviewsCount();
    }
    if (hasPreviewsToRefresh()) {
      hash = (37 * hash) + PREVIEWS_TO_REFRESH_FIELD_NUMBER;
      hash = (53 * hash) + getPreviewsToRefresh();
    }
    if (getPreviewRendersCount() > 0) {
      hash = (37 * hash) + PREVIEW_RENDERS_FIELD_NUMBER;
      hash = (53 * hash) + getPreviewRendersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.PreviewRefreshEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Details for Preview refresh event
   * </pre>
   *
   * Protobuf type {@code android_studio.PreviewRefreshEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.PreviewRefreshEvent)
      com.google.wireless.android.sdk.stats.PreviewRefreshEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.PreviewRefreshEvent.class, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.PreviewRefreshEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      result_ = 0;
      inQueueTimeMillis_ = 0;
      refreshTimeMillis_ = 0;
      previewsCount_ = 0;
      previewsToRefresh_ = 0;
      if (previewRendersBuilder_ == null) {
        previewRenders_ = java.util.Collections.emptyList();
      } else {
        previewRenders_ = null;
        previewRendersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_PreviewRefreshEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.PreviewRefreshEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent build() {
      com.google.wireless.android.sdk.stats.PreviewRefreshEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent buildPartial() {
      com.google.wireless.android.sdk.stats.PreviewRefreshEvent result = new com.google.wireless.android.sdk.stats.PreviewRefreshEvent(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.wireless.android.sdk.stats.PreviewRefreshEvent result) {
      if (previewRendersBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          previewRenders_ = java.util.Collections.unmodifiableList(previewRenders_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.previewRenders_ = previewRenders_;
      } else {
        result.previewRenders_ = previewRendersBuilder_.build();
      }
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.PreviewRefreshEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.result_ = result_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.inQueueTimeMillis_ = inQueueTimeMillis_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.refreshTimeMillis_ = refreshTimeMillis_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.previewsCount_ = previewsCount_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.previewsToRefresh_ = previewsToRefresh_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.PreviewRefreshEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.PreviewRefreshEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.PreviewRefreshEvent other) {
      if (other == com.google.wireless.android.sdk.stats.PreviewRefreshEvent.getDefaultInstance()) return this;
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasResult()) {
        setResult(other.getResult());
      }
      if (other.hasInQueueTimeMillis()) {
        setInQueueTimeMillis(other.getInQueueTimeMillis());
      }
      if (other.hasRefreshTimeMillis()) {
        setRefreshTimeMillis(other.getRefreshTimeMillis());
      }
      if (other.hasPreviewsCount()) {
        setPreviewsCount(other.getPreviewsCount());
      }
      if (other.hasPreviewsToRefresh()) {
        setPreviewsToRefresh(other.getPreviewsToRefresh());
      }
      if (previewRendersBuilder_ == null) {
        if (!other.previewRenders_.isEmpty()) {
          if (previewRenders_.isEmpty()) {
            previewRenders_ = other.previewRenders_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePreviewRendersIsMutable();
            previewRenders_.addAll(other.previewRenders_);
          }
          onChanged();
        }
      } else {
        if (!other.previewRenders_.isEmpty()) {
          if (previewRendersBuilder_.isEmpty()) {
            previewRendersBuilder_.dispose();
            previewRendersBuilder_ = null;
            previewRenders_ = other.previewRenders_;
            bitField0_ = (bitField0_ & ~0x00000040);
            previewRendersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPreviewRendersFieldBuilder() : null;
          } else {
            previewRendersBuilder_.addAllMessages(other.previewRenders_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType tmpValue =
                  com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                type_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult tmpValue =
                  com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                result_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              inQueueTimeMillis_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              refreshTimeMillis_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              previewsCount_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              previewsToRefresh_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.PARSER,
                      extensionRegistry);
              if (previewRendersBuilder_ == null) {
                ensurePreviewRendersIsMutable();
                previewRenders_.add(m);
              } else {
                previewRendersBuilder_.addMessage(m);
              }
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.PreviewType type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.PreviewType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType getType() {
      com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType result = com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType.forNumber(type_);
      return result == null ? com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType.UNKNOWN_TYPE : result;
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.PreviewType type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.PreviewType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.PreviewType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private int result_ = 0;
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.RefreshResult result = 2;</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.RefreshResult result = 2;</code>
     * @return The result.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult getResult() {
      com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult result = com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult.forNumber(result_);
      return result == null ? com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult.UNKNOWN_RESULT : result;
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.RefreshResult result = 2;</code>
     * @param value The result to set.
     * @return This builder for chaining.
     */
    public Builder setResult(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.RefreshResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      result_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .android_studio.PreviewRefreshEvent.RefreshResult result = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearResult() {
      bitField0_ = (bitField0_ & ~0x00000002);
      result_ = 0;
      onChanged();
      return this;
    }

    private int inQueueTimeMillis_ ;
    /**
     * <pre>
     * The in queue time corresponds to the time that a refresh request waits
     * inside the queue of a RefreshManager before being processed or skipped
     * </pre>
     *
     * <code>optional int32 in_queue_time_millis = 3;</code>
     * @return Whether the inQueueTimeMillis field is set.
     */
    @java.lang.Override
    public boolean hasInQueueTimeMillis() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The in queue time corresponds to the time that a refresh request waits
     * inside the queue of a RefreshManager before being processed or skipped
     * </pre>
     *
     * <code>optional int32 in_queue_time_millis = 3;</code>
     * @return The inQueueTimeMillis.
     */
    @java.lang.Override
    public int getInQueueTimeMillis() {
      return inQueueTimeMillis_;
    }
    /**
     * <pre>
     * The in queue time corresponds to the time that a refresh request waits
     * inside the queue of a RefreshManager before being processed or skipped
     * </pre>
     *
     * <code>optional int32 in_queue_time_millis = 3;</code>
     * @param value The inQueueTimeMillis to set.
     * @return This builder for chaining.
     */
    public Builder setInQueueTimeMillis(int value) {

      inQueueTimeMillis_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The in queue time corresponds to the time that a refresh request waits
     * inside the queue of a RefreshManager before being processed or skipped
     * </pre>
     *
     * <code>optional int32 in_queue_time_millis = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInQueueTimeMillis() {
      bitField0_ = (bitField0_ & ~0x00000004);
      inQueueTimeMillis_ = 0;
      onChanged();
      return this;
    }

    private int refreshTimeMillis_ ;
    /**
     * <pre>
     * The refresh time starts when the refresh request is taken out of the
     * queue and starts to be processed and ends when the refresh process
     * finishes or gets cancelled.
     * </pre>
     *
     * <code>optional int32 refresh_time_millis = 4;</code>
     * @return Whether the refreshTimeMillis field is set.
     */
    @java.lang.Override
    public boolean hasRefreshTimeMillis() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The refresh time starts when the refresh request is taken out of the
     * queue and starts to be processed and ends when the refresh process
     * finishes or gets cancelled.
     * </pre>
     *
     * <code>optional int32 refresh_time_millis = 4;</code>
     * @return The refreshTimeMillis.
     */
    @java.lang.Override
    public int getRefreshTimeMillis() {
      return refreshTimeMillis_;
    }
    /**
     * <pre>
     * The refresh time starts when the refresh request is taken out of the
     * queue and starts to be processed and ends when the refresh process
     * finishes or gets cancelled.
     * </pre>
     *
     * <code>optional int32 refresh_time_millis = 4;</code>
     * @param value The refreshTimeMillis to set.
     * @return This builder for chaining.
     */
    public Builder setRefreshTimeMillis(int value) {

      refreshTimeMillis_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The refresh time starts when the refresh request is taken out of the
     * queue and starts to be processed and ends when the refresh process
     * finishes or gets cancelled.
     * </pre>
     *
     * <code>optional int32 refresh_time_millis = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRefreshTimeMillis() {
      bitField0_ = (bitField0_ & ~0x00000008);
      refreshTimeMillis_ = 0;
      onChanged();
      return this;
    }

    private int previewsCount_ ;
    /**
     * <pre>
     * The total number of previews not filtered out by the flows and present
     * in the panel at once
     * </pre>
     *
     * <code>optional int32 previews_count = 5;</code>
     * @return Whether the previewsCount field is set.
     */
    @java.lang.Override
    public boolean hasPreviewsCount() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The total number of previews not filtered out by the flows and present
     * in the panel at once
     * </pre>
     *
     * <code>optional int32 previews_count = 5;</code>
     * @return The previewsCount.
     */
    @java.lang.Override
    public int getPreviewsCount() {
      return previewsCount_;
    }
    /**
     * <pre>
     * The total number of previews not filtered out by the flows and present
     * in the panel at once
     * </pre>
     *
     * <code>optional int32 previews_count = 5;</code>
     * @param value The previewsCount to set.
     * @return This builder for chaining.
     */
    public Builder setPreviewsCount(int value) {

      previewsCount_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of previews not filtered out by the flows and present
     * in the panel at once
     * </pre>
     *
     * <code>optional int32 previews_count = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreviewsCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      previewsCount_ = 0;
      onChanged();
      return this;
    }

    private int previewsToRefresh_ ;
    /**
     * <pre>
     * The number of previews out of previews_count that this refresh should
     * have refreshed
     * </pre>
     *
     * <code>optional int32 previews_to_refresh = 6;</code>
     * @return Whether the previewsToRefresh field is set.
     */
    @java.lang.Override
    public boolean hasPreviewsToRefresh() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The number of previews out of previews_count that this refresh should
     * have refreshed
     * </pre>
     *
     * <code>optional int32 previews_to_refresh = 6;</code>
     * @return The previewsToRefresh.
     */
    @java.lang.Override
    public int getPreviewsToRefresh() {
      return previewsToRefresh_;
    }
    /**
     * <pre>
     * The number of previews out of previews_count that this refresh should
     * have refreshed
     * </pre>
     *
     * <code>optional int32 previews_to_refresh = 6;</code>
     * @param value The previewsToRefresh to set.
     * @return This builder for chaining.
     */
    public Builder setPreviewsToRefresh(int value) {

      previewsToRefresh_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of previews out of previews_count that this refresh should
     * have refreshed
     * </pre>
     *
     * <code>optional int32 previews_to_refresh = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreviewsToRefresh() {
      bitField0_ = (bitField0_ & ~0x00000020);
      previewsToRefresh_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender> previewRenders_ =
      java.util.Collections.emptyList();
    private void ensurePreviewRendersIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        previewRenders_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender>(previewRenders_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder> previewRendersBuilder_;

    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender> getPreviewRendersList() {
      if (previewRendersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(previewRenders_);
      } else {
        return previewRendersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public int getPreviewRendersCount() {
      if (previewRendersBuilder_ == null) {
        return previewRenders_.size();
      } else {
        return previewRendersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender getPreviewRenders(int index) {
      if (previewRendersBuilder_ == null) {
        return previewRenders_.get(index);
      } else {
        return previewRendersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder setPreviewRenders(
        int index, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender value) {
      if (previewRendersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePreviewRendersIsMutable();
        previewRenders_.set(index, value);
        onChanged();
      } else {
        previewRendersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder setPreviewRenders(
        int index, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder builderForValue) {
      if (previewRendersBuilder_ == null) {
        ensurePreviewRendersIsMutable();
        previewRenders_.set(index, builderForValue.build());
        onChanged();
      } else {
        previewRendersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder addPreviewRenders(com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender value) {
      if (previewRendersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePreviewRendersIsMutable();
        previewRenders_.add(value);
        onChanged();
      } else {
        previewRendersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder addPreviewRenders(
        int index, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender value) {
      if (previewRendersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePreviewRendersIsMutable();
        previewRenders_.add(index, value);
        onChanged();
      } else {
        previewRendersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder addPreviewRenders(
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder builderForValue) {
      if (previewRendersBuilder_ == null) {
        ensurePreviewRendersIsMutable();
        previewRenders_.add(builderForValue.build());
        onChanged();
      } else {
        previewRendersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder addPreviewRenders(
        int index, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder builderForValue) {
      if (previewRendersBuilder_ == null) {
        ensurePreviewRendersIsMutable();
        previewRenders_.add(index, builderForValue.build());
        onChanged();
      } else {
        previewRendersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder addAllPreviewRenders(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender> values) {
      if (previewRendersBuilder_ == null) {
        ensurePreviewRendersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, previewRenders_);
        onChanged();
      } else {
        previewRendersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder clearPreviewRenders() {
      if (previewRendersBuilder_ == null) {
        previewRenders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        previewRendersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public Builder removePreviewRenders(int index) {
      if (previewRendersBuilder_ == null) {
        ensurePreviewRendersIsMutable();
        previewRenders_.remove(index);
        onChanged();
      } else {
        previewRendersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder getPreviewRendersBuilder(
        int index) {
      return getPreviewRendersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder getPreviewRendersOrBuilder(
        int index) {
      if (previewRendersBuilder_ == null) {
        return previewRenders_.get(index);  } else {
        return previewRendersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder> 
         getPreviewRendersOrBuilderList() {
      if (previewRendersBuilder_ != null) {
        return previewRendersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(previewRenders_);
      }
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder addPreviewRendersBuilder() {
      return getPreviewRendersFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.getDefaultInstance());
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder addPreviewRendersBuilder(
        int index) {
      return getPreviewRendersFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.getDefaultInstance());
    }
    /**
     * <pre>
     * Some information for each preview that was actually rendered
     * </pre>
     *
     * <code>repeated .android_studio.PreviewRefreshEvent.SinglePreviewRender preview_renders = 7;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder> 
         getPreviewRendersBuilderList() {
      return getPreviewRendersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder> 
        getPreviewRendersFieldBuilder() {
      if (previewRendersBuilder_ == null) {
        previewRendersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRender.Builder, com.google.wireless.android.sdk.stats.PreviewRefreshEvent.SinglePreviewRenderOrBuilder>(
                previewRenders_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        previewRenders_ = null;
      }
      return previewRendersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.PreviewRefreshEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.PreviewRefreshEvent)
  private static final com.google.wireless.android.sdk.stats.PreviewRefreshEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.PreviewRefreshEvent();
  }

  public static com.google.wireless.android.sdk.stats.PreviewRefreshEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<PreviewRefreshEvent>
      PARSER = new com.google.protobuf.AbstractParser<PreviewRefreshEvent>() {
    @java.lang.Override
    public PreviewRefreshEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PreviewRefreshEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PreviewRefreshEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.PreviewRefreshEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

