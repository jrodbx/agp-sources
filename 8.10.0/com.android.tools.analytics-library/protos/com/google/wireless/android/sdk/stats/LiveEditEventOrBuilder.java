// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface LiveEditEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.LiveEditEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Result of the LiveEdit device push
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <pre>
   * Result of the LiveEdit device push
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Status status = 1;</code>
   * @return The status.
   */
  com.google.wireless.android.sdk.stats.LiveEditEvent.Status getStatus();

  /**
   * <pre>
   * Whether the changed code involves a non-&#64;Composable method
   * </pre>
   *
   * <code>optional bool has_non_compose = 2;</code>
   * @return Whether the hasNonCompose field is set.
   */
  boolean hasHasNonCompose();
  /**
   * <pre>
   * Whether the changed code involves a non-&#64;Composable method
   * </pre>
   *
   * <code>optional bool has_non_compose = 2;</code>
   * @return The hasNonCompose.
   */
  boolean getHasNonCompose();

  /**
   * <pre>
   * The duration of the LiveEdit compile, in milliseconds
   * </pre>
   *
   * <code>optional int64 compile_duration_ms = 3;</code>
   * @return Whether the compileDurationMs field is set.
   */
  boolean hasCompileDurationMs();
  /**
   * <pre>
   * The duration of the LiveEdit compile, in milliseconds
   * </pre>
   *
   * <code>optional int64 compile_duration_ms = 3;</code>
   * @return The compileDurationMs.
   */
  long getCompileDurationMs();

  /**
   * <pre>
   * The duration of the LiveEdit push, in milliseconds
   * </pre>
   *
   * <code>optional int64 push_duration_ms = 4;</code>
   * @return Whether the pushDurationMs field is set.
   */
  boolean hasPushDurationMs();
  /**
   * <pre>
   * The duration of the LiveEdit push, in milliseconds
   * </pre>
   *
   * <code>optional int64 push_duration_ms = 4;</code>
   * @return The pushDurationMs.
   */
  long getPushDurationMs();

  /**
   * <pre>
   * How the LiveEdit push was triggered
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
   * @return Whether the mode field is set.
   */
  boolean hasMode();
  /**
   * <pre>
   * How the LiveEdit push was triggered
   * </pre>
   *
   * <code>optional .android_studio.LiveEditEvent.Mode mode = 5;</code>
   * @return The mode.
   */
  com.google.wireless.android.sdk.stats.LiveEditEvent.Mode getMode();

  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project base
   * path. Used to correlate LiveEdit usage with Compose projects.
   * </pre>
   *
   * <code>optional string project_id = 6;</code>
   * @return Whether the projectId field is set.
   */
  boolean hasProjectId();
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project base
   * path. Used to correlate LiveEdit usage with Compose projects.
   * </pre>
   *
   * <code>optional string project_id = 6;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project base
   * path. Used to correlate LiveEdit usage with Compose projects.
   * </pre>
   *
   * <code>optional string project_id = 6;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <code>optional .android_studio.LiveEditEvent.Device target_device = 7;</code>
   * @return Whether the targetDevice field is set.
   */
  boolean hasTargetDevice();
  /**
   * <code>optional .android_studio.LiveEditEvent.Device target_device = 7;</code>
   * @return The targetDevice.
   */
  com.google.wireless.android.sdk.stats.LiveEditEvent.Device getTargetDevice();
}
