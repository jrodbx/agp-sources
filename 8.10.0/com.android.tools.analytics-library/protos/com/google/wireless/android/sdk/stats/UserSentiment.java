// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * UserSentiment describes how users feel about the product.
 * </pre>
 *
 * Protobuf type {@code android_studio.UserSentiment}
 */
public final class UserSentiment extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.UserSentiment)
    UserSentimentOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UserSentiment.newBuilder() to construct.
  private UserSentiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UserSentiment() {
    state_ = 0;
    level_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UserSentiment();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UserSentiment_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UserSentiment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.UserSentiment.class, com.google.wireless.android.sdk.stats.UserSentiment.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.UserSentiment.SentimentState}
   */
  public enum SentimentState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_SENTIMENT_STATE = 0;</code>
     */
    UNKNOWN_SENTIMENT_STATE(0),
    /**
     * <code>POSITIVE = 1;</code>
     */
    POSITIVE(1),
    /**
     * <code>NEGATIVE = 2;</code>
     */
    NEGATIVE(2),
    /**
     * <pre>
     * The user is feeling strong enough about the issue to start filing a bug.
     * </pre>
     *
     * <code>FILE_BUG = 3;</code>
     */
    FILE_BUG(3),
    /**
     * <pre>
     * We popped up a question dialog on what the user's sentiment is instead of
     * them chosing to submit feedback themselves
     * </pre>
     *
     * <code>POPUP_QUESTION = 4;</code>
     */
    POPUP_QUESTION(4),
    ;

    /**
     * <code>UNKNOWN_SENTIMENT_STATE = 0;</code>
     */
    public static final int UNKNOWN_SENTIMENT_STATE_VALUE = 0;
    /**
     * <code>POSITIVE = 1;</code>
     */
    public static final int POSITIVE_VALUE = 1;
    /**
     * <code>NEGATIVE = 2;</code>
     */
    public static final int NEGATIVE_VALUE = 2;
    /**
     * <pre>
     * The user is feeling strong enough about the issue to start filing a bug.
     * </pre>
     *
     * <code>FILE_BUG = 3;</code>
     */
    public static final int FILE_BUG_VALUE = 3;
    /**
     * <pre>
     * We popped up a question dialog on what the user's sentiment is instead of
     * them chosing to submit feedback themselves
     * </pre>
     *
     * <code>POPUP_QUESTION = 4;</code>
     */
    public static final int POPUP_QUESTION_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SentimentState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SentimentState forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_SENTIMENT_STATE;
        case 1: return POSITIVE;
        case 2: return NEGATIVE;
        case 3: return FILE_BUG;
        case 4: return POPUP_QUESTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SentimentState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SentimentState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SentimentState>() {
            public SentimentState findValueByNumber(int number) {
              return SentimentState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UserSentiment.getDescriptor().getEnumTypes().get(0);
    }

    private static final SentimentState[] VALUES = values();

    public static SentimentState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SentimentState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UserSentiment.SentimentState)
  }

  /**
   * Protobuf enum {@code android_studio.UserSentiment.SatisfactionLevel}
   */
  public enum SatisfactionLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_SATISFACTION_LEVEL = 0;</code>
     */
    UNKNOWN_SATISFACTION_LEVEL(0),
    /**
     * <code>VERY_DISSATISFIED = 1;</code>
     */
    VERY_DISSATISFIED(1),
    /**
     * <code>DISSATISFIED = 2;</code>
     */
    DISSATISFIED(2),
    /**
     * <code>NEUTRAL = 3;</code>
     */
    NEUTRAL(3),
    /**
     * <code>SATISFIED = 4;</code>
     */
    SATISFIED(4),
    /**
     * <code>VERY_SATISFIED = 5;</code>
     */
    VERY_SATISFIED(5),
    ;

    /**
     * <code>UNKNOWN_SATISFACTION_LEVEL = 0;</code>
     */
    public static final int UNKNOWN_SATISFACTION_LEVEL_VALUE = 0;
    /**
     * <code>VERY_DISSATISFIED = 1;</code>
     */
    public static final int VERY_DISSATISFIED_VALUE = 1;
    /**
     * <code>DISSATISFIED = 2;</code>
     */
    public static final int DISSATISFIED_VALUE = 2;
    /**
     * <code>NEUTRAL = 3;</code>
     */
    public static final int NEUTRAL_VALUE = 3;
    /**
     * <code>SATISFIED = 4;</code>
     */
    public static final int SATISFIED_VALUE = 4;
    /**
     * <code>VERY_SATISFIED = 5;</code>
     */
    public static final int VERY_SATISFIED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SatisfactionLevel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SatisfactionLevel forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_SATISFACTION_LEVEL;
        case 1: return VERY_DISSATISFIED;
        case 2: return DISSATISFIED;
        case 3: return NEUTRAL;
        case 4: return SATISFIED;
        case 5: return VERY_SATISFIED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SatisfactionLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SatisfactionLevel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SatisfactionLevel>() {
            public SatisfactionLevel findValueByNumber(int number) {
              return SatisfactionLevel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UserSentiment.getDescriptor().getEnumTypes().get(1);
    }

    private static final SatisfactionLevel[] VALUES = values();

    public static SatisfactionLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SatisfactionLevel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UserSentiment.SatisfactionLevel)
  }

  private int bitField0_;
  public static final int STATE_FIELD_NUMBER = 1;
  private int state_ = 0;
  /**
   * <pre>
   * does the user feel positive or negative about the product at this time?
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment.SentimentState state = 1;</code>
   * @return Whether the state field is set.
   */
  @java.lang.Override public boolean hasState() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * does the user feel positive or negative about the product at this time?
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment.SentimentState state = 1;</code>
   * @return The state.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UserSentiment.SentimentState getState() {
    com.google.wireless.android.sdk.stats.UserSentiment.SentimentState result = com.google.wireless.android.sdk.stats.UserSentiment.SentimentState.forNumber(state_);
    return result == null ? com.google.wireless.android.sdk.stats.UserSentiment.SentimentState.UNKNOWN_SENTIMENT_STATE : result;
  }

  public static final int LEVEL_FIELD_NUMBER = 2;
  private int level_ = 0;
  /**
   * <pre>
   * in our popup question the user can indicate a satisfaction level.
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment.SatisfactionLevel level = 2;</code>
   * @return Whether the level field is set.
   */
  @java.lang.Override public boolean hasLevel() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * in our popup question the user can indicate a satisfaction level.
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment.SatisfactionLevel level = 2;</code>
   * @return The level.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel getLevel() {
    com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel result = com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel.forNumber(level_);
    return result == null ? com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel.UNKNOWN_SATISFACTION_LEVEL : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, state_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, level_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, state_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, level_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.UserSentiment)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.UserSentiment other = (com.google.wireless.android.sdk.stats.UserSentiment) obj;

    if (hasState() != other.hasState()) return false;
    if (hasState()) {
      if (state_ != other.state_) return false;
    }
    if (hasLevel() != other.hasLevel()) return false;
    if (hasLevel()) {
      if (level_ != other.level_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasState()) {
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
    }
    if (hasLevel()) {
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + level_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UserSentiment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.UserSentiment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * UserSentiment describes how users feel about the product.
   * </pre>
   *
   * Protobuf type {@code android_studio.UserSentiment}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.UserSentiment)
      com.google.wireless.android.sdk.stats.UserSentimentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UserSentiment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UserSentiment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.UserSentiment.class, com.google.wireless.android.sdk.stats.UserSentiment.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.UserSentiment.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      state_ = 0;
      level_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UserSentiment_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UserSentiment getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.UserSentiment.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UserSentiment build() {
      com.google.wireless.android.sdk.stats.UserSentiment result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UserSentiment buildPartial() {
      com.google.wireless.android.sdk.stats.UserSentiment result = new com.google.wireless.android.sdk.stats.UserSentiment(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.UserSentiment result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.state_ = state_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.level_ = level_;
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.UserSentiment) {
        return mergeFrom((com.google.wireless.android.sdk.stats.UserSentiment)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.UserSentiment other) {
      if (other == com.google.wireless.android.sdk.stats.UserSentiment.getDefaultInstance()) return this;
      if (other.hasState()) {
        setState(other.getState());
      }
      if (other.hasLevel()) {
        setLevel(other.getLevel());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UserSentiment.SentimentState tmpValue =
                  com.google.wireless.android.sdk.stats.UserSentiment.SentimentState.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                state_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel tmpValue =
                  com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                level_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int state_ = 0;
    /**
     * <pre>
     * does the user feel positive or negative about the product at this time?
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SentimentState state = 1;</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override public boolean hasState() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * does the user feel positive or negative about the product at this time?
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SentimentState state = 1;</code>
     * @return The state.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UserSentiment.SentimentState getState() {
      com.google.wireless.android.sdk.stats.UserSentiment.SentimentState result = com.google.wireless.android.sdk.stats.UserSentiment.SentimentState.forNumber(state_);
      return result == null ? com.google.wireless.android.sdk.stats.UserSentiment.SentimentState.UNKNOWN_SENTIMENT_STATE : result;
    }
    /**
     * <pre>
     * does the user feel positive or negative about the product at this time?
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SentimentState state = 1;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.wireless.android.sdk.stats.UserSentiment.SentimentState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * does the user feel positive or negative about the product at this time?
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SentimentState state = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      state_ = 0;
      onChanged();
      return this;
    }

    private int level_ = 0;
    /**
     * <pre>
     * in our popup question the user can indicate a satisfaction level.
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SatisfactionLevel level = 2;</code>
     * @return Whether the level field is set.
     */
    @java.lang.Override public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * in our popup question the user can indicate a satisfaction level.
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SatisfactionLevel level = 2;</code>
     * @return The level.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel getLevel() {
      com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel result = com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel.forNumber(level_);
      return result == null ? com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel.UNKNOWN_SATISFACTION_LEVEL : result;
    }
    /**
     * <pre>
     * in our popup question the user can indicate a satisfaction level.
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SatisfactionLevel level = 2;</code>
     * @param value The level to set.
     * @return This builder for chaining.
     */
    public Builder setLevel(com.google.wireless.android.sdk.stats.UserSentiment.SatisfactionLevel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      level_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * in our popup question the user can indicate a satisfaction level.
     * </pre>
     *
     * <code>optional .android_studio.UserSentiment.SatisfactionLevel level = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLevel() {
      bitField0_ = (bitField0_ & ~0x00000002);
      level_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.UserSentiment)
  }

  // @@protoc_insertion_point(class_scope:android_studio.UserSentiment)
  private static final com.google.wireless.android.sdk.stats.UserSentiment DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.UserSentiment();
  }

  public static com.google.wireless.android.sdk.stats.UserSentiment getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<UserSentiment>
      PARSER = new com.google.protobuf.AbstractParser<UserSentiment>() {
    @java.lang.Override
    public UserSentiment parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UserSentiment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UserSentiment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.UserSentiment getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

