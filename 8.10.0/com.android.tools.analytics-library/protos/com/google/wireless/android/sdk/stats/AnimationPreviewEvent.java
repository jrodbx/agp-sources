// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * A user interaction with the layout editor animation previewer
 * </pre>
 *
 * Protobuf type {@code android_studio.AnimationPreviewEvent}
 */
public final class AnimationPreviewEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.AnimationPreviewEvent)
    AnimationPreviewEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AnimationPreviewEvent.newBuilder() to construct.
  private AnimationPreviewEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AnimationPreviewEvent() {
    toolbarType_ = 0;
    userAction_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AnimationPreviewEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AnimationPreviewEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AnimationPreviewEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.AnimationPreviewEvent.class, com.google.wireless.android.sdk.stats.AnimationPreviewEvent.Builder.class);
  }

  /**
   * <pre>
   * The type of animation bar. Each offers different UI and/or control panels
   * to interact with user.
   * </pre>
   *
   * Protobuf enum {@code android_studio.AnimationPreviewEvent.ToolbarType}
   */
  public enum ToolbarType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TOOLBAR_TYPE = 0;</code>
     */
    UNKNOWN_TOOLBAR_TYPE(0),
    /**
     * <pre>
     * This toolbar type is provided for endless animation.
     * For example, if the animation repeats itself, then it is considered as
     * endless.
     * </pre>
     *
     * <code>UNLIMITED_ANIMATION = 1;</code>
     */
    UNLIMITED_ANIMATION(1),
    /**
     * <pre>
     * This toolbar type is provided for endable animation.
     * It provides a slider bar to control the current animation progress.
     * </pre>
     *
     * <code>LIMITED_ANIMATION = 2;</code>
     */
    LIMITED_ANIMATION(2),
    /**
     * <pre>
     * This toolbar type is provided for animated selector.
     * It provides a dropdown button for switching the previewing animation
     * inside this animated selector.
     * </pre>
     *
     * <code>ANIMATED_SELECTOR = 3;</code>
     */
    ANIMATED_SELECTOR(3),
    ;

    /**
     * <code>UNKNOWN_TOOLBAR_TYPE = 0;</code>
     */
    public static final int UNKNOWN_TOOLBAR_TYPE_VALUE = 0;
    /**
     * <pre>
     * This toolbar type is provided for endless animation.
     * For example, if the animation repeats itself, then it is considered as
     * endless.
     * </pre>
     *
     * <code>UNLIMITED_ANIMATION = 1;</code>
     */
    public static final int UNLIMITED_ANIMATION_VALUE = 1;
    /**
     * <pre>
     * This toolbar type is provided for endable animation.
     * It provides a slider bar to control the current animation progress.
     * </pre>
     *
     * <code>LIMITED_ANIMATION = 2;</code>
     */
    public static final int LIMITED_ANIMATION_VALUE = 2;
    /**
     * <pre>
     * This toolbar type is provided for animated selector.
     * It provides a dropdown button for switching the previewing animation
     * inside this animated selector.
     * </pre>
     *
     * <code>ANIMATED_SELECTOR = 3;</code>
     */
    public static final int ANIMATED_SELECTOR_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ToolbarType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ToolbarType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TOOLBAR_TYPE;
        case 1: return UNLIMITED_ANIMATION;
        case 2: return LIMITED_ANIMATION;
        case 3: return ANIMATED_SELECTOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ToolbarType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ToolbarType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ToolbarType>() {
            public ToolbarType findValueByNumber(int number) {
              return ToolbarType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AnimationPreviewEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final ToolbarType[] VALUES = values();

    public static ToolbarType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ToolbarType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.AnimationPreviewEvent.ToolbarType)
  }

  /**
   * <pre>
   * The operation which user executed.
   * </pre>
   *
   * Protobuf enum {@code android_studio.AnimationPreviewEvent.UserAction}
   */
  public enum UserAction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_CONTROL = 0;</code>
     */
    UNKNOWN_CONTROL(0),
    /**
     * <code>PLAY = 1;</code>
     */
    PLAY(1),
    /**
     * <code>PAUSE = 2;</code>
     */
    PAUSE(2),
    /**
     * <code>STOP = 3;</code>
     */
    STOP(3),
    /**
     * <code>FRAME_FORWARD = 4;</code>
     */
    FRAME_FORWARD(4),
    /**
     * <code>FRAME_BACKWARD = 5;</code>
     */
    FRAME_BACKWARD(5),
    /**
     * <pre>
     * Control the frame by draggig the progress bar.
     * </pre>
     *
     * <code>FRAME_CONTROL = 6;</code>
     */
    FRAME_CONTROL(6),
    /**
     * <pre>
     * Select the preview animation when previewing animated selector.
     * </pre>
     *
     * <code>SELECT_ANIMATION = 7;</code>
     */
    SELECT_ANIMATION(7),
    ;

    /**
     * <code>UNKNOWN_CONTROL = 0;</code>
     */
    public static final int UNKNOWN_CONTROL_VALUE = 0;
    /**
     * <code>PLAY = 1;</code>
     */
    public static final int PLAY_VALUE = 1;
    /**
     * <code>PAUSE = 2;</code>
     */
    public static final int PAUSE_VALUE = 2;
    /**
     * <code>STOP = 3;</code>
     */
    public static final int STOP_VALUE = 3;
    /**
     * <code>FRAME_FORWARD = 4;</code>
     */
    public static final int FRAME_FORWARD_VALUE = 4;
    /**
     * <code>FRAME_BACKWARD = 5;</code>
     */
    public static final int FRAME_BACKWARD_VALUE = 5;
    /**
     * <pre>
     * Control the frame by draggig the progress bar.
     * </pre>
     *
     * <code>FRAME_CONTROL = 6;</code>
     */
    public static final int FRAME_CONTROL_VALUE = 6;
    /**
     * <pre>
     * Select the preview animation when previewing animated selector.
     * </pre>
     *
     * <code>SELECT_ANIMATION = 7;</code>
     */
    public static final int SELECT_ANIMATION_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UserAction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserAction forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_CONTROL;
        case 1: return PLAY;
        case 2: return PAUSE;
        case 3: return STOP;
        case 4: return FRAME_FORWARD;
        case 5: return FRAME_BACKWARD;
        case 6: return FRAME_CONTROL;
        case 7: return SELECT_ANIMATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserAction>() {
            public UserAction findValueByNumber(int number) {
              return UserAction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AnimationPreviewEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final UserAction[] VALUES = values();

    public static UserAction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.AnimationPreviewEvent.UserAction)
  }

  private int bitField0_;
  public static final int TOOLBAR_TYPE_FIELD_NUMBER = 1;
  private int toolbarType_ = 0;
  /**
   * <pre>
   * The type of tool bar which provided for the previewed animation.
   * </pre>
   *
   * <code>optional .android_studio.AnimationPreviewEvent.ToolbarType toolbar_type = 1;</code>
   * @return Whether the toolbarType field is set.
   */
  @java.lang.Override public boolean hasToolbarType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The type of tool bar which provided for the previewed animation.
   * </pre>
   *
   * <code>optional .android_studio.AnimationPreviewEvent.ToolbarType toolbar_type = 1;</code>
   * @return The toolbarType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType getToolbarType() {
    com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType result = com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType.forNumber(toolbarType_);
    return result == null ? com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType.UNKNOWN_TOOLBAR_TYPE : result;
  }

  public static final int USER_ACTION_FIELD_NUMBER = 2;
  private int userAction_ = 0;
  /**
   * <pre>
   * The operation from user to control the animation preview, such like play,
   * pause, or stop.
   * </pre>
   *
   * <code>optional .android_studio.AnimationPreviewEvent.UserAction user_action = 2;</code>
   * @return Whether the userAction field is set.
   */
  @java.lang.Override public boolean hasUserAction() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The operation from user to control the animation preview, such like play,
   * pause, or stop.
   * </pre>
   *
   * <code>optional .android_studio.AnimationPreviewEvent.UserAction user_action = 2;</code>
   * @return The userAction.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction getUserAction() {
    com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction result = com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction.forNumber(userAction_);
    return result == null ? com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction.UNKNOWN_CONTROL : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, toolbarType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, userAction_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, toolbarType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, userAction_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.AnimationPreviewEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.AnimationPreviewEvent other = (com.google.wireless.android.sdk.stats.AnimationPreviewEvent) obj;

    if (hasToolbarType() != other.hasToolbarType()) return false;
    if (hasToolbarType()) {
      if (toolbarType_ != other.toolbarType_) return false;
    }
    if (hasUserAction() != other.hasUserAction()) return false;
    if (hasUserAction()) {
      if (userAction_ != other.userAction_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasToolbarType()) {
      hash = (37 * hash) + TOOLBAR_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + toolbarType_;
    }
    if (hasUserAction()) {
      hash = (37 * hash) + USER_ACTION_FIELD_NUMBER;
      hash = (53 * hash) + userAction_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.AnimationPreviewEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A user interaction with the layout editor animation previewer
   * </pre>
   *
   * Protobuf type {@code android_studio.AnimationPreviewEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.AnimationPreviewEvent)
      com.google.wireless.android.sdk.stats.AnimationPreviewEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AnimationPreviewEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AnimationPreviewEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.AnimationPreviewEvent.class, com.google.wireless.android.sdk.stats.AnimationPreviewEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.AnimationPreviewEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      toolbarType_ = 0;
      userAction_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_AnimationPreviewEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AnimationPreviewEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.AnimationPreviewEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AnimationPreviewEvent build() {
      com.google.wireless.android.sdk.stats.AnimationPreviewEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AnimationPreviewEvent buildPartial() {
      com.google.wireless.android.sdk.stats.AnimationPreviewEvent result = new com.google.wireless.android.sdk.stats.AnimationPreviewEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.AnimationPreviewEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.toolbarType_ = toolbarType_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.userAction_ = userAction_;
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.AnimationPreviewEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.AnimationPreviewEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.AnimationPreviewEvent other) {
      if (other == com.google.wireless.android.sdk.stats.AnimationPreviewEvent.getDefaultInstance()) return this;
      if (other.hasToolbarType()) {
        setToolbarType(other.getToolbarType());
      }
      if (other.hasUserAction()) {
        setUserAction(other.getUserAction());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType tmpValue =
                  com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                toolbarType_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction tmpValue =
                  com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                userAction_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int toolbarType_ = 0;
    /**
     * <pre>
     * The type of tool bar which provided for the previewed animation.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.ToolbarType toolbar_type = 1;</code>
     * @return Whether the toolbarType field is set.
     */
    @java.lang.Override public boolean hasToolbarType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The type of tool bar which provided for the previewed animation.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.ToolbarType toolbar_type = 1;</code>
     * @return The toolbarType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType getToolbarType() {
      com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType result = com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType.forNumber(toolbarType_);
      return result == null ? com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType.UNKNOWN_TOOLBAR_TYPE : result;
    }
    /**
     * <pre>
     * The type of tool bar which provided for the previewed animation.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.ToolbarType toolbar_type = 1;</code>
     * @param value The toolbarType to set.
     * @return This builder for chaining.
     */
    public Builder setToolbarType(com.google.wireless.android.sdk.stats.AnimationPreviewEvent.ToolbarType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      toolbarType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of tool bar which provided for the previewed animation.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.ToolbarType toolbar_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearToolbarType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      toolbarType_ = 0;
      onChanged();
      return this;
    }

    private int userAction_ = 0;
    /**
     * <pre>
     * The operation from user to control the animation preview, such like play,
     * pause, or stop.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.UserAction user_action = 2;</code>
     * @return Whether the userAction field is set.
     */
    @java.lang.Override public boolean hasUserAction() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The operation from user to control the animation preview, such like play,
     * pause, or stop.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.UserAction user_action = 2;</code>
     * @return The userAction.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction getUserAction() {
      com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction result = com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction.forNumber(userAction_);
      return result == null ? com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction.UNKNOWN_CONTROL : result;
    }
    /**
     * <pre>
     * The operation from user to control the animation preview, such like play,
     * pause, or stop.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.UserAction user_action = 2;</code>
     * @param value The userAction to set.
     * @return This builder for chaining.
     */
    public Builder setUserAction(com.google.wireless.android.sdk.stats.AnimationPreviewEvent.UserAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      userAction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The operation from user to control the animation preview, such like play,
     * pause, or stop.
     * </pre>
     *
     * <code>optional .android_studio.AnimationPreviewEvent.UserAction user_action = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserAction() {
      bitField0_ = (bitField0_ & ~0x00000002);
      userAction_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.AnimationPreviewEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.AnimationPreviewEvent)
  private static final com.google.wireless.android.sdk.stats.AnimationPreviewEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.AnimationPreviewEvent();
  }

  public static com.google.wireless.android.sdk.stats.AnimationPreviewEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<AnimationPreviewEvent>
      PARSER = new com.google.protobuf.AbstractParser<AnimationPreviewEvent>() {
    @java.lang.Override
    public AnimationPreviewEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AnimationPreviewEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AnimationPreviewEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.AnimationPreviewEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

