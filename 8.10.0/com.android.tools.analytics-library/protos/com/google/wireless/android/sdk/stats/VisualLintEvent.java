// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Details of an event linked to visual linting
 * </pre>
 *
 * Protobuf type {@code android_studio.VisualLintEvent}
 */
public final class VisualLintEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.VisualLintEvent)
    VisualLintEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VisualLintEvent.newBuilder() to construct.
  private VisualLintEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VisualLintEvent() {
    issueType_ = 0;
    issueEvent_ = 0;
    eventOrigin_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VisualLintEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VisualLintEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VisualLintEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.VisualLintEvent.class, com.google.wireless.android.sdk.stats.VisualLintEvent.Builder.class);
  }

  /**
   * <pre>
   * Type of issues creating by visual linting
   * </pre>
   *
   * Protobuf enum {@code android_studio.VisualLintEvent.IssueType}
   */
  public enum IssueType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    UNKNOWN_TYPE(0),
    /**
     * <code>BOUNDS = 1;</code>
     */
    BOUNDS(1),
    /**
     * <code>BOTTOM_NAV = 2;</code>
     */
    BOTTOM_NAV(2),
    /**
     * <code>BOTTOM_APP_BAR = 3;</code>
     */
    BOTTOM_APP_BAR(3),
    /**
     * <code>OVERLAP = 4;</code>
     */
    OVERLAP(4),
    /**
     * <code>LONG_TEXT = 5;</code>
     */
    LONG_TEXT(5),
    /**
     * <code>ATF = 6;</code>
     */
    ATF(6),
    /**
     * <code>LOCALE_TEXT = 7;</code>
     */
    LOCALE_TEXT(7),
    /**
     * <code>TEXT_FIELD_SIZE = 8;</code>
     */
    TEXT_FIELD_SIZE(8),
    /**
     * <code>BUTTON_SIZE = 9;</code>
     */
    BUTTON_SIZE(9),
    /**
     * <code>WEAR_MARGIN = 10;</code>
     */
    WEAR_MARGIN(10),
    /**
     * <code>ATF_COLORBLIND = 11;</code>
     */
    ATF_COLORBLIND(11),
    ;

    /**
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    public static final int UNKNOWN_TYPE_VALUE = 0;
    /**
     * <code>BOUNDS = 1;</code>
     */
    public static final int BOUNDS_VALUE = 1;
    /**
     * <code>BOTTOM_NAV = 2;</code>
     */
    public static final int BOTTOM_NAV_VALUE = 2;
    /**
     * <code>BOTTOM_APP_BAR = 3;</code>
     */
    public static final int BOTTOM_APP_BAR_VALUE = 3;
    /**
     * <code>OVERLAP = 4;</code>
     */
    public static final int OVERLAP_VALUE = 4;
    /**
     * <code>LONG_TEXT = 5;</code>
     */
    public static final int LONG_TEXT_VALUE = 5;
    /**
     * <code>ATF = 6;</code>
     */
    public static final int ATF_VALUE = 6;
    /**
     * <code>LOCALE_TEXT = 7;</code>
     */
    public static final int LOCALE_TEXT_VALUE = 7;
    /**
     * <code>TEXT_FIELD_SIZE = 8;</code>
     */
    public static final int TEXT_FIELD_SIZE_VALUE = 8;
    /**
     * <code>BUTTON_SIZE = 9;</code>
     */
    public static final int BUTTON_SIZE_VALUE = 9;
    /**
     * <code>WEAR_MARGIN = 10;</code>
     */
    public static final int WEAR_MARGIN_VALUE = 10;
    /**
     * <code>ATF_COLORBLIND = 11;</code>
     */
    public static final int ATF_COLORBLIND_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IssueType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IssueType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TYPE;
        case 1: return BOUNDS;
        case 2: return BOTTOM_NAV;
        case 3: return BOTTOM_APP_BAR;
        case 4: return OVERLAP;
        case 5: return LONG_TEXT;
        case 6: return ATF;
        case 7: return LOCALE_TEXT;
        case 8: return TEXT_FIELD_SIZE;
        case 9: return BUTTON_SIZE;
        case 10: return WEAR_MARGIN;
        case 11: return ATF_COLORBLIND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IssueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IssueType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IssueType>() {
            public IssueType findValueByNumber(int number) {
              return IssueType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.VisualLintEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final IssueType[] VALUES = values();

    public static IssueType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IssueType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.VisualLintEvent.IssueType)
  }

  /**
   * <pre>
   * Type of events affecting visual lint issues
   * </pre>
   *
   * Protobuf enum {@code android_studio.VisualLintEvent.IssueEvent}
   */
  public enum IssueEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_EVENT = 0;</code>
     */
    UNKNOWN_EVENT(0),
    /**
     * <code>CREATE_ISSUE = 1;</code>
     */
    CREATE_ISSUE(1),
    /**
     * <code>EXPAND_ISSUE = 2;</code>
     */
    EXPAND_ISSUE(2),
    /**
     * <code>IGNORE_ISSUE = 3;</code>
     */
    IGNORE_ISSUE(3),
    /**
     * <code>ENABLE_RULE = 4;</code>
     */
    ENABLE_RULE(4),
    /**
     * <code>DISABLE_RULE = 5;</code>
     */
    DISABLE_RULE(5),
    /**
     * <code>ENABLE_BACKGROUND_RULE = 6;</code>
     */
    ENABLE_BACKGROUND_RULE(6),
    /**
     * <code>DISABLE_BACKGROUND_RULE = 7;</code>
     */
    DISABLE_BACKGROUND_RULE(7),
    /**
     * <code>CLICK_DOCUMENTATION_LINK = 8;</code>
     */
    CLICK_DOCUMENTATION_LINK(8),
    /**
     * <code>CANCEL_BACKGROUND_ANALYSIS = 9;</code>
     */
    CANCEL_BACKGROUND_ANALYSIS(9),
    ;

    /**
     * <code>UNKNOWN_EVENT = 0;</code>
     */
    public static final int UNKNOWN_EVENT_VALUE = 0;
    /**
     * <code>CREATE_ISSUE = 1;</code>
     */
    public static final int CREATE_ISSUE_VALUE = 1;
    /**
     * <code>EXPAND_ISSUE = 2;</code>
     */
    public static final int EXPAND_ISSUE_VALUE = 2;
    /**
     * <code>IGNORE_ISSUE = 3;</code>
     */
    public static final int IGNORE_ISSUE_VALUE = 3;
    /**
     * <code>ENABLE_RULE = 4;</code>
     */
    public static final int ENABLE_RULE_VALUE = 4;
    /**
     * <code>DISABLE_RULE = 5;</code>
     */
    public static final int DISABLE_RULE_VALUE = 5;
    /**
     * <code>ENABLE_BACKGROUND_RULE = 6;</code>
     */
    public static final int ENABLE_BACKGROUND_RULE_VALUE = 6;
    /**
     * <code>DISABLE_BACKGROUND_RULE = 7;</code>
     */
    public static final int DISABLE_BACKGROUND_RULE_VALUE = 7;
    /**
     * <code>CLICK_DOCUMENTATION_LINK = 8;</code>
     */
    public static final int CLICK_DOCUMENTATION_LINK_VALUE = 8;
    /**
     * <code>CANCEL_BACKGROUND_ANALYSIS = 9;</code>
     */
    public static final int CANCEL_BACKGROUND_ANALYSIS_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IssueEvent valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IssueEvent forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EVENT;
        case 1: return CREATE_ISSUE;
        case 2: return EXPAND_ISSUE;
        case 3: return IGNORE_ISSUE;
        case 4: return ENABLE_RULE;
        case 5: return DISABLE_RULE;
        case 6: return ENABLE_BACKGROUND_RULE;
        case 7: return DISABLE_BACKGROUND_RULE;
        case 8: return CLICK_DOCUMENTATION_LINK;
        case 9: return CANCEL_BACKGROUND_ANALYSIS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IssueEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IssueEvent> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IssueEvent>() {
            public IssueEvent findValueByNumber(int number) {
              return IssueEvent.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.VisualLintEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final IssueEvent[] VALUES = values();

    public static IssueEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IssueEvent(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.VisualLintEvent.IssueEvent)
  }

  /**
   * <pre>
   * Possible origins for visual lint event
   * </pre>
   *
   * Protobuf enum {@code android_studio.VisualLintEvent.EventOrigin}
   */
  public enum EventOrigin
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_ORIGIN = 0;</code>
     */
    UNKNOWN_ORIGIN(0),
    /**
     * <code>XML_LINTING = 1;</code>
     */
    XML_LINTING(1),
    /**
     * <code>UI_CHECK = 2;</code>
     */
    UI_CHECK(2),
    ;

    /**
     * <code>UNKNOWN_ORIGIN = 0;</code>
     */
    public static final int UNKNOWN_ORIGIN_VALUE = 0;
    /**
     * <code>XML_LINTING = 1;</code>
     */
    public static final int XML_LINTING_VALUE = 1;
    /**
     * <code>UI_CHECK = 2;</code>
     */
    public static final int UI_CHECK_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EventOrigin valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EventOrigin forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ORIGIN;
        case 1: return XML_LINTING;
        case 2: return UI_CHECK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EventOrigin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EventOrigin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventOrigin>() {
            public EventOrigin findValueByNumber(int number) {
              return EventOrigin.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.VisualLintEvent.getDescriptor().getEnumTypes().get(2);
    }

    private static final EventOrigin[] VALUES = values();

    public static EventOrigin valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EventOrigin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.VisualLintEvent.EventOrigin)
  }

  private int bitField0_;
  public static final int ISSUE_TYPE_FIELD_NUMBER = 1;
  private int issueType_ = 0;
  /**
   * <pre>
   * The type of the visual lint issue affected by this event
   * </pre>
   *
   * <code>optional .android_studio.VisualLintEvent.IssueType issue_type = 1;</code>
   * @return Whether the issueType field is set.
   */
  @java.lang.Override public boolean hasIssueType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The type of the visual lint issue affected by this event
   * </pre>
   *
   * <code>optional .android_studio.VisualLintEvent.IssueType issue_type = 1;</code>
   * @return The issueType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType getIssueType() {
    com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType result = com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType.forNumber(issueType_);
    return result == null ? com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType.UNKNOWN_TYPE : result;
  }

  public static final int ISSUE_EVENT_FIELD_NUMBER = 2;
  private int issueEvent_ = 0;
  /**
   * <pre>
   * The kind of event affecting the issue
   * </pre>
   *
   * <code>optional .android_studio.VisualLintEvent.IssueEvent issue_event = 2;</code>
   * @return Whether the issueEvent field is set.
   */
  @java.lang.Override public boolean hasIssueEvent() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The kind of event affecting the issue
   * </pre>
   *
   * <code>optional .android_studio.VisualLintEvent.IssueEvent issue_event = 2;</code>
   * @return The issueEvent.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent getIssueEvent() {
    com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent result = com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent.forNumber(issueEvent_);
    return result == null ? com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent.UNKNOWN_EVENT : result;
  }

  public static final int EVENT_ORIGIN_FIELD_NUMBER = 3;
  private int eventOrigin_ = 0;
  /**
   * <pre>
   * The origin that triggered the visual lint event
   * </pre>
   *
   * <code>optional .android_studio.VisualLintEvent.EventOrigin event_origin = 3;</code>
   * @return Whether the eventOrigin field is set.
   */
  @java.lang.Override public boolean hasEventOrigin() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The origin that triggered the visual lint event
   * </pre>
   *
   * <code>optional .android_studio.VisualLintEvent.EventOrigin event_origin = 3;</code>
   * @return The eventOrigin.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin getEventOrigin() {
    com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin result = com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin.forNumber(eventOrigin_);
    return result == null ? com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin.UNKNOWN_ORIGIN : result;
  }

  public static final int UI_CHECK_START_TIME_MS_FIELD_NUMBER = 4;
  private long uiCheckStartTimeMs_ = 0L;
  /**
   * <pre>
   * The time it took for UI Check mode to start in ms
   * </pre>
   *
   * <code>optional int64 ui_check_start_time_ms = 4;</code>
   * @return Whether the uiCheckStartTimeMs field is set.
   */
  @java.lang.Override
  public boolean hasUiCheckStartTimeMs() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The time it took for UI Check mode to start in ms
   * </pre>
   *
   * <code>optional int64 ui_check_start_time_ms = 4;</code>
   * @return The uiCheckStartTimeMs.
   */
  @java.lang.Override
  public long getUiCheckStartTimeMs() {
    return uiCheckStartTimeMs_;
  }

  public static final int VISIBLE_PREVIEWS_NUMBER_FIELD_NUMBER = 5;
  private int visiblePreviewsNumber_ = 0;
  /**
   * <pre>
   * The number of visible previews in UI Check
   * </pre>
   *
   * <code>optional int32 visible_previews_number = 5;</code>
   * @return Whether the visiblePreviewsNumber field is set.
   */
  @java.lang.Override
  public boolean hasVisiblePreviewsNumber() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The number of visible previews in UI Check
   * </pre>
   *
   * <code>optional int32 visible_previews_number = 5;</code>
   * @return The visiblePreviewsNumber.
   */
  @java.lang.Override
  public int getVisiblePreviewsNumber() {
    return visiblePreviewsNumber_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, issueType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, issueEvent_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeEnum(3, eventOrigin_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(4, uiCheckStartTimeMs_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt32(5, visiblePreviewsNumber_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, issueType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, issueEvent_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, eventOrigin_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, uiCheckStartTimeMs_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, visiblePreviewsNumber_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.VisualLintEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.VisualLintEvent other = (com.google.wireless.android.sdk.stats.VisualLintEvent) obj;

    if (hasIssueType() != other.hasIssueType()) return false;
    if (hasIssueType()) {
      if (issueType_ != other.issueType_) return false;
    }
    if (hasIssueEvent() != other.hasIssueEvent()) return false;
    if (hasIssueEvent()) {
      if (issueEvent_ != other.issueEvent_) return false;
    }
    if (hasEventOrigin() != other.hasEventOrigin()) return false;
    if (hasEventOrigin()) {
      if (eventOrigin_ != other.eventOrigin_) return false;
    }
    if (hasUiCheckStartTimeMs() != other.hasUiCheckStartTimeMs()) return false;
    if (hasUiCheckStartTimeMs()) {
      if (getUiCheckStartTimeMs()
          != other.getUiCheckStartTimeMs()) return false;
    }
    if (hasVisiblePreviewsNumber() != other.hasVisiblePreviewsNumber()) return false;
    if (hasVisiblePreviewsNumber()) {
      if (getVisiblePreviewsNumber()
          != other.getVisiblePreviewsNumber()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasIssueType()) {
      hash = (37 * hash) + ISSUE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + issueType_;
    }
    if (hasIssueEvent()) {
      hash = (37 * hash) + ISSUE_EVENT_FIELD_NUMBER;
      hash = (53 * hash) + issueEvent_;
    }
    if (hasEventOrigin()) {
      hash = (37 * hash) + EVENT_ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + eventOrigin_;
    }
    if (hasUiCheckStartTimeMs()) {
      hash = (37 * hash) + UI_CHECK_START_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUiCheckStartTimeMs());
    }
    if (hasVisiblePreviewsNumber()) {
      hash = (37 * hash) + VISIBLE_PREVIEWS_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getVisiblePreviewsNumber();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.VisualLintEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.VisualLintEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Details of an event linked to visual linting
   * </pre>
   *
   * Protobuf type {@code android_studio.VisualLintEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.VisualLintEvent)
      com.google.wireless.android.sdk.stats.VisualLintEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VisualLintEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VisualLintEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.VisualLintEvent.class, com.google.wireless.android.sdk.stats.VisualLintEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.VisualLintEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      issueType_ = 0;
      issueEvent_ = 0;
      eventOrigin_ = 0;
      uiCheckStartTimeMs_ = 0L;
      visiblePreviewsNumber_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_VisualLintEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VisualLintEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.VisualLintEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VisualLintEvent build() {
      com.google.wireless.android.sdk.stats.VisualLintEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VisualLintEvent buildPartial() {
      com.google.wireless.android.sdk.stats.VisualLintEvent result = new com.google.wireless.android.sdk.stats.VisualLintEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.VisualLintEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.issueType_ = issueType_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.issueEvent_ = issueEvent_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.eventOrigin_ = eventOrigin_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.uiCheckStartTimeMs_ = uiCheckStartTimeMs_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.visiblePreviewsNumber_ = visiblePreviewsNumber_;
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.VisualLintEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.VisualLintEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.VisualLintEvent other) {
      if (other == com.google.wireless.android.sdk.stats.VisualLintEvent.getDefaultInstance()) return this;
      if (other.hasIssueType()) {
        setIssueType(other.getIssueType());
      }
      if (other.hasIssueEvent()) {
        setIssueEvent(other.getIssueEvent());
      }
      if (other.hasEventOrigin()) {
        setEventOrigin(other.getEventOrigin());
      }
      if (other.hasUiCheckStartTimeMs()) {
        setUiCheckStartTimeMs(other.getUiCheckStartTimeMs());
      }
      if (other.hasVisiblePreviewsNumber()) {
        setVisiblePreviewsNumber(other.getVisiblePreviewsNumber());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType tmpValue =
                  com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                issueType_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent tmpValue =
                  com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                issueEvent_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin tmpValue =
                  com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(3, tmpRaw);
              } else {
                eventOrigin_ = tmpRaw;
                bitField0_ |= 0x00000004;
              }
              break;
            } // case 24
            case 32: {
              uiCheckStartTimeMs_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              visiblePreviewsNumber_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int issueType_ = 0;
    /**
     * <pre>
     * The type of the visual lint issue affected by this event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueType issue_type = 1;</code>
     * @return Whether the issueType field is set.
     */
    @java.lang.Override public boolean hasIssueType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The type of the visual lint issue affected by this event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueType issue_type = 1;</code>
     * @return The issueType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType getIssueType() {
      com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType result = com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType.forNumber(issueType_);
      return result == null ? com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType.UNKNOWN_TYPE : result;
    }
    /**
     * <pre>
     * The type of the visual lint issue affected by this event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueType issue_type = 1;</code>
     * @param value The issueType to set.
     * @return This builder for chaining.
     */
    public Builder setIssueType(com.google.wireless.android.sdk.stats.VisualLintEvent.IssueType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      issueType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the visual lint issue affected by this event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueType issue_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIssueType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      issueType_ = 0;
      onChanged();
      return this;
    }

    private int issueEvent_ = 0;
    /**
     * <pre>
     * The kind of event affecting the issue
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueEvent issue_event = 2;</code>
     * @return Whether the issueEvent field is set.
     */
    @java.lang.Override public boolean hasIssueEvent() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The kind of event affecting the issue
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueEvent issue_event = 2;</code>
     * @return The issueEvent.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent getIssueEvent() {
      com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent result = com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent.forNumber(issueEvent_);
      return result == null ? com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent.UNKNOWN_EVENT : result;
    }
    /**
     * <pre>
     * The kind of event affecting the issue
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueEvent issue_event = 2;</code>
     * @param value The issueEvent to set.
     * @return This builder for chaining.
     */
    public Builder setIssueEvent(com.google.wireless.android.sdk.stats.VisualLintEvent.IssueEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      issueEvent_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The kind of event affecting the issue
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.IssueEvent issue_event = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIssueEvent() {
      bitField0_ = (bitField0_ & ~0x00000002);
      issueEvent_ = 0;
      onChanged();
      return this;
    }

    private int eventOrigin_ = 0;
    /**
     * <pre>
     * The origin that triggered the visual lint event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.EventOrigin event_origin = 3;</code>
     * @return Whether the eventOrigin field is set.
     */
    @java.lang.Override public boolean hasEventOrigin() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The origin that triggered the visual lint event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.EventOrigin event_origin = 3;</code>
     * @return The eventOrigin.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin getEventOrigin() {
      com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin result = com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin.forNumber(eventOrigin_);
      return result == null ? com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin.UNKNOWN_ORIGIN : result;
    }
    /**
     * <pre>
     * The origin that triggered the visual lint event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.EventOrigin event_origin = 3;</code>
     * @param value The eventOrigin to set.
     * @return This builder for chaining.
     */
    public Builder setEventOrigin(com.google.wireless.android.sdk.stats.VisualLintEvent.EventOrigin value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      eventOrigin_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The origin that triggered the visual lint event
     * </pre>
     *
     * <code>optional .android_studio.VisualLintEvent.EventOrigin event_origin = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventOrigin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      eventOrigin_ = 0;
      onChanged();
      return this;
    }

    private long uiCheckStartTimeMs_ ;
    /**
     * <pre>
     * The time it took for UI Check mode to start in ms
     * </pre>
     *
     * <code>optional int64 ui_check_start_time_ms = 4;</code>
     * @return Whether the uiCheckStartTimeMs field is set.
     */
    @java.lang.Override
    public boolean hasUiCheckStartTimeMs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The time it took for UI Check mode to start in ms
     * </pre>
     *
     * <code>optional int64 ui_check_start_time_ms = 4;</code>
     * @return The uiCheckStartTimeMs.
     */
    @java.lang.Override
    public long getUiCheckStartTimeMs() {
      return uiCheckStartTimeMs_;
    }
    /**
     * <pre>
     * The time it took for UI Check mode to start in ms
     * </pre>
     *
     * <code>optional int64 ui_check_start_time_ms = 4;</code>
     * @param value The uiCheckStartTimeMs to set.
     * @return This builder for chaining.
     */
    public Builder setUiCheckStartTimeMs(long value) {

      uiCheckStartTimeMs_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The time it took for UI Check mode to start in ms
     * </pre>
     *
     * <code>optional int64 ui_check_start_time_ms = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearUiCheckStartTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000008);
      uiCheckStartTimeMs_ = 0L;
      onChanged();
      return this;
    }

    private int visiblePreviewsNumber_ ;
    /**
     * <pre>
     * The number of visible previews in UI Check
     * </pre>
     *
     * <code>optional int32 visible_previews_number = 5;</code>
     * @return Whether the visiblePreviewsNumber field is set.
     */
    @java.lang.Override
    public boolean hasVisiblePreviewsNumber() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The number of visible previews in UI Check
     * </pre>
     *
     * <code>optional int32 visible_previews_number = 5;</code>
     * @return The visiblePreviewsNumber.
     */
    @java.lang.Override
    public int getVisiblePreviewsNumber() {
      return visiblePreviewsNumber_;
    }
    /**
     * <pre>
     * The number of visible previews in UI Check
     * </pre>
     *
     * <code>optional int32 visible_previews_number = 5;</code>
     * @param value The visiblePreviewsNumber to set.
     * @return This builder for chaining.
     */
    public Builder setVisiblePreviewsNumber(int value) {

      visiblePreviewsNumber_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of visible previews in UI Check
     * </pre>
     *
     * <code>optional int32 visible_previews_number = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearVisiblePreviewsNumber() {
      bitField0_ = (bitField0_ & ~0x00000010);
      visiblePreviewsNumber_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.VisualLintEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.VisualLintEvent)
  private static final com.google.wireless.android.sdk.stats.VisualLintEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.VisualLintEvent();
  }

  public static com.google.wireless.android.sdk.stats.VisualLintEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<VisualLintEvent>
      PARSER = new com.google.protobuf.AbstractParser<VisualLintEvent>() {
    @java.lang.Override
    public VisualLintEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VisualLintEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VisualLintEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.VisualLintEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

