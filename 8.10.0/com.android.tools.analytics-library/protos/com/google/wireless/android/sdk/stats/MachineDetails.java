// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Details about the machine this process is running on.
 * </pre>
 *
 * Protobuf type {@code android_studio.MachineDetails}
 */
public final class MachineDetails extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.MachineDetails)
    MachineDetailsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MachineDetails.newBuilder() to construct.
  private MachineDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MachineDetails() {
    display_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MachineDetails();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_MachineDetails_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_MachineDetails_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.MachineDetails.class, com.google.wireless.android.sdk.stats.MachineDetails.Builder.class);
  }

  private int bitField0_;
  public static final int TOTAL_RAM_FIELD_NUMBER = 1;
  private long totalRam_ = 0L;
  /**
   * <pre>
   * Amount of total memory available in megabytes.
   * </pre>
   *
   * <code>optional int64 total_ram = 1;</code>
   * @return Whether the totalRam field is set.
   */
  @java.lang.Override
  public boolean hasTotalRam() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Amount of total memory available in megabytes.
   * </pre>
   *
   * <code>optional int64 total_ram = 1;</code>
   * @return The totalRam.
   */
  @java.lang.Override
  public long getTotalRam() {
    return totalRam_;
  }

  public static final int TOTAL_DISK_FIELD_NUMBER = 2;
  private long totalDisk_ = 0L;
  /**
   * <pre>
   * Amount of total disk available in megabytes.
   * </pre>
   *
   * <code>optional int64 total_disk = 2;</code>
   * @return Whether the totalDisk field is set.
   */
  @java.lang.Override
  public boolean hasTotalDisk() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Amount of total disk available in megabytes.
   * </pre>
   *
   * <code>optional int64 total_disk = 2;</code>
   * @return The totalDisk.
   */
  @java.lang.Override
  public long getTotalDisk() {
    return totalDisk_;
  }

  public static final int DISPLAY_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.DisplayDetails> display_;
  /**
   * <pre>
   * Information about the display screens on the machine (resolution etc..)
   * </pre>
   *
   * <code>repeated .android_studio.DisplayDetails display = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.DisplayDetails> getDisplayList() {
    return display_;
  }
  /**
   * <pre>
   * Information about the display screens on the machine (resolution etc..)
   * </pre>
   *
   * <code>repeated .android_studio.DisplayDetails display = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder> 
      getDisplayOrBuilderList() {
    return display_;
  }
  /**
   * <pre>
   * Information about the display screens on the machine (resolution etc..)
   * </pre>
   *
   * <code>repeated .android_studio.DisplayDetails display = 3;</code>
   */
  @java.lang.Override
  public int getDisplayCount() {
    return display_.size();
  }
  /**
   * <pre>
   * Information about the display screens on the machine (resolution etc..)
   * </pre>
   *
   * <code>repeated .android_studio.DisplayDetails display = 3;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DisplayDetails getDisplay(int index) {
    return display_.get(index);
  }
  /**
   * <pre>
   * Information about the display screens on the machine (resolution etc..)
   * </pre>
   *
   * <code>repeated .android_studio.DisplayDetails display = 3;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder getDisplayOrBuilder(
      int index) {
    return display_.get(index);
  }

  public static final int AVAILABLE_PROCESSORS_FIELD_NUMBER = 4;
  private int availableProcessors_ = 0;
  /**
   * <pre>
   * Number of processors on the machine.
   * </pre>
   *
   * <code>optional int32 available_processors = 4;</code>
   * @return Whether the availableProcessors field is set.
   */
  @java.lang.Override
  public boolean hasAvailableProcessors() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Number of processors on the machine.
   * </pre>
   *
   * <code>optional int32 available_processors = 4;</code>
   * @return The availableProcessors.
   */
  @java.lang.Override
  public int getAvailableProcessors() {
    return availableProcessors_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, totalRam_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(2, totalDisk_);
    }
    for (int i = 0; i < display_.size(); i++) {
      output.writeMessage(3, display_.get(i));
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt32(4, availableProcessors_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, totalRam_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, totalDisk_);
    }
    for (int i = 0; i < display_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, display_.get(i));
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, availableProcessors_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.MachineDetails)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.MachineDetails other = (com.google.wireless.android.sdk.stats.MachineDetails) obj;

    if (hasTotalRam() != other.hasTotalRam()) return false;
    if (hasTotalRam()) {
      if (getTotalRam()
          != other.getTotalRam()) return false;
    }
    if (hasTotalDisk() != other.hasTotalDisk()) return false;
    if (hasTotalDisk()) {
      if (getTotalDisk()
          != other.getTotalDisk()) return false;
    }
    if (!getDisplayList()
        .equals(other.getDisplayList())) return false;
    if (hasAvailableProcessors() != other.hasAvailableProcessors()) return false;
    if (hasAvailableProcessors()) {
      if (getAvailableProcessors()
          != other.getAvailableProcessors()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTotalRam()) {
      hash = (37 * hash) + TOTAL_RAM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalRam());
    }
    if (hasTotalDisk()) {
      hash = (37 * hash) + TOTAL_DISK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalDisk());
    }
    if (getDisplayCount() > 0) {
      hash = (37 * hash) + DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getDisplayList().hashCode();
    }
    if (hasAvailableProcessors()) {
      hash = (37 * hash) + AVAILABLE_PROCESSORS_FIELD_NUMBER;
      hash = (53 * hash) + getAvailableProcessors();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.MachineDetails parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.MachineDetails prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Details about the machine this process is running on.
   * </pre>
   *
   * Protobuf type {@code android_studio.MachineDetails}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.MachineDetails)
      com.google.wireless.android.sdk.stats.MachineDetailsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_MachineDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_MachineDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.MachineDetails.class, com.google.wireless.android.sdk.stats.MachineDetails.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.MachineDetails.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      totalRam_ = 0L;
      totalDisk_ = 0L;
      if (displayBuilder_ == null) {
        display_ = java.util.Collections.emptyList();
      } else {
        display_ = null;
        displayBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      availableProcessors_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_MachineDetails_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.MachineDetails getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.MachineDetails.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.MachineDetails build() {
      com.google.wireless.android.sdk.stats.MachineDetails result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.MachineDetails buildPartial() {
      com.google.wireless.android.sdk.stats.MachineDetails result = new com.google.wireless.android.sdk.stats.MachineDetails(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.wireless.android.sdk.stats.MachineDetails result) {
      if (displayBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          display_ = java.util.Collections.unmodifiableList(display_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.display_ = display_;
      } else {
        result.display_ = displayBuilder_.build();
      }
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.MachineDetails result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.totalRam_ = totalRam_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.totalDisk_ = totalDisk_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.availableProcessors_ = availableProcessors_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.MachineDetails) {
        return mergeFrom((com.google.wireless.android.sdk.stats.MachineDetails)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.MachineDetails other) {
      if (other == com.google.wireless.android.sdk.stats.MachineDetails.getDefaultInstance()) return this;
      if (other.hasTotalRam()) {
        setTotalRam(other.getTotalRam());
      }
      if (other.hasTotalDisk()) {
        setTotalDisk(other.getTotalDisk());
      }
      if (displayBuilder_ == null) {
        if (!other.display_.isEmpty()) {
          if (display_.isEmpty()) {
            display_ = other.display_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDisplayIsMutable();
            display_.addAll(other.display_);
          }
          onChanged();
        }
      } else {
        if (!other.display_.isEmpty()) {
          if (displayBuilder_.isEmpty()) {
            displayBuilder_.dispose();
            displayBuilder_ = null;
            display_ = other.display_;
            bitField0_ = (bitField0_ & ~0x00000004);
            displayBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDisplayFieldBuilder() : null;
          } else {
            displayBuilder_.addAllMessages(other.display_);
          }
        }
      }
      if (other.hasAvailableProcessors()) {
        setAvailableProcessors(other.getAvailableProcessors());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              totalRam_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              totalDisk_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.google.wireless.android.sdk.stats.DisplayDetails m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.DisplayDetails.PARSER,
                      extensionRegistry);
              if (displayBuilder_ == null) {
                ensureDisplayIsMutable();
                display_.add(m);
              } else {
                displayBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 32: {
              availableProcessors_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long totalRam_ ;
    /**
     * <pre>
     * Amount of total memory available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_ram = 1;</code>
     * @return Whether the totalRam field is set.
     */
    @java.lang.Override
    public boolean hasTotalRam() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Amount of total memory available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_ram = 1;</code>
     * @return The totalRam.
     */
    @java.lang.Override
    public long getTotalRam() {
      return totalRam_;
    }
    /**
     * <pre>
     * Amount of total memory available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_ram = 1;</code>
     * @param value The totalRam to set.
     * @return This builder for chaining.
     */
    public Builder setTotalRam(long value) {

      totalRam_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount of total memory available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_ram = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalRam() {
      bitField0_ = (bitField0_ & ~0x00000001);
      totalRam_ = 0L;
      onChanged();
      return this;
    }

    private long totalDisk_ ;
    /**
     * <pre>
     * Amount of total disk available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_disk = 2;</code>
     * @return Whether the totalDisk field is set.
     */
    @java.lang.Override
    public boolean hasTotalDisk() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Amount of total disk available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_disk = 2;</code>
     * @return The totalDisk.
     */
    @java.lang.Override
    public long getTotalDisk() {
      return totalDisk_;
    }
    /**
     * <pre>
     * Amount of total disk available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_disk = 2;</code>
     * @param value The totalDisk to set.
     * @return This builder for chaining.
     */
    public Builder setTotalDisk(long value) {

      totalDisk_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount of total disk available in megabytes.
     * </pre>
     *
     * <code>optional int64 total_disk = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalDisk() {
      bitField0_ = (bitField0_ & ~0x00000002);
      totalDisk_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.google.wireless.android.sdk.stats.DisplayDetails> display_ =
      java.util.Collections.emptyList();
    private void ensureDisplayIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        display_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.DisplayDetails>(display_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DisplayDetails, com.google.wireless.android.sdk.stats.DisplayDetails.Builder, com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder> displayBuilder_;

    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.DisplayDetails> getDisplayList() {
      if (displayBuilder_ == null) {
        return java.util.Collections.unmodifiableList(display_);
      } else {
        return displayBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public int getDisplayCount() {
      if (displayBuilder_ == null) {
        return display_.size();
      } else {
        return displayBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.DisplayDetails getDisplay(int index) {
      if (displayBuilder_ == null) {
        return display_.get(index);
      } else {
        return displayBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder setDisplay(
        int index, com.google.wireless.android.sdk.stats.DisplayDetails value) {
      if (displayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDisplayIsMutable();
        display_.set(index, value);
        onChanged();
      } else {
        displayBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder setDisplay(
        int index, com.google.wireless.android.sdk.stats.DisplayDetails.Builder builderForValue) {
      if (displayBuilder_ == null) {
        ensureDisplayIsMutable();
        display_.set(index, builderForValue.build());
        onChanged();
      } else {
        displayBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder addDisplay(com.google.wireless.android.sdk.stats.DisplayDetails value) {
      if (displayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDisplayIsMutable();
        display_.add(value);
        onChanged();
      } else {
        displayBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder addDisplay(
        int index, com.google.wireless.android.sdk.stats.DisplayDetails value) {
      if (displayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDisplayIsMutable();
        display_.add(index, value);
        onChanged();
      } else {
        displayBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder addDisplay(
        com.google.wireless.android.sdk.stats.DisplayDetails.Builder builderForValue) {
      if (displayBuilder_ == null) {
        ensureDisplayIsMutable();
        display_.add(builderForValue.build());
        onChanged();
      } else {
        displayBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder addDisplay(
        int index, com.google.wireless.android.sdk.stats.DisplayDetails.Builder builderForValue) {
      if (displayBuilder_ == null) {
        ensureDisplayIsMutable();
        display_.add(index, builderForValue.build());
        onChanged();
      } else {
        displayBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder addAllDisplay(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.DisplayDetails> values) {
      if (displayBuilder_ == null) {
        ensureDisplayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, display_);
        onChanged();
      } else {
        displayBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder clearDisplay() {
      if (displayBuilder_ == null) {
        display_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        displayBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public Builder removeDisplay(int index) {
      if (displayBuilder_ == null) {
        ensureDisplayIsMutable();
        display_.remove(index);
        onChanged();
      } else {
        displayBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.DisplayDetails.Builder getDisplayBuilder(
        int index) {
      return getDisplayFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder getDisplayOrBuilder(
        int index) {
      if (displayBuilder_ == null) {
        return display_.get(index);  } else {
        return displayBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder> 
         getDisplayOrBuilderList() {
      if (displayBuilder_ != null) {
        return displayBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(display_);
      }
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.DisplayDetails.Builder addDisplayBuilder() {
      return getDisplayFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.DisplayDetails.getDefaultInstance());
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public com.google.wireless.android.sdk.stats.DisplayDetails.Builder addDisplayBuilder(
        int index) {
      return getDisplayFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.DisplayDetails.getDefaultInstance());
    }
    /**
     * <pre>
     * Information about the display screens on the machine (resolution etc..)
     * </pre>
     *
     * <code>repeated .android_studio.DisplayDetails display = 3;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.DisplayDetails.Builder> 
         getDisplayBuilderList() {
      return getDisplayFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DisplayDetails, com.google.wireless.android.sdk.stats.DisplayDetails.Builder, com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder> 
        getDisplayFieldBuilder() {
      if (displayBuilder_ == null) {
        displayBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DisplayDetails, com.google.wireless.android.sdk.stats.DisplayDetails.Builder, com.google.wireless.android.sdk.stats.DisplayDetailsOrBuilder>(
                display_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        display_ = null;
      }
      return displayBuilder_;
    }

    private int availableProcessors_ ;
    /**
     * <pre>
     * Number of processors on the machine.
     * </pre>
     *
     * <code>optional int32 available_processors = 4;</code>
     * @return Whether the availableProcessors field is set.
     */
    @java.lang.Override
    public boolean hasAvailableProcessors() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Number of processors on the machine.
     * </pre>
     *
     * <code>optional int32 available_processors = 4;</code>
     * @return The availableProcessors.
     */
    @java.lang.Override
    public int getAvailableProcessors() {
      return availableProcessors_;
    }
    /**
     * <pre>
     * Number of processors on the machine.
     * </pre>
     *
     * <code>optional int32 available_processors = 4;</code>
     * @param value The availableProcessors to set.
     * @return This builder for chaining.
     */
    public Builder setAvailableProcessors(int value) {

      availableProcessors_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of processors on the machine.
     * </pre>
     *
     * <code>optional int32 available_processors = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAvailableProcessors() {
      bitField0_ = (bitField0_ & ~0x00000008);
      availableProcessors_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.MachineDetails)
  }

  // @@protoc_insertion_point(class_scope:android_studio.MachineDetails)
  private static final com.google.wireless.android.sdk.stats.MachineDetails DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.MachineDetails();
  }

  public static com.google.wireless.android.sdk.stats.MachineDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<MachineDetails>
      PARSER = new com.google.protobuf.AbstractParser<MachineDetails>() {
    @java.lang.Override
    public MachineDetails parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MachineDetails> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MachineDetails> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.MachineDetails getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

