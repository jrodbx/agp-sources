// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface FirebaseContextDetailsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.FirebaseContextDetails)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Public project id, used for attributing project growth to the plugin.
   * </pre>
   *
   * <code>optional string project_id = 1;</code>
   * @return Whether the projectId field is set.
   */
  boolean hasProjectId();
  /**
   * <pre>
   * Public project id, used for attributing project growth to the plugin.
   * </pre>
   *
   * <code>optional string project_id = 1;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Public project id, used for attributing project growth to the plugin.
   * </pre>
   *
   * <code>optional string project_id = 1;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * Secondary identifier for the project, also stored for more flexibility with
   * joining the data with other sets.
   * </pre>
   *
   * <code>optional string project_number = 2;</code>
   * @return Whether the projectNumber field is set.
   */
  boolean hasProjectNumber();
  /**
   * <pre>
   * Secondary identifier for the project, also stored for more flexibility with
   * joining the data with other sets.
   * </pre>
   *
   * <code>optional string project_number = 2;</code>
   * @return The projectNumber.
   */
  java.lang.String getProjectNumber();
  /**
   * <pre>
   * Secondary identifier for the project, also stored for more flexibility with
   * joining the data with other sets.
   * </pre>
   *
   * <code>optional string project_number = 2;</code>
   * @return The bytes for projectNumber.
   */
  com.google.protobuf.ByteString
      getProjectNumberBytes();

  /**
   * <pre>
   * Whether the action was performed while the user was logged in.
   * </pre>
   *
   * <code>optional bool logged_in = 3;</code>
   * @return Whether the loggedIn field is set.
   */
  boolean hasLoggedIn();
  /**
   * <pre>
   * Whether the action was performed while the user was logged in.
   * </pre>
   *
   * <code>optional bool logged_in = 3;</code>
   * @return The loggedIn.
   */
  boolean getLoggedIn();

  /**
   * <pre>
   * Whether the action was performed on while the related Studio project's
   * modules were connected to a Firebase project.
   * </pre>
   *
   * <code>optional .android_studio.FirebaseContextDetails.ConnectStatus connect_status = 4;</code>
   * @return Whether the connectStatus field is set.
   */
  boolean hasConnectStatus();
  /**
   * <pre>
   * Whether the action was performed on while the related Studio project's
   * modules were connected to a Firebase project.
   * </pre>
   *
   * <code>optional .android_studio.FirebaseContextDetails.ConnectStatus connect_status = 4;</code>
   * @return The connectStatus.
   */
  com.google.wireless.android.sdk.stats.FirebaseContextDetails.ConnectStatus getConnectStatus();

  /**
   * <pre>
   * Tutorial resource event relates to. Restricted to non PII such as the id
   * of the tutorial that was opened.
   * </pre>
   *
   * <code>optional string performed_on = 5;</code>
   * @return Whether the performedOn field is set.
   */
  boolean hasPerformedOn();
  /**
   * <pre>
   * Tutorial resource event relates to. Restricted to non PII such as the id
   * of the tutorial that was opened.
   * </pre>
   *
   * <code>optional string performed_on = 5;</code>
   * @return The performedOn.
   */
  java.lang.String getPerformedOn();
  /**
   * <pre>
   * Tutorial resource event relates to. Restricted to non PII such as the id
   * of the tutorial that was opened.
   * </pre>
   *
   * <code>optional string performed_on = 5;</code>
   * @return The bytes for performedOn.
   */
  com.google.protobuf.ByteString
      getPerformedOnBytes();

  /**
   * <pre>
   * Time that an action took to be performed. A primary example is how long
   * a tutorial was open before navigating away.
   * </pre>
   *
   * <code>optional int64 duration = 6;</code>
   * @return Whether the duration field is set.
   */
  boolean hasDuration();
  /**
   * <pre>
   * Time that an action took to be performed. A primary example is how long
   * a tutorial was open before navigating away.
   * </pre>
   *
   * <code>optional int64 duration = 6;</code>
   * @return The duration.
   */
  long getDuration();
}
