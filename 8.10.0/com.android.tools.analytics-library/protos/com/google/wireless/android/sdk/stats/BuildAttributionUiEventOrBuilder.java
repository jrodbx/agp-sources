// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface BuildAttributionUiEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.BuildAttributionUiEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Type of this build attribution UI event.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.EventType event_type = 1;</code>
   * @return Whether the eventType field is set.
   */
  boolean hasEventType();
  /**
   * <pre>
   * Type of this build attribution UI event.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.EventType event_type = 1;</code>
   * @return The eventType.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.EventType getEventType();

  /**
   * <pre>
   * What page was opened when this event happened.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.Page current_page = 2 [lazy = true];</code>
   * @return Whether the currentPage field is set.
   */
  boolean hasCurrentPage();
  /**
   * <pre>
   * What page was opened when this event happened.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.Page current_page = 2 [lazy = true];</code>
   * @return The currentPage.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.Page getCurrentPage();
  /**
   * <pre>
   * What page was opened when this event happened.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.Page current_page = 2 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.PageOrBuilder getCurrentPageOrBuilder();

  /**
   * <pre>
   * What page will be opened because of this event (if page changes).
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.Page target_page = 3 [lazy = true];</code>
   * @return Whether the targetPage field is set.
   */
  boolean hasTargetPage();
  /**
   * <pre>
   * What page will be opened because of this event (if page changes).
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.Page target_page = 3 [lazy = true];</code>
   * @return The targetPage.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.Page getTargetPage();
  /**
   * <pre>
   * What page will be opened because of this event (if page changes).
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.Page target_page = 3 [lazy = true];</code>
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.PageOrBuilder getTargetPageOrBuilder();

  /**
   * <pre>
   * The session id is a UUID tracking a single build report generated
   * to associate build attribution events together
   * </pre>
   *
   * <code>optional string build_attribution_report_session_id = 4;</code>
   * @return Whether the buildAttributionReportSessionId field is set.
   */
  boolean hasBuildAttributionReportSessionId();
  /**
   * <pre>
   * The session id is a UUID tracking a single build report generated
   * to associate build attribution events together
   * </pre>
   *
   * <code>optional string build_attribution_report_session_id = 4;</code>
   * @return The buildAttributionReportSessionId.
   */
  java.lang.String getBuildAttributionReportSessionId();
  /**
   * <pre>
   * The session id is a UUID tracking a single build report generated
   * to associate build attribution events together
   * </pre>
   *
   * <code>optional string build_attribution_report_session_id = 4;</code>
   * @return The bytes for buildAttributionReportSessionId.
   */
  com.google.protobuf.ByteString
      getBuildAttributionReportSessionIdBytes();

  /**
   * <pre>
   * Target of the external link clicked. Set when event type HELP_LINK_CLICKED.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.OutgoingLinkTarget link_target = 5;</code>
   * @return Whether the linkTarget field is set.
   */
  boolean hasLinkTarget();
  /**
   * <pre>
   * Target of the external link clicked. Set when event type HELP_LINK_CLICKED.
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent.OutgoingLinkTarget link_target = 5;</code>
   * @return The linkTarget.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.OutgoingLinkTarget getLinkTarget();

  /**
   * <pre>
   * List of filter items applied now, set when event type FILTER_APPLIED.
   * </pre>
   *
   * <code>repeated .android_studio.BuildAttributionUiEvent.FilterItem applied_filters = 6;</code>
   * @return A list containing the appliedFilters.
   */
  java.util.List<com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.FilterItem> getAppliedFiltersList();
  /**
   * <pre>
   * List of filter items applied now, set when event type FILTER_APPLIED.
   * </pre>
   *
   * <code>repeated .android_studio.BuildAttributionUiEvent.FilterItem applied_filters = 6;</code>
   * @return The count of appliedFilters.
   */
  int getAppliedFiltersCount();
  /**
   * <pre>
   * List of filter items applied now, set when event type FILTER_APPLIED.
   * </pre>
   *
   * <code>repeated .android_studio.BuildAttributionUiEvent.FilterItem applied_filters = 6;</code>
   * @param index The index of the element to return.
   * @return The appliedFilters at the given index.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent.FilterItem getAppliedFilters(int index);

  /**
   * <pre>
   * How much time did it take to react on this user action.
   * </pre>
   *
   * <code>optional int64 event_processing_time_ms = 7;</code>
   * @return Whether the eventProcessingTimeMs field is set.
   */
  boolean hasEventProcessingTimeMs();
  /**
   * <pre>
   * How much time did it take to react on this user action.
   * </pre>
   *
   * <code>optional int64 event_processing_time_ms = 7;</code>
   * @return The eventProcessingTimeMs.
   */
  long getEventProcessingTimeMs();

  /**
   * <pre>
   * Width of the Build Analyzer tool window in pixels.
   * </pre>
   *
   * <code>optional int64 width = 8;</code>
   * @return Whether the width field is set.
   */
  boolean hasWidth();
  /**
   * <pre>
   * Width of the Build Analyzer tool window in pixels.
   * </pre>
   *
   * <code>optional int64 width = 8;</code>
   * @return The width.
   */
  long getWidth();

  /**
   * <pre>
   * Height of the Build Analyzer tool window in pixels.
   * </pre>
   *
   * <code>optional int64 height = 9;</code>
   * @return Whether the height field is set.
   */
  boolean hasHeight();
  /**
   * <pre>
   * Height of the Build Analyzer tool window in pixels.
   * </pre>
   *
   * <code>optional int64 height = 9;</code>
   * @return The height.
   */
  long getHeight();
}
