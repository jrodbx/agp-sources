// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.UniversalProblemsPanelEvent}
 */
public final class UniversalProblemsPanelEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.UniversalProblemsPanelEvent)
    UniversalProblemsPanelEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UniversalProblemsPanelEvent.newBuilder() to construct.
  private UniversalProblemsPanelEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UniversalProblemsPanelEvent() {
    interactionEvent_ = 0;
    activatedTab_ = 0;
    issueNavigated_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UniversalProblemsPanelEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UniversalProblemsPanelEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UniversalProblemsPanelEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.class, com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.Builder.class);
  }

  /**
   * <pre>
   * Type of interaction events of universal problems panel.
   * </pre>
   *
   * Protobuf enum {@code android_studio.UniversalProblemsPanelEvent.InteractionEvent}
   */
  public enum InteractionEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_INTERACTION = 0;</code>
     */
    UNKNOWN_INTERACTION(0),
    /**
     * <pre>
     * A tab is activated. By either manually or automatically switching the tab
     * </pre>
     *
     * <code>TAB_ACTIVATED = 1;</code>
     */
    TAB_ACTIVATED(1),
    /**
     * <pre>
     * A user clicks an issue
     * </pre>
     *
     * <code>ISSUE_SINGLE_CLICKED = 2;</code>
     */
    ISSUE_SINGLE_CLICKED(2),
    /**
     * <pre>
     * A user double clicks an issue
     * </pre>
     *
     * <code>ISSUE_DOUBLE_CLICKED = 3;</code>
     */
    ISSUE_DOUBLE_CLICKED(3),
    ;

    /**
     * <code>UNKNOWN_INTERACTION = 0;</code>
     */
    public static final int UNKNOWN_INTERACTION_VALUE = 0;
    /**
     * <pre>
     * A tab is activated. By either manually or automatically switching the tab
     * </pre>
     *
     * <code>TAB_ACTIVATED = 1;</code>
     */
    public static final int TAB_ACTIVATED_VALUE = 1;
    /**
     * <pre>
     * A user clicks an issue
     * </pre>
     *
     * <code>ISSUE_SINGLE_CLICKED = 2;</code>
     */
    public static final int ISSUE_SINGLE_CLICKED_VALUE = 2;
    /**
     * <pre>
     * A user double clicks an issue
     * </pre>
     *
     * <code>ISSUE_DOUBLE_CLICKED = 3;</code>
     */
    public static final int ISSUE_DOUBLE_CLICKED_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InteractionEvent valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static InteractionEvent forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_INTERACTION;
        case 1: return TAB_ACTIVATED;
        case 2: return ISSUE_SINGLE_CLICKED;
        case 3: return ISSUE_DOUBLE_CLICKED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InteractionEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InteractionEvent> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InteractionEvent>() {
            public InteractionEvent findValueByNumber(int number) {
              return InteractionEvent.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final InteractionEvent[] VALUES = values();

    public static InteractionEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InteractionEvent(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UniversalProblemsPanelEvent.InteractionEvent)
  }

  /**
   * <pre>
   * Currently activated tab. This is usually done by clicking tab, but in some
   * scenarios the tab may be activated without the interactions.
   * </pre>
   *
   * Protobuf enum {@code android_studio.UniversalProblemsPanelEvent.ActivatedTab}
   */
  public enum ActivatedTab
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TAB = 0;</code>
     */
    UNKNOWN_TAB(0),
    /**
     * <pre>
     * IJ's current file tab
     * </pre>
     *
     * <code>CURRENT_FILE = 1;</code>
     */
    CURRENT_FILE(1),
    /**
     * <pre>
     * IJ's project errors tab
     * </pre>
     *
     * <code>PROJECT_ERRORS = 2;</code>
     */
    PROJECT_ERRORS(2),
    /**
     * <pre>
     * This is the shared issue panel, used by compose, layout editor, etc.
     * </pre>
     *
     * <code>DESIGN_TOOLS = 3;</code>
     */
    DESIGN_TOOLS(3),
    /**
     * <pre>
     * UI Check mode tab
     * </pre>
     *
     * <code>UI_CHECK = 4;</code>
     */
    UI_CHECK(4),
    ;

    /**
     * <code>UNKNOWN_TAB = 0;</code>
     */
    public static final int UNKNOWN_TAB_VALUE = 0;
    /**
     * <pre>
     * IJ's current file tab
     * </pre>
     *
     * <code>CURRENT_FILE = 1;</code>
     */
    public static final int CURRENT_FILE_VALUE = 1;
    /**
     * <pre>
     * IJ's project errors tab
     * </pre>
     *
     * <code>PROJECT_ERRORS = 2;</code>
     */
    public static final int PROJECT_ERRORS_VALUE = 2;
    /**
     * <pre>
     * This is the shared issue panel, used by compose, layout editor, etc.
     * </pre>
     *
     * <code>DESIGN_TOOLS = 3;</code>
     */
    public static final int DESIGN_TOOLS_VALUE = 3;
    /**
     * <pre>
     * UI Check mode tab
     * </pre>
     *
     * <code>UI_CHECK = 4;</code>
     */
    public static final int UI_CHECK_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActivatedTab valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ActivatedTab forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TAB;
        case 1: return CURRENT_FILE;
        case 2: return PROJECT_ERRORS;
        case 3: return DESIGN_TOOLS;
        case 4: return UI_CHECK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActivatedTab>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ActivatedTab> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActivatedTab>() {
            public ActivatedTab findValueByNumber(int number) {
              return ActivatedTab.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.getDescriptor().getEnumTypes().get(1);
    }

    private static final ActivatedTab[] VALUES = values();

    public static ActivatedTab valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ActivatedTab(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UniversalProblemsPanelEvent.ActivatedTab)
  }

  /**
   * <pre>
   * Event of triggering navigatable of an issue. This is usually done by double
   * clicking an issue or pressing enter on the selected issue.
   * </pre>
   *
   * Protobuf enum {@code android_studio.UniversalProblemsPanelEvent.IssueNavigated}
   */
  public enum IssueNavigated
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_NAVIGATION = 0;</code>
     */
    UNKNOWN_NAVIGATION(0),
    /**
     * <code>OPEN_VALIDATION_TOOL = 1;</code>
     */
    OPEN_VALIDATION_TOOL(1),
    /**
     * <code>OPEN_FILE = 2;</code>
     */
    OPEN_FILE(2),
    ;

    /**
     * <code>UNKNOWN_NAVIGATION = 0;</code>
     */
    public static final int UNKNOWN_NAVIGATION_VALUE = 0;
    /**
     * <code>OPEN_VALIDATION_TOOL = 1;</code>
     */
    public static final int OPEN_VALIDATION_TOOL_VALUE = 1;
    /**
     * <code>OPEN_FILE = 2;</code>
     */
    public static final int OPEN_FILE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IssueNavigated valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IssueNavigated forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_NAVIGATION;
        case 1: return OPEN_VALIDATION_TOOL;
        case 2: return OPEN_FILE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IssueNavigated>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IssueNavigated> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IssueNavigated>() {
            public IssueNavigated findValueByNumber(int number) {
              return IssueNavigated.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.getDescriptor().getEnumTypes().get(2);
    }

    private static final IssueNavigated[] VALUES = values();

    public static IssueNavigated valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IssueNavigated(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.UniversalProblemsPanelEvent.IssueNavigated)
  }

  private int bitField0_;
  public static final int PROBLEMS_PANEL_VISIBILITY_FIELD_NUMBER = 1;
  private boolean problemsPanelVisibility_ = false;
  /**
   * <pre>
   * True if IJ's problems pane is visible, false otherwise.
   * </pre>
   *
   * <code>optional bool problems_panel_visibility = 1;</code>
   * @return Whether the problemsPanelVisibility field is set.
   */
  @java.lang.Override
  public boolean hasProblemsPanelVisibility() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * True if IJ's problems pane is visible, false otherwise.
   * </pre>
   *
   * <code>optional bool problems_panel_visibility = 1;</code>
   * @return The problemsPanelVisibility.
   */
  @java.lang.Override
  public boolean getProblemsPanelVisibility() {
    return problemsPanelVisibility_;
  }

  public static final int INTERACTION_EVENT_FIELD_NUMBER = 2;
  private int interactionEvent_ = 0;
  /**
   * <pre>
   * User interactions event of universal problems panel.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
   * @return Whether the interactionEvent field is set.
   */
  @java.lang.Override public boolean hasInteractionEvent() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * User interactions event of universal problems panel.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
   * @return The interactionEvent.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent getInteractionEvent() {
    com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent result = com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent.forNumber(interactionEvent_);
    return result == null ? com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent.UNKNOWN_INTERACTION : result;
  }

  public static final int ACTIVATED_TAB_FIELD_NUMBER = 3;
  private int activatedTab_ = 0;
  /**
   * <pre>
   * The type of the activated tab affected by this event
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
   * @return Whether the activatedTab field is set.
   */
  @java.lang.Override public boolean hasActivatedTab() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The type of the activated tab affected by this event
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
   * @return The activatedTab.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab getActivatedTab() {
    com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab result = com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab.forNumber(activatedTab_);
    return result == null ? com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab.UNKNOWN_TAB : result;
  }

  public static final int ISSUE_NAVIGATED_FIELD_NUMBER = 4;
  private int issueNavigated_ = 0;
  /**
   * <pre>
   * The Navigation event of the issues.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
   * @return Whether the issueNavigated field is set.
   */
  @java.lang.Override public boolean hasIssueNavigated() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The Navigation event of the issues.
   * </pre>
   *
   * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
   * @return The issueNavigated.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated getIssueNavigated() {
    com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated result = com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated.forNumber(issueNavigated_);
    return result == null ? com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated.UNKNOWN_NAVIGATION : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(1, problemsPanelVisibility_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, interactionEvent_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeEnum(3, activatedTab_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(4, issueNavigated_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, problemsPanelVisibility_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, interactionEvent_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, activatedTab_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, issueNavigated_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent other = (com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent) obj;

    if (hasProblemsPanelVisibility() != other.hasProblemsPanelVisibility()) return false;
    if (hasProblemsPanelVisibility()) {
      if (getProblemsPanelVisibility()
          != other.getProblemsPanelVisibility()) return false;
    }
    if (hasInteractionEvent() != other.hasInteractionEvent()) return false;
    if (hasInteractionEvent()) {
      if (interactionEvent_ != other.interactionEvent_) return false;
    }
    if (hasActivatedTab() != other.hasActivatedTab()) return false;
    if (hasActivatedTab()) {
      if (activatedTab_ != other.activatedTab_) return false;
    }
    if (hasIssueNavigated() != other.hasIssueNavigated()) return false;
    if (hasIssueNavigated()) {
      if (issueNavigated_ != other.issueNavigated_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasProblemsPanelVisibility()) {
      hash = (37 * hash) + PROBLEMS_PANEL_VISIBILITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProblemsPanelVisibility());
    }
    if (hasInteractionEvent()) {
      hash = (37 * hash) + INTERACTION_EVENT_FIELD_NUMBER;
      hash = (53 * hash) + interactionEvent_;
    }
    if (hasActivatedTab()) {
      hash = (37 * hash) + ACTIVATED_TAB_FIELD_NUMBER;
      hash = (53 * hash) + activatedTab_;
    }
    if (hasIssueNavigated()) {
      hash = (37 * hash) + ISSUE_NAVIGATED_FIELD_NUMBER;
      hash = (53 * hash) + issueNavigated_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.UniversalProblemsPanelEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.UniversalProblemsPanelEvent)
      com.google.wireless.android.sdk.stats.UniversalProblemsPanelEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UniversalProblemsPanelEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UniversalProblemsPanelEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.class, com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      problemsPanelVisibility_ = false;
      interactionEvent_ = 0;
      activatedTab_ = 0;
      issueNavigated_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_UniversalProblemsPanelEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent build() {
      com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent buildPartial() {
      com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent result = new com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.problemsPanelVisibility_ = problemsPanelVisibility_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.interactionEvent_ = interactionEvent_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.activatedTab_ = activatedTab_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.issueNavigated_ = issueNavigated_;
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent other) {
      if (other == com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.getDefaultInstance()) return this;
      if (other.hasProblemsPanelVisibility()) {
        setProblemsPanelVisibility(other.getProblemsPanelVisibility());
      }
      if (other.hasInteractionEvent()) {
        setInteractionEvent(other.getInteractionEvent());
      }
      if (other.hasActivatedTab()) {
        setActivatedTab(other.getActivatedTab());
      }
      if (other.hasIssueNavigated()) {
        setIssueNavigated(other.getIssueNavigated());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              problemsPanelVisibility_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent tmpValue =
                  com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                interactionEvent_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab tmpValue =
                  com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(3, tmpRaw);
              } else {
                activatedTab_ = tmpRaw;
                bitField0_ |= 0x00000004;
              }
              break;
            } // case 24
            case 32: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated tmpValue =
                  com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(4, tmpRaw);
              } else {
                issueNavigated_ = tmpRaw;
                bitField0_ |= 0x00000008;
              }
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean problemsPanelVisibility_ ;
    /**
     * <pre>
     * True if IJ's problems pane is visible, false otherwise.
     * </pre>
     *
     * <code>optional bool problems_panel_visibility = 1;</code>
     * @return Whether the problemsPanelVisibility field is set.
     */
    @java.lang.Override
    public boolean hasProblemsPanelVisibility() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * True if IJ's problems pane is visible, false otherwise.
     * </pre>
     *
     * <code>optional bool problems_panel_visibility = 1;</code>
     * @return The problemsPanelVisibility.
     */
    @java.lang.Override
    public boolean getProblemsPanelVisibility() {
      return problemsPanelVisibility_;
    }
    /**
     * <pre>
     * True if IJ's problems pane is visible, false otherwise.
     * </pre>
     *
     * <code>optional bool problems_panel_visibility = 1;</code>
     * @param value The problemsPanelVisibility to set.
     * @return This builder for chaining.
     */
    public Builder setProblemsPanelVisibility(boolean value) {

      problemsPanelVisibility_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if IJ's problems pane is visible, false otherwise.
     * </pre>
     *
     * <code>optional bool problems_panel_visibility = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProblemsPanelVisibility() {
      bitField0_ = (bitField0_ & ~0x00000001);
      problemsPanelVisibility_ = false;
      onChanged();
      return this;
    }

    private int interactionEvent_ = 0;
    /**
     * <pre>
     * User interactions event of universal problems panel.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
     * @return Whether the interactionEvent field is set.
     */
    @java.lang.Override public boolean hasInteractionEvent() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * User interactions event of universal problems panel.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
     * @return The interactionEvent.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent getInteractionEvent() {
      com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent result = com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent.forNumber(interactionEvent_);
      return result == null ? com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent.UNKNOWN_INTERACTION : result;
    }
    /**
     * <pre>
     * User interactions event of universal problems panel.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
     * @param value The interactionEvent to set.
     * @return This builder for chaining.
     */
    public Builder setInteractionEvent(com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.InteractionEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      interactionEvent_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * User interactions event of universal problems panel.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.InteractionEvent interaction_event = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearInteractionEvent() {
      bitField0_ = (bitField0_ & ~0x00000002);
      interactionEvent_ = 0;
      onChanged();
      return this;
    }

    private int activatedTab_ = 0;
    /**
     * <pre>
     * The type of the activated tab affected by this event
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
     * @return Whether the activatedTab field is set.
     */
    @java.lang.Override public boolean hasActivatedTab() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The type of the activated tab affected by this event
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
     * @return The activatedTab.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab getActivatedTab() {
      com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab result = com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab.forNumber(activatedTab_);
      return result == null ? com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab.UNKNOWN_TAB : result;
    }
    /**
     * <pre>
     * The type of the activated tab affected by this event
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
     * @param value The activatedTab to set.
     * @return This builder for chaining.
     */
    public Builder setActivatedTab(com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.ActivatedTab value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      activatedTab_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the activated tab affected by this event
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.ActivatedTab activated_tab = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearActivatedTab() {
      bitField0_ = (bitField0_ & ~0x00000004);
      activatedTab_ = 0;
      onChanged();
      return this;
    }

    private int issueNavigated_ = 0;
    /**
     * <pre>
     * The Navigation event of the issues.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
     * @return Whether the issueNavigated field is set.
     */
    @java.lang.Override public boolean hasIssueNavigated() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The Navigation event of the issues.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
     * @return The issueNavigated.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated getIssueNavigated() {
      com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated result = com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated.forNumber(issueNavigated_);
      return result == null ? com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated.UNKNOWN_NAVIGATION : result;
    }
    /**
     * <pre>
     * The Navigation event of the issues.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
     * @param value The issueNavigated to set.
     * @return This builder for chaining.
     */
    public Builder setIssueNavigated(com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent.IssueNavigated value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      issueNavigated_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Navigation event of the issues.
     * </pre>
     *
     * <code>optional .android_studio.UniversalProblemsPanelEvent.IssueNavigated issue_navigated = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearIssueNavigated() {
      bitField0_ = (bitField0_ & ~0x00000008);
      issueNavigated_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.UniversalProblemsPanelEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.UniversalProblemsPanelEvent)
  private static final com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent();
  }

  public static com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<UniversalProblemsPanelEvent>
      PARSER = new com.google.protobuf.AbstractParser<UniversalProblemsPanelEvent>() {
    @java.lang.Override
    public UniversalProblemsPanelEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UniversalProblemsPanelEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UniversalProblemsPanelEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.UniversalProblemsPanelEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

