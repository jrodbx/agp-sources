// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kotlin_multiplatform_android_models.proto

package com.android.kotlin.multiplatform.models;

/**
 * Protobuf type {@code AndroidTarget}
 */
public final class AndroidTarget extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:AndroidTarget)
    AndroidTargetOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AndroidTarget.newBuilder() to construct.
  private AndroidTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AndroidTarget() {
    agpVersion_ = "";
    projectPath_ = "";
    bootClasspath_ = java.util.Collections.emptyList();
    lintChecksJars_ = java.util.Collections.emptyList();
    desugarLibConfig_ = java.util.Collections.emptyList();
    groupId_ = "";
    buildToolsVersion_ = "";
    desugaredMethodsFiles_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AndroidTarget();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.android.kotlin.multiplatform.models.KotlinMultiplatformAndroidModelsProto.internal_static_AndroidTarget_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.android.kotlin.multiplatform.models.KotlinMultiplatformAndroidModelsProto.internal_static_AndroidTarget_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.android.kotlin.multiplatform.models.AndroidTarget.class, com.android.kotlin.multiplatform.models.AndroidTarget.Builder.class);
  }

  private int bitField0_;
  public static final int AGP_VERSION_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object agpVersion_ = "";
  /**
   * <pre>
   * Version of the android gradle plugin.
   * </pre>
   *
   * <code>optional string agp_version = 1;</code>
   * @return Whether the agpVersion field is set.
   */
  @java.lang.Override
  public boolean hasAgpVersion() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Version of the android gradle plugin.
   * </pre>
   *
   * <code>optional string agp_version = 1;</code>
   * @return The agpVersion.
   */
  @java.lang.Override
  public java.lang.String getAgpVersion() {
    java.lang.Object ref = agpVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      agpVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Version of the android gradle plugin.
   * </pre>
   *
   * <code>optional string agp_version = 1;</code>
   * @return The bytes for agpVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAgpVersionBytes() {
    java.lang.Object ref = agpVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      agpVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROJECT_PATH_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object projectPath_ = "";
  /**
   * <pre>
   * The gradle path of the module.
   * </pre>
   *
   * <code>optional string project_path = 2;</code>
   * @return Whether the projectPath field is set.
   */
  @java.lang.Override
  public boolean hasProjectPath() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The gradle path of the module.
   * </pre>
   *
   * <code>optional string project_path = 2;</code>
   * @return The projectPath.
   */
  @java.lang.Override
  public java.lang.String getProjectPath() {
    java.lang.Object ref = projectPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      projectPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The gradle path of the module.
   * </pre>
   *
   * <code>optional string project_path = 2;</code>
   * @return The bytes for projectPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProjectPathBytes() {
    java.lang.Object ref = projectPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      projectPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BUILD_DIR_FIELD_NUMBER = 3;
  private com.android.builder.model.proto.ide.File buildDir_;
  /**
   * <pre>
   * The gradle build folder of the project.
   * </pre>
   *
   * <code>optional .File build_dir = 3;</code>
   * @return Whether the buildDir field is set.
   */
  @java.lang.Override
  public boolean hasBuildDir() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The gradle build folder of the project.
   * </pre>
   *
   * <code>optional .File build_dir = 3;</code>
   * @return The buildDir.
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getBuildDir() {
    return buildDir_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : buildDir_;
  }
  /**
   * <pre>
   * The gradle build folder of the project.
   * </pre>
   *
   * <code>optional .File build_dir = 3;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getBuildDirOrBuilder() {
    return buildDir_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : buildDir_;
  }

  public static final int BOOT_CLASSPATH_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.android.builder.model.proto.ide.File> bootClasspath_;
  /**
   * <pre>
   * The boot classpath matching the compile target. This is typically android.jar plus
   * other optional libraries.
   * </pre>
   *
   * <code>repeated .File boot_classpath = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.builder.model.proto.ide.File> getBootClasspathList() {
    return bootClasspath_;
  }
  /**
   * <pre>
   * The boot classpath matching the compile target. This is typically android.jar plus
   * other optional libraries.
   * </pre>
   *
   * <code>repeated .File boot_classpath = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
      getBootClasspathOrBuilderList() {
    return bootClasspath_;
  }
  /**
   * <pre>
   * The boot classpath matching the compile target. This is typically android.jar plus
   * other optional libraries.
   * </pre>
   *
   * <code>repeated .File boot_classpath = 4;</code>
   */
  @java.lang.Override
  public int getBootClasspathCount() {
    return bootClasspath_.size();
  }
  /**
   * <pre>
   * The boot classpath matching the compile target. This is typically android.jar plus
   * other optional libraries.
   * </pre>
   *
   * <code>repeated .File boot_classpath = 4;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getBootClasspath(int index) {
    return bootClasspath_.get(index);
  }
  /**
   * <pre>
   * The boot classpath matching the compile target. This is typically android.jar plus
   * other optional libraries.
   * </pre>
   *
   * <code>repeated .File boot_classpath = 4;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getBootClasspathOrBuilder(
      int index) {
    return bootClasspath_.get(index);
  }

  public static final int TEST_INFO_FIELD_NUMBER = 5;
  private com.android.builder.model.proto.ide.TestInfo testInfo_;
  /**
   * <pre>
   * The instrumented test info if enabled.
   * </pre>
   *
   * <code>optional .TestInfo test_info = 5;</code>
   * @return Whether the testInfo field is set.
   */
  @java.lang.Override
  public boolean hasTestInfo() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The instrumented test info if enabled.
   * </pre>
   *
   * <code>optional .TestInfo test_info = 5;</code>
   * @return The testInfo.
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.TestInfo getTestInfo() {
    return testInfo_ == null ? com.android.builder.model.proto.ide.TestInfo.getDefaultInstance() : testInfo_;
  }
  /**
   * <pre>
   * The instrumented test info if enabled.
   * </pre>
   *
   * <code>optional .TestInfo test_info = 5;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.TestInfoOrBuilder getTestInfoOrBuilder() {
    return testInfo_ == null ? com.android.builder.model.proto.ide.TestInfo.getDefaultInstance() : testInfo_;
  }

  public static final int FLAGS_FIELD_NUMBER = 6;
  private com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags flags_;
  /**
   * <pre>
   * The android gradle plugin flags for this project.
   * </pre>
   *
   * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
   * @return Whether the flags field is set.
   */
  @java.lang.Override
  public boolean hasFlags() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The android gradle plugin flags for this project.
   * </pre>
   *
   * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
   * @return The flags.
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags getFlags() {
    return flags_ == null ? com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.getDefaultInstance() : flags_;
  }
  /**
   * <pre>
   * The android gradle plugin flags for this project.
   * </pre>
   *
   * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlagsOrBuilder getFlagsOrBuilder() {
    return flags_ == null ? com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.getDefaultInstance() : flags_;
  }

  public static final int LINT_CHECKS_JARS_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.android.builder.model.proto.ide.File> lintChecksJars_;
  /**
   * <pre>
   * The lint jars that this module uses to run extra lint checks on this project.
   * This is the resolution of the `lintCheck` configuration.
   * </pre>
   *
   * <code>repeated .File lint_checks_jars = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.builder.model.proto.ide.File> getLintChecksJarsList() {
    return lintChecksJars_;
  }
  /**
   * <pre>
   * The lint jars that this module uses to run extra lint checks on this project.
   * This is the resolution of the `lintCheck` configuration.
   * </pre>
   *
   * <code>repeated .File lint_checks_jars = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
      getLintChecksJarsOrBuilderList() {
    return lintChecksJars_;
  }
  /**
   * <pre>
   * The lint jars that this module uses to run extra lint checks on this project.
   * This is the resolution of the `lintCheck` configuration.
   * </pre>
   *
   * <code>repeated .File lint_checks_jars = 7;</code>
   */
  @java.lang.Override
  public int getLintChecksJarsCount() {
    return lintChecksJars_.size();
  }
  /**
   * <pre>
   * The lint jars that this module uses to run extra lint checks on this project.
   * This is the resolution of the `lintCheck` configuration.
   * </pre>
   *
   * <code>repeated .File lint_checks_jars = 7;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getLintChecksJars(int index) {
    return lintChecksJars_.get(index);
  }
  /**
   * <pre>
   * The lint jars that this module uses to run extra lint checks on this project.
   * This is the resolution of the `lintCheck` configuration.
   * </pre>
   *
   * <code>repeated .File lint_checks_jars = 7;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getLintChecksJarsOrBuilder(
      int index) {
    return lintChecksJars_.get(index);
  }

  public static final int IS_CORE_LIBRARY_DESUGARING_ENABLED_FIELD_NUMBER = 8;
  private boolean isCoreLibraryDesugaringEnabled_ = false;
  /**
   * <pre>
   * Whether core library desugaring is enabled, false otherwise.
   * </pre>
   *
   * <code>optional bool is_core_library_desugaring_enabled = 8;</code>
   * @return Whether the isCoreLibraryDesugaringEnabled field is set.
   */
  @java.lang.Override
  public boolean hasIsCoreLibraryDesugaringEnabled() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Whether core library desugaring is enabled, false otherwise.
   * </pre>
   *
   * <code>optional bool is_core_library_desugaring_enabled = 8;</code>
   * @return The isCoreLibraryDesugaringEnabled.
   */
  @java.lang.Override
  public boolean getIsCoreLibraryDesugaringEnabled() {
    return isCoreLibraryDesugaringEnabled_;
  }

  public static final int DESUGAR_LIB_CONFIG_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<com.android.builder.model.proto.ide.File> desugarLibConfig_;
  /**
   * <pre>
   * Returns desugar.json configuration files for library desugaring, or empty when library
   * desugaring is not enabled. Currently, there would only be one desugar.json file for the
   * entire project, but could be more in the future if r8 team decides to publish more.
   * </pre>
   *
   * <code>repeated .File desugar_lib_config = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.builder.model.proto.ide.File> getDesugarLibConfigList() {
    return desugarLibConfig_;
  }
  /**
   * <pre>
   * Returns desugar.json configuration files for library desugaring, or empty when library
   * desugaring is not enabled. Currently, there would only be one desugar.json file for the
   * entire project, but could be more in the future if r8 team decides to publish more.
   * </pre>
   *
   * <code>repeated .File desugar_lib_config = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
      getDesugarLibConfigOrBuilderList() {
    return desugarLibConfig_;
  }
  /**
   * <pre>
   * Returns desugar.json configuration files for library desugaring, or empty when library
   * desugaring is not enabled. Currently, there would only be one desugar.json file for the
   * entire project, but could be more in the future if r8 team decides to publish more.
   * </pre>
   *
   * <code>repeated .File desugar_lib_config = 9;</code>
   */
  @java.lang.Override
  public int getDesugarLibConfigCount() {
    return desugarLibConfig_.size();
  }
  /**
   * <pre>
   * Returns desugar.json configuration files for library desugaring, or empty when library
   * desugaring is not enabled. Currently, there would only be one desugar.json file for the
   * entire project, but could be more in the future if r8 team decides to publish more.
   * </pre>
   *
   * <code>repeated .File desugar_lib_config = 9;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getDesugarLibConfig(int index) {
    return desugarLibConfig_.get(index);
  }
  /**
   * <pre>
   * Returns desugar.json configuration files for library desugaring, or empty when library
   * desugaring is not enabled. Currently, there would only be one desugar.json file for the
   * entire project, but could be more in the future if r8 team decides to publish more.
   * </pre>
   *
   * <code>repeated .File desugar_lib_config = 9;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getDesugarLibConfigOrBuilder(
      int index) {
    return desugarLibConfig_.get(index);
  }

  public static final int GROUP_ID_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private volatile java.lang.Object groupId_ = "";
  /**
   * <pre>
   * Returns the optional group-id of the artifact represented by this project.
   * </pre>
   *
   * <code>optional string group_id = 10;</code>
   * @return Whether the groupId field is set.
   */
  @java.lang.Override
  public boolean hasGroupId() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Returns the optional group-id of the artifact represented by this project.
   * </pre>
   *
   * <code>optional string group_id = 10;</code>
   * @return The groupId.
   */
  @java.lang.Override
  public java.lang.String getGroupId() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Returns the optional group-id of the artifact represented by this project.
   * </pre>
   *
   * <code>optional string group_id = 10;</code>
   * @return The bytes for groupId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupIdBytes() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BUILD_TOOLS_VERSION_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private volatile java.lang.Object buildToolsVersion_ = "";
  /**
   * <pre>
   * The build tools version used by this module.
   * </pre>
   *
   * <code>optional string build_tools_version = 11;</code>
   * @return Whether the buildToolsVersion field is set.
   */
  @java.lang.Override
  public boolean hasBuildToolsVersion() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * The build tools version used by this module.
   * </pre>
   *
   * <code>optional string build_tools_version = 11;</code>
   * @return The buildToolsVersion.
   */
  @java.lang.Override
  public java.lang.String getBuildToolsVersion() {
    java.lang.Object ref = buildToolsVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      buildToolsVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The build tools version used by this module.
   * </pre>
   *
   * <code>optional string build_tools_version = 11;</code>
   * @return The bytes for buildToolsVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBuildToolsVersionBytes() {
    java.lang.Object ref = buildToolsVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      buildToolsVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESUGARED_METHODS_FILES_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private java.util.List<com.android.builder.model.proto.ide.File> desugaredMethodsFiles_;
  /**
   * <pre>
   * Files listing any D8 backported desugared methods or core library desugared methods for this
   * artifact.
   * </pre>
   *
   * <code>repeated .File desugared_methods_files = 12;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.builder.model.proto.ide.File> getDesugaredMethodsFilesList() {
    return desugaredMethodsFiles_;
  }
  /**
   * <pre>
   * Files listing any D8 backported desugared methods or core library desugared methods for this
   * artifact.
   * </pre>
   *
   * <code>repeated .File desugared_methods_files = 12;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
      getDesugaredMethodsFilesOrBuilderList() {
    return desugaredMethodsFiles_;
  }
  /**
   * <pre>
   * Files listing any D8 backported desugared methods or core library desugared methods for this
   * artifact.
   * </pre>
   *
   * <code>repeated .File desugared_methods_files = 12;</code>
   */
  @java.lang.Override
  public int getDesugaredMethodsFilesCount() {
    return desugaredMethodsFiles_.size();
  }
  /**
   * <pre>
   * Files listing any D8 backported desugared methods or core library desugared methods for this
   * artifact.
   * </pre>
   *
   * <code>repeated .File desugared_methods_files = 12;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getDesugaredMethodsFiles(int index) {
    return desugaredMethodsFiles_.get(index);
  }
  /**
   * <pre>
   * Files listing any D8 backported desugared methods or core library desugared methods for this
   * artifact.
   * </pre>
   *
   * <code>repeated .File desugared_methods_files = 12;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getDesugaredMethodsFilesOrBuilder(
      int index) {
    return desugaredMethodsFiles_.get(index);
  }

  public static final int ROOT_BUILD_ID_FIELD_NUMBER = 13;
  private com.android.builder.model.proto.ide.File rootBuildId_;
  /**
   * <pre>
   * The build ID (directory containing the settings file) of the root build of this project.
   * </pre>
   *
   * <code>optional .File root_build_id = 13;</code>
   * @return Whether the rootBuildId field is set.
   */
  @java.lang.Override
  public boolean hasRootBuildId() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The build ID (directory containing the settings file) of the root build of this project.
   * </pre>
   *
   * <code>optional .File root_build_id = 13;</code>
   * @return The rootBuildId.
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getRootBuildId() {
    return rootBuildId_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : rootBuildId_;
  }
  /**
   * <pre>
   * The build ID (directory containing the settings file) of the root build of this project.
   * </pre>
   *
   * <code>optional .File root_build_id = 13;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getRootBuildIdOrBuilder() {
    return rootBuildId_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : rootBuildId_;
  }

  public static final int BUILD_ID_FIELD_NUMBER = 14;
  private com.android.builder.model.proto.ide.File buildId_;
  /**
   * <pre>
   * The build ID (directory containing the settings file) of the (included) build containing this
   * project.
   * </pre>
   *
   * <code>optional .File build_id = 14;</code>
   * @return Whether the buildId field is set.
   */
  @java.lang.Override
  public boolean hasBuildId() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * The build ID (directory containing the settings file) of the (included) build containing this
   * project.
   * </pre>
   *
   * <code>optional .File build_id = 14;</code>
   * @return The buildId.
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.File getBuildId() {
    return buildId_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : buildId_;
  }
  /**
   * <pre>
   * The build ID (directory containing the settings file) of the (included) build containing this
   * project.
   * </pre>
   *
   * <code>optional .File build_id = 14;</code>
   */
  @java.lang.Override
  public com.android.builder.model.proto.ide.FileOrBuilder getBuildIdOrBuilder() {
    return buildId_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : buildId_;
  }

  public static final int WITH_JAVA_FIELD_NUMBER = 15;
  private boolean withJava_ = false;
  /**
   * <pre>
   * Whether java compilation is enabled.
   * </pre>
   *
   * <code>optional bool with_java = 15;</code>
   * @return Whether the withJava field is set.
   */
  @java.lang.Override
  public boolean hasWithJava() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * Whether java compilation is enabled.
   * </pre>
   *
   * <code>optional bool with_java = 15;</code>
   * @return The withJava.
   */
  @java.lang.Override
  public boolean getWithJava() {
    return withJava_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, agpVersion_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, projectPath_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getBuildDir());
    }
    for (int i = 0; i < bootClasspath_.size(); i++) {
      output.writeMessage(4, bootClasspath_.get(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(5, getTestInfo());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(6, getFlags());
    }
    for (int i = 0; i < lintChecksJars_.size(); i++) {
      output.writeMessage(7, lintChecksJars_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeBool(8, isCoreLibraryDesugaringEnabled_);
    }
    for (int i = 0; i < desugarLibConfig_.size(); i++) {
      output.writeMessage(9, desugarLibConfig_.get(i));
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, groupId_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, buildToolsVersion_);
    }
    for (int i = 0; i < desugaredMethodsFiles_.size(); i++) {
      output.writeMessage(12, desugaredMethodsFiles_.get(i));
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeMessage(13, getRootBuildId());
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeMessage(14, getBuildId());
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeBool(15, withJava_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, agpVersion_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, projectPath_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBuildDir());
    }
    for (int i = 0; i < bootClasspath_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, bootClasspath_.get(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTestInfo());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getFlags());
    }
    for (int i = 0; i < lintChecksJars_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, lintChecksJars_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, isCoreLibraryDesugaringEnabled_);
    }
    for (int i = 0; i < desugarLibConfig_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, desugarLibConfig_.get(i));
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, groupId_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, buildToolsVersion_);
    }
    for (int i = 0; i < desugaredMethodsFiles_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, desugaredMethodsFiles_.get(i));
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getRootBuildId());
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getBuildId());
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(15, withJava_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.android.kotlin.multiplatform.models.AndroidTarget)) {
      return super.equals(obj);
    }
    com.android.kotlin.multiplatform.models.AndroidTarget other = (com.android.kotlin.multiplatform.models.AndroidTarget) obj;

    if (hasAgpVersion() != other.hasAgpVersion()) return false;
    if (hasAgpVersion()) {
      if (!getAgpVersion()
          .equals(other.getAgpVersion())) return false;
    }
    if (hasProjectPath() != other.hasProjectPath()) return false;
    if (hasProjectPath()) {
      if (!getProjectPath()
          .equals(other.getProjectPath())) return false;
    }
    if (hasBuildDir() != other.hasBuildDir()) return false;
    if (hasBuildDir()) {
      if (!getBuildDir()
          .equals(other.getBuildDir())) return false;
    }
    if (!getBootClasspathList()
        .equals(other.getBootClasspathList())) return false;
    if (hasTestInfo() != other.hasTestInfo()) return false;
    if (hasTestInfo()) {
      if (!getTestInfo()
          .equals(other.getTestInfo())) return false;
    }
    if (hasFlags() != other.hasFlags()) return false;
    if (hasFlags()) {
      if (!getFlags()
          .equals(other.getFlags())) return false;
    }
    if (!getLintChecksJarsList()
        .equals(other.getLintChecksJarsList())) return false;
    if (hasIsCoreLibraryDesugaringEnabled() != other.hasIsCoreLibraryDesugaringEnabled()) return false;
    if (hasIsCoreLibraryDesugaringEnabled()) {
      if (getIsCoreLibraryDesugaringEnabled()
          != other.getIsCoreLibraryDesugaringEnabled()) return false;
    }
    if (!getDesugarLibConfigList()
        .equals(other.getDesugarLibConfigList())) return false;
    if (hasGroupId() != other.hasGroupId()) return false;
    if (hasGroupId()) {
      if (!getGroupId()
          .equals(other.getGroupId())) return false;
    }
    if (hasBuildToolsVersion() != other.hasBuildToolsVersion()) return false;
    if (hasBuildToolsVersion()) {
      if (!getBuildToolsVersion()
          .equals(other.getBuildToolsVersion())) return false;
    }
    if (!getDesugaredMethodsFilesList()
        .equals(other.getDesugaredMethodsFilesList())) return false;
    if (hasRootBuildId() != other.hasRootBuildId()) return false;
    if (hasRootBuildId()) {
      if (!getRootBuildId()
          .equals(other.getRootBuildId())) return false;
    }
    if (hasBuildId() != other.hasBuildId()) return false;
    if (hasBuildId()) {
      if (!getBuildId()
          .equals(other.getBuildId())) return false;
    }
    if (hasWithJava() != other.hasWithJava()) return false;
    if (hasWithJava()) {
      if (getWithJava()
          != other.getWithJava()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAgpVersion()) {
      hash = (37 * hash) + AGP_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getAgpVersion().hashCode();
    }
    if (hasProjectPath()) {
      hash = (37 * hash) + PROJECT_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getProjectPath().hashCode();
    }
    if (hasBuildDir()) {
      hash = (37 * hash) + BUILD_DIR_FIELD_NUMBER;
      hash = (53 * hash) + getBuildDir().hashCode();
    }
    if (getBootClasspathCount() > 0) {
      hash = (37 * hash) + BOOT_CLASSPATH_FIELD_NUMBER;
      hash = (53 * hash) + getBootClasspathList().hashCode();
    }
    if (hasTestInfo()) {
      hash = (37 * hash) + TEST_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getTestInfo().hashCode();
    }
    if (hasFlags()) {
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags().hashCode();
    }
    if (getLintChecksJarsCount() > 0) {
      hash = (37 * hash) + LINT_CHECKS_JARS_FIELD_NUMBER;
      hash = (53 * hash) + getLintChecksJarsList().hashCode();
    }
    if (hasIsCoreLibraryDesugaringEnabled()) {
      hash = (37 * hash) + IS_CORE_LIBRARY_DESUGARING_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCoreLibraryDesugaringEnabled());
    }
    if (getDesugarLibConfigCount() > 0) {
      hash = (37 * hash) + DESUGAR_LIB_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDesugarLibConfigList().hashCode();
    }
    if (hasGroupId()) {
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId().hashCode();
    }
    if (hasBuildToolsVersion()) {
      hash = (37 * hash) + BUILD_TOOLS_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getBuildToolsVersion().hashCode();
    }
    if (getDesugaredMethodsFilesCount() > 0) {
      hash = (37 * hash) + DESUGARED_METHODS_FILES_FIELD_NUMBER;
      hash = (53 * hash) + getDesugaredMethodsFilesList().hashCode();
    }
    if (hasRootBuildId()) {
      hash = (37 * hash) + ROOT_BUILD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRootBuildId().hashCode();
    }
    if (hasBuildId()) {
      hash = (37 * hash) + BUILD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBuildId().hashCode();
    }
    if (hasWithJava()) {
      hash = (37 * hash) + WITH_JAVA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWithJava());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.android.kotlin.multiplatform.models.AndroidTarget parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.android.kotlin.multiplatform.models.AndroidTarget prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code AndroidTarget}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:AndroidTarget)
      com.android.kotlin.multiplatform.models.AndroidTargetOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.kotlin.multiplatform.models.KotlinMultiplatformAndroidModelsProto.internal_static_AndroidTarget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.kotlin.multiplatform.models.KotlinMultiplatformAndroidModelsProto.internal_static_AndroidTarget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.kotlin.multiplatform.models.AndroidTarget.class, com.android.kotlin.multiplatform.models.AndroidTarget.Builder.class);
    }

    // Construct using com.android.kotlin.multiplatform.models.AndroidTarget.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBuildDirFieldBuilder();
        getBootClasspathFieldBuilder();
        getTestInfoFieldBuilder();
        getFlagsFieldBuilder();
        getLintChecksJarsFieldBuilder();
        getDesugarLibConfigFieldBuilder();
        getDesugaredMethodsFilesFieldBuilder();
        getRootBuildIdFieldBuilder();
        getBuildIdFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      agpVersion_ = "";
      projectPath_ = "";
      buildDir_ = null;
      if (buildDirBuilder_ != null) {
        buildDirBuilder_.dispose();
        buildDirBuilder_ = null;
      }
      if (bootClasspathBuilder_ == null) {
        bootClasspath_ = java.util.Collections.emptyList();
      } else {
        bootClasspath_ = null;
        bootClasspathBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      testInfo_ = null;
      if (testInfoBuilder_ != null) {
        testInfoBuilder_.dispose();
        testInfoBuilder_ = null;
      }
      flags_ = null;
      if (flagsBuilder_ != null) {
        flagsBuilder_.dispose();
        flagsBuilder_ = null;
      }
      if (lintChecksJarsBuilder_ == null) {
        lintChecksJars_ = java.util.Collections.emptyList();
      } else {
        lintChecksJars_ = null;
        lintChecksJarsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      isCoreLibraryDesugaringEnabled_ = false;
      if (desugarLibConfigBuilder_ == null) {
        desugarLibConfig_ = java.util.Collections.emptyList();
      } else {
        desugarLibConfig_ = null;
        desugarLibConfigBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      groupId_ = "";
      buildToolsVersion_ = "";
      if (desugaredMethodsFilesBuilder_ == null) {
        desugaredMethodsFiles_ = java.util.Collections.emptyList();
      } else {
        desugaredMethodsFiles_ = null;
        desugaredMethodsFilesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      rootBuildId_ = null;
      if (rootBuildIdBuilder_ != null) {
        rootBuildIdBuilder_.dispose();
        rootBuildIdBuilder_ = null;
      }
      buildId_ = null;
      if (buildIdBuilder_ != null) {
        buildIdBuilder_.dispose();
        buildIdBuilder_ = null;
      }
      withJava_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.android.kotlin.multiplatform.models.KotlinMultiplatformAndroidModelsProto.internal_static_AndroidTarget_descriptor;
    }

    @java.lang.Override
    public com.android.kotlin.multiplatform.models.AndroidTarget getDefaultInstanceForType() {
      return com.android.kotlin.multiplatform.models.AndroidTarget.getDefaultInstance();
    }

    @java.lang.Override
    public com.android.kotlin.multiplatform.models.AndroidTarget build() {
      com.android.kotlin.multiplatform.models.AndroidTarget result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.android.kotlin.multiplatform.models.AndroidTarget buildPartial() {
      com.android.kotlin.multiplatform.models.AndroidTarget result = new com.android.kotlin.multiplatform.models.AndroidTarget(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.android.kotlin.multiplatform.models.AndroidTarget result) {
      if (bootClasspathBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          bootClasspath_ = java.util.Collections.unmodifiableList(bootClasspath_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bootClasspath_ = bootClasspath_;
      } else {
        result.bootClasspath_ = bootClasspathBuilder_.build();
      }
      if (lintChecksJarsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          lintChecksJars_ = java.util.Collections.unmodifiableList(lintChecksJars_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.lintChecksJars_ = lintChecksJars_;
      } else {
        result.lintChecksJars_ = lintChecksJarsBuilder_.build();
      }
      if (desugarLibConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          desugarLibConfig_ = java.util.Collections.unmodifiableList(desugarLibConfig_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.desugarLibConfig_ = desugarLibConfig_;
      } else {
        result.desugarLibConfig_ = desugarLibConfigBuilder_.build();
      }
      if (desugaredMethodsFilesBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          desugaredMethodsFiles_ = java.util.Collections.unmodifiableList(desugaredMethodsFiles_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.desugaredMethodsFiles_ = desugaredMethodsFiles_;
      } else {
        result.desugaredMethodsFiles_ = desugaredMethodsFilesBuilder_.build();
      }
    }

    private void buildPartial0(com.android.kotlin.multiplatform.models.AndroidTarget result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.agpVersion_ = agpVersion_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.projectPath_ = projectPath_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.buildDir_ = buildDirBuilder_ == null
            ? buildDir_
            : buildDirBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.testInfo_ = testInfoBuilder_ == null
            ? testInfo_
            : testInfoBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.flags_ = flagsBuilder_ == null
            ? flags_
            : flagsBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.isCoreLibraryDesugaringEnabled_ = isCoreLibraryDesugaringEnabled_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.groupId_ = groupId_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.buildToolsVersion_ = buildToolsVersion_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.rootBuildId_ = rootBuildIdBuilder_ == null
            ? rootBuildId_
            : rootBuildIdBuilder_.build();
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.buildId_ = buildIdBuilder_ == null
            ? buildId_
            : buildIdBuilder_.build();
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.withJava_ = withJava_;
        to_bitField0_ |= 0x00000400;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.android.kotlin.multiplatform.models.AndroidTarget) {
        return mergeFrom((com.android.kotlin.multiplatform.models.AndroidTarget)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.android.kotlin.multiplatform.models.AndroidTarget other) {
      if (other == com.android.kotlin.multiplatform.models.AndroidTarget.getDefaultInstance()) return this;
      if (other.hasAgpVersion()) {
        agpVersion_ = other.agpVersion_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasProjectPath()) {
        projectPath_ = other.projectPath_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasBuildDir()) {
        mergeBuildDir(other.getBuildDir());
      }
      if (bootClasspathBuilder_ == null) {
        if (!other.bootClasspath_.isEmpty()) {
          if (bootClasspath_.isEmpty()) {
            bootClasspath_ = other.bootClasspath_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBootClasspathIsMutable();
            bootClasspath_.addAll(other.bootClasspath_);
          }
          onChanged();
        }
      } else {
        if (!other.bootClasspath_.isEmpty()) {
          if (bootClasspathBuilder_.isEmpty()) {
            bootClasspathBuilder_.dispose();
            bootClasspathBuilder_ = null;
            bootClasspath_ = other.bootClasspath_;
            bitField0_ = (bitField0_ & ~0x00000008);
            bootClasspathBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBootClasspathFieldBuilder() : null;
          } else {
            bootClasspathBuilder_.addAllMessages(other.bootClasspath_);
          }
        }
      }
      if (other.hasTestInfo()) {
        mergeTestInfo(other.getTestInfo());
      }
      if (other.hasFlags()) {
        mergeFlags(other.getFlags());
      }
      if (lintChecksJarsBuilder_ == null) {
        if (!other.lintChecksJars_.isEmpty()) {
          if (lintChecksJars_.isEmpty()) {
            lintChecksJars_ = other.lintChecksJars_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureLintChecksJarsIsMutable();
            lintChecksJars_.addAll(other.lintChecksJars_);
          }
          onChanged();
        }
      } else {
        if (!other.lintChecksJars_.isEmpty()) {
          if (lintChecksJarsBuilder_.isEmpty()) {
            lintChecksJarsBuilder_.dispose();
            lintChecksJarsBuilder_ = null;
            lintChecksJars_ = other.lintChecksJars_;
            bitField0_ = (bitField0_ & ~0x00000040);
            lintChecksJarsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLintChecksJarsFieldBuilder() : null;
          } else {
            lintChecksJarsBuilder_.addAllMessages(other.lintChecksJars_);
          }
        }
      }
      if (other.hasIsCoreLibraryDesugaringEnabled()) {
        setIsCoreLibraryDesugaringEnabled(other.getIsCoreLibraryDesugaringEnabled());
      }
      if (desugarLibConfigBuilder_ == null) {
        if (!other.desugarLibConfig_.isEmpty()) {
          if (desugarLibConfig_.isEmpty()) {
            desugarLibConfig_ = other.desugarLibConfig_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureDesugarLibConfigIsMutable();
            desugarLibConfig_.addAll(other.desugarLibConfig_);
          }
          onChanged();
        }
      } else {
        if (!other.desugarLibConfig_.isEmpty()) {
          if (desugarLibConfigBuilder_.isEmpty()) {
            desugarLibConfigBuilder_.dispose();
            desugarLibConfigBuilder_ = null;
            desugarLibConfig_ = other.desugarLibConfig_;
            bitField0_ = (bitField0_ & ~0x00000100);
            desugarLibConfigBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDesugarLibConfigFieldBuilder() : null;
          } else {
            desugarLibConfigBuilder_.addAllMessages(other.desugarLibConfig_);
          }
        }
      }
      if (other.hasGroupId()) {
        groupId_ = other.groupId_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      if (other.hasBuildToolsVersion()) {
        buildToolsVersion_ = other.buildToolsVersion_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (desugaredMethodsFilesBuilder_ == null) {
        if (!other.desugaredMethodsFiles_.isEmpty()) {
          if (desugaredMethodsFiles_.isEmpty()) {
            desugaredMethodsFiles_ = other.desugaredMethodsFiles_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureDesugaredMethodsFilesIsMutable();
            desugaredMethodsFiles_.addAll(other.desugaredMethodsFiles_);
          }
          onChanged();
        }
      } else {
        if (!other.desugaredMethodsFiles_.isEmpty()) {
          if (desugaredMethodsFilesBuilder_.isEmpty()) {
            desugaredMethodsFilesBuilder_.dispose();
            desugaredMethodsFilesBuilder_ = null;
            desugaredMethodsFiles_ = other.desugaredMethodsFiles_;
            bitField0_ = (bitField0_ & ~0x00000800);
            desugaredMethodsFilesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDesugaredMethodsFilesFieldBuilder() : null;
          } else {
            desugaredMethodsFilesBuilder_.addAllMessages(other.desugaredMethodsFiles_);
          }
        }
      }
      if (other.hasRootBuildId()) {
        mergeRootBuildId(other.getRootBuildId());
      }
      if (other.hasBuildId()) {
        mergeBuildId(other.getBuildId());
      }
      if (other.hasWithJava()) {
        setWithJava(other.getWithJava());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              agpVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              projectPath_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBuildDirFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.android.builder.model.proto.ide.File m =
                  input.readMessage(
                      com.android.builder.model.proto.ide.File.parser(),
                      extensionRegistry);
              if (bootClasspathBuilder_ == null) {
                ensureBootClasspathIsMutable();
                bootClasspath_.add(m);
              } else {
                bootClasspathBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getTestInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getFlagsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              com.android.builder.model.proto.ide.File m =
                  input.readMessage(
                      com.android.builder.model.proto.ide.File.parser(),
                      extensionRegistry);
              if (lintChecksJarsBuilder_ == null) {
                ensureLintChecksJarsIsMutable();
                lintChecksJars_.add(m);
              } else {
                lintChecksJarsBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 64: {
              isCoreLibraryDesugaringEnabled_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 74: {
              com.android.builder.model.proto.ide.File m =
                  input.readMessage(
                      com.android.builder.model.proto.ide.File.parser(),
                      extensionRegistry);
              if (desugarLibConfigBuilder_ == null) {
                ensureDesugarLibConfigIsMutable();
                desugarLibConfig_.add(m);
              } else {
                desugarLibConfigBuilder_.addMessage(m);
              }
              break;
            } // case 74
            case 82: {
              groupId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 90: {
              buildToolsVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000400;
              break;
            } // case 90
            case 98: {
              com.android.builder.model.proto.ide.File m =
                  input.readMessage(
                      com.android.builder.model.proto.ide.File.parser(),
                      extensionRegistry);
              if (desugaredMethodsFilesBuilder_ == null) {
                ensureDesugaredMethodsFilesIsMutable();
                desugaredMethodsFiles_.add(m);
              } else {
                desugaredMethodsFilesBuilder_.addMessage(m);
              }
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getRootBuildIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getBuildIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00002000;
              break;
            } // case 114
            case 120: {
              withJava_ = input.readBool();
              bitField0_ |= 0x00004000;
              break;
            } // case 120
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object agpVersion_ = "";
    /**
     * <pre>
     * Version of the android gradle plugin.
     * </pre>
     *
     * <code>optional string agp_version = 1;</code>
     * @return Whether the agpVersion field is set.
     */
    public boolean hasAgpVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Version of the android gradle plugin.
     * </pre>
     *
     * <code>optional string agp_version = 1;</code>
     * @return The agpVersion.
     */
    public java.lang.String getAgpVersion() {
      java.lang.Object ref = agpVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        agpVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Version of the android gradle plugin.
     * </pre>
     *
     * <code>optional string agp_version = 1;</code>
     * @return The bytes for agpVersion.
     */
    public com.google.protobuf.ByteString
        getAgpVersionBytes() {
      java.lang.Object ref = agpVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        agpVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Version of the android gradle plugin.
     * </pre>
     *
     * <code>optional string agp_version = 1;</code>
     * @param value The agpVersion to set.
     * @return This builder for chaining.
     */
    public Builder setAgpVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      agpVersion_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of the android gradle plugin.
     * </pre>
     *
     * <code>optional string agp_version = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAgpVersion() {
      agpVersion_ = getDefaultInstance().getAgpVersion();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of the android gradle plugin.
     * </pre>
     *
     * <code>optional string agp_version = 1;</code>
     * @param value The bytes for agpVersion to set.
     * @return This builder for chaining.
     */
    public Builder setAgpVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      agpVersion_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object projectPath_ = "";
    /**
     * <pre>
     * The gradle path of the module.
     * </pre>
     *
     * <code>optional string project_path = 2;</code>
     * @return Whether the projectPath field is set.
     */
    public boolean hasProjectPath() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The gradle path of the module.
     * </pre>
     *
     * <code>optional string project_path = 2;</code>
     * @return The projectPath.
     */
    public java.lang.String getProjectPath() {
      java.lang.Object ref = projectPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        projectPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The gradle path of the module.
     * </pre>
     *
     * <code>optional string project_path = 2;</code>
     * @return The bytes for projectPath.
     */
    public com.google.protobuf.ByteString
        getProjectPathBytes() {
      java.lang.Object ref = projectPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The gradle path of the module.
     * </pre>
     *
     * <code>optional string project_path = 2;</code>
     * @param value The projectPath to set.
     * @return This builder for chaining.
     */
    public Builder setProjectPath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      projectPath_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gradle path of the module.
     * </pre>
     *
     * <code>optional string project_path = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectPath() {
      projectPath_ = getDefaultInstance().getProjectPath();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gradle path of the module.
     * </pre>
     *
     * <code>optional string project_path = 2;</code>
     * @param value The bytes for projectPath to set.
     * @return This builder for chaining.
     */
    public Builder setProjectPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      projectPath_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.android.builder.model.proto.ide.File buildDir_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> buildDirBuilder_;
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     * @return Whether the buildDir field is set.
     */
    public boolean hasBuildDir() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     * @return The buildDir.
     */
    public com.android.builder.model.proto.ide.File getBuildDir() {
      if (buildDirBuilder_ == null) {
        return buildDir_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : buildDir_;
      } else {
        return buildDirBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    public Builder setBuildDir(com.android.builder.model.proto.ide.File value) {
      if (buildDirBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        buildDir_ = value;
      } else {
        buildDirBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    public Builder setBuildDir(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (buildDirBuilder_ == null) {
        buildDir_ = builderForValue.build();
      } else {
        buildDirBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    public Builder mergeBuildDir(com.android.builder.model.proto.ide.File value) {
      if (buildDirBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          buildDir_ != null &&
          buildDir_ != com.android.builder.model.proto.ide.File.getDefaultInstance()) {
          getBuildDirBuilder().mergeFrom(value);
        } else {
          buildDir_ = value;
        }
      } else {
        buildDirBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    public Builder clearBuildDir() {
      bitField0_ = (bitField0_ & ~0x00000004);
      buildDir_ = null;
      if (buildDirBuilder_ != null) {
        buildDirBuilder_.dispose();
        buildDirBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getBuildDirBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getBuildDirFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getBuildDirOrBuilder() {
      if (buildDirBuilder_ != null) {
        return buildDirBuilder_.getMessageOrBuilder();
      } else {
        return buildDir_ == null ?
            com.android.builder.model.proto.ide.File.getDefaultInstance() : buildDir_;
      }
    }
    /**
     * <pre>
     * The gradle build folder of the project.
     * </pre>
     *
     * <code>optional .File build_dir = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getBuildDirFieldBuilder() {
      if (buildDirBuilder_ == null) {
        buildDirBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                getBuildDir(),
                getParentForChildren(),
                isClean());
        buildDir_ = null;
      }
      return buildDirBuilder_;
    }

    private java.util.List<com.android.builder.model.proto.ide.File> bootClasspath_ =
      java.util.Collections.emptyList();
    private void ensureBootClasspathIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        bootClasspath_ = new java.util.ArrayList<com.android.builder.model.proto.ide.File>(bootClasspath_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> bootClasspathBuilder_;

    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File> getBootClasspathList() {
      if (bootClasspathBuilder_ == null) {
        return java.util.Collections.unmodifiableList(bootClasspath_);
      } else {
        return bootClasspathBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public int getBootClasspathCount() {
      if (bootClasspathBuilder_ == null) {
        return bootClasspath_.size();
      } else {
        return bootClasspathBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public com.android.builder.model.proto.ide.File getBootClasspath(int index) {
      if (bootClasspathBuilder_ == null) {
        return bootClasspath_.get(index);
      } else {
        return bootClasspathBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder setBootClasspath(
        int index, com.android.builder.model.proto.ide.File value) {
      if (bootClasspathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBootClasspathIsMutable();
        bootClasspath_.set(index, value);
        onChanged();
      } else {
        bootClasspathBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder setBootClasspath(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (bootClasspathBuilder_ == null) {
        ensureBootClasspathIsMutable();
        bootClasspath_.set(index, builderForValue.build());
        onChanged();
      } else {
        bootClasspathBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder addBootClasspath(com.android.builder.model.proto.ide.File value) {
      if (bootClasspathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBootClasspathIsMutable();
        bootClasspath_.add(value);
        onChanged();
      } else {
        bootClasspathBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder addBootClasspath(
        int index, com.android.builder.model.proto.ide.File value) {
      if (bootClasspathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBootClasspathIsMutable();
        bootClasspath_.add(index, value);
        onChanged();
      } else {
        bootClasspathBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder addBootClasspath(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (bootClasspathBuilder_ == null) {
        ensureBootClasspathIsMutable();
        bootClasspath_.add(builderForValue.build());
        onChanged();
      } else {
        bootClasspathBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder addBootClasspath(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (bootClasspathBuilder_ == null) {
        ensureBootClasspathIsMutable();
        bootClasspath_.add(index, builderForValue.build());
        onChanged();
      } else {
        bootClasspathBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder addAllBootClasspath(
        java.lang.Iterable<? extends com.android.builder.model.proto.ide.File> values) {
      if (bootClasspathBuilder_ == null) {
        ensureBootClasspathIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bootClasspath_);
        onChanged();
      } else {
        bootClasspathBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder clearBootClasspath() {
      if (bootClasspathBuilder_ == null) {
        bootClasspath_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        bootClasspathBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public Builder removeBootClasspath(int index) {
      if (bootClasspathBuilder_ == null) {
        ensureBootClasspathIsMutable();
        bootClasspath_.remove(index);
        onChanged();
      } else {
        bootClasspathBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getBootClasspathBuilder(
        int index) {
      return getBootClasspathFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getBootClasspathOrBuilder(
        int index) {
      if (bootClasspathBuilder_ == null) {
        return bootClasspath_.get(index);  } else {
        return bootClasspathBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
         getBootClasspathOrBuilderList() {
      if (bootClasspathBuilder_ != null) {
        return bootClasspathBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(bootClasspath_);
      }
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addBootClasspathBuilder() {
      return getBootClasspathFieldBuilder().addBuilder(
          com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addBootClasspathBuilder(
        int index) {
      return getBootClasspathFieldBuilder().addBuilder(
          index, com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * The boot classpath matching the compile target. This is typically android.jar plus
     * other optional libraries.
     * </pre>
     *
     * <code>repeated .File boot_classpath = 4;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File.Builder> 
         getBootClasspathBuilderList() {
      return getBootClasspathFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getBootClasspathFieldBuilder() {
      if (bootClasspathBuilder_ == null) {
        bootClasspathBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                bootClasspath_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        bootClasspath_ = null;
      }
      return bootClasspathBuilder_;
    }

    private com.android.builder.model.proto.ide.TestInfo testInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.TestInfo, com.android.builder.model.proto.ide.TestInfo.Builder, com.android.builder.model.proto.ide.TestInfoOrBuilder> testInfoBuilder_;
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     * @return Whether the testInfo field is set.
     */
    public boolean hasTestInfo() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     * @return The testInfo.
     */
    public com.android.builder.model.proto.ide.TestInfo getTestInfo() {
      if (testInfoBuilder_ == null) {
        return testInfo_ == null ? com.android.builder.model.proto.ide.TestInfo.getDefaultInstance() : testInfo_;
      } else {
        return testInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    public Builder setTestInfo(com.android.builder.model.proto.ide.TestInfo value) {
      if (testInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        testInfo_ = value;
      } else {
        testInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    public Builder setTestInfo(
        com.android.builder.model.proto.ide.TestInfo.Builder builderForValue) {
      if (testInfoBuilder_ == null) {
        testInfo_ = builderForValue.build();
      } else {
        testInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    public Builder mergeTestInfo(com.android.builder.model.proto.ide.TestInfo value) {
      if (testInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          testInfo_ != null &&
          testInfo_ != com.android.builder.model.proto.ide.TestInfo.getDefaultInstance()) {
          getTestInfoBuilder().mergeFrom(value);
        } else {
          testInfo_ = value;
        }
      } else {
        testInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    public Builder clearTestInfo() {
      bitField0_ = (bitField0_ & ~0x00000010);
      testInfo_ = null;
      if (testInfoBuilder_ != null) {
        testInfoBuilder_.dispose();
        testInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    public com.android.builder.model.proto.ide.TestInfo.Builder getTestInfoBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getTestInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    public com.android.builder.model.proto.ide.TestInfoOrBuilder getTestInfoOrBuilder() {
      if (testInfoBuilder_ != null) {
        return testInfoBuilder_.getMessageOrBuilder();
      } else {
        return testInfo_ == null ?
            com.android.builder.model.proto.ide.TestInfo.getDefaultInstance() : testInfo_;
      }
    }
    /**
     * <pre>
     * The instrumented test info if enabled.
     * </pre>
     *
     * <code>optional .TestInfo test_info = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.TestInfo, com.android.builder.model.proto.ide.TestInfo.Builder, com.android.builder.model.proto.ide.TestInfoOrBuilder> 
        getTestInfoFieldBuilder() {
      if (testInfoBuilder_ == null) {
        testInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.android.builder.model.proto.ide.TestInfo, com.android.builder.model.proto.ide.TestInfo.Builder, com.android.builder.model.proto.ide.TestInfoOrBuilder>(
                getTestInfo(),
                getParentForChildren(),
                isClean());
        testInfo_ = null;
      }
      return testInfoBuilder_;
    }

    private com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags flags_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags, com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.Builder, com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlagsOrBuilder> flagsBuilder_;
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     * @return Whether the flags field is set.
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     * @return The flags.
     */
    public com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags getFlags() {
      if (flagsBuilder_ == null) {
        return flags_ == null ? com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.getDefaultInstance() : flags_;
      } else {
        return flagsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    public Builder setFlags(com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags value) {
      if (flagsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        flags_ = value;
      } else {
        flagsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    public Builder setFlags(
        com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.Builder builderForValue) {
      if (flagsBuilder_ == null) {
        flags_ = builderForValue.build();
      } else {
        flagsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    public Builder mergeFlags(com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags value) {
      if (flagsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          flags_ != null &&
          flags_ != com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.getDefaultInstance()) {
          getFlagsBuilder().mergeFrom(value);
        } else {
          flags_ = value;
        }
      } else {
        flagsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    public Builder clearFlags() {
      bitField0_ = (bitField0_ & ~0x00000020);
      flags_ = null;
      if (flagsBuilder_ != null) {
        flagsBuilder_.dispose();
        flagsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    public com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.Builder getFlagsBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getFlagsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    public com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlagsOrBuilder getFlagsOrBuilder() {
      if (flagsBuilder_ != null) {
        return flagsBuilder_.getMessageOrBuilder();
      } else {
        return flags_ == null ?
            com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.getDefaultInstance() : flags_;
      }
    }
    /**
     * <pre>
     * The android gradle plugin flags for this project.
     * </pre>
     *
     * <code>optional .AndroidGradlePluginProjectFlags flags = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags, com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.Builder, com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlagsOrBuilder> 
        getFlagsFieldBuilder() {
      if (flagsBuilder_ == null) {
        flagsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags, com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlags.Builder, com.android.builder.model.proto.ide.AndroidGradlePluginProjectFlagsOrBuilder>(
                getFlags(),
                getParentForChildren(),
                isClean());
        flags_ = null;
      }
      return flagsBuilder_;
    }

    private java.util.List<com.android.builder.model.proto.ide.File> lintChecksJars_ =
      java.util.Collections.emptyList();
    private void ensureLintChecksJarsIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        lintChecksJars_ = new java.util.ArrayList<com.android.builder.model.proto.ide.File>(lintChecksJars_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> lintChecksJarsBuilder_;

    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File> getLintChecksJarsList() {
      if (lintChecksJarsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(lintChecksJars_);
      } else {
        return lintChecksJarsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public int getLintChecksJarsCount() {
      if (lintChecksJarsBuilder_ == null) {
        return lintChecksJars_.size();
      } else {
        return lintChecksJarsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public com.android.builder.model.proto.ide.File getLintChecksJars(int index) {
      if (lintChecksJarsBuilder_ == null) {
        return lintChecksJars_.get(index);
      } else {
        return lintChecksJarsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder setLintChecksJars(
        int index, com.android.builder.model.proto.ide.File value) {
      if (lintChecksJarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.set(index, value);
        onChanged();
      } else {
        lintChecksJarsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder setLintChecksJars(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (lintChecksJarsBuilder_ == null) {
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.set(index, builderForValue.build());
        onChanged();
      } else {
        lintChecksJarsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder addLintChecksJars(com.android.builder.model.proto.ide.File value) {
      if (lintChecksJarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.add(value);
        onChanged();
      } else {
        lintChecksJarsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder addLintChecksJars(
        int index, com.android.builder.model.proto.ide.File value) {
      if (lintChecksJarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.add(index, value);
        onChanged();
      } else {
        lintChecksJarsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder addLintChecksJars(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (lintChecksJarsBuilder_ == null) {
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.add(builderForValue.build());
        onChanged();
      } else {
        lintChecksJarsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder addLintChecksJars(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (lintChecksJarsBuilder_ == null) {
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.add(index, builderForValue.build());
        onChanged();
      } else {
        lintChecksJarsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder addAllLintChecksJars(
        java.lang.Iterable<? extends com.android.builder.model.proto.ide.File> values) {
      if (lintChecksJarsBuilder_ == null) {
        ensureLintChecksJarsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lintChecksJars_);
        onChanged();
      } else {
        lintChecksJarsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder clearLintChecksJars() {
      if (lintChecksJarsBuilder_ == null) {
        lintChecksJars_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        lintChecksJarsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public Builder removeLintChecksJars(int index) {
      if (lintChecksJarsBuilder_ == null) {
        ensureLintChecksJarsIsMutable();
        lintChecksJars_.remove(index);
        onChanged();
      } else {
        lintChecksJarsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getLintChecksJarsBuilder(
        int index) {
      return getLintChecksJarsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getLintChecksJarsOrBuilder(
        int index) {
      if (lintChecksJarsBuilder_ == null) {
        return lintChecksJars_.get(index);  } else {
        return lintChecksJarsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
         getLintChecksJarsOrBuilderList() {
      if (lintChecksJarsBuilder_ != null) {
        return lintChecksJarsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(lintChecksJars_);
      }
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addLintChecksJarsBuilder() {
      return getLintChecksJarsFieldBuilder().addBuilder(
          com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addLintChecksJarsBuilder(
        int index) {
      return getLintChecksJarsFieldBuilder().addBuilder(
          index, com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * The lint jars that this module uses to run extra lint checks on this project.
     * This is the resolution of the `lintCheck` configuration.
     * </pre>
     *
     * <code>repeated .File lint_checks_jars = 7;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File.Builder> 
         getLintChecksJarsBuilderList() {
      return getLintChecksJarsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getLintChecksJarsFieldBuilder() {
      if (lintChecksJarsBuilder_ == null) {
        lintChecksJarsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                lintChecksJars_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        lintChecksJars_ = null;
      }
      return lintChecksJarsBuilder_;
    }

    private boolean isCoreLibraryDesugaringEnabled_ ;
    /**
     * <pre>
     * Whether core library desugaring is enabled, false otherwise.
     * </pre>
     *
     * <code>optional bool is_core_library_desugaring_enabled = 8;</code>
     * @return Whether the isCoreLibraryDesugaringEnabled field is set.
     */
    @java.lang.Override
    public boolean hasIsCoreLibraryDesugaringEnabled() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Whether core library desugaring is enabled, false otherwise.
     * </pre>
     *
     * <code>optional bool is_core_library_desugaring_enabled = 8;</code>
     * @return The isCoreLibraryDesugaringEnabled.
     */
    @java.lang.Override
    public boolean getIsCoreLibraryDesugaringEnabled() {
      return isCoreLibraryDesugaringEnabled_;
    }
    /**
     * <pre>
     * Whether core library desugaring is enabled, false otherwise.
     * </pre>
     *
     * <code>optional bool is_core_library_desugaring_enabled = 8;</code>
     * @param value The isCoreLibraryDesugaringEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setIsCoreLibraryDesugaringEnabled(boolean value) {

      isCoreLibraryDesugaringEnabled_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether core library desugaring is enabled, false otherwise.
     * </pre>
     *
     * <code>optional bool is_core_library_desugaring_enabled = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsCoreLibraryDesugaringEnabled() {
      bitField0_ = (bitField0_ & ~0x00000080);
      isCoreLibraryDesugaringEnabled_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.android.builder.model.proto.ide.File> desugarLibConfig_ =
      java.util.Collections.emptyList();
    private void ensureDesugarLibConfigIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        desugarLibConfig_ = new java.util.ArrayList<com.android.builder.model.proto.ide.File>(desugarLibConfig_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> desugarLibConfigBuilder_;

    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File> getDesugarLibConfigList() {
      if (desugarLibConfigBuilder_ == null) {
        return java.util.Collections.unmodifiableList(desugarLibConfig_);
      } else {
        return desugarLibConfigBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public int getDesugarLibConfigCount() {
      if (desugarLibConfigBuilder_ == null) {
        return desugarLibConfig_.size();
      } else {
        return desugarLibConfigBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public com.android.builder.model.proto.ide.File getDesugarLibConfig(int index) {
      if (desugarLibConfigBuilder_ == null) {
        return desugarLibConfig_.get(index);
      } else {
        return desugarLibConfigBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder setDesugarLibConfig(
        int index, com.android.builder.model.proto.ide.File value) {
      if (desugarLibConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.set(index, value);
        onChanged();
      } else {
        desugarLibConfigBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder setDesugarLibConfig(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (desugarLibConfigBuilder_ == null) {
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.set(index, builderForValue.build());
        onChanged();
      } else {
        desugarLibConfigBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder addDesugarLibConfig(com.android.builder.model.proto.ide.File value) {
      if (desugarLibConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.add(value);
        onChanged();
      } else {
        desugarLibConfigBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder addDesugarLibConfig(
        int index, com.android.builder.model.proto.ide.File value) {
      if (desugarLibConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.add(index, value);
        onChanged();
      } else {
        desugarLibConfigBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder addDesugarLibConfig(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (desugarLibConfigBuilder_ == null) {
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.add(builderForValue.build());
        onChanged();
      } else {
        desugarLibConfigBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder addDesugarLibConfig(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (desugarLibConfigBuilder_ == null) {
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.add(index, builderForValue.build());
        onChanged();
      } else {
        desugarLibConfigBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder addAllDesugarLibConfig(
        java.lang.Iterable<? extends com.android.builder.model.proto.ide.File> values) {
      if (desugarLibConfigBuilder_ == null) {
        ensureDesugarLibConfigIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, desugarLibConfig_);
        onChanged();
      } else {
        desugarLibConfigBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder clearDesugarLibConfig() {
      if (desugarLibConfigBuilder_ == null) {
        desugarLibConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        desugarLibConfigBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public Builder removeDesugarLibConfig(int index) {
      if (desugarLibConfigBuilder_ == null) {
        ensureDesugarLibConfigIsMutable();
        desugarLibConfig_.remove(index);
        onChanged();
      } else {
        desugarLibConfigBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getDesugarLibConfigBuilder(
        int index) {
      return getDesugarLibConfigFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getDesugarLibConfigOrBuilder(
        int index) {
      if (desugarLibConfigBuilder_ == null) {
        return desugarLibConfig_.get(index);  } else {
        return desugarLibConfigBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
         getDesugarLibConfigOrBuilderList() {
      if (desugarLibConfigBuilder_ != null) {
        return desugarLibConfigBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(desugarLibConfig_);
      }
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addDesugarLibConfigBuilder() {
      return getDesugarLibConfigFieldBuilder().addBuilder(
          com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addDesugarLibConfigBuilder(
        int index) {
      return getDesugarLibConfigFieldBuilder().addBuilder(
          index, com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Returns desugar.json configuration files for library desugaring, or empty when library
     * desugaring is not enabled. Currently, there would only be one desugar.json file for the
     * entire project, but could be more in the future if r8 team decides to publish more.
     * </pre>
     *
     * <code>repeated .File desugar_lib_config = 9;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File.Builder> 
         getDesugarLibConfigBuilderList() {
      return getDesugarLibConfigFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getDesugarLibConfigFieldBuilder() {
      if (desugarLibConfigBuilder_ == null) {
        desugarLibConfigBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                desugarLibConfig_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        desugarLibConfig_ = null;
      }
      return desugarLibConfigBuilder_;
    }

    private java.lang.Object groupId_ = "";
    /**
     * <pre>
     * Returns the optional group-id of the artifact represented by this project.
     * </pre>
     *
     * <code>optional string group_id = 10;</code>
     * @return Whether the groupId field is set.
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Returns the optional group-id of the artifact represented by this project.
     * </pre>
     *
     * <code>optional string group_id = 10;</code>
     * @return The groupId.
     */
    public java.lang.String getGroupId() {
      java.lang.Object ref = groupId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Returns the optional group-id of the artifact represented by this project.
     * </pre>
     *
     * <code>optional string group_id = 10;</code>
     * @return The bytes for groupId.
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      java.lang.Object ref = groupId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Returns the optional group-id of the artifact represented by this project.
     * </pre>
     *
     * <code>optional string group_id = 10;</code>
     * @param value The groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      groupId_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Returns the optional group-id of the artifact represented by this project.
     * </pre>
     *
     * <code>optional string group_id = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupId() {
      groupId_ = getDefaultInstance().getGroupId();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Returns the optional group-id of the artifact represented by this project.
     * </pre>
     *
     * <code>optional string group_id = 10;</code>
     * @param value The bytes for groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      groupId_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    private java.lang.Object buildToolsVersion_ = "";
    /**
     * <pre>
     * The build tools version used by this module.
     * </pre>
     *
     * <code>optional string build_tools_version = 11;</code>
     * @return Whether the buildToolsVersion field is set.
     */
    public boolean hasBuildToolsVersion() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The build tools version used by this module.
     * </pre>
     *
     * <code>optional string build_tools_version = 11;</code>
     * @return The buildToolsVersion.
     */
    public java.lang.String getBuildToolsVersion() {
      java.lang.Object ref = buildToolsVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        buildToolsVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The build tools version used by this module.
     * </pre>
     *
     * <code>optional string build_tools_version = 11;</code>
     * @return The bytes for buildToolsVersion.
     */
    public com.google.protobuf.ByteString
        getBuildToolsVersionBytes() {
      java.lang.Object ref = buildToolsVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        buildToolsVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The build tools version used by this module.
     * </pre>
     *
     * <code>optional string build_tools_version = 11;</code>
     * @param value The buildToolsVersion to set.
     * @return This builder for chaining.
     */
    public Builder setBuildToolsVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      buildToolsVersion_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build tools version used by this module.
     * </pre>
     *
     * <code>optional string build_tools_version = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearBuildToolsVersion() {
      buildToolsVersion_ = getDefaultInstance().getBuildToolsVersion();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build tools version used by this module.
     * </pre>
     *
     * <code>optional string build_tools_version = 11;</code>
     * @param value The bytes for buildToolsVersion to set.
     * @return This builder for chaining.
     */
    public Builder setBuildToolsVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      buildToolsVersion_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private java.util.List<com.android.builder.model.proto.ide.File> desugaredMethodsFiles_ =
      java.util.Collections.emptyList();
    private void ensureDesugaredMethodsFilesIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        desugaredMethodsFiles_ = new java.util.ArrayList<com.android.builder.model.proto.ide.File>(desugaredMethodsFiles_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> desugaredMethodsFilesBuilder_;

    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File> getDesugaredMethodsFilesList() {
      if (desugaredMethodsFilesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(desugaredMethodsFiles_);
      } else {
        return desugaredMethodsFilesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public int getDesugaredMethodsFilesCount() {
      if (desugaredMethodsFilesBuilder_ == null) {
        return desugaredMethodsFiles_.size();
      } else {
        return desugaredMethodsFilesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public com.android.builder.model.proto.ide.File getDesugaredMethodsFiles(int index) {
      if (desugaredMethodsFilesBuilder_ == null) {
        return desugaredMethodsFiles_.get(index);
      } else {
        return desugaredMethodsFilesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder setDesugaredMethodsFiles(
        int index, com.android.builder.model.proto.ide.File value) {
      if (desugaredMethodsFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.set(index, value);
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder setDesugaredMethodsFiles(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (desugaredMethodsFilesBuilder_ == null) {
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.set(index, builderForValue.build());
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder addDesugaredMethodsFiles(com.android.builder.model.proto.ide.File value) {
      if (desugaredMethodsFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.add(value);
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder addDesugaredMethodsFiles(
        int index, com.android.builder.model.proto.ide.File value) {
      if (desugaredMethodsFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.add(index, value);
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder addDesugaredMethodsFiles(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (desugaredMethodsFilesBuilder_ == null) {
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.add(builderForValue.build());
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder addDesugaredMethodsFiles(
        int index, com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (desugaredMethodsFilesBuilder_ == null) {
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.add(index, builderForValue.build());
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder addAllDesugaredMethodsFiles(
        java.lang.Iterable<? extends com.android.builder.model.proto.ide.File> values) {
      if (desugaredMethodsFilesBuilder_ == null) {
        ensureDesugaredMethodsFilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, desugaredMethodsFiles_);
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder clearDesugaredMethodsFiles() {
      if (desugaredMethodsFilesBuilder_ == null) {
        desugaredMethodsFiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public Builder removeDesugaredMethodsFiles(int index) {
      if (desugaredMethodsFilesBuilder_ == null) {
        ensureDesugaredMethodsFilesIsMutable();
        desugaredMethodsFiles_.remove(index);
        onChanged();
      } else {
        desugaredMethodsFilesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getDesugaredMethodsFilesBuilder(
        int index) {
      return getDesugaredMethodsFilesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getDesugaredMethodsFilesOrBuilder(
        int index) {
      if (desugaredMethodsFilesBuilder_ == null) {
        return desugaredMethodsFiles_.get(index);  } else {
        return desugaredMethodsFilesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public java.util.List<? extends com.android.builder.model.proto.ide.FileOrBuilder> 
         getDesugaredMethodsFilesOrBuilderList() {
      if (desugaredMethodsFilesBuilder_ != null) {
        return desugaredMethodsFilesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(desugaredMethodsFiles_);
      }
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addDesugaredMethodsFilesBuilder() {
      return getDesugaredMethodsFilesFieldBuilder().addBuilder(
          com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder addDesugaredMethodsFilesBuilder(
        int index) {
      return getDesugaredMethodsFilesFieldBuilder().addBuilder(
          index, com.android.builder.model.proto.ide.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Files listing any D8 backported desugared methods or core library desugared methods for this
     * artifact.
     * </pre>
     *
     * <code>repeated .File desugared_methods_files = 12;</code>
     */
    public java.util.List<com.android.builder.model.proto.ide.File.Builder> 
         getDesugaredMethodsFilesBuilderList() {
      return getDesugaredMethodsFilesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getDesugaredMethodsFilesFieldBuilder() {
      if (desugaredMethodsFilesBuilder_ == null) {
        desugaredMethodsFilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                desugaredMethodsFiles_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        desugaredMethodsFiles_ = null;
      }
      return desugaredMethodsFilesBuilder_;
    }

    private com.android.builder.model.proto.ide.File rootBuildId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> rootBuildIdBuilder_;
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     * @return Whether the rootBuildId field is set.
     */
    public boolean hasRootBuildId() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     * @return The rootBuildId.
     */
    public com.android.builder.model.proto.ide.File getRootBuildId() {
      if (rootBuildIdBuilder_ == null) {
        return rootBuildId_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : rootBuildId_;
      } else {
        return rootBuildIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    public Builder setRootBuildId(com.android.builder.model.proto.ide.File value) {
      if (rootBuildIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rootBuildId_ = value;
      } else {
        rootBuildIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    public Builder setRootBuildId(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (rootBuildIdBuilder_ == null) {
        rootBuildId_ = builderForValue.build();
      } else {
        rootBuildIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    public Builder mergeRootBuildId(com.android.builder.model.proto.ide.File value) {
      if (rootBuildIdBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          rootBuildId_ != null &&
          rootBuildId_ != com.android.builder.model.proto.ide.File.getDefaultInstance()) {
          getRootBuildIdBuilder().mergeFrom(value);
        } else {
          rootBuildId_ = value;
        }
      } else {
        rootBuildIdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    public Builder clearRootBuildId() {
      bitField0_ = (bitField0_ & ~0x00001000);
      rootBuildId_ = null;
      if (rootBuildIdBuilder_ != null) {
        rootBuildIdBuilder_.dispose();
        rootBuildIdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getRootBuildIdBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getRootBuildIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getRootBuildIdOrBuilder() {
      if (rootBuildIdBuilder_ != null) {
        return rootBuildIdBuilder_.getMessageOrBuilder();
      } else {
        return rootBuildId_ == null ?
            com.android.builder.model.proto.ide.File.getDefaultInstance() : rootBuildId_;
      }
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the root build of this project.
     * </pre>
     *
     * <code>optional .File root_build_id = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getRootBuildIdFieldBuilder() {
      if (rootBuildIdBuilder_ == null) {
        rootBuildIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                getRootBuildId(),
                getParentForChildren(),
                isClean());
        rootBuildId_ = null;
      }
      return rootBuildIdBuilder_;
    }

    private com.android.builder.model.proto.ide.File buildId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> buildIdBuilder_;
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     * @return Whether the buildId field is set.
     */
    public boolean hasBuildId() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     * @return The buildId.
     */
    public com.android.builder.model.proto.ide.File getBuildId() {
      if (buildIdBuilder_ == null) {
        return buildId_ == null ? com.android.builder.model.proto.ide.File.getDefaultInstance() : buildId_;
      } else {
        return buildIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    public Builder setBuildId(com.android.builder.model.proto.ide.File value) {
      if (buildIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        buildId_ = value;
      } else {
        buildIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    public Builder setBuildId(
        com.android.builder.model.proto.ide.File.Builder builderForValue) {
      if (buildIdBuilder_ == null) {
        buildId_ = builderForValue.build();
      } else {
        buildIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    public Builder mergeBuildId(com.android.builder.model.proto.ide.File value) {
      if (buildIdBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0) &&
          buildId_ != null &&
          buildId_ != com.android.builder.model.proto.ide.File.getDefaultInstance()) {
          getBuildIdBuilder().mergeFrom(value);
        } else {
          buildId_ = value;
        }
      } else {
        buildIdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    public Builder clearBuildId() {
      bitField0_ = (bitField0_ & ~0x00002000);
      buildId_ = null;
      if (buildIdBuilder_ != null) {
        buildIdBuilder_.dispose();
        buildIdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    public com.android.builder.model.proto.ide.File.Builder getBuildIdBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getBuildIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    public com.android.builder.model.proto.ide.FileOrBuilder getBuildIdOrBuilder() {
      if (buildIdBuilder_ != null) {
        return buildIdBuilder_.getMessageOrBuilder();
      } else {
        return buildId_ == null ?
            com.android.builder.model.proto.ide.File.getDefaultInstance() : buildId_;
      }
    }
    /**
     * <pre>
     * The build ID (directory containing the settings file) of the (included) build containing this
     * project.
     * </pre>
     *
     * <code>optional .File build_id = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder> 
        getBuildIdFieldBuilder() {
      if (buildIdBuilder_ == null) {
        buildIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.android.builder.model.proto.ide.File, com.android.builder.model.proto.ide.File.Builder, com.android.builder.model.proto.ide.FileOrBuilder>(
                getBuildId(),
                getParentForChildren(),
                isClean());
        buildId_ = null;
      }
      return buildIdBuilder_;
    }

    private boolean withJava_ ;
    /**
     * <pre>
     * Whether java compilation is enabled.
     * </pre>
     *
     * <code>optional bool with_java = 15;</code>
     * @return Whether the withJava field is set.
     */
    @java.lang.Override
    public boolean hasWithJava() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * Whether java compilation is enabled.
     * </pre>
     *
     * <code>optional bool with_java = 15;</code>
     * @return The withJava.
     */
    @java.lang.Override
    public boolean getWithJava() {
      return withJava_;
    }
    /**
     * <pre>
     * Whether java compilation is enabled.
     * </pre>
     *
     * <code>optional bool with_java = 15;</code>
     * @param value The withJava to set.
     * @return This builder for chaining.
     */
    public Builder setWithJava(boolean value) {

      withJava_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether java compilation is enabled.
     * </pre>
     *
     * <code>optional bool with_java = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearWithJava() {
      bitField0_ = (bitField0_ & ~0x00004000);
      withJava_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:AndroidTarget)
  }

  // @@protoc_insertion_point(class_scope:AndroidTarget)
  private static final com.android.kotlin.multiplatform.models.AndroidTarget DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.android.kotlin.multiplatform.models.AndroidTarget();
  }

  public static com.android.kotlin.multiplatform.models.AndroidTarget getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AndroidTarget>
      PARSER = new com.google.protobuf.AbstractParser<AndroidTarget>() {
    @java.lang.Override
    public AndroidTarget parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AndroidTarget> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AndroidTarget> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.android.kotlin.multiplatform.models.AndroidTarget getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

