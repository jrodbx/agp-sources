// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Details for Compose MultiPreview event
 * </pre>
 *
 * Protobuf type {@code android_studio.ComposeMultiPreviewEvent}
 */
public final class ComposeMultiPreviewEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.ComposeMultiPreviewEvent)
    ComposeMultiPreviewEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ComposeMultiPreviewEvent.newBuilder() to construct.
  private ComposeMultiPreviewEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ComposeMultiPreviewEvent() {
    multiPreviewNodes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ComposeMultiPreviewEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.class, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.Builder.class);
  }

  public interface ComposeMultiPreviewNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of node in the MultiPreview graph.
     * </pre>
     *
     * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
     * @return Whether the nodeType field is set.
     */
    boolean hasNodeType();
    /**
     * <pre>
     * Type of node in the MultiPreview graph.
     * </pre>
     *
     * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
     * @return The nodeType.
     */
    com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType getNodeType();

    /**
     * <pre>
     * Anonymized id for the Composable node that is the root of this graph.
     * </pre>
     *
     * <code>optional int64 anonymized_composable_id = 2;</code>
     * @return Whether the anonymizedComposableId field is set.
     */
    boolean hasAnonymizedComposableId();
    /**
     * <pre>
     * Anonymized id for the Composable node that is the root of this graph.
     * </pre>
     *
     * <code>optional int64 anonymized_composable_id = 2;</code>
     * @return The anonymizedComposableId.
     */
    long getAnonymizedComposableId();

    /**
     * <pre>
     * Number of direct childs which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 preview_childs_count = 3;</code>
     * @return Whether the previewChildsCount field is set.
     */
    boolean hasPreviewChildsCount();
    /**
     * <pre>
     * Number of direct childs which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 preview_childs_count = 3;</code>
     * @return The previewChildsCount.
     */
    int getPreviewChildsCount();

    /**
     * <pre>
     * Number of direct childs which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 multi_preview_childs_count = 4;</code>
     * @return Whether the multiPreviewChildsCount field is set.
     */
    boolean hasMultiPreviewChildsCount();
    /**
     * <pre>
     * Number of direct childs which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 multi_preview_childs_count = 4;</code>
     * @return The multiPreviewChildsCount.
     */
    int getMultiPreviewChildsCount();

    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_previews_count = 5;</code>
     * @return Whether the subtreePreviewsCount field is set.
     */
    boolean hasSubtreePreviewsCount();
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_previews_count = 5;</code>
     * @return The subtreePreviewsCount.
     */
    int getSubtreePreviewsCount();

    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_multi_previews_count = 6;</code>
     * @return Whether the subtreeMultiPreviewsCount field is set.
     */
    boolean hasSubtreeMultiPreviewsCount();
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_multi_previews_count = 6;</code>
     * @return The subtreeMultiPreviewsCount.
     */
    int getSubtreeMultiPreviewsCount();

    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are not important for MultiPreview.
     * </pre>
     *
     * <code>optional int32 subtree_useless_nodes_count = 7;</code>
     * @return Whether the subtreeUselessNodesCount field is set.
     */
    boolean hasSubtreeUselessNodesCount();
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are not important for MultiPreview.
     * </pre>
     *
     * <code>optional int32 subtree_useless_nodes_count = 7;</code>
     * @return The subtreeUselessNodesCount.
     */
    int getSubtreeUselessNodesCount();

    /**
     * <pre>
     * Length of the path traversed from the root Composable to this node.
     * </pre>
     *
     * <code>optional int32 depth_level = 8;</code>
     * @return Whether the depthLevel field is set.
     */
    boolean hasDepthLevel();
    /**
     * <pre>
     * Length of the path traversed from the root Composable to this node.
     * </pre>
     *
     * <code>optional int32 depth_level = 8;</code>
     * @return The depthLevel.
     */
    int getDepthLevel();
  }
  /**
   * <pre>
   * Information about MultiPreview, in particular as information about a node
   * in the directed graph formed by a Composable function, and its related
   * Preview and MultiPreview annotations.
   * </pre>
   *
   * Protobuf type {@code android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo}
   */
  public static final class ComposeMultiPreviewNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)
      ComposeMultiPreviewNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComposeMultiPreviewNodeInfo.newBuilder() to construct.
    private ComposeMultiPreviewNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComposeMultiPreviewNodeInfo() {
      nodeType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ComposeMultiPreviewNodeInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_ComposeMultiPreviewNodeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_ComposeMultiPreviewNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.class, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType}
     */
    public enum NodeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_NODE_TYPE = 0;</code>
       */
      UNKNOWN_NODE_TYPE(0),
      /**
       * <code>ROOT_COMPOSABLE_FUNCTION_NODE = 1;</code>
       */
      ROOT_COMPOSABLE_FUNCTION_NODE(1),
      /**
       * <code>MULTIPREVIEW_NODE = 2;</code>
       */
      MULTIPREVIEW_NODE(2),
      /**
       * <code>PREVIEW_NODE = 3;</code>
       */
      PREVIEW_NODE(3),
      ;

      /**
       * <code>UNKNOWN_NODE_TYPE = 0;</code>
       */
      public static final int UNKNOWN_NODE_TYPE_VALUE = 0;
      /**
       * <code>ROOT_COMPOSABLE_FUNCTION_NODE = 1;</code>
       */
      public static final int ROOT_COMPOSABLE_FUNCTION_NODE_VALUE = 1;
      /**
       * <code>MULTIPREVIEW_NODE = 2;</code>
       */
      public static final int MULTIPREVIEW_NODE_VALUE = 2;
      /**
       * <code>PREVIEW_NODE = 3;</code>
       */
      public static final int PREVIEW_NODE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NodeType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NodeType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_NODE_TYPE;
          case 1: return ROOT_COMPOSABLE_FUNCTION_NODE;
          case 2: return MULTIPREVIEW_NODE;
          case 3: return PREVIEW_NODE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NodeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NodeType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NodeType>() {
              public NodeType findValueByNumber(int number) {
                return NodeType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final NodeType[] VALUES = values();

      public static NodeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NodeType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType)
    }

    private int bitField0_;
    public static final int NODE_TYPE_FIELD_NUMBER = 1;
    private int nodeType_ = 0;
    /**
     * <pre>
     * Type of node in the MultiPreview graph.
     * </pre>
     *
     * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
     * @return Whether the nodeType field is set.
     */
    @java.lang.Override public boolean hasNodeType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Type of node in the MultiPreview graph.
     * </pre>
     *
     * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
     * @return The nodeType.
     */
    @java.lang.Override public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType getNodeType() {
      com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType result = com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType.forNumber(nodeType_);
      return result == null ? com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType.UNKNOWN_NODE_TYPE : result;
    }

    public static final int ANONYMIZED_COMPOSABLE_ID_FIELD_NUMBER = 2;
    private long anonymizedComposableId_ = 0L;
    /**
     * <pre>
     * Anonymized id for the Composable node that is the root of this graph.
     * </pre>
     *
     * <code>optional int64 anonymized_composable_id = 2;</code>
     * @return Whether the anonymizedComposableId field is set.
     */
    @java.lang.Override
    public boolean hasAnonymizedComposableId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Anonymized id for the Composable node that is the root of this graph.
     * </pre>
     *
     * <code>optional int64 anonymized_composable_id = 2;</code>
     * @return The anonymizedComposableId.
     */
    @java.lang.Override
    public long getAnonymizedComposableId() {
      return anonymizedComposableId_;
    }

    public static final int PREVIEW_CHILDS_COUNT_FIELD_NUMBER = 3;
    private int previewChildsCount_ = 0;
    /**
     * <pre>
     * Number of direct childs which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 preview_childs_count = 3;</code>
     * @return Whether the previewChildsCount field is set.
     */
    @java.lang.Override
    public boolean hasPreviewChildsCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Number of direct childs which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 preview_childs_count = 3;</code>
     * @return The previewChildsCount.
     */
    @java.lang.Override
    public int getPreviewChildsCount() {
      return previewChildsCount_;
    }

    public static final int MULTI_PREVIEW_CHILDS_COUNT_FIELD_NUMBER = 4;
    private int multiPreviewChildsCount_ = 0;
    /**
     * <pre>
     * Number of direct childs which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 multi_preview_childs_count = 4;</code>
     * @return Whether the multiPreviewChildsCount field is set.
     */
    @java.lang.Override
    public boolean hasMultiPreviewChildsCount() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Number of direct childs which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 multi_preview_childs_count = 4;</code>
     * @return The multiPreviewChildsCount.
     */
    @java.lang.Override
    public int getMultiPreviewChildsCount() {
      return multiPreviewChildsCount_;
    }

    public static final int SUBTREE_PREVIEWS_COUNT_FIELD_NUMBER = 5;
    private int subtreePreviewsCount_ = 0;
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_previews_count = 5;</code>
     * @return Whether the subtreePreviewsCount field is set.
     */
    @java.lang.Override
    public boolean hasSubtreePreviewsCount() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are Preview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_previews_count = 5;</code>
     * @return The subtreePreviewsCount.
     */
    @java.lang.Override
    public int getSubtreePreviewsCount() {
      return subtreePreviewsCount_;
    }

    public static final int SUBTREE_MULTI_PREVIEWS_COUNT_FIELD_NUMBER = 6;
    private int subtreeMultiPreviewsCount_ = 0;
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_multi_previews_count = 6;</code>
     * @return Whether the subtreeMultiPreviewsCount field is set.
     */
    @java.lang.Override
    public boolean hasSubtreeMultiPreviewsCount() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are MultiPreview annotations.
     * </pre>
     *
     * <code>optional int32 subtree_multi_previews_count = 6;</code>
     * @return The subtreeMultiPreviewsCount.
     */
    @java.lang.Override
    public int getSubtreeMultiPreviewsCount() {
      return subtreeMultiPreviewsCount_;
    }

    public static final int SUBTREE_USELESS_NODES_COUNT_FIELD_NUMBER = 7;
    private int subtreeUselessNodesCount_ = 0;
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are not important for MultiPreview.
     * </pre>
     *
     * <code>optional int32 subtree_useless_nodes_count = 7;</code>
     * @return Whether the subtreeUselessNodesCount field is set.
     */
    @java.lang.Override
    public boolean hasSubtreeUselessNodesCount() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Number of nodes in the subtree rooted at this node and defined by the
     * graph traversal, which are not important for MultiPreview.
     * </pre>
     *
     * <code>optional int32 subtree_useless_nodes_count = 7;</code>
     * @return The subtreeUselessNodesCount.
     */
    @java.lang.Override
    public int getSubtreeUselessNodesCount() {
      return subtreeUselessNodesCount_;
    }

    public static final int DEPTH_LEVEL_FIELD_NUMBER = 8;
    private int depthLevel_ = 0;
    /**
     * <pre>
     * Length of the path traversed from the root Composable to this node.
     * </pre>
     *
     * <code>optional int32 depth_level = 8;</code>
     * @return Whether the depthLevel field is set.
     */
    @java.lang.Override
    public boolean hasDepthLevel() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Length of the path traversed from the root Composable to this node.
     * </pre>
     *
     * <code>optional int32 depth_level = 8;</code>
     * @return The depthLevel.
     */
    @java.lang.Override
    public int getDepthLevel() {
      return depthLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, nodeType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, anonymizedComposableId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, previewChildsCount_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, multiPreviewChildsCount_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, subtreePreviewsCount_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, subtreeMultiPreviewsCount_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, subtreeUselessNodesCount_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, depthLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, nodeType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, anonymizedComposableId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, previewChildsCount_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, multiPreviewChildsCount_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, subtreePreviewsCount_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, subtreeMultiPreviewsCount_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, subtreeUselessNodesCount_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, depthLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo other = (com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo) obj;

      if (hasNodeType() != other.hasNodeType()) return false;
      if (hasNodeType()) {
        if (nodeType_ != other.nodeType_) return false;
      }
      if (hasAnonymizedComposableId() != other.hasAnonymizedComposableId()) return false;
      if (hasAnonymizedComposableId()) {
        if (getAnonymizedComposableId()
            != other.getAnonymizedComposableId()) return false;
      }
      if (hasPreviewChildsCount() != other.hasPreviewChildsCount()) return false;
      if (hasPreviewChildsCount()) {
        if (getPreviewChildsCount()
            != other.getPreviewChildsCount()) return false;
      }
      if (hasMultiPreviewChildsCount() != other.hasMultiPreviewChildsCount()) return false;
      if (hasMultiPreviewChildsCount()) {
        if (getMultiPreviewChildsCount()
            != other.getMultiPreviewChildsCount()) return false;
      }
      if (hasSubtreePreviewsCount() != other.hasSubtreePreviewsCount()) return false;
      if (hasSubtreePreviewsCount()) {
        if (getSubtreePreviewsCount()
            != other.getSubtreePreviewsCount()) return false;
      }
      if (hasSubtreeMultiPreviewsCount() != other.hasSubtreeMultiPreviewsCount()) return false;
      if (hasSubtreeMultiPreviewsCount()) {
        if (getSubtreeMultiPreviewsCount()
            != other.getSubtreeMultiPreviewsCount()) return false;
      }
      if (hasSubtreeUselessNodesCount() != other.hasSubtreeUselessNodesCount()) return false;
      if (hasSubtreeUselessNodesCount()) {
        if (getSubtreeUselessNodesCount()
            != other.getSubtreeUselessNodesCount()) return false;
      }
      if (hasDepthLevel() != other.hasDepthLevel()) return false;
      if (hasDepthLevel()) {
        if (getDepthLevel()
            != other.getDepthLevel()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodeType()) {
        hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + nodeType_;
      }
      if (hasAnonymizedComposableId()) {
        hash = (37 * hash) + ANONYMIZED_COMPOSABLE_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAnonymizedComposableId());
      }
      if (hasPreviewChildsCount()) {
        hash = (37 * hash) + PREVIEW_CHILDS_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getPreviewChildsCount();
      }
      if (hasMultiPreviewChildsCount()) {
        hash = (37 * hash) + MULTI_PREVIEW_CHILDS_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getMultiPreviewChildsCount();
      }
      if (hasSubtreePreviewsCount()) {
        hash = (37 * hash) + SUBTREE_PREVIEWS_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getSubtreePreviewsCount();
      }
      if (hasSubtreeMultiPreviewsCount()) {
        hash = (37 * hash) + SUBTREE_MULTI_PREVIEWS_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getSubtreeMultiPreviewsCount();
      }
      if (hasSubtreeUselessNodesCount()) {
        hash = (37 * hash) + SUBTREE_USELESS_NODES_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getSubtreeUselessNodesCount();
      }
      if (hasDepthLevel()) {
        hash = (37 * hash) + DEPTH_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getDepthLevel();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about MultiPreview, in particular as information about a node
     * in the directed graph formed by a Composable function, and its related
     * Preview and MultiPreview annotations.
     * </pre>
     *
     * Protobuf type {@code android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_ComposeMultiPreviewNodeInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_ComposeMultiPreviewNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.class, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        nodeType_ = 0;
        anonymizedComposableId_ = 0L;
        previewChildsCount_ = 0;
        multiPreviewChildsCount_ = 0;
        subtreePreviewsCount_ = 0;
        subtreeMultiPreviewsCount_ = 0;
        subtreeUselessNodesCount_ = 0;
        depthLevel_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_ComposeMultiPreviewNodeInfo_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo build() {
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo buildPartial() {
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo result = new com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.nodeType_ = nodeType_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.anonymizedComposableId_ = anonymizedComposableId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.previewChildsCount_ = previewChildsCount_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.multiPreviewChildsCount_ = multiPreviewChildsCount_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.subtreePreviewsCount_ = subtreePreviewsCount_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.subtreeMultiPreviewsCount_ = subtreeMultiPreviewsCount_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.subtreeUselessNodesCount_ = subtreeUselessNodesCount_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.depthLevel_ = depthLevel_;
          to_bitField0_ |= 0x00000080;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo) {
          return mergeFrom((com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo other) {
        if (other == com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.getDefaultInstance()) return this;
        if (other.hasNodeType()) {
          setNodeType(other.getNodeType());
        }
        if (other.hasAnonymizedComposableId()) {
          setAnonymizedComposableId(other.getAnonymizedComposableId());
        }
        if (other.hasPreviewChildsCount()) {
          setPreviewChildsCount(other.getPreviewChildsCount());
        }
        if (other.hasMultiPreviewChildsCount()) {
          setMultiPreviewChildsCount(other.getMultiPreviewChildsCount());
        }
        if (other.hasSubtreePreviewsCount()) {
          setSubtreePreviewsCount(other.getSubtreePreviewsCount());
        }
        if (other.hasSubtreeMultiPreviewsCount()) {
          setSubtreeMultiPreviewsCount(other.getSubtreeMultiPreviewsCount());
        }
        if (other.hasSubtreeUselessNodesCount()) {
          setSubtreeUselessNodesCount(other.getSubtreeUselessNodesCount());
        }
        if (other.hasDepthLevel()) {
          setDepthLevel(other.getDepthLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType tmpValue =
                    com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  nodeType_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                anonymizedComposableId_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                previewChildsCount_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                multiPreviewChildsCount_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                subtreePreviewsCount_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                subtreeMultiPreviewsCount_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                subtreeUselessNodesCount_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                depthLevel_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int nodeType_ = 0;
      /**
       * <pre>
       * Type of node in the MultiPreview graph.
       * </pre>
       *
       * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
       * @return Whether the nodeType field is set.
       */
      @java.lang.Override public boolean hasNodeType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Type of node in the MultiPreview graph.
       * </pre>
       *
       * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
       * @return The nodeType.
       */
      @java.lang.Override
      public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType getNodeType() {
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType result = com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType.forNumber(nodeType_);
        return result == null ? com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType.UNKNOWN_NODE_TYPE : result;
      }
      /**
       * <pre>
       * Type of node in the MultiPreview graph.
       * </pre>
       *
       * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
       * @param value The nodeType to set.
       * @return This builder for chaining.
       */
      public Builder setNodeType(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of node in the MultiPreview graph.
       * </pre>
       *
       * <code>optional .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.NodeType node_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNodeType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private long anonymizedComposableId_ ;
      /**
       * <pre>
       * Anonymized id for the Composable node that is the root of this graph.
       * </pre>
       *
       * <code>optional int64 anonymized_composable_id = 2;</code>
       * @return Whether the anonymizedComposableId field is set.
       */
      @java.lang.Override
      public boolean hasAnonymizedComposableId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Anonymized id for the Composable node that is the root of this graph.
       * </pre>
       *
       * <code>optional int64 anonymized_composable_id = 2;</code>
       * @return The anonymizedComposableId.
       */
      @java.lang.Override
      public long getAnonymizedComposableId() {
        return anonymizedComposableId_;
      }
      /**
       * <pre>
       * Anonymized id for the Composable node that is the root of this graph.
       * </pre>
       *
       * <code>optional int64 anonymized_composable_id = 2;</code>
       * @param value The anonymizedComposableId to set.
       * @return This builder for chaining.
       */
      public Builder setAnonymizedComposableId(long value) {

        anonymizedComposableId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anonymized id for the Composable node that is the root of this graph.
       * </pre>
       *
       * <code>optional int64 anonymized_composable_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnonymizedComposableId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        anonymizedComposableId_ = 0L;
        onChanged();
        return this;
      }

      private int previewChildsCount_ ;
      /**
       * <pre>
       * Number of direct childs which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 preview_childs_count = 3;</code>
       * @return Whether the previewChildsCount field is set.
       */
      @java.lang.Override
      public boolean hasPreviewChildsCount() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Number of direct childs which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 preview_childs_count = 3;</code>
       * @return The previewChildsCount.
       */
      @java.lang.Override
      public int getPreviewChildsCount() {
        return previewChildsCount_;
      }
      /**
       * <pre>
       * Number of direct childs which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 preview_childs_count = 3;</code>
       * @param value The previewChildsCount to set.
       * @return This builder for chaining.
       */
      public Builder setPreviewChildsCount(int value) {

        previewChildsCount_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of direct childs which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 preview_childs_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreviewChildsCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        previewChildsCount_ = 0;
        onChanged();
        return this;
      }

      private int multiPreviewChildsCount_ ;
      /**
       * <pre>
       * Number of direct childs which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 multi_preview_childs_count = 4;</code>
       * @return Whether the multiPreviewChildsCount field is set.
       */
      @java.lang.Override
      public boolean hasMultiPreviewChildsCount() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Number of direct childs which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 multi_preview_childs_count = 4;</code>
       * @return The multiPreviewChildsCount.
       */
      @java.lang.Override
      public int getMultiPreviewChildsCount() {
        return multiPreviewChildsCount_;
      }
      /**
       * <pre>
       * Number of direct childs which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 multi_preview_childs_count = 4;</code>
       * @param value The multiPreviewChildsCount to set.
       * @return This builder for chaining.
       */
      public Builder setMultiPreviewChildsCount(int value) {

        multiPreviewChildsCount_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of direct childs which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 multi_preview_childs_count = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMultiPreviewChildsCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        multiPreviewChildsCount_ = 0;
        onChanged();
        return this;
      }

      private int subtreePreviewsCount_ ;
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_previews_count = 5;</code>
       * @return Whether the subtreePreviewsCount field is set.
       */
      @java.lang.Override
      public boolean hasSubtreePreviewsCount() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_previews_count = 5;</code>
       * @return The subtreePreviewsCount.
       */
      @java.lang.Override
      public int getSubtreePreviewsCount() {
        return subtreePreviewsCount_;
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_previews_count = 5;</code>
       * @param value The subtreePreviewsCount to set.
       * @return This builder for chaining.
       */
      public Builder setSubtreePreviewsCount(int value) {

        subtreePreviewsCount_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are Preview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_previews_count = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubtreePreviewsCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        subtreePreviewsCount_ = 0;
        onChanged();
        return this;
      }

      private int subtreeMultiPreviewsCount_ ;
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_multi_previews_count = 6;</code>
       * @return Whether the subtreeMultiPreviewsCount field is set.
       */
      @java.lang.Override
      public boolean hasSubtreeMultiPreviewsCount() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_multi_previews_count = 6;</code>
       * @return The subtreeMultiPreviewsCount.
       */
      @java.lang.Override
      public int getSubtreeMultiPreviewsCount() {
        return subtreeMultiPreviewsCount_;
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_multi_previews_count = 6;</code>
       * @param value The subtreeMultiPreviewsCount to set.
       * @return This builder for chaining.
       */
      public Builder setSubtreeMultiPreviewsCount(int value) {

        subtreeMultiPreviewsCount_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are MultiPreview annotations.
       * </pre>
       *
       * <code>optional int32 subtree_multi_previews_count = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubtreeMultiPreviewsCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        subtreeMultiPreviewsCount_ = 0;
        onChanged();
        return this;
      }

      private int subtreeUselessNodesCount_ ;
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are not important for MultiPreview.
       * </pre>
       *
       * <code>optional int32 subtree_useless_nodes_count = 7;</code>
       * @return Whether the subtreeUselessNodesCount field is set.
       */
      @java.lang.Override
      public boolean hasSubtreeUselessNodesCount() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are not important for MultiPreview.
       * </pre>
       *
       * <code>optional int32 subtree_useless_nodes_count = 7;</code>
       * @return The subtreeUselessNodesCount.
       */
      @java.lang.Override
      public int getSubtreeUselessNodesCount() {
        return subtreeUselessNodesCount_;
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are not important for MultiPreview.
       * </pre>
       *
       * <code>optional int32 subtree_useless_nodes_count = 7;</code>
       * @param value The subtreeUselessNodesCount to set.
       * @return This builder for chaining.
       */
      public Builder setSubtreeUselessNodesCount(int value) {

        subtreeUselessNodesCount_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of nodes in the subtree rooted at this node and defined by the
       * graph traversal, which are not important for MultiPreview.
       * </pre>
       *
       * <code>optional int32 subtree_useless_nodes_count = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubtreeUselessNodesCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        subtreeUselessNodesCount_ = 0;
        onChanged();
        return this;
      }

      private int depthLevel_ ;
      /**
       * <pre>
       * Length of the path traversed from the root Composable to this node.
       * </pre>
       *
       * <code>optional int32 depth_level = 8;</code>
       * @return Whether the depthLevel field is set.
       */
      @java.lang.Override
      public boolean hasDepthLevel() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Length of the path traversed from the root Composable to this node.
       * </pre>
       *
       * <code>optional int32 depth_level = 8;</code>
       * @return The depthLevel.
       */
      @java.lang.Override
      public int getDepthLevel() {
        return depthLevel_;
      }
      /**
       * <pre>
       * Length of the path traversed from the root Composable to this node.
       * </pre>
       *
       * <code>optional int32 depth_level = 8;</code>
       * @param value The depthLevel to set.
       * @return This builder for chaining.
       */
      public Builder setDepthLevel(int value) {

        depthLevel_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Length of the path traversed from the root Composable to this node.
       * </pre>
       *
       * <code>optional int32 depth_level = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDepthLevel() {
        bitField0_ = (bitField0_ & ~0x00000080);
        depthLevel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo)
    private static final com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo();
    }

    public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ComposeMultiPreviewNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<ComposeMultiPreviewNodeInfo>() {
      @java.lang.Override
      public ComposeMultiPreviewNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ComposeMultiPreviewNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComposeMultiPreviewNodeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int MULTI_PREVIEW_NODES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo> multiPreviewNodes_;
  /**
   * <pre>
   * One for each new or modified node in the MultiPreview graph, in terms of
   * annotation relations, detected when the process of finding preview
   * elements is executed in a file.
   * </pre>
   *
   * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo> getMultiPreviewNodesList() {
    return multiPreviewNodes_;
  }
  /**
   * <pre>
   * One for each new or modified node in the MultiPreview graph, in terms of
   * annotation relations, detected when the process of finding preview
   * elements is executed in a file.
   * </pre>
   *
   * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder> 
      getMultiPreviewNodesOrBuilderList() {
    return multiPreviewNodes_;
  }
  /**
   * <pre>
   * One for each new or modified node in the MultiPreview graph, in terms of
   * annotation relations, detected when the process of finding preview
   * elements is executed in a file.
   * </pre>
   *
   * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
   */
  @java.lang.Override
  public int getMultiPreviewNodesCount() {
    return multiPreviewNodes_.size();
  }
  /**
   * <pre>
   * One for each new or modified node in the MultiPreview graph, in terms of
   * annotation relations, detected when the process of finding preview
   * elements is executed in a file.
   * </pre>
   *
   * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo getMultiPreviewNodes(int index) {
    return multiPreviewNodes_.get(index);
  }
  /**
   * <pre>
   * One for each new or modified node in the MultiPreview graph, in terms of
   * annotation relations, detected when the process of finding preview
   * elements is executed in a file.
   * </pre>
   *
   * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder getMultiPreviewNodesOrBuilder(
      int index) {
    return multiPreviewNodes_.get(index);
  }

  public static final int IS_COMPOSE_PREVIEW_LITE_MODE_FIELD_NUMBER = 2;
  private boolean isComposePreviewLiteMode_ = false;
  /**
   * <pre>
   * True if Compose Preview Lite Mode is enabled when logging the event.
   * </pre>
   *
   * <code>optional bool is_compose_preview_lite_mode = 2;</code>
   * @return Whether the isComposePreviewLiteMode field is set.
   */
  @java.lang.Override
  public boolean hasIsComposePreviewLiteMode() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * True if Compose Preview Lite Mode is enabled when logging the event.
   * </pre>
   *
   * <code>optional bool is_compose_preview_lite_mode = 2;</code>
   * @return The isComposePreviewLiteMode.
   */
  @java.lang.Override
  public boolean getIsComposePreviewLiteMode() {
    return isComposePreviewLiteMode_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < multiPreviewNodes_.size(); i++) {
      output.writeMessage(1, multiPreviewNodes_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(2, isComposePreviewLiteMode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < multiPreviewNodes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, multiPreviewNodes_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, isComposePreviewLiteMode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent other = (com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent) obj;

    if (!getMultiPreviewNodesList()
        .equals(other.getMultiPreviewNodesList())) return false;
    if (hasIsComposePreviewLiteMode() != other.hasIsComposePreviewLiteMode()) return false;
    if (hasIsComposePreviewLiteMode()) {
      if (getIsComposePreviewLiteMode()
          != other.getIsComposePreviewLiteMode()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMultiPreviewNodesCount() > 0) {
      hash = (37 * hash) + MULTI_PREVIEW_NODES_FIELD_NUMBER;
      hash = (53 * hash) + getMultiPreviewNodesList().hashCode();
    }
    if (hasIsComposePreviewLiteMode()) {
      hash = (37 * hash) + IS_COMPOSE_PREVIEW_LITE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsComposePreviewLiteMode());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Details for Compose MultiPreview event
   * </pre>
   *
   * Protobuf type {@code android_studio.ComposeMultiPreviewEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.ComposeMultiPreviewEvent)
      com.google.wireless.android.sdk.stats.ComposeMultiPreviewEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.class, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (multiPreviewNodesBuilder_ == null) {
        multiPreviewNodes_ = java.util.Collections.emptyList();
      } else {
        multiPreviewNodes_ = null;
        multiPreviewNodesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      isComposePreviewLiteMode_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_ComposeMultiPreviewEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent build() {
      com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent buildPartial() {
      com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent result = new com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent result) {
      if (multiPreviewNodesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          multiPreviewNodes_ = java.util.Collections.unmodifiableList(multiPreviewNodes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.multiPreviewNodes_ = multiPreviewNodes_;
      } else {
        result.multiPreviewNodes_ = multiPreviewNodesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.isComposePreviewLiteMode_ = isComposePreviewLiteMode_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent other) {
      if (other == com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.getDefaultInstance()) return this;
      if (multiPreviewNodesBuilder_ == null) {
        if (!other.multiPreviewNodes_.isEmpty()) {
          if (multiPreviewNodes_.isEmpty()) {
            multiPreviewNodes_ = other.multiPreviewNodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMultiPreviewNodesIsMutable();
            multiPreviewNodes_.addAll(other.multiPreviewNodes_);
          }
          onChanged();
        }
      } else {
        if (!other.multiPreviewNodes_.isEmpty()) {
          if (multiPreviewNodesBuilder_.isEmpty()) {
            multiPreviewNodesBuilder_.dispose();
            multiPreviewNodesBuilder_ = null;
            multiPreviewNodes_ = other.multiPreviewNodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
            multiPreviewNodesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMultiPreviewNodesFieldBuilder() : null;
          } else {
            multiPreviewNodesBuilder_.addAllMessages(other.multiPreviewNodes_);
          }
        }
      }
      if (other.hasIsComposePreviewLiteMode()) {
        setIsComposePreviewLiteMode(other.getIsComposePreviewLiteMode());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo m =
                  input.readMessage(
                      com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.PARSER,
                      extensionRegistry);
              if (multiPreviewNodesBuilder_ == null) {
                ensureMultiPreviewNodesIsMutable();
                multiPreviewNodes_.add(m);
              } else {
                multiPreviewNodesBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 16: {
              isComposePreviewLiteMode_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo> multiPreviewNodes_ =
      java.util.Collections.emptyList();
    private void ensureMultiPreviewNodesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        multiPreviewNodes_ = new java.util.ArrayList<com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo>(multiPreviewNodes_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder> multiPreviewNodesBuilder_;

    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo> getMultiPreviewNodesList() {
      if (multiPreviewNodesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(multiPreviewNodes_);
      } else {
        return multiPreviewNodesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public int getMultiPreviewNodesCount() {
      if (multiPreviewNodesBuilder_ == null) {
        return multiPreviewNodes_.size();
      } else {
        return multiPreviewNodesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo getMultiPreviewNodes(int index) {
      if (multiPreviewNodesBuilder_ == null) {
        return multiPreviewNodes_.get(index);
      } else {
        return multiPreviewNodesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder setMultiPreviewNodes(
        int index, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo value) {
      if (multiPreviewNodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.set(index, value);
        onChanged();
      } else {
        multiPreviewNodesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder setMultiPreviewNodes(
        int index, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder builderForValue) {
      if (multiPreviewNodesBuilder_ == null) {
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.set(index, builderForValue.build());
        onChanged();
      } else {
        multiPreviewNodesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder addMultiPreviewNodes(com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo value) {
      if (multiPreviewNodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.add(value);
        onChanged();
      } else {
        multiPreviewNodesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder addMultiPreviewNodes(
        int index, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo value) {
      if (multiPreviewNodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.add(index, value);
        onChanged();
      } else {
        multiPreviewNodesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder addMultiPreviewNodes(
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder builderForValue) {
      if (multiPreviewNodesBuilder_ == null) {
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.add(builderForValue.build());
        onChanged();
      } else {
        multiPreviewNodesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder addMultiPreviewNodes(
        int index, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder builderForValue) {
      if (multiPreviewNodesBuilder_ == null) {
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.add(index, builderForValue.build());
        onChanged();
      } else {
        multiPreviewNodesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder addAllMultiPreviewNodes(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo> values) {
      if (multiPreviewNodesBuilder_ == null) {
        ensureMultiPreviewNodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, multiPreviewNodes_);
        onChanged();
      } else {
        multiPreviewNodesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder clearMultiPreviewNodes() {
      if (multiPreviewNodesBuilder_ == null) {
        multiPreviewNodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        multiPreviewNodesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public Builder removeMultiPreviewNodes(int index) {
      if (multiPreviewNodesBuilder_ == null) {
        ensureMultiPreviewNodesIsMutable();
        multiPreviewNodes_.remove(index);
        onChanged();
      } else {
        multiPreviewNodesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder getMultiPreviewNodesBuilder(
        int index) {
      return getMultiPreviewNodesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder getMultiPreviewNodesOrBuilder(
        int index) {
      if (multiPreviewNodesBuilder_ == null) {
        return multiPreviewNodes_.get(index);  } else {
        return multiPreviewNodesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public java.util.List<? extends com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder> 
         getMultiPreviewNodesOrBuilderList() {
      if (multiPreviewNodesBuilder_ != null) {
        return multiPreviewNodesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(multiPreviewNodes_);
      }
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder addMultiPreviewNodesBuilder() {
      return getMultiPreviewNodesFieldBuilder().addBuilder(
          com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder addMultiPreviewNodesBuilder(
        int index) {
      return getMultiPreviewNodesFieldBuilder().addBuilder(
          index, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * One for each new or modified node in the MultiPreview graph, in terms of
     * annotation relations, detected when the process of finding preview
     * elements is executed in a file.
     * </pre>
     *
     * <code>repeated .android_studio.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo multi_preview_nodes = 1;</code>
     */
    public java.util.List<com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder> 
         getMultiPreviewNodesBuilderList() {
      return getMultiPreviewNodesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder> 
        getMultiPreviewNodesFieldBuilder() {
      if (multiPreviewNodesBuilder_ == null) {
        multiPreviewNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfo.Builder, com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent.ComposeMultiPreviewNodeInfoOrBuilder>(
                multiPreviewNodes_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        multiPreviewNodes_ = null;
      }
      return multiPreviewNodesBuilder_;
    }

    private boolean isComposePreviewLiteMode_ ;
    /**
     * <pre>
     * True if Compose Preview Lite Mode is enabled when logging the event.
     * </pre>
     *
     * <code>optional bool is_compose_preview_lite_mode = 2;</code>
     * @return Whether the isComposePreviewLiteMode field is set.
     */
    @java.lang.Override
    public boolean hasIsComposePreviewLiteMode() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * True if Compose Preview Lite Mode is enabled when logging the event.
     * </pre>
     *
     * <code>optional bool is_compose_preview_lite_mode = 2;</code>
     * @return The isComposePreviewLiteMode.
     */
    @java.lang.Override
    public boolean getIsComposePreviewLiteMode() {
      return isComposePreviewLiteMode_;
    }
    /**
     * <pre>
     * True if Compose Preview Lite Mode is enabled when logging the event.
     * </pre>
     *
     * <code>optional bool is_compose_preview_lite_mode = 2;</code>
     * @param value The isComposePreviewLiteMode to set.
     * @return This builder for chaining.
     */
    public Builder setIsComposePreviewLiteMode(boolean value) {

      isComposePreviewLiteMode_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if Compose Preview Lite Mode is enabled when logging the event.
     * </pre>
     *
     * <code>optional bool is_compose_preview_lite_mode = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsComposePreviewLiteMode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      isComposePreviewLiteMode_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.ComposeMultiPreviewEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.ComposeMultiPreviewEvent)
  private static final com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent();
  }

  public static com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<ComposeMultiPreviewEvent>
      PARSER = new com.google.protobuf.AbstractParser<ComposeMultiPreviewEvent>() {
    @java.lang.Override
    public ComposeMultiPreviewEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ComposeMultiPreviewEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ComposeMultiPreviewEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.ComposeMultiPreviewEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

