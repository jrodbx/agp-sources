// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface TypingLatencyStatsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.TypingLatencyStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Per-file-type latency stats.
   * </pre>
   *
   * <code>repeated .android_studio.TypingLatencyStats.LatencyRecord latency_records = 1;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.TypingLatencyStats.LatencyRecord> 
      getLatencyRecordsList();
  /**
   * <pre>
   * Per-file-type latency stats.
   * </pre>
   *
   * <code>repeated .android_studio.TypingLatencyStats.LatencyRecord latency_records = 1;</code>
   */
  com.google.wireless.android.sdk.stats.TypingLatencyStats.LatencyRecord getLatencyRecords(int index);
  /**
   * <pre>
   * Per-file-type latency stats.
   * </pre>
   *
   * <code>repeated .android_studio.TypingLatencyStats.LatencyRecord latency_records = 1;</code>
   */
  int getLatencyRecordsCount();
  /**
   * <pre>
   * Per-file-type latency stats.
   * </pre>
   *
   * <code>repeated .android_studio.TypingLatencyStats.LatencyRecord latency_records = 1;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.TypingLatencyStats.LatencyRecordOrBuilder> 
      getLatencyRecordsOrBuilderList();
  /**
   * <pre>
   * Per-file-type latency stats.
   * </pre>
   *
   * <code>repeated .android_studio.TypingLatencyStats.LatencyRecord latency_records = 1;</code>
   */
  com.google.wireless.android.sdk.stats.TypingLatencyStats.LatencyRecordOrBuilder getLatencyRecordsOrBuilder(
      int index);

  /**
   * <pre>
   * Whether the IDE was in Essential Highlighting or not
   * </pre>
   *
   * <code>optional bool essential_highlighting = 2;</code>
   * @return Whether the essentialHighlighting field is set.
   */
  boolean hasEssentialHighlighting();
  /**
   * <pre>
   * Whether the IDE was in Essential Highlighting or not
   * </pre>
   *
   * <code>optional bool essential_highlighting = 2;</code>
   * @return The essentialHighlighting.
   */
  boolean getEssentialHighlighting();
}
