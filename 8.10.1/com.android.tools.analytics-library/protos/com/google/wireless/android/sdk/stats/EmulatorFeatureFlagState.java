// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * State of emulator feature flags, including
 * which flags attempted to enable vs resulting set
 * of enabled flags.
 * </pre>
 *
 * Protobuf type {@code android_studio.EmulatorFeatureFlagState}
 */
public final class EmulatorFeatureFlagState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.EmulatorFeatureFlagState)
    EmulatorFeatureFlagStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EmulatorFeatureFlagState.newBuilder() to construct.
  private EmulatorFeatureFlagState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EmulatorFeatureFlagState() {
    attemptedEnabledFeatureFlags_ = java.util.Collections.emptyList();
    userOverriddenEnabledFeatures_ = java.util.Collections.emptyList();
    userOverriddenDisabledFeatures_ = java.util.Collections.emptyList();
    resultingEnabledFeatures_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EmulatorFeatureFlagState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorFeatureFlagState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorFeatureFlagState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.class, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder.class);
  }

  /**
   * Protobuf enum {@code android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag}
   */
  public enum EmulatorFeatureFlag
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EMULATOR_FEATURE_FLAG_UNSPECIFIED = 0;</code>
     */
    EMULATOR_FEATURE_FLAG_UNSPECIFIED(0),
    /**
     * <code>GL_PIPE_CHECKSUM = 1;</code>
     */
    GL_PIPE_CHECKSUM(1),
    /**
     * <code>GRALLOC_SYNC = 2;</code>
     */
    GRALLOC_SYNC(2),
    /**
     * <code>ENCRYPT_USER_DATA = 3;</code>
     */
    ENCRYPT_USER_DATA(3),
    /**
     * <code>INTEL_PERFORMANCE_MONITORING_UNIT = 4;</code>
     */
    INTEL_PERFORMANCE_MONITORING_UNIT(4),
    /**
     * <code>GL_ASYNC_SWAP = 5;</code>
     */
    GL_ASYNC_SWAP(5),
    /**
     * <code>GLDMA = 6;</code>
     */
    GLDMA(6),
    /**
     * <code>GLES_DYNAMIC_VERSION = 7;</code>
     */
    GLES_DYNAMIC_VERSION(7),
    /**
     * <code>FORCE_ANGLE = 8;</code>
     */
    FORCE_ANGLE(8),
    /**
     * <code>FORCE_SWIFTSHADER = 9;</code>
     */
    FORCE_SWIFTSHADER(9),
    /**
     * <code>WIFI = 10;</code>
     */
    WIFI(10),
    /**
     * <code>PLAY_STORE_IMAGE = 11;</code>
     */
    PLAY_STORE_IMAGE(11),
    /**
     * <code>LOGCAT_PIPE = 12;</code>
     */
    LOGCAT_PIPE(12),
    /**
     * <pre>
     * Hypervisor "allowed" flags (different from actual using)
     * </pre>
     *
     * <code>HYPERV = 13;</code>
     */
    HYPERV(13),
    /**
     * <code>HVF = 14;</code>
     */
    HVF(14),
    /**
     * <code>KVM = 15;</code>
     */
    KVM(15),
    /**
     * <code>HAXM = 16;</code>
     */
    HAXM(16),
    /**
     * <code>FAST_SNAPSHOT_V1 = 17;</code>
     */
    FAST_SNAPSHOT_V1(17),
    /**
     * <code>SCREEN_RECORDING = 18;</code>
     */
    SCREEN_RECORDING(18),
    /**
     * <code>VIRTUAL_SCENE = 19;</code>
     */
    VIRTUAL_SCENE(19),
    /**
     * <code>SYSTEM_AS_ROOT = 20;</code>
     */
    SYSTEM_AS_ROOT(20),
    /**
     * <code>DEPRECATED_IGNORE_HOST_OPENGL_ERRORS = 21 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    DEPRECATED_IGNORE_HOST_OPENGL_ERRORS(21),
    /**
     * <code>GENERIC_SNAPSHOTS_UI = 22;</code>
     */
    GENERIC_SNAPSHOTS_UI(22),
    /**
     * <code>ALLOW_SNAPSHOT_MIGRATION = 23;</code>
     */
    ALLOW_SNAPSHOT_MIGRATION(23),
    /**
     * <code>DEPRECATED_GENERIC_INCREMENTAL_SNAPSHOT = 24 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    DEPRECATED_GENERIC_INCREMENTAL_SNAPSHOT(24),
    /**
     * <code>WINDOWS_ON_DEMAND_SNAPSHOT_LOAD = 25;</code>
     */
    WINDOWS_ON_DEMAND_SNAPSHOT_LOAD(25),
    /**
     * <code>WINDOWS_HYPERVISOR_PLATFORM = 26;</code>
     */
    WINDOWS_HYPERVISOR_PLATFORM(26),
    /**
     * <code>KERNEL_DEVICE_TREE_BLOB_SUPPORT = 27;</code>
     */
    KERNEL_DEVICE_TREE_BLOB_SUPPORT(27),
    /**
     * <code>LOCATION_UI_V2 = 28;</code>
     */
    LOCATION_UI_V2(28),
    /**
     * <code>GENERIC_INCREMENTAL_SNAPSHOT = 29;</code>
     */
    GENERIC_INCREMENTAL_SNAPSHOT(29),
    /**
     * <code>SNAPSHOT_ADB = 30;</code>
     */
    SNAPSHOT_ADB(30),
    /**
     * <code>OFFWORLD = 31;</code>
     */
    OFFWORLD(31),
    /**
     * <code>OFFWORLD_DISABLE_SECURITY = 32;</code>
     */
    OFFWORLD_DISABLE_SECURITY(32),
    /**
     * <code>QUICKBOOT_FILE_BACKED = 33;</code>
     */
    QUICKBOOT_FILE_BACKED(33),
    /**
     * <code>REFCOUNT_PIPE = 34;</code>
     */
    REFCOUNT_PIPE(34),
    /**
     * <code>GLDMA2 = 35;</code>
     */
    GLDMA2(35),
    /**
     * <code>HOST_COMPOSITION_V1 = 36;</code>
     */
    HOST_COMPOSITION_V1(36),
    /**
     * <code>ON_DEMAND_SNAPSHOT_LOAD = 37;</code>
     */
    ON_DEMAND_SNAPSHOT_LOAD(37),
    /**
     * <code>WIFI_CONFIGURABLE = 38;</code>
     */
    WIFI_CONFIGURABLE(38),
    /**
     * <code>GL_DIRECT_MEM = 39;</code>
     */
    GL_DIRECT_MEM(39),
    /**
     * <code>VIDEO_PLAYBACK = 40;</code>
     */
    VIDEO_PLAYBACK(40),
    /**
     * <code>VULKAN = 41;</code>
     */
    VULKAN(41),
    /**
     * <code>MACRO_UI = 42;</code>
     */
    MACRO_UI(42),
    /**
     * <code>CAR_VHAL_TABLE = 43;</code>
     */
    CAR_VHAL_TABLE(43),
    /**
     * <code>DYNAMIC_PARTITION = 44;</code>
     */
    DYNAMIC_PARTITION(44),
    /**
     * <code>IP_DISCONNECT_ON_LOAD = 45;</code>
     */
    IP_DISCONNECT_ON_LOAD(45),
    /**
     * <code>VULKAN_SNAPSHOTS = 46;</code>
     */
    VULKAN_SNAPSHOTS(46),
    /**
     * <code>VIRTIO_INPUT = 47;</code>
     */
    VIRTIO_INPUT(47),
    /**
     * <code>MULTI_DISPLAY = 48;</code>
     */
    MULTI_DISPLAY(48),
    /**
     * <code>VULKAN_NULL_OPTIONAL_STRINGS = 49;</code>
     */
    VULKAN_NULL_OPTIONAL_STRINGS(49),
    /**
     * <code>DYNAMIC_MEDIA_PROFILE = 50;</code>
     */
    DYNAMIC_MEDIA_PROFILE(50),
    /**
     * <code>YUV420_888_to_NV21 = 51;</code>
     */
    YUV420_888_to_NV21(51),
    /**
     * <code>YUV_Cache = 52;</code>
     */
    YUV_Cache(52),
    /**
     * <code>KEYCODE_FORWARDING = 53;</code>
     */
    KEYCODE_FORWARDING(53),
    /**
     * <code>VULKAN_IGNORED_HANDLES = 54;</code>
     */
    VULKAN_IGNORED_HANDLES(54),
    /**
     * <code>VIRTIO_GPU_NEXT = 55;</code>
     */
    VIRTIO_GPU_NEXT(55),
    /**
     * <code>MAC80211HWSIM_USERSPACE_MANAGED = 56;</code>
     */
    MAC80211HWSIM_USERSPACE_MANAGED(56),
    /**
     * <code>HAS_SHARED_SLOTS_HOST_MEMORY_ALLOCATOR = 57;</code>
     */
    HAS_SHARED_SLOTS_HOST_MEMORY_ALLOCATOR(57),
    /**
     * <code>CAR_VHAL_REPLAY = 58;</code>
     */
    CAR_VHAL_REPLAY(58),
    /**
     * <code>CAR_ASSIST_BUTTON = 59;</code>
     */
    CAR_ASSIST_BUTTON(59),
    /**
     * <code>HARDWARE_DECODER = 60;</code>
     */
    HARDWARE_DECODER(60),
    /**
     * <code>NO_DELAY_CLOSE_COLOR_BUFFER = 61;</code>
     */
    NO_DELAY_CLOSE_COLOR_BUFFER(61),
    /**
     * <code>NO_DEVICE_FRAME = 62;</code>
     */
    NO_DEVICE_FRAME(62),
    /**
     * <code>VIRTIO_GPU_NATIVE_SYNC = 63;</code>
     */
    VIRTIO_GPU_NATIVE_SYNC(63),
    /**
     * <code>VIRTIO_WIFI = 64;</code>
     */
    VIRTIO_WIFI(64),
    /**
     * <code>VULKAN_SHADER_FLOAT16_INT8 = 65;</code>
     */
    VULKAN_SHADER_FLOAT16_INT8(65),
    /**
     * <code>CAR_ROTARY = 66;</code>
     */
    CAR_ROTARY(66),
    /**
     * <code>MODEM_SIMULATOR = 67;</code>
     */
    MODEM_SIMULATOR(67),
    /**
     * <code>TV_REMOTE = 68;</code>
     */
    TV_REMOTE(68),
    /**
     * <code>NATIVE_TEXTURE_DECOMPRESSION = 69;</code>
     */
    NATIVE_TEXTURE_DECOMPRESSION(69),
    /**
     * <code>BPTC_TEXTURE_SUPPORT = 70;</code>
     */
    BPTC_TEXTURE_SUPPORT(70),
    /**
     * <code>GUEST_USES_ANGLE = 71;</code>
     */
    GUEST_USES_ANGLE(71),
    /**
     * <code>VIRTIO_VSOCK_PIPE = 72;</code>
     */
    VIRTIO_VSOCK_PIPE(72),
    /**
     * <code>S3TC_TEXTURE_SUPPORT = 73;</code>
     */
    S3TC_TEXTURE_SUPPORT(73),
    /**
     * <code>VIRTIO_MOUSE = 74;</code>
     */
    VIRTIO_MOUSE(74),
    /**
     * <code>VIRTCONSOLE_LOGCAT = 75;</code>
     */
    VIRTCONSOLE_LOGCAT(75),
    /**
     * <code>VULKAN_QUEUE_SUBMIT_WITH_COMMANDS = 76;</code>
     */
    VULKAN_QUEUE_SUBMIT_WITH_COMMANDS(76),
    /**
     * <code>VULKAN_BATCHED_DESCRIPTOR_SET_UPDATE = 77;</code>
     */
    VULKAN_BATCHED_DESCRIPTOR_SET_UPDATE(77),
    /**
     * <code>MINIGBM = 78;</code>
     */
    MINIGBM(78),
    /**
     * <code>NO_DRAW = 79;</code>
     */
    NO_DRAW(79),
    /**
     * <code>GNSS_GRPC_V1 = 80;</code>
     */
    GNSS_GRPC_V1(80),
    /**
     * <code>MIGRATABLE_SNAPSHOT_SAVE = 81;</code>
     */
    MIGRATABLE_SNAPSHOT_SAVE(81),
    /**
     * <code>ANDROIDBOOT_PROPS = 82;</code>
     */
    ANDROIDBOOT_PROPS(82),
    /**
     * <code>DEVICESKINOVERLAY = 83;</code>
     */
    DEVICESKINOVERLAY(83),
    /**
     * <code>ANDROIDBOOT_PROPS2 = 84;</code>
     */
    ANDROIDBOOT_PROPS2(84),
    /**
     * <code>BLUETOOTH_EMULATION = 85;</code>
     */
    BLUETOOTH_EMULATION(85),
    /**
     * <code>DEVICESTATE_ON_BOOT = 86;</code>
     */
    DEVICESTATE_ON_BOOT(86),
    /**
     * <code>HWC_MULTI_CONFIGS = 87;</code>
     */
    HWC_MULTI_CONFIGS(87),
    /**
     * <code>ASYNC_COMPOSE_SUPPORT = 88;</code>
     */
    ASYNC_COMPOSE_SUPPORT(88),
    /**
     * <code>VIRTIO_SND_CARD = 89;</code>
     */
    VIRTIO_SND_CARD(89),
    /**
     * <code>VIRTIO_TABLET = 90;</code>
     */
    VIRTIO_TABLET(90),
    /**
     * <code>RGTC_TEXTURE_SUPPORT = 91 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    RGTC_TEXTURE_SUPPORT(91),
    /**
     * <code>VULKAN_NATIVE_SWAPCHAIN = 92;</code>
     */
    VULKAN_NATIVE_SWAPCHAIN(92),
    /**
     * <code>VIRTIO_GPU_FENCE_CONTEXTS = 93;</code>
     */
    VIRTIO_GPU_FENCE_CONTEXTS(93),
    /**
     * <code>VSOCK_SNAPSHOT_LOAD_FIXED_B231345789 = 94;</code>
     */
    VSOCK_SNAPSHOT_LOAD_FIXED_B231345789(94),
    /**
     * <code>VULKAN_ASTC_LDR_EMULATION = 95;</code>
     */
    VULKAN_ASTC_LDR_EMULATION(95),
    /**
     * <code>VULKAN_YCBCR_EMULATION = 96;</code>
     */
    VULKAN_YCBCR_EMULATION(96),
    /**
     * <code>VULKAN_ETC2_EMULATION = 97;</code>
     */
    VULKAN_ETC2_EMULATION(97),
    /**
     * <code>EXTERNAL_BLOB = 98;</code>
     */
    EXTERNAL_BLOB(98),
    /**
     * <code>DOWNLOADABLE_SNAPSHOT = 99;</code>
     */
    DOWNLOADABLE_SNAPSHOT(99),
    /**
     * <code>SYSTEM_BLOB = 100;</code>
     */
    SYSTEM_BLOB(100),
    /**
     * <code>NETSIMWEBUI = 101;</code>
     */
    NETSIMWEBUI(101),
    /**
     * <code>NETSIMCLIUI = 102;</code>
     */
    NETSIMCLIUI(102),
    /**
     * <code>WIFIPACKETSTREAM = 103;</code>
     */
    WIFIPACKETSTREAM(103),
    /**
     * <code>SUPPORT_PIXEL_FOLD = 104;</code>
     */
    SUPPORT_PIXEL_FOLD(104),
    /**
     * <code>DEVICE_KEYBOARD_HAS_ASSIST_KEY = 105;</code>
     */
    DEVICE_KEYBOARD_HAS_ASSIST_KEY(105),
    /**
     * <code>VULKAN_ALLOCATE_DEVICE_MEMORY_ONLY = 106;</code>
     */
    VULKAN_ALLOCATE_DEVICE_MEMORY_ONLY(106),
    /**
     * <code>VULKAN_ALLOCATE_HOST_MEMORY = 107;</code>
     */
    VULKAN_ALLOCATE_HOST_MEMORY(107),
    /**
     * <code>DEVICE_KEYBOARD_QT_RAW_INPUT = 108;</code>
     */
    DEVICE_KEYBOARD_QT_RAW_INPUT(108),
    /**
     * <code>UWB = 109;</code>
     */
    UWB(109),
    /**
     * <code>UX_TEST_2024 = 110;</code>
     */
    UX_TEST_2024(110),
    /**
     * <code>GUEST_ANGLE = 111;</code>
     */
    GUEST_ANGLE(111),
    /**
     * <pre>
     * Next tag: 113
     * </pre>
     *
     * <code>ANDROID_VIRTUALIZATION_FRAMEWORK = 112;</code>
     */
    ANDROID_VIRTUALIZATION_FRAMEWORK(112),
    ;

    /**
     * <code>EMULATOR_FEATURE_FLAG_UNSPECIFIED = 0;</code>
     */
    public static final int EMULATOR_FEATURE_FLAG_UNSPECIFIED_VALUE = 0;
    /**
     * <code>GL_PIPE_CHECKSUM = 1;</code>
     */
    public static final int GL_PIPE_CHECKSUM_VALUE = 1;
    /**
     * <code>GRALLOC_SYNC = 2;</code>
     */
    public static final int GRALLOC_SYNC_VALUE = 2;
    /**
     * <code>ENCRYPT_USER_DATA = 3;</code>
     */
    public static final int ENCRYPT_USER_DATA_VALUE = 3;
    /**
     * <code>INTEL_PERFORMANCE_MONITORING_UNIT = 4;</code>
     */
    public static final int INTEL_PERFORMANCE_MONITORING_UNIT_VALUE = 4;
    /**
     * <code>GL_ASYNC_SWAP = 5;</code>
     */
    public static final int GL_ASYNC_SWAP_VALUE = 5;
    /**
     * <code>GLDMA = 6;</code>
     */
    public static final int GLDMA_VALUE = 6;
    /**
     * <code>GLES_DYNAMIC_VERSION = 7;</code>
     */
    public static final int GLES_DYNAMIC_VERSION_VALUE = 7;
    /**
     * <code>FORCE_ANGLE = 8;</code>
     */
    public static final int FORCE_ANGLE_VALUE = 8;
    /**
     * <code>FORCE_SWIFTSHADER = 9;</code>
     */
    public static final int FORCE_SWIFTSHADER_VALUE = 9;
    /**
     * <code>WIFI = 10;</code>
     */
    public static final int WIFI_VALUE = 10;
    /**
     * <code>PLAY_STORE_IMAGE = 11;</code>
     */
    public static final int PLAY_STORE_IMAGE_VALUE = 11;
    /**
     * <code>LOGCAT_PIPE = 12;</code>
     */
    public static final int LOGCAT_PIPE_VALUE = 12;
    /**
     * <pre>
     * Hypervisor "allowed" flags (different from actual using)
     * </pre>
     *
     * <code>HYPERV = 13;</code>
     */
    public static final int HYPERV_VALUE = 13;
    /**
     * <code>HVF = 14;</code>
     */
    public static final int HVF_VALUE = 14;
    /**
     * <code>KVM = 15;</code>
     */
    public static final int KVM_VALUE = 15;
    /**
     * <code>HAXM = 16;</code>
     */
    public static final int HAXM_VALUE = 16;
    /**
     * <code>FAST_SNAPSHOT_V1 = 17;</code>
     */
    public static final int FAST_SNAPSHOT_V1_VALUE = 17;
    /**
     * <code>SCREEN_RECORDING = 18;</code>
     */
    public static final int SCREEN_RECORDING_VALUE = 18;
    /**
     * <code>VIRTUAL_SCENE = 19;</code>
     */
    public static final int VIRTUAL_SCENE_VALUE = 19;
    /**
     * <code>SYSTEM_AS_ROOT = 20;</code>
     */
    public static final int SYSTEM_AS_ROOT_VALUE = 20;
    /**
     * <code>DEPRECATED_IGNORE_HOST_OPENGL_ERRORS = 21 [deprecated = true];</code>
     */
    @java.lang.Deprecated public static final int DEPRECATED_IGNORE_HOST_OPENGL_ERRORS_VALUE = 21;
    /**
     * <code>GENERIC_SNAPSHOTS_UI = 22;</code>
     */
    public static final int GENERIC_SNAPSHOTS_UI_VALUE = 22;
    /**
     * <code>ALLOW_SNAPSHOT_MIGRATION = 23;</code>
     */
    public static final int ALLOW_SNAPSHOT_MIGRATION_VALUE = 23;
    /**
     * <code>DEPRECATED_GENERIC_INCREMENTAL_SNAPSHOT = 24 [deprecated = true];</code>
     */
    @java.lang.Deprecated public static final int DEPRECATED_GENERIC_INCREMENTAL_SNAPSHOT_VALUE = 24;
    /**
     * <code>WINDOWS_ON_DEMAND_SNAPSHOT_LOAD = 25;</code>
     */
    public static final int WINDOWS_ON_DEMAND_SNAPSHOT_LOAD_VALUE = 25;
    /**
     * <code>WINDOWS_HYPERVISOR_PLATFORM = 26;</code>
     */
    public static final int WINDOWS_HYPERVISOR_PLATFORM_VALUE = 26;
    /**
     * <code>KERNEL_DEVICE_TREE_BLOB_SUPPORT = 27;</code>
     */
    public static final int KERNEL_DEVICE_TREE_BLOB_SUPPORT_VALUE = 27;
    /**
     * <code>LOCATION_UI_V2 = 28;</code>
     */
    public static final int LOCATION_UI_V2_VALUE = 28;
    /**
     * <code>GENERIC_INCREMENTAL_SNAPSHOT = 29;</code>
     */
    public static final int GENERIC_INCREMENTAL_SNAPSHOT_VALUE = 29;
    /**
     * <code>SNAPSHOT_ADB = 30;</code>
     */
    public static final int SNAPSHOT_ADB_VALUE = 30;
    /**
     * <code>OFFWORLD = 31;</code>
     */
    public static final int OFFWORLD_VALUE = 31;
    /**
     * <code>OFFWORLD_DISABLE_SECURITY = 32;</code>
     */
    public static final int OFFWORLD_DISABLE_SECURITY_VALUE = 32;
    /**
     * <code>QUICKBOOT_FILE_BACKED = 33;</code>
     */
    public static final int QUICKBOOT_FILE_BACKED_VALUE = 33;
    /**
     * <code>REFCOUNT_PIPE = 34;</code>
     */
    public static final int REFCOUNT_PIPE_VALUE = 34;
    /**
     * <code>GLDMA2 = 35;</code>
     */
    public static final int GLDMA2_VALUE = 35;
    /**
     * <code>HOST_COMPOSITION_V1 = 36;</code>
     */
    public static final int HOST_COMPOSITION_V1_VALUE = 36;
    /**
     * <code>ON_DEMAND_SNAPSHOT_LOAD = 37;</code>
     */
    public static final int ON_DEMAND_SNAPSHOT_LOAD_VALUE = 37;
    /**
     * <code>WIFI_CONFIGURABLE = 38;</code>
     */
    public static final int WIFI_CONFIGURABLE_VALUE = 38;
    /**
     * <code>GL_DIRECT_MEM = 39;</code>
     */
    public static final int GL_DIRECT_MEM_VALUE = 39;
    /**
     * <code>VIDEO_PLAYBACK = 40;</code>
     */
    public static final int VIDEO_PLAYBACK_VALUE = 40;
    /**
     * <code>VULKAN = 41;</code>
     */
    public static final int VULKAN_VALUE = 41;
    /**
     * <code>MACRO_UI = 42;</code>
     */
    public static final int MACRO_UI_VALUE = 42;
    /**
     * <code>CAR_VHAL_TABLE = 43;</code>
     */
    public static final int CAR_VHAL_TABLE_VALUE = 43;
    /**
     * <code>DYNAMIC_PARTITION = 44;</code>
     */
    public static final int DYNAMIC_PARTITION_VALUE = 44;
    /**
     * <code>IP_DISCONNECT_ON_LOAD = 45;</code>
     */
    public static final int IP_DISCONNECT_ON_LOAD_VALUE = 45;
    /**
     * <code>VULKAN_SNAPSHOTS = 46;</code>
     */
    public static final int VULKAN_SNAPSHOTS_VALUE = 46;
    /**
     * <code>VIRTIO_INPUT = 47;</code>
     */
    public static final int VIRTIO_INPUT_VALUE = 47;
    /**
     * <code>MULTI_DISPLAY = 48;</code>
     */
    public static final int MULTI_DISPLAY_VALUE = 48;
    /**
     * <code>VULKAN_NULL_OPTIONAL_STRINGS = 49;</code>
     */
    public static final int VULKAN_NULL_OPTIONAL_STRINGS_VALUE = 49;
    /**
     * <code>DYNAMIC_MEDIA_PROFILE = 50;</code>
     */
    public static final int DYNAMIC_MEDIA_PROFILE_VALUE = 50;
    /**
     * <code>YUV420_888_to_NV21 = 51;</code>
     */
    public static final int YUV420_888_to_NV21_VALUE = 51;
    /**
     * <code>YUV_Cache = 52;</code>
     */
    public static final int YUV_Cache_VALUE = 52;
    /**
     * <code>KEYCODE_FORWARDING = 53;</code>
     */
    public static final int KEYCODE_FORWARDING_VALUE = 53;
    /**
     * <code>VULKAN_IGNORED_HANDLES = 54;</code>
     */
    public static final int VULKAN_IGNORED_HANDLES_VALUE = 54;
    /**
     * <code>VIRTIO_GPU_NEXT = 55;</code>
     */
    public static final int VIRTIO_GPU_NEXT_VALUE = 55;
    /**
     * <code>MAC80211HWSIM_USERSPACE_MANAGED = 56;</code>
     */
    public static final int MAC80211HWSIM_USERSPACE_MANAGED_VALUE = 56;
    /**
     * <code>HAS_SHARED_SLOTS_HOST_MEMORY_ALLOCATOR = 57;</code>
     */
    public static final int HAS_SHARED_SLOTS_HOST_MEMORY_ALLOCATOR_VALUE = 57;
    /**
     * <code>CAR_VHAL_REPLAY = 58;</code>
     */
    public static final int CAR_VHAL_REPLAY_VALUE = 58;
    /**
     * <code>CAR_ASSIST_BUTTON = 59;</code>
     */
    public static final int CAR_ASSIST_BUTTON_VALUE = 59;
    /**
     * <code>HARDWARE_DECODER = 60;</code>
     */
    public static final int HARDWARE_DECODER_VALUE = 60;
    /**
     * <code>NO_DELAY_CLOSE_COLOR_BUFFER = 61;</code>
     */
    public static final int NO_DELAY_CLOSE_COLOR_BUFFER_VALUE = 61;
    /**
     * <code>NO_DEVICE_FRAME = 62;</code>
     */
    public static final int NO_DEVICE_FRAME_VALUE = 62;
    /**
     * <code>VIRTIO_GPU_NATIVE_SYNC = 63;</code>
     */
    public static final int VIRTIO_GPU_NATIVE_SYNC_VALUE = 63;
    /**
     * <code>VIRTIO_WIFI = 64;</code>
     */
    public static final int VIRTIO_WIFI_VALUE = 64;
    /**
     * <code>VULKAN_SHADER_FLOAT16_INT8 = 65;</code>
     */
    public static final int VULKAN_SHADER_FLOAT16_INT8_VALUE = 65;
    /**
     * <code>CAR_ROTARY = 66;</code>
     */
    public static final int CAR_ROTARY_VALUE = 66;
    /**
     * <code>MODEM_SIMULATOR = 67;</code>
     */
    public static final int MODEM_SIMULATOR_VALUE = 67;
    /**
     * <code>TV_REMOTE = 68;</code>
     */
    public static final int TV_REMOTE_VALUE = 68;
    /**
     * <code>NATIVE_TEXTURE_DECOMPRESSION = 69;</code>
     */
    public static final int NATIVE_TEXTURE_DECOMPRESSION_VALUE = 69;
    /**
     * <code>BPTC_TEXTURE_SUPPORT = 70;</code>
     */
    public static final int BPTC_TEXTURE_SUPPORT_VALUE = 70;
    /**
     * <code>GUEST_USES_ANGLE = 71;</code>
     */
    public static final int GUEST_USES_ANGLE_VALUE = 71;
    /**
     * <code>VIRTIO_VSOCK_PIPE = 72;</code>
     */
    public static final int VIRTIO_VSOCK_PIPE_VALUE = 72;
    /**
     * <code>S3TC_TEXTURE_SUPPORT = 73;</code>
     */
    public static final int S3TC_TEXTURE_SUPPORT_VALUE = 73;
    /**
     * <code>VIRTIO_MOUSE = 74;</code>
     */
    public static final int VIRTIO_MOUSE_VALUE = 74;
    /**
     * <code>VIRTCONSOLE_LOGCAT = 75;</code>
     */
    public static final int VIRTCONSOLE_LOGCAT_VALUE = 75;
    /**
     * <code>VULKAN_QUEUE_SUBMIT_WITH_COMMANDS = 76;</code>
     */
    public static final int VULKAN_QUEUE_SUBMIT_WITH_COMMANDS_VALUE = 76;
    /**
     * <code>VULKAN_BATCHED_DESCRIPTOR_SET_UPDATE = 77;</code>
     */
    public static final int VULKAN_BATCHED_DESCRIPTOR_SET_UPDATE_VALUE = 77;
    /**
     * <code>MINIGBM = 78;</code>
     */
    public static final int MINIGBM_VALUE = 78;
    /**
     * <code>NO_DRAW = 79;</code>
     */
    public static final int NO_DRAW_VALUE = 79;
    /**
     * <code>GNSS_GRPC_V1 = 80;</code>
     */
    public static final int GNSS_GRPC_V1_VALUE = 80;
    /**
     * <code>MIGRATABLE_SNAPSHOT_SAVE = 81;</code>
     */
    public static final int MIGRATABLE_SNAPSHOT_SAVE_VALUE = 81;
    /**
     * <code>ANDROIDBOOT_PROPS = 82;</code>
     */
    public static final int ANDROIDBOOT_PROPS_VALUE = 82;
    /**
     * <code>DEVICESKINOVERLAY = 83;</code>
     */
    public static final int DEVICESKINOVERLAY_VALUE = 83;
    /**
     * <code>ANDROIDBOOT_PROPS2 = 84;</code>
     */
    public static final int ANDROIDBOOT_PROPS2_VALUE = 84;
    /**
     * <code>BLUETOOTH_EMULATION = 85;</code>
     */
    public static final int BLUETOOTH_EMULATION_VALUE = 85;
    /**
     * <code>DEVICESTATE_ON_BOOT = 86;</code>
     */
    public static final int DEVICESTATE_ON_BOOT_VALUE = 86;
    /**
     * <code>HWC_MULTI_CONFIGS = 87;</code>
     */
    public static final int HWC_MULTI_CONFIGS_VALUE = 87;
    /**
     * <code>ASYNC_COMPOSE_SUPPORT = 88;</code>
     */
    public static final int ASYNC_COMPOSE_SUPPORT_VALUE = 88;
    /**
     * <code>VIRTIO_SND_CARD = 89;</code>
     */
    public static final int VIRTIO_SND_CARD_VALUE = 89;
    /**
     * <code>VIRTIO_TABLET = 90;</code>
     */
    public static final int VIRTIO_TABLET_VALUE = 90;
    /**
     * <code>RGTC_TEXTURE_SUPPORT = 91 [deprecated = true];</code>
     */
    @java.lang.Deprecated public static final int RGTC_TEXTURE_SUPPORT_VALUE = 91;
    /**
     * <code>VULKAN_NATIVE_SWAPCHAIN = 92;</code>
     */
    public static final int VULKAN_NATIVE_SWAPCHAIN_VALUE = 92;
    /**
     * <code>VIRTIO_GPU_FENCE_CONTEXTS = 93;</code>
     */
    public static final int VIRTIO_GPU_FENCE_CONTEXTS_VALUE = 93;
    /**
     * <code>VSOCK_SNAPSHOT_LOAD_FIXED_B231345789 = 94;</code>
     */
    public static final int VSOCK_SNAPSHOT_LOAD_FIXED_B231345789_VALUE = 94;
    /**
     * <code>VULKAN_ASTC_LDR_EMULATION = 95;</code>
     */
    public static final int VULKAN_ASTC_LDR_EMULATION_VALUE = 95;
    /**
     * <code>VULKAN_YCBCR_EMULATION = 96;</code>
     */
    public static final int VULKAN_YCBCR_EMULATION_VALUE = 96;
    /**
     * <code>VULKAN_ETC2_EMULATION = 97;</code>
     */
    public static final int VULKAN_ETC2_EMULATION_VALUE = 97;
    /**
     * <code>EXTERNAL_BLOB = 98;</code>
     */
    public static final int EXTERNAL_BLOB_VALUE = 98;
    /**
     * <code>DOWNLOADABLE_SNAPSHOT = 99;</code>
     */
    public static final int DOWNLOADABLE_SNAPSHOT_VALUE = 99;
    /**
     * <code>SYSTEM_BLOB = 100;</code>
     */
    public static final int SYSTEM_BLOB_VALUE = 100;
    /**
     * <code>NETSIMWEBUI = 101;</code>
     */
    public static final int NETSIMWEBUI_VALUE = 101;
    /**
     * <code>NETSIMCLIUI = 102;</code>
     */
    public static final int NETSIMCLIUI_VALUE = 102;
    /**
     * <code>WIFIPACKETSTREAM = 103;</code>
     */
    public static final int WIFIPACKETSTREAM_VALUE = 103;
    /**
     * <code>SUPPORT_PIXEL_FOLD = 104;</code>
     */
    public static final int SUPPORT_PIXEL_FOLD_VALUE = 104;
    /**
     * <code>DEVICE_KEYBOARD_HAS_ASSIST_KEY = 105;</code>
     */
    public static final int DEVICE_KEYBOARD_HAS_ASSIST_KEY_VALUE = 105;
    /**
     * <code>VULKAN_ALLOCATE_DEVICE_MEMORY_ONLY = 106;</code>
     */
    public static final int VULKAN_ALLOCATE_DEVICE_MEMORY_ONLY_VALUE = 106;
    /**
     * <code>VULKAN_ALLOCATE_HOST_MEMORY = 107;</code>
     */
    public static final int VULKAN_ALLOCATE_HOST_MEMORY_VALUE = 107;
    /**
     * <code>DEVICE_KEYBOARD_QT_RAW_INPUT = 108;</code>
     */
    public static final int DEVICE_KEYBOARD_QT_RAW_INPUT_VALUE = 108;
    /**
     * <code>UWB = 109;</code>
     */
    public static final int UWB_VALUE = 109;
    /**
     * <code>UX_TEST_2024 = 110;</code>
     */
    public static final int UX_TEST_2024_VALUE = 110;
    /**
     * <code>GUEST_ANGLE = 111;</code>
     */
    public static final int GUEST_ANGLE_VALUE = 111;
    /**
     * <pre>
     * Next tag: 113
     * </pre>
     *
     * <code>ANDROID_VIRTUALIZATION_FRAMEWORK = 112;</code>
     */
    public static final int ANDROID_VIRTUALIZATION_FRAMEWORK_VALUE = 112;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EmulatorFeatureFlag valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EmulatorFeatureFlag forNumber(int value) {
      switch (value) {
        case 0: return EMULATOR_FEATURE_FLAG_UNSPECIFIED;
        case 1: return GL_PIPE_CHECKSUM;
        case 2: return GRALLOC_SYNC;
        case 3: return ENCRYPT_USER_DATA;
        case 4: return INTEL_PERFORMANCE_MONITORING_UNIT;
        case 5: return GL_ASYNC_SWAP;
        case 6: return GLDMA;
        case 7: return GLES_DYNAMIC_VERSION;
        case 8: return FORCE_ANGLE;
        case 9: return FORCE_SWIFTSHADER;
        case 10: return WIFI;
        case 11: return PLAY_STORE_IMAGE;
        case 12: return LOGCAT_PIPE;
        case 13: return HYPERV;
        case 14: return HVF;
        case 15: return KVM;
        case 16: return HAXM;
        case 17: return FAST_SNAPSHOT_V1;
        case 18: return SCREEN_RECORDING;
        case 19: return VIRTUAL_SCENE;
        case 20: return SYSTEM_AS_ROOT;
        case 21: return DEPRECATED_IGNORE_HOST_OPENGL_ERRORS;
        case 22: return GENERIC_SNAPSHOTS_UI;
        case 23: return ALLOW_SNAPSHOT_MIGRATION;
        case 24: return DEPRECATED_GENERIC_INCREMENTAL_SNAPSHOT;
        case 25: return WINDOWS_ON_DEMAND_SNAPSHOT_LOAD;
        case 26: return WINDOWS_HYPERVISOR_PLATFORM;
        case 27: return KERNEL_DEVICE_TREE_BLOB_SUPPORT;
        case 28: return LOCATION_UI_V2;
        case 29: return GENERIC_INCREMENTAL_SNAPSHOT;
        case 30: return SNAPSHOT_ADB;
        case 31: return OFFWORLD;
        case 32: return OFFWORLD_DISABLE_SECURITY;
        case 33: return QUICKBOOT_FILE_BACKED;
        case 34: return REFCOUNT_PIPE;
        case 35: return GLDMA2;
        case 36: return HOST_COMPOSITION_V1;
        case 37: return ON_DEMAND_SNAPSHOT_LOAD;
        case 38: return WIFI_CONFIGURABLE;
        case 39: return GL_DIRECT_MEM;
        case 40: return VIDEO_PLAYBACK;
        case 41: return VULKAN;
        case 42: return MACRO_UI;
        case 43: return CAR_VHAL_TABLE;
        case 44: return DYNAMIC_PARTITION;
        case 45: return IP_DISCONNECT_ON_LOAD;
        case 46: return VULKAN_SNAPSHOTS;
        case 47: return VIRTIO_INPUT;
        case 48: return MULTI_DISPLAY;
        case 49: return VULKAN_NULL_OPTIONAL_STRINGS;
        case 50: return DYNAMIC_MEDIA_PROFILE;
        case 51: return YUV420_888_to_NV21;
        case 52: return YUV_Cache;
        case 53: return KEYCODE_FORWARDING;
        case 54: return VULKAN_IGNORED_HANDLES;
        case 55: return VIRTIO_GPU_NEXT;
        case 56: return MAC80211HWSIM_USERSPACE_MANAGED;
        case 57: return HAS_SHARED_SLOTS_HOST_MEMORY_ALLOCATOR;
        case 58: return CAR_VHAL_REPLAY;
        case 59: return CAR_ASSIST_BUTTON;
        case 60: return HARDWARE_DECODER;
        case 61: return NO_DELAY_CLOSE_COLOR_BUFFER;
        case 62: return NO_DEVICE_FRAME;
        case 63: return VIRTIO_GPU_NATIVE_SYNC;
        case 64: return VIRTIO_WIFI;
        case 65: return VULKAN_SHADER_FLOAT16_INT8;
        case 66: return CAR_ROTARY;
        case 67: return MODEM_SIMULATOR;
        case 68: return TV_REMOTE;
        case 69: return NATIVE_TEXTURE_DECOMPRESSION;
        case 70: return BPTC_TEXTURE_SUPPORT;
        case 71: return GUEST_USES_ANGLE;
        case 72: return VIRTIO_VSOCK_PIPE;
        case 73: return S3TC_TEXTURE_SUPPORT;
        case 74: return VIRTIO_MOUSE;
        case 75: return VIRTCONSOLE_LOGCAT;
        case 76: return VULKAN_QUEUE_SUBMIT_WITH_COMMANDS;
        case 77: return VULKAN_BATCHED_DESCRIPTOR_SET_UPDATE;
        case 78: return MINIGBM;
        case 79: return NO_DRAW;
        case 80: return GNSS_GRPC_V1;
        case 81: return MIGRATABLE_SNAPSHOT_SAVE;
        case 82: return ANDROIDBOOT_PROPS;
        case 83: return DEVICESKINOVERLAY;
        case 84: return ANDROIDBOOT_PROPS2;
        case 85: return BLUETOOTH_EMULATION;
        case 86: return DEVICESTATE_ON_BOOT;
        case 87: return HWC_MULTI_CONFIGS;
        case 88: return ASYNC_COMPOSE_SUPPORT;
        case 89: return VIRTIO_SND_CARD;
        case 90: return VIRTIO_TABLET;
        case 91: return RGTC_TEXTURE_SUPPORT;
        case 92: return VULKAN_NATIVE_SWAPCHAIN;
        case 93: return VIRTIO_GPU_FENCE_CONTEXTS;
        case 94: return VSOCK_SNAPSHOT_LOAD_FIXED_B231345789;
        case 95: return VULKAN_ASTC_LDR_EMULATION;
        case 96: return VULKAN_YCBCR_EMULATION;
        case 97: return VULKAN_ETC2_EMULATION;
        case 98: return EXTERNAL_BLOB;
        case 99: return DOWNLOADABLE_SNAPSHOT;
        case 100: return SYSTEM_BLOB;
        case 101: return NETSIMWEBUI;
        case 102: return NETSIMCLIUI;
        case 103: return WIFIPACKETSTREAM;
        case 104: return SUPPORT_PIXEL_FOLD;
        case 105: return DEVICE_KEYBOARD_HAS_ASSIST_KEY;
        case 106: return VULKAN_ALLOCATE_DEVICE_MEMORY_ONLY;
        case 107: return VULKAN_ALLOCATE_HOST_MEMORY;
        case 108: return DEVICE_KEYBOARD_QT_RAW_INPUT;
        case 109: return UWB;
        case 110: return UX_TEST_2024;
        case 111: return GUEST_ANGLE;
        case 112: return ANDROID_VIRTUALIZATION_FRAMEWORK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmulatorFeatureFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EmulatorFeatureFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmulatorFeatureFlag>() {
            public EmulatorFeatureFlag findValueByNumber(int number) {
              return EmulatorFeatureFlag.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDescriptor().getEnumTypes().get(0);
    }

    private static final EmulatorFeatureFlag[] VALUES = values();

    public static EmulatorFeatureFlag valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EmulatorFeatureFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag)
  }

  public static final int ATTEMPTED_ENABLED_FEATURE_FLAGS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> attemptedEnabledFeatureFlags_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> attemptedEnabledFeatureFlags_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>() {
            public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag convert(java.lang.Integer from) {
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag result = com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(from);
              return result == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.EMULATOR_FEATURE_FLAG_UNSPECIFIED : result;
            }
          };
  /**
   * <pre>
   * Which features were enabled by default or through the server-side config.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
   * @return A list containing the attemptedEnabledFeatureFlags.
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getAttemptedEnabledFeatureFlagsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(attemptedEnabledFeatureFlags_, attemptedEnabledFeatureFlags_converter_);
  }
  /**
   * <pre>
   * Which features were enabled by default or through the server-side config.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
   * @return The count of attemptedEnabledFeatureFlags.
   */
  @java.lang.Override
  public int getAttemptedEnabledFeatureFlagsCount() {
    return attemptedEnabledFeatureFlags_.size();
  }
  /**
   * <pre>
   * Which features were enabled by default or through the server-side config.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
   * @param index The index of the element to return.
   * @return The attemptedEnabledFeatureFlags at the given index.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getAttemptedEnabledFeatureFlags(int index) {
    return attemptedEnabledFeatureFlags_converter_.convert(attemptedEnabledFeatureFlags_.get(index));
  }

  public static final int USER_OVERRIDDEN_ENABLED_FEATURES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> userOverriddenEnabledFeatures_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> userOverriddenEnabledFeatures_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>() {
            public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag convert(java.lang.Integer from) {
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag result = com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(from);
              return result == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.EMULATOR_FEATURE_FLAG_UNSPECIFIED : result;
            }
          };
  /**
   * <pre>
   * Which features were enabled through user override.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
   * @return A list containing the userOverriddenEnabledFeatures.
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getUserOverriddenEnabledFeaturesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(userOverriddenEnabledFeatures_, userOverriddenEnabledFeatures_converter_);
  }
  /**
   * <pre>
   * Which features were enabled through user override.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
   * @return The count of userOverriddenEnabledFeatures.
   */
  @java.lang.Override
  public int getUserOverriddenEnabledFeaturesCount() {
    return userOverriddenEnabledFeatures_.size();
  }
  /**
   * <pre>
   * Which features were enabled through user override.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
   * @param index The index of the element to return.
   * @return The userOverriddenEnabledFeatures at the given index.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getUserOverriddenEnabledFeatures(int index) {
    return userOverriddenEnabledFeatures_converter_.convert(userOverriddenEnabledFeatures_.get(index));
  }

  public static final int USER_OVERRIDDEN_DISABLED_FEATURES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> userOverriddenDisabledFeatures_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> userOverriddenDisabledFeatures_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>() {
            public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag convert(java.lang.Integer from) {
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag result = com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(from);
              return result == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.EMULATOR_FEATURE_FLAG_UNSPECIFIED : result;
            }
          };
  /**
   * <pre>
   * Which features were disabled through user override.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
   * @return A list containing the userOverriddenDisabledFeatures.
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getUserOverriddenDisabledFeaturesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(userOverriddenDisabledFeatures_, userOverriddenDisabledFeatures_converter_);
  }
  /**
   * <pre>
   * Which features were disabled through user override.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
   * @return The count of userOverriddenDisabledFeatures.
   */
  @java.lang.Override
  public int getUserOverriddenDisabledFeaturesCount() {
    return userOverriddenDisabledFeatures_.size();
  }
  /**
   * <pre>
   * Which features were disabled through user override.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
   * @param index The index of the element to return.
   * @return The userOverriddenDisabledFeatures at the given index.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getUserOverriddenDisabledFeatures(int index) {
    return userOverriddenDisabledFeatures_converter_.convert(userOverriddenDisabledFeatures_.get(index));
  }

  public static final int RESULTING_ENABLED_FEATURES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> resultingEnabledFeatures_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> resultingEnabledFeatures_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>() {
            public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag convert(java.lang.Integer from) {
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag result = com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(from);
              return result == null ? com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.EMULATOR_FEATURE_FLAG_UNSPECIFIED : result;
            }
          };
  /**
   * <pre>
   * Which features ended up being enabled overall.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
   * @return A list containing the resultingEnabledFeatures.
   */
  @java.lang.Override
  public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getResultingEnabledFeaturesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(resultingEnabledFeatures_, resultingEnabledFeatures_converter_);
  }
  /**
   * <pre>
   * Which features ended up being enabled overall.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
   * @return The count of resultingEnabledFeatures.
   */
  @java.lang.Override
  public int getResultingEnabledFeaturesCount() {
    return resultingEnabledFeatures_.size();
  }
  /**
   * <pre>
   * Which features ended up being enabled overall.
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
   * @param index The index of the element to return.
   * @return The resultingEnabledFeatures at the given index.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getResultingEnabledFeatures(int index) {
    return resultingEnabledFeatures_converter_.convert(resultingEnabledFeatures_.get(index));
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < attemptedEnabledFeatureFlags_.size(); i++) {
      output.writeEnum(1, attemptedEnabledFeatureFlags_.get(i));
    }
    for (int i = 0; i < userOverriddenEnabledFeatures_.size(); i++) {
      output.writeEnum(2, userOverriddenEnabledFeatures_.get(i));
    }
    for (int i = 0; i < userOverriddenDisabledFeatures_.size(); i++) {
      output.writeEnum(3, userOverriddenDisabledFeatures_.get(i));
    }
    for (int i = 0; i < resultingEnabledFeatures_.size(); i++) {
      output.writeEnum(4, resultingEnabledFeatures_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < attemptedEnabledFeatureFlags_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(attemptedEnabledFeatureFlags_.get(i));
      }
      size += dataSize;
      size += 1 * attemptedEnabledFeatureFlags_.size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < userOverriddenEnabledFeatures_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(userOverriddenEnabledFeatures_.get(i));
      }
      size += dataSize;
      size += 1 * userOverriddenEnabledFeatures_.size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < userOverriddenDisabledFeatures_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(userOverriddenDisabledFeatures_.get(i));
      }
      size += dataSize;
      size += 1 * userOverriddenDisabledFeatures_.size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < resultingEnabledFeatures_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(resultingEnabledFeatures_.get(i));
      }
      size += dataSize;
      size += 1 * resultingEnabledFeatures_.size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState other = (com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState) obj;

    if (!attemptedEnabledFeatureFlags_.equals(other.attemptedEnabledFeatureFlags_)) return false;
    if (!userOverriddenEnabledFeatures_.equals(other.userOverriddenEnabledFeatures_)) return false;
    if (!userOverriddenDisabledFeatures_.equals(other.userOverriddenDisabledFeatures_)) return false;
    if (!resultingEnabledFeatures_.equals(other.resultingEnabledFeatures_)) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getAttemptedEnabledFeatureFlagsCount() > 0) {
      hash = (37 * hash) + ATTEMPTED_ENABLED_FEATURE_FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + attemptedEnabledFeatureFlags_.hashCode();
    }
    if (getUserOverriddenEnabledFeaturesCount() > 0) {
      hash = (37 * hash) + USER_OVERRIDDEN_ENABLED_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + userOverriddenEnabledFeatures_.hashCode();
    }
    if (getUserOverriddenDisabledFeaturesCount() > 0) {
      hash = (37 * hash) + USER_OVERRIDDEN_DISABLED_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + userOverriddenDisabledFeatures_.hashCode();
    }
    if (getResultingEnabledFeaturesCount() > 0) {
      hash = (37 * hash) + RESULTING_ENABLED_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + resultingEnabledFeatures_.hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * State of emulator feature flags, including
   * which flags attempted to enable vs resulting set
   * of enabled flags.
   * </pre>
   *
   * Protobuf type {@code android_studio.EmulatorFeatureFlagState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.EmulatorFeatureFlagState)
      com.google.wireless.android.sdk.stats.EmulatorFeatureFlagStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorFeatureFlagState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorFeatureFlagState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.class, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      attemptedEnabledFeatureFlags_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      userOverriddenEnabledFeatures_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      userOverriddenDisabledFeatures_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      resultingEnabledFeatures_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_EmulatorFeatureFlagState_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState build() {
      com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState buildPartial() {
      com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState result = new com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        attemptedEnabledFeatureFlags_ = java.util.Collections.unmodifiableList(attemptedEnabledFeatureFlags_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.attemptedEnabledFeatureFlags_ = attemptedEnabledFeatureFlags_;
      if (((bitField0_ & 0x00000002) != 0)) {
        userOverriddenEnabledFeatures_ = java.util.Collections.unmodifiableList(userOverriddenEnabledFeatures_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.userOverriddenEnabledFeatures_ = userOverriddenEnabledFeatures_;
      if (((bitField0_ & 0x00000004) != 0)) {
        userOverriddenDisabledFeatures_ = java.util.Collections.unmodifiableList(userOverriddenDisabledFeatures_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.userOverriddenDisabledFeatures_ = userOverriddenDisabledFeatures_;
      if (((bitField0_ & 0x00000008) != 0)) {
        resultingEnabledFeatures_ = java.util.Collections.unmodifiableList(resultingEnabledFeatures_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.resultingEnabledFeatures_ = resultingEnabledFeatures_;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState) {
        return mergeFrom((com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState other) {
      if (other == com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.getDefaultInstance()) return this;
      if (!other.attemptedEnabledFeatureFlags_.isEmpty()) {
        if (attemptedEnabledFeatureFlags_.isEmpty()) {
          attemptedEnabledFeatureFlags_ = other.attemptedEnabledFeatureFlags_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureAttemptedEnabledFeatureFlagsIsMutable();
          attemptedEnabledFeatureFlags_.addAll(other.attemptedEnabledFeatureFlags_);
        }
        onChanged();
      }
      if (!other.userOverriddenEnabledFeatures_.isEmpty()) {
        if (userOverriddenEnabledFeatures_.isEmpty()) {
          userOverriddenEnabledFeatures_ = other.userOverriddenEnabledFeatures_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureUserOverriddenEnabledFeaturesIsMutable();
          userOverriddenEnabledFeatures_.addAll(other.userOverriddenEnabledFeatures_);
        }
        onChanged();
      }
      if (!other.userOverriddenDisabledFeatures_.isEmpty()) {
        if (userOverriddenDisabledFeatures_.isEmpty()) {
          userOverriddenDisabledFeatures_ = other.userOverriddenDisabledFeatures_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureUserOverriddenDisabledFeaturesIsMutable();
          userOverriddenDisabledFeatures_.addAll(other.userOverriddenDisabledFeatures_);
        }
        onChanged();
      }
      if (!other.resultingEnabledFeatures_.isEmpty()) {
        if (resultingEnabledFeatures_.isEmpty()) {
          resultingEnabledFeatures_ = other.resultingEnabledFeatures_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureResultingEnabledFeaturesIsMutable();
          resultingEnabledFeatures_.addAll(other.resultingEnabledFeatures_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                ensureAttemptedEnabledFeatureFlagsIsMutable();
                attemptedEnabledFeatureFlags_.add(tmpRaw);
              }
              break;
            } // case 8
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                    com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  ensureAttemptedEnabledFeatureFlagsIsMutable();
                  attemptedEnabledFeatureFlags_.add(tmpRaw);
                }
              }
              input.popLimit(oldLimit);
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                ensureUserOverriddenEnabledFeaturesIsMutable();
                userOverriddenEnabledFeatures_.add(tmpRaw);
              }
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                    com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  ensureUserOverriddenEnabledFeaturesIsMutable();
                  userOverriddenEnabledFeatures_.add(tmpRaw);
                }
              }
              input.popLimit(oldLimit);
              break;
            } // case 18
            case 24: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(3, tmpRaw);
              } else {
                ensureUserOverriddenDisabledFeaturesIsMutable();
                userOverriddenDisabledFeatures_.add(tmpRaw);
              }
              break;
            } // case 24
            case 26: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                    com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  ensureUserOverriddenDisabledFeaturesIsMutable();
                  userOverriddenDisabledFeatures_.add(tmpRaw);
                }
              }
              input.popLimit(oldLimit);
              break;
            } // case 26
            case 32: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                  com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(4, tmpRaw);
              } else {
                ensureResultingEnabledFeaturesIsMutable();
                resultingEnabledFeatures_.add(tmpRaw);
              }
              break;
            } // case 32
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag tmpValue =
                    com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  ensureResultingEnabledFeaturesIsMutable();
                  resultingEnabledFeatures_.add(tmpRaw);
                }
              }
              input.popLimit(oldLimit);
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<java.lang.Integer> attemptedEnabledFeatureFlags_ =
      java.util.Collections.emptyList();
    private void ensureAttemptedEnabledFeatureFlagsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        attemptedEnabledFeatureFlags_ = new java.util.ArrayList<java.lang.Integer>(attemptedEnabledFeatureFlags_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @return A list containing the attemptedEnabledFeatureFlags.
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getAttemptedEnabledFeatureFlagsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(attemptedEnabledFeatureFlags_, attemptedEnabledFeatureFlags_converter_);
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @return The count of attemptedEnabledFeatureFlags.
     */
    public int getAttemptedEnabledFeatureFlagsCount() {
      return attemptedEnabledFeatureFlags_.size();
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @param index The index of the element to return.
     * @return The attemptedEnabledFeatureFlags at the given index.
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getAttemptedEnabledFeatureFlags(int index) {
      return attemptedEnabledFeatureFlags_converter_.convert(attemptedEnabledFeatureFlags_.get(index));
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @param index The index to set the value at.
     * @param value The attemptedEnabledFeatureFlags to set.
     * @return This builder for chaining.
     */
    public Builder setAttemptedEnabledFeatureFlags(
        int index, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAttemptedEnabledFeatureFlagsIsMutable();
      attemptedEnabledFeatureFlags_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @param value The attemptedEnabledFeatureFlags to add.
     * @return This builder for chaining.
     */
    public Builder addAttemptedEnabledFeatureFlags(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAttemptedEnabledFeatureFlagsIsMutable();
      attemptedEnabledFeatureFlags_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @param values The attemptedEnabledFeatureFlags to add.
     * @return This builder for chaining.
     */
    public Builder addAllAttemptedEnabledFeatureFlags(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> values) {
      ensureAttemptedEnabledFeatureFlagsIsMutable();
      for (com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value : values) {
        attemptedEnabledFeatureFlags_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were enabled by default or through the server-side config.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag attempted_enabled_feature_flags = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttemptedEnabledFeatureFlags() {
      attemptedEnabledFeatureFlags_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> userOverriddenEnabledFeatures_ =
      java.util.Collections.emptyList();
    private void ensureUserOverriddenEnabledFeaturesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        userOverriddenEnabledFeatures_ = new java.util.ArrayList<java.lang.Integer>(userOverriddenEnabledFeatures_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @return A list containing the userOverriddenEnabledFeatures.
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getUserOverriddenEnabledFeaturesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(userOverriddenEnabledFeatures_, userOverriddenEnabledFeatures_converter_);
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @return The count of userOverriddenEnabledFeatures.
     */
    public int getUserOverriddenEnabledFeaturesCount() {
      return userOverriddenEnabledFeatures_.size();
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @param index The index of the element to return.
     * @return The userOverriddenEnabledFeatures at the given index.
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getUserOverriddenEnabledFeatures(int index) {
      return userOverriddenEnabledFeatures_converter_.convert(userOverriddenEnabledFeatures_.get(index));
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @param index The index to set the value at.
     * @param value The userOverriddenEnabledFeatures to set.
     * @return This builder for chaining.
     */
    public Builder setUserOverriddenEnabledFeatures(
        int index, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserOverriddenEnabledFeaturesIsMutable();
      userOverriddenEnabledFeatures_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @param value The userOverriddenEnabledFeatures to add.
     * @return This builder for chaining.
     */
    public Builder addUserOverriddenEnabledFeatures(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserOverriddenEnabledFeaturesIsMutable();
      userOverriddenEnabledFeatures_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @param values The userOverriddenEnabledFeatures to add.
     * @return This builder for chaining.
     */
    public Builder addAllUserOverriddenEnabledFeatures(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> values) {
      ensureUserOverriddenEnabledFeaturesIsMutable();
      for (com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value : values) {
        userOverriddenEnabledFeatures_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were enabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_enabled_features = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserOverriddenEnabledFeatures() {
      userOverriddenEnabledFeatures_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> userOverriddenDisabledFeatures_ =
      java.util.Collections.emptyList();
    private void ensureUserOverriddenDisabledFeaturesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        userOverriddenDisabledFeatures_ = new java.util.ArrayList<java.lang.Integer>(userOverriddenDisabledFeatures_);
        bitField0_ |= 0x00000004;
      }
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @return A list containing the userOverriddenDisabledFeatures.
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getUserOverriddenDisabledFeaturesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(userOverriddenDisabledFeatures_, userOverriddenDisabledFeatures_converter_);
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @return The count of userOverriddenDisabledFeatures.
     */
    public int getUserOverriddenDisabledFeaturesCount() {
      return userOverriddenDisabledFeatures_.size();
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @param index The index of the element to return.
     * @return The userOverriddenDisabledFeatures at the given index.
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getUserOverriddenDisabledFeatures(int index) {
      return userOverriddenDisabledFeatures_converter_.convert(userOverriddenDisabledFeatures_.get(index));
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @param index The index to set the value at.
     * @param value The userOverriddenDisabledFeatures to set.
     * @return This builder for chaining.
     */
    public Builder setUserOverriddenDisabledFeatures(
        int index, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserOverriddenDisabledFeaturesIsMutable();
      userOverriddenDisabledFeatures_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @param value The userOverriddenDisabledFeatures to add.
     * @return This builder for chaining.
     */
    public Builder addUserOverriddenDisabledFeatures(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserOverriddenDisabledFeaturesIsMutable();
      userOverriddenDisabledFeatures_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @param values The userOverriddenDisabledFeatures to add.
     * @return This builder for chaining.
     */
    public Builder addAllUserOverriddenDisabledFeatures(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> values) {
      ensureUserOverriddenDisabledFeaturesIsMutable();
      for (com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value : values) {
        userOverriddenDisabledFeatures_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features were disabled through user override.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag user_overridden_disabled_features = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserOverriddenDisabledFeatures() {
      userOverriddenDisabledFeatures_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> resultingEnabledFeatures_ =
      java.util.Collections.emptyList();
    private void ensureResultingEnabledFeaturesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        resultingEnabledFeatures_ = new java.util.ArrayList<java.lang.Integer>(resultingEnabledFeatures_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @return A list containing the resultingEnabledFeatures.
     */
    public java.util.List<com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> getResultingEnabledFeaturesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag>(resultingEnabledFeatures_, resultingEnabledFeatures_converter_);
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @return The count of resultingEnabledFeatures.
     */
    public int getResultingEnabledFeaturesCount() {
      return resultingEnabledFeatures_.size();
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @param index The index of the element to return.
     * @return The resultingEnabledFeatures at the given index.
     */
    public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag getResultingEnabledFeatures(int index) {
      return resultingEnabledFeatures_converter_.convert(resultingEnabledFeatures_.get(index));
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @param index The index to set the value at.
     * @param value The resultingEnabledFeatures to set.
     * @return This builder for chaining.
     */
    public Builder setResultingEnabledFeatures(
        int index, com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureResultingEnabledFeaturesIsMutable();
      resultingEnabledFeatures_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @param value The resultingEnabledFeatures to add.
     * @return This builder for chaining.
     */
    public Builder addResultingEnabledFeatures(com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureResultingEnabledFeaturesIsMutable();
      resultingEnabledFeatures_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @param values The resultingEnabledFeatures to add.
     * @return This builder for chaining.
     */
    public Builder addAllResultingEnabledFeatures(
        java.lang.Iterable<? extends com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag> values) {
      ensureResultingEnabledFeaturesIsMutable();
      for (com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState.EmulatorFeatureFlag value : values) {
        resultingEnabledFeatures_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which features ended up being enabled overall.
     * </pre>
     *
     * <code>repeated .android_studio.EmulatorFeatureFlagState.EmulatorFeatureFlag resulting_enabled_features = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearResultingEnabledFeatures() {
      resultingEnabledFeatures_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.EmulatorFeatureFlagState)
  }

  // @@protoc_insertion_point(class_scope:android_studio.EmulatorFeatureFlagState)
  private static final com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState();
  }

  public static com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EmulatorFeatureFlagState>
      PARSER = new com.google.protobuf.AbstractParser<EmulatorFeatureFlagState>() {
    @java.lang.Override
    public EmulatorFeatureFlagState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EmulatorFeatureFlagState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EmulatorFeatureFlagState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.EmulatorFeatureFlagState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

