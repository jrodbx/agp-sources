// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface EmulatorSnapshotUICountsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.EmulatorSnapshotUICounts)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Quickboot selection for exit behavior
   * </pre>
   *
   * <code>optional uint32 quickboot_selection_yes = 1;</code>
   * @return Whether the quickbootSelectionYes field is set.
   */
  boolean hasQuickbootSelectionYes();
  /**
   * <pre>
   * Quickboot selection for exit behavior
   * </pre>
   *
   * <code>optional uint32 quickboot_selection_yes = 1;</code>
   * @return The quickbootSelectionYes.
   */
  int getQuickbootSelectionYes();

  /**
   * <code>optional uint32 quickboot_selection_no = 2;</code>
   * @return Whether the quickbootSelectionNo field is set.
   */
  boolean hasQuickbootSelectionNo();
  /**
   * <code>optional uint32 quickboot_selection_no = 2;</code>
   * @return The quickbootSelectionNo.
   */
  int getQuickbootSelectionNo();

  /**
   * <pre>
   * Next for quickboot selection: 4
   * </pre>
   *
   * <code>optional uint32 quickboot_selection_ask = 3;</code>
   * @return Whether the quickbootSelectionAsk field is set.
   */
  boolean hasQuickbootSelectionAsk();
  /**
   * <pre>
   * Next for quickboot selection: 4
   * </pre>
   *
   * <code>optional uint32 quickboot_selection_ask = 3;</code>
   * @return The quickbootSelectionAsk.
   */
  int getQuickbootSelectionAsk();

  /**
   * <pre>
   * Ask dialog
   * </pre>
   *
   * <code>optional uint32 quickboot_ask_canceled = 10;</code>
   * @return Whether the quickbootAskCanceled field is set.
   */
  boolean hasQuickbootAskCanceled();
  /**
   * <pre>
   * Ask dialog
   * </pre>
   *
   * <code>optional uint32 quickboot_ask_canceled = 10;</code>
   * @return The quickbootAskCanceled.
   */
  int getQuickbootAskCanceled();

  /**
   * <code>optional uint32 quickboot_ask_yes = 11;</code>
   * @return Whether the quickbootAskYes field is set.
   */
  boolean hasQuickbootAskYes();
  /**
   * <code>optional uint32 quickboot_ask_yes = 11;</code>
   * @return The quickbootAskYes.
   */
  int getQuickbootAskYes();

  /**
   * <code>optional uint32 quickboot_ask_no = 12;</code>
   * @return Whether the quickbootAskNo field is set.
   */
  boolean hasQuickbootAskNo();
  /**
   * <code>optional uint32 quickboot_ask_no = 12;</code>
   * @return The quickbootAskNo.
   */
  int getQuickbootAskNo();

  /**
   * <pre>
   * Next for ask dialog: 14
   * </pre>
   *
   * <code>optional uint32 quickboot_ask_total_time_ms = 13;</code>
   * @return Whether the quickbootAskTotalTimeMs field is set.
   */
  boolean hasQuickbootAskTotalTimeMs();
  /**
   * <pre>
   * Next for ask dialog: 14
   * </pre>
   *
   * <code>optional uint32 quickboot_ask_total_time_ms = 13;</code>
   * @return The quickbootAskTotalTimeMs.
   */
  int getQuickbootAskTotalTimeMs();

  /**
   * <pre>
   * Quickboot "save now" metrics
   * </pre>
   *
   * <code>optional uint32 quickboot_save_now = 100;</code>
   * @return Whether the quickbootSaveNow field is set.
   */
  boolean hasQuickbootSaveNow();
  /**
   * <pre>
   * Quickboot "save now" metrics
   * </pre>
   *
   * <code>optional uint32 quickboot_save_now = 100;</code>
   * @return The quickbootSaveNow.
   */
  int getQuickbootSaveNow();

  /**
   * <pre>
   * Generic snapshot dialog
   * </pre>
   *
   * <code>optional uint32 generic_save = 1000;</code>
   * @return Whether the genericSave field is set.
   */
  boolean hasGenericSave();
  /**
   * <pre>
   * Generic snapshot dialog
   * </pre>
   *
   * <code>optional uint32 generic_save = 1000;</code>
   * @return The genericSave.
   */
  int getGenericSave();

  /**
   * <code>optional uint32 generic_load = 1001;</code>
   * @return Whether the genericLoad field is set.
   */
  boolean hasGenericLoad();
  /**
   * <code>optional uint32 generic_load = 1001;</code>
   * @return The genericLoad.
   */
  int getGenericLoad();

  /**
   * <code>optional uint32 generic_delete = 1002;</code>
   * @return Whether the genericDelete field is set.
   */
  boolean hasGenericDelete();
  /**
   * <code>optional uint32 generic_delete = 1002;</code>
   * @return The genericDelete.
   */
  int getGenericDelete();

  /**
   * <code>optional uint32 generic_clone = 1003;</code>
   * @return Whether the genericClone field is set.
   */
  boolean hasGenericClone();
  /**
   * <code>optional uint32 generic_clone = 1003;</code>
   * @return The genericClone.
   */
  int getGenericClone();

  /**
   * <code>optional uint32 generic_edit = 1004;</code>
   * @return Whether the genericEdit field is set.
   */
  boolean hasGenericEdit();
  /**
   * <code>optional uint32 generic_edit = 1004;</code>
   * @return The genericEdit.
   */
  int getGenericEdit();

  /**
   * <code>optional uint32 generic_edited_name = 1005;</code>
   * @return Whether the genericEditedName field is set.
   */
  boolean hasGenericEditedName();
  /**
   * <code>optional uint32 generic_edited_name = 1005;</code>
   * @return The genericEditedName.
   */
  int getGenericEditedName();

  /**
   * <code>optional uint32 generic_edited_description = 1006;</code>
   * @return Whether the genericEditedDescription field is set.
   */
  boolean hasGenericEditedDescription();
  /**
   * <code>optional uint32 generic_edited_description = 1006;</code>
   * @return The genericEditedDescription.
   */
  int getGenericEditedDescription();

  /**
   * <code>optional uint32 generic_export = 1007;</code>
   * @return Whether the genericExport field is set.
   */
  boolean hasGenericExport();
  /**
   * <code>optional uint32 generic_export = 1007;</code>
   * @return The genericExport.
   */
  int getGenericExport();

  /**
   * <code>optional uint32 generic_import = 1008;</code>
   * @return Whether the genericImport field is set.
   */
  boolean hasGenericImport();
  /**
   * <code>optional uint32 generic_import = 1008;</code>
   * @return The genericImport.
   */
  int getGenericImport();

  /**
   * <code>optional uint32 generic_flat_view = 1009;</code>
   * @return Whether the genericFlatView field is set.
   */
  boolean hasGenericFlatView();
  /**
   * <code>optional uint32 generic_flat_view = 1009;</code>
   * @return The genericFlatView.
   */
  int getGenericFlatView();

  /**
   * <code>optional uint32 generic_tree_view = 1010;</code>
   * @return Whether the genericTreeView field is set.
   */
  boolean hasGenericTreeView();
  /**
   * <code>optional uint32 generic_tree_view = 1010;</code>
   * @return The genericTreeView.
   */
  int getGenericTreeView();

  /**
   * <code>optional uint32 generic_total_time_flat_view_ms = 1011;</code>
   * @return Whether the genericTotalTimeFlatViewMs field is set.
   */
  boolean hasGenericTotalTimeFlatViewMs();
  /**
   * <code>optional uint32 generic_total_time_flat_view_ms = 1011;</code>
   * @return The genericTotalTimeFlatViewMs.
   */
  int getGenericTotalTimeFlatViewMs();

  /**
   * <code>optional uint32 generic_total_time_tree_view_ms = 1012;</code>
   * @return Whether the genericTotalTimeTreeViewMs field is set.
   */
  boolean hasGenericTotalTimeTreeViewMs();
  /**
   * <code>optional uint32 generic_total_time_tree_view_ms = 1012;</code>
   * @return The genericTotalTimeTreeViewMs.
   */
  int getGenericTotalTimeTreeViewMs();

  /**
   * <pre>
   * Next for generic snapshot dialog: 1014
   * </pre>
   *
   * <code>optional uint32 generic_total_time_ms = 1013;</code>
   * @return Whether the genericTotalTimeMs field is set.
   */
  boolean hasGenericTotalTimeMs();
  /**
   * <pre>
   * Next for generic snapshot dialog: 1014
   * </pre>
   *
   * <code>optional uint32 generic_total_time_ms = 1013;</code>
   * @return The genericTotalTimeMs.
   */
  int getGenericTotalTimeMs();
}
