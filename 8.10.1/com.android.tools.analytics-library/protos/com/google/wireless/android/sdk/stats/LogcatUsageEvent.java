// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * <pre>
 * Events raised by user interactions with Logcat tool windows
 * </pre>
 *
 * Protobuf type {@code android_studio.LogcatUsageEvent}
 */
public final class LogcatUsageEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.LogcatUsageEvent)
    LogcatUsageEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LogcatUsageEvent.newBuilder() to construct.
  private LogcatUsageEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogcatUsageEvent() {
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LogcatUsageEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.Builder.class);
  }

  /**
   * <pre>
   * The type of event
   * </pre>
   *
   * Protobuf enum {@code android_studio.LogcatUsageEvent.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default
     * </pre>
     *
     * <code>UNKNOWN_EVENT_TYPE = 0;</code>
     */
    UNKNOWN_EVENT_TYPE(0),
    /**
     * <pre>
     * Format Dialog Applied
     * </pre>
     *
     * <code>FORMAT_DIALOG = 1;</code>
     */
    FORMAT_DIALOG(1),
    /**
     * <pre>
     * We don't want to log filters on every keystroke so we only log when a
     * filter is added to history which is much less frequent.
     * </pre>
     *
     * <code>FILTER_ADDED_TO_HISTORY = 2;</code>
     */
    FILTER_ADDED_TO_HISTORY(2),
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>PANEL_ADDED = 3;</code>
     */
    PANEL_ADDED(3),
    ;

    /**
     * <pre>
     * Default
     * </pre>
     *
     * <code>UNKNOWN_EVENT_TYPE = 0;</code>
     */
    public static final int UNKNOWN_EVENT_TYPE_VALUE = 0;
    /**
     * <pre>
     * Format Dialog Applied
     * </pre>
     *
     * <code>FORMAT_DIALOG = 1;</code>
     */
    public static final int FORMAT_DIALOG_VALUE = 1;
    /**
     * <pre>
     * We don't want to log filters on every keystroke so we only log when a
     * filter is added to history which is much less frequent.
     * </pre>
     *
     * <code>FILTER_ADDED_TO_HISTORY = 2;</code>
     */
    public static final int FILTER_ADDED_TO_HISTORY_VALUE = 2;
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>PANEL_ADDED = 3;</code>
     */
    public static final int PANEL_ADDED_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EVENT_TYPE;
        case 1: return FORMAT_DIALOG;
        case 2: return FILTER_ADDED_TO_HISTORY;
        case 3: return PANEL_ADDED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.LogcatUsageEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.LogcatUsageEvent.Type)
  }

  public interface LogcatFormatDialogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.LogcatUsageEvent.LogcatFormatDialog)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Logcat format configuration the dialog represents
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
     * @return Whether the configuration field is set.
     */
    boolean hasConfiguration();
    /**
     * <pre>
     * The Logcat format configuration the dialog represents
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
     * @return The configuration.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getConfiguration();
    /**
     * <pre>
     * The Logcat format configuration the dialog represents
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getConfigurationOrBuilder();

    /**
     * <pre>
     * The state of the "set as default" checkbox
     * </pre>
     *
     * <code>optional bool is_default_preset = 2;</code>
     * @return Whether the isDefaultPreset field is set.
     */
    boolean hasIsDefaultPreset();
    /**
     * <pre>
     * The state of the "set as default" checkbox
     * </pre>
     *
     * <code>optional bool is_default_preset = 2;</code>
     * @return The isDefaultPreset.
     */
    boolean getIsDefaultPreset();

    /**
     * <pre>
     * True if the "Apply" button was used as opposed to "OK"
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 3;</code>
     * @return Whether the isApplyButtonUsed field is set.
     */
    boolean hasIsApplyButtonUsed();
    /**
     * <pre>
     * True if the "Apply" button was used as opposed to "OK"
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 3;</code>
     * @return The isApplyButtonUsed.
     */
    boolean getIsApplyButtonUsed();
  }
  /**
   * <pre>
   * The state of a Logcat format dialog when applied
   * </pre>
   *
   * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFormatDialog}
   */
  public static final class LogcatFormatDialog extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.LogcatUsageEvent.LogcatFormatDialog)
      LogcatFormatDialogOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogcatFormatDialog.newBuilder() to construct.
    private LogcatFormatDialog(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogcatFormatDialog() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogcatFormatDialog();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatDialog_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatDialog_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder.class);
    }

    private int bitField0_;
    public static final int CONFIGURATION_FIELD_NUMBER = 1;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration configuration_;
    /**
     * <pre>
     * The Logcat format configuration the dialog represents
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
     * @return Whether the configuration field is set.
     */
    @java.lang.Override
    public boolean hasConfiguration() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The Logcat format configuration the dialog represents
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
     * @return The configuration.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getConfiguration() {
      return configuration_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : configuration_;
    }
    /**
     * <pre>
     * The Logcat format configuration the dialog represents
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getConfigurationOrBuilder() {
      return configuration_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : configuration_;
    }

    public static final int IS_DEFAULT_PRESET_FIELD_NUMBER = 2;
    private boolean isDefaultPreset_ = false;
    /**
     * <pre>
     * The state of the "set as default" checkbox
     * </pre>
     *
     * <code>optional bool is_default_preset = 2;</code>
     * @return Whether the isDefaultPreset field is set.
     */
    @java.lang.Override
    public boolean hasIsDefaultPreset() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The state of the "set as default" checkbox
     * </pre>
     *
     * <code>optional bool is_default_preset = 2;</code>
     * @return The isDefaultPreset.
     */
    @java.lang.Override
    public boolean getIsDefaultPreset() {
      return isDefaultPreset_;
    }

    public static final int IS_APPLY_BUTTON_USED_FIELD_NUMBER = 3;
    private boolean isApplyButtonUsed_ = false;
    /**
     * <pre>
     * True if the "Apply" button was used as opposed to "OK"
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 3;</code>
     * @return Whether the isApplyButtonUsed field is set.
     */
    @java.lang.Override
    public boolean hasIsApplyButtonUsed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * True if the "Apply" button was used as opposed to "OK"
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 3;</code>
     * @return The isApplyButtonUsed.
     */
    @java.lang.Override
    public boolean getIsApplyButtonUsed() {
      return isApplyButtonUsed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getConfiguration());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, isDefaultPreset_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, isApplyButtonUsed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfiguration());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isDefaultPreset_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isApplyButtonUsed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog other = (com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog) obj;

      if (hasConfiguration() != other.hasConfiguration()) return false;
      if (hasConfiguration()) {
        if (!getConfiguration()
            .equals(other.getConfiguration())) return false;
      }
      if (hasIsDefaultPreset() != other.hasIsDefaultPreset()) return false;
      if (hasIsDefaultPreset()) {
        if (getIsDefaultPreset()
            != other.getIsDefaultPreset()) return false;
      }
      if (hasIsApplyButtonUsed() != other.hasIsApplyButtonUsed()) return false;
      if (hasIsApplyButtonUsed()) {
        if (getIsApplyButtonUsed()
            != other.getIsApplyButtonUsed()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfiguration()) {
        hash = (37 * hash) + CONFIGURATION_FIELD_NUMBER;
        hash = (53 * hash) + getConfiguration().hashCode();
      }
      if (hasIsDefaultPreset()) {
        hash = (37 * hash) + IS_DEFAULT_PRESET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsDefaultPreset());
      }
      if (hasIsApplyButtonUsed()) {
        hash = (37 * hash) + IS_APPLY_BUTTON_USED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsApplyButtonUsed());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The state of a Logcat format dialog when applied
     * </pre>
     *
     * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFormatDialog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.LogcatUsageEvent.LogcatFormatDialog)
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatDialog_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatDialog_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfigurationFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        configuration_ = null;
        if (configurationBuilder_ != null) {
          configurationBuilder_.dispose();
          configurationBuilder_ = null;
        }
        isDefaultPreset_ = false;
        isApplyButtonUsed_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatDialog_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog build() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog buildPartial() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog result = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.configuration_ = configurationBuilder_ == null
              ? configuration_
              : configurationBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isDefaultPreset_ = isDefaultPreset_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.isApplyButtonUsed_ = isApplyButtonUsed_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog) {
          return mergeFrom((com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog other) {
        if (other == com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance()) return this;
        if (other.hasConfiguration()) {
          mergeConfiguration(other.getConfiguration());
        }
        if (other.hasIsDefaultPreset()) {
          setIsDefaultPreset(other.getIsDefaultPreset());
        }
        if (other.hasIsApplyButtonUsed()) {
          setIsApplyButtonUsed(other.getIsApplyButtonUsed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getConfigurationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                isDefaultPreset_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                isApplyButtonUsed_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration configuration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder> configurationBuilder_;
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       * @return Whether the configuration field is set.
       */
      public boolean hasConfiguration() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       * @return The configuration.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getConfiguration() {
        if (configurationBuilder_ == null) {
          return configuration_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : configuration_;
        } else {
          return configurationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      public Builder setConfiguration(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration value) {
        if (configurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          configuration_ = value;
        } else {
          configurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      public Builder setConfiguration(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder builderForValue) {
        if (configurationBuilder_ == null) {
          configuration_ = builderForValue.build();
        } else {
          configurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      public Builder mergeConfiguration(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration value) {
        if (configurationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            configuration_ != null &&
            configuration_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance()) {
            getConfigurationBuilder().mergeFrom(value);
          } else {
            configuration_ = value;
          }
        } else {
          configurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      public Builder clearConfiguration() {
        bitField0_ = (bitField0_ & ~0x00000001);
        configuration_ = null;
        if (configurationBuilder_ != null) {
          configurationBuilder_.dispose();
          configurationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder getConfigurationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getConfigurationOrBuilder() {
        if (configurationBuilder_ != null) {
          return configurationBuilder_.getMessageOrBuilder();
        } else {
          return configuration_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : configuration_;
        }
      }
      /**
       * <pre>
       * The Logcat format configuration the dialog represents
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration configuration = 1 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder> 
          getConfigurationFieldBuilder() {
        if (configurationBuilder_ == null) {
          configurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder>(
                  getConfiguration(),
                  getParentForChildren(),
                  isClean());
          configuration_ = null;
        }
        return configurationBuilder_;
      }

      private boolean isDefaultPreset_ ;
      /**
       * <pre>
       * The state of the "set as default" checkbox
       * </pre>
       *
       * <code>optional bool is_default_preset = 2;</code>
       * @return Whether the isDefaultPreset field is set.
       */
      @java.lang.Override
      public boolean hasIsDefaultPreset() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The state of the "set as default" checkbox
       * </pre>
       *
       * <code>optional bool is_default_preset = 2;</code>
       * @return The isDefaultPreset.
       */
      @java.lang.Override
      public boolean getIsDefaultPreset() {
        return isDefaultPreset_;
      }
      /**
       * <pre>
       * The state of the "set as default" checkbox
       * </pre>
       *
       * <code>optional bool is_default_preset = 2;</code>
       * @param value The isDefaultPreset to set.
       * @return This builder for chaining.
       */
      public Builder setIsDefaultPreset(boolean value) {

        isDefaultPreset_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The state of the "set as default" checkbox
       * </pre>
       *
       * <code>optional bool is_default_preset = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDefaultPreset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isDefaultPreset_ = false;
        onChanged();
        return this;
      }

      private boolean isApplyButtonUsed_ ;
      /**
       * <pre>
       * True if the "Apply" button was used as opposed to "OK"
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 3;</code>
       * @return Whether the isApplyButtonUsed field is set.
       */
      @java.lang.Override
      public boolean hasIsApplyButtonUsed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * True if the "Apply" button was used as opposed to "OK"
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 3;</code>
       * @return The isApplyButtonUsed.
       */
      @java.lang.Override
      public boolean getIsApplyButtonUsed() {
        return isApplyButtonUsed_;
      }
      /**
       * <pre>
       * True if the "Apply" button was used as opposed to "OK"
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 3;</code>
       * @param value The isApplyButtonUsed to set.
       * @return This builder for chaining.
       */
      public Builder setIsApplyButtonUsed(boolean value) {

        isApplyButtonUsed_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True if the "Apply" button was used as opposed to "OK"
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsApplyButtonUsed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isApplyButtonUsed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.LogcatUsageEvent.LogcatFormatDialog)
    }

    // @@protoc_insertion_point(class_scope:android_studio.LogcatUsageEvent.LogcatFormatDialog)
    private static final com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog();
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogcatFormatDialog>
        PARSER = new com.google.protobuf.AbstractParser<LogcatFormatDialog>() {
      @java.lang.Override
      public LogcatFormatDialog parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogcatFormatDialog> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogcatFormatDialog> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogcatFormatConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.LogcatUsageEvent.LogcatFormatConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Show timestamp field
     * </pre>
     *
     * <code>optional bool is_show_timestamp = 1;</code>
     * @return Whether the isShowTimestamp field is set.
     */
    boolean hasIsShowTimestamp();
    /**
     * <pre>
     * Show timestamp field
     * </pre>
     *
     * <code>optional bool is_show_timestamp = 1;</code>
     * @return The isShowTimestamp.
     */
    boolean getIsShowTimestamp();

    /**
     * <pre>
     * Timestamp format includes the date
     * </pre>
     *
     * <code>optional bool is_show_date = 2;</code>
     * @return Whether the isShowDate field is set.
     */
    boolean hasIsShowDate();
    /**
     * <pre>
     * Timestamp format includes the date
     * </pre>
     *
     * <code>optional bool is_show_date = 2;</code>
     * @return The isShowDate.
     */
    boolean getIsShowDate();

    /**
     * <pre>
     * Show the process id field
     * </pre>
     *
     * <code>optional bool is_show_process_id = 3;</code>
     * @return Whether the isShowProcessId field is set.
     */
    boolean hasIsShowProcessId();
    /**
     * <pre>
     * Show the process id field
     * </pre>
     *
     * <code>optional bool is_show_process_id = 3;</code>
     * @return The isShowProcessId.
     */
    boolean getIsShowProcessId();

    /**
     * <pre>
     * Show the thread id field
     * </pre>
     *
     * <code>optional bool is_show_thread_id = 4;</code>
     * @return Whether the isShowThreadId field is set.
     */
    boolean hasIsShowThreadId();
    /**
     * <pre>
     * Show the thread id field
     * </pre>
     *
     * <code>optional bool is_show_thread_id = 4;</code>
     * @return The isShowThreadId.
     */
    boolean getIsShowThreadId();

    /**
     * <pre>
     * Show the tag field
     * </pre>
     *
     * <code>optional bool is_show_tags = 5;</code>
     * @return Whether the isShowTags field is set.
     */
    boolean hasIsShowTags();
    /**
     * <pre>
     * Show the tag field
     * </pre>
     *
     * <code>optional bool is_show_tags = 5;</code>
     * @return The isShowTags.
     */
    boolean getIsShowTags();

    /**
     * <pre>
     * Show repeated tags
     * </pre>
     *
     * <code>optional bool is_show_repeated_tags = 6;</code>
     * @return Whether the isShowRepeatedTags field is set.
     */
    boolean hasIsShowRepeatedTags();
    /**
     * <pre>
     * Show repeated tags
     * </pre>
     *
     * <code>optional bool is_show_repeated_tags = 6;</code>
     * @return The isShowRepeatedTags.
     */
    boolean getIsShowRepeatedTags();

    /**
     * <pre>
     * The width of the tag field
     * </pre>
     *
     * <code>optional int32 tag_width = 7;</code>
     * @return Whether the tagWidth field is set.
     */
    boolean hasTagWidth();
    /**
     * <pre>
     * The width of the tag field
     * </pre>
     *
     * <code>optional int32 tag_width = 7;</code>
     * @return The tagWidth.
     */
    int getTagWidth();

    /**
     * <pre>
     * Show the package field
     * </pre>
     *
     * <code>optional bool is_show_packages = 8;</code>
     * @return Whether the isShowPackages field is set.
     */
    boolean hasIsShowPackages();
    /**
     * <pre>
     * Show the package field
     * </pre>
     *
     * <code>optional bool is_show_packages = 8;</code>
     * @return The isShowPackages.
     */
    boolean getIsShowPackages();

    /**
     * <pre>
     * Show repeated packages
     * </pre>
     *
     * <code>optional bool is_show_repeated_packages = 9;</code>
     * @return Whether the isShowRepeatedPackages field is set.
     */
    boolean hasIsShowRepeatedPackages();
    /**
     * <pre>
     * Show repeated packages
     * </pre>
     *
     * <code>optional bool is_show_repeated_packages = 9;</code>
     * @return The isShowRepeatedPackages.
     */
    boolean getIsShowRepeatedPackages();

    /**
     * <pre>
     * The width of the package field
     * </pre>
     *
     * <code>optional int32 package_width = 10;</code>
     * @return Whether the packageWidth field is set.
     */
    boolean hasPackageWidth();
    /**
     * <pre>
     * The width of the package field
     * </pre>
     *
     * <code>optional int32 package_width = 10;</code>
     * @return The packageWidth.
     */
    int getPackageWidth();

    /**
     * <pre>
     * The preset configuration if applicable
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
     * @return Whether the preset field is set.
     */
    boolean hasPreset();
    /**
     * <pre>
     * The preset configuration if applicable
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
     * @return The preset.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset getPreset();

    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
     *     See studio_stats.proto;l=13709
     * @return Whether the isDefaultPreset field is set.
     */
    @java.lang.Deprecated boolean hasIsDefaultPreset();
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
     *     See studio_stats.proto;l=13709
     * @return The isDefaultPreset.
     */
    @java.lang.Deprecated boolean getIsDefaultPreset();

    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
     *     See studio_stats.proto;l=13712
     * @return Whether the isApplyButtonUsed field is set.
     */
    @java.lang.Deprecated boolean hasIsApplyButtonUsed();
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
     *     See studio_stats.proto;l=13712
     * @return The isApplyButtonUsed.
     */
    @java.lang.Deprecated boolean getIsApplyButtonUsed();
  }
  /**
   * <pre>
   * The state of a Logcat Format Dialog
   * </pre>
   *
   * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFormatConfiguration}
   */
  public static final class LogcatFormatConfiguration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.LogcatUsageEvent.LogcatFormatConfiguration)
      LogcatFormatConfigurationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogcatFormatConfiguration.newBuilder() to construct.
    private LogcatFormatConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogcatFormatConfiguration() {
      preset_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogcatFormatConfiguration();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder.class);
    }

    /**
     * <pre>
     * Logcat Format presets
     * </pre>
     *
     * Protobuf enum {@code android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset}
     */
    public enum Preset
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Default
       * </pre>
       *
       * <code>UNKNOWN_PRESET = 0;</code>
       */
      UNKNOWN_PRESET(0),
      /**
       * <pre>
       * The standard format
       * </pre>
       *
       * <code>STANDARD = 1;</code>
       */
      STANDARD(1),
      /**
       * <pre>
       * The compact format
       * </pre>
       *
       * <code>COMPACT = 2;</code>
       */
      COMPACT(2),
      ;

      /**
       * <pre>
       * Default
       * </pre>
       *
       * <code>UNKNOWN_PRESET = 0;</code>
       */
      public static final int UNKNOWN_PRESET_VALUE = 0;
      /**
       * <pre>
       * The standard format
       * </pre>
       *
       * <code>STANDARD = 1;</code>
       */
      public static final int STANDARD_VALUE = 1;
      /**
       * <pre>
       * The compact format
       * </pre>
       *
       * <code>COMPACT = 2;</code>
       */
      public static final int COMPACT_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Preset valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Preset forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_PRESET;
          case 1: return STANDARD;
          case 2: return COMPACT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Preset>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Preset> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Preset>() {
              public Preset findValueByNumber(int number) {
                return Preset.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDescriptor().getEnumTypes().get(0);
      }

      private static final Preset[] VALUES = values();

      public static Preset valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Preset(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset)
    }

    private int bitField0_;
    public static final int IS_SHOW_TIMESTAMP_FIELD_NUMBER = 1;
    private boolean isShowTimestamp_ = false;
    /**
     * <pre>
     * Show timestamp field
     * </pre>
     *
     * <code>optional bool is_show_timestamp = 1;</code>
     * @return Whether the isShowTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasIsShowTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Show timestamp field
     * </pre>
     *
     * <code>optional bool is_show_timestamp = 1;</code>
     * @return The isShowTimestamp.
     */
    @java.lang.Override
    public boolean getIsShowTimestamp() {
      return isShowTimestamp_;
    }

    public static final int IS_SHOW_DATE_FIELD_NUMBER = 2;
    private boolean isShowDate_ = false;
    /**
     * <pre>
     * Timestamp format includes the date
     * </pre>
     *
     * <code>optional bool is_show_date = 2;</code>
     * @return Whether the isShowDate field is set.
     */
    @java.lang.Override
    public boolean hasIsShowDate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Timestamp format includes the date
     * </pre>
     *
     * <code>optional bool is_show_date = 2;</code>
     * @return The isShowDate.
     */
    @java.lang.Override
    public boolean getIsShowDate() {
      return isShowDate_;
    }

    public static final int IS_SHOW_PROCESS_ID_FIELD_NUMBER = 3;
    private boolean isShowProcessId_ = false;
    /**
     * <pre>
     * Show the process id field
     * </pre>
     *
     * <code>optional bool is_show_process_id = 3;</code>
     * @return Whether the isShowProcessId field is set.
     */
    @java.lang.Override
    public boolean hasIsShowProcessId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Show the process id field
     * </pre>
     *
     * <code>optional bool is_show_process_id = 3;</code>
     * @return The isShowProcessId.
     */
    @java.lang.Override
    public boolean getIsShowProcessId() {
      return isShowProcessId_;
    }

    public static final int IS_SHOW_THREAD_ID_FIELD_NUMBER = 4;
    private boolean isShowThreadId_ = false;
    /**
     * <pre>
     * Show the thread id field
     * </pre>
     *
     * <code>optional bool is_show_thread_id = 4;</code>
     * @return Whether the isShowThreadId field is set.
     */
    @java.lang.Override
    public boolean hasIsShowThreadId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Show the thread id field
     * </pre>
     *
     * <code>optional bool is_show_thread_id = 4;</code>
     * @return The isShowThreadId.
     */
    @java.lang.Override
    public boolean getIsShowThreadId() {
      return isShowThreadId_;
    }

    public static final int IS_SHOW_TAGS_FIELD_NUMBER = 5;
    private boolean isShowTags_ = false;
    /**
     * <pre>
     * Show the tag field
     * </pre>
     *
     * <code>optional bool is_show_tags = 5;</code>
     * @return Whether the isShowTags field is set.
     */
    @java.lang.Override
    public boolean hasIsShowTags() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Show the tag field
     * </pre>
     *
     * <code>optional bool is_show_tags = 5;</code>
     * @return The isShowTags.
     */
    @java.lang.Override
    public boolean getIsShowTags() {
      return isShowTags_;
    }

    public static final int IS_SHOW_REPEATED_TAGS_FIELD_NUMBER = 6;
    private boolean isShowRepeatedTags_ = false;
    /**
     * <pre>
     * Show repeated tags
     * </pre>
     *
     * <code>optional bool is_show_repeated_tags = 6;</code>
     * @return Whether the isShowRepeatedTags field is set.
     */
    @java.lang.Override
    public boolean hasIsShowRepeatedTags() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Show repeated tags
     * </pre>
     *
     * <code>optional bool is_show_repeated_tags = 6;</code>
     * @return The isShowRepeatedTags.
     */
    @java.lang.Override
    public boolean getIsShowRepeatedTags() {
      return isShowRepeatedTags_;
    }

    public static final int TAG_WIDTH_FIELD_NUMBER = 7;
    private int tagWidth_ = 0;
    /**
     * <pre>
     * The width of the tag field
     * </pre>
     *
     * <code>optional int32 tag_width = 7;</code>
     * @return Whether the tagWidth field is set.
     */
    @java.lang.Override
    public boolean hasTagWidth() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The width of the tag field
     * </pre>
     *
     * <code>optional int32 tag_width = 7;</code>
     * @return The tagWidth.
     */
    @java.lang.Override
    public int getTagWidth() {
      return tagWidth_;
    }

    public static final int IS_SHOW_PACKAGES_FIELD_NUMBER = 8;
    private boolean isShowPackages_ = false;
    /**
     * <pre>
     * Show the package field
     * </pre>
     *
     * <code>optional bool is_show_packages = 8;</code>
     * @return Whether the isShowPackages field is set.
     */
    @java.lang.Override
    public boolean hasIsShowPackages() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Show the package field
     * </pre>
     *
     * <code>optional bool is_show_packages = 8;</code>
     * @return The isShowPackages.
     */
    @java.lang.Override
    public boolean getIsShowPackages() {
      return isShowPackages_;
    }

    public static final int IS_SHOW_REPEATED_PACKAGES_FIELD_NUMBER = 9;
    private boolean isShowRepeatedPackages_ = false;
    /**
     * <pre>
     * Show repeated packages
     * </pre>
     *
     * <code>optional bool is_show_repeated_packages = 9;</code>
     * @return Whether the isShowRepeatedPackages field is set.
     */
    @java.lang.Override
    public boolean hasIsShowRepeatedPackages() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Show repeated packages
     * </pre>
     *
     * <code>optional bool is_show_repeated_packages = 9;</code>
     * @return The isShowRepeatedPackages.
     */
    @java.lang.Override
    public boolean getIsShowRepeatedPackages() {
      return isShowRepeatedPackages_;
    }

    public static final int PACKAGE_WIDTH_FIELD_NUMBER = 10;
    private int packageWidth_ = 0;
    /**
     * <pre>
     * The width of the package field
     * </pre>
     *
     * <code>optional int32 package_width = 10;</code>
     * @return Whether the packageWidth field is set.
     */
    @java.lang.Override
    public boolean hasPackageWidth() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The width of the package field
     * </pre>
     *
     * <code>optional int32 package_width = 10;</code>
     * @return The packageWidth.
     */
    @java.lang.Override
    public int getPackageWidth() {
      return packageWidth_;
    }

    public static final int PRESET_FIELD_NUMBER = 11;
    private int preset_ = 0;
    /**
     * <pre>
     * The preset configuration if applicable
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
     * @return Whether the preset field is set.
     */
    @java.lang.Override public boolean hasPreset() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The preset configuration if applicable
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
     * @return The preset.
     */
    @java.lang.Override public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset getPreset() {
      com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset result = com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset.forNumber(preset_);
      return result == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset.UNKNOWN_PRESET : result;
    }

    public static final int IS_DEFAULT_PRESET_FIELD_NUMBER = 12;
    private boolean isDefaultPreset_ = false;
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
     *     See studio_stats.proto;l=13709
     * @return Whether the isDefaultPreset field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasIsDefaultPreset() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
     *     See studio_stats.proto;l=13709
     * @return The isDefaultPreset.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getIsDefaultPreset() {
      return isDefaultPreset_;
    }

    public static final int IS_APPLY_BUTTON_USED_FIELD_NUMBER = 13;
    private boolean isApplyButtonUsed_ = false;
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
     *     See studio_stats.proto;l=13712
     * @return Whether the isApplyButtonUsed field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasIsApplyButtonUsed() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
     *     See studio_stats.proto;l=13712
     * @return The isApplyButtonUsed.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getIsApplyButtonUsed() {
      return isApplyButtonUsed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, isShowTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, isShowDate_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, isShowProcessId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, isShowThreadId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(5, isShowTags_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(6, isShowRepeatedTags_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, tagWidth_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeBool(8, isShowPackages_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(9, isShowRepeatedPackages_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, packageWidth_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeEnum(11, preset_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(12, isDefaultPreset_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeBool(13, isApplyButtonUsed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isShowTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isShowDate_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isShowProcessId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isShowThreadId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isShowTags_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isShowRepeatedTags_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tagWidth_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isShowPackages_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isShowRepeatedPackages_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, packageWidth_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, preset_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isDefaultPreset_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isApplyButtonUsed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration other = (com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration) obj;

      if (hasIsShowTimestamp() != other.hasIsShowTimestamp()) return false;
      if (hasIsShowTimestamp()) {
        if (getIsShowTimestamp()
            != other.getIsShowTimestamp()) return false;
      }
      if (hasIsShowDate() != other.hasIsShowDate()) return false;
      if (hasIsShowDate()) {
        if (getIsShowDate()
            != other.getIsShowDate()) return false;
      }
      if (hasIsShowProcessId() != other.hasIsShowProcessId()) return false;
      if (hasIsShowProcessId()) {
        if (getIsShowProcessId()
            != other.getIsShowProcessId()) return false;
      }
      if (hasIsShowThreadId() != other.hasIsShowThreadId()) return false;
      if (hasIsShowThreadId()) {
        if (getIsShowThreadId()
            != other.getIsShowThreadId()) return false;
      }
      if (hasIsShowTags() != other.hasIsShowTags()) return false;
      if (hasIsShowTags()) {
        if (getIsShowTags()
            != other.getIsShowTags()) return false;
      }
      if (hasIsShowRepeatedTags() != other.hasIsShowRepeatedTags()) return false;
      if (hasIsShowRepeatedTags()) {
        if (getIsShowRepeatedTags()
            != other.getIsShowRepeatedTags()) return false;
      }
      if (hasTagWidth() != other.hasTagWidth()) return false;
      if (hasTagWidth()) {
        if (getTagWidth()
            != other.getTagWidth()) return false;
      }
      if (hasIsShowPackages() != other.hasIsShowPackages()) return false;
      if (hasIsShowPackages()) {
        if (getIsShowPackages()
            != other.getIsShowPackages()) return false;
      }
      if (hasIsShowRepeatedPackages() != other.hasIsShowRepeatedPackages()) return false;
      if (hasIsShowRepeatedPackages()) {
        if (getIsShowRepeatedPackages()
            != other.getIsShowRepeatedPackages()) return false;
      }
      if (hasPackageWidth() != other.hasPackageWidth()) return false;
      if (hasPackageWidth()) {
        if (getPackageWidth()
            != other.getPackageWidth()) return false;
      }
      if (hasPreset() != other.hasPreset()) return false;
      if (hasPreset()) {
        if (preset_ != other.preset_) return false;
      }
      if (hasIsDefaultPreset() != other.hasIsDefaultPreset()) return false;
      if (hasIsDefaultPreset()) {
        if (getIsDefaultPreset()
            != other.getIsDefaultPreset()) return false;
      }
      if (hasIsApplyButtonUsed() != other.hasIsApplyButtonUsed()) return false;
      if (hasIsApplyButtonUsed()) {
        if (getIsApplyButtonUsed()
            != other.getIsApplyButtonUsed()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIsShowTimestamp()) {
        hash = (37 * hash) + IS_SHOW_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowTimestamp());
      }
      if (hasIsShowDate()) {
        hash = (37 * hash) + IS_SHOW_DATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowDate());
      }
      if (hasIsShowProcessId()) {
        hash = (37 * hash) + IS_SHOW_PROCESS_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowProcessId());
      }
      if (hasIsShowThreadId()) {
        hash = (37 * hash) + IS_SHOW_THREAD_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowThreadId());
      }
      if (hasIsShowTags()) {
        hash = (37 * hash) + IS_SHOW_TAGS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowTags());
      }
      if (hasIsShowRepeatedTags()) {
        hash = (37 * hash) + IS_SHOW_REPEATED_TAGS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowRepeatedTags());
      }
      if (hasTagWidth()) {
        hash = (37 * hash) + TAG_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getTagWidth();
      }
      if (hasIsShowPackages()) {
        hash = (37 * hash) + IS_SHOW_PACKAGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowPackages());
      }
      if (hasIsShowRepeatedPackages()) {
        hash = (37 * hash) + IS_SHOW_REPEATED_PACKAGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsShowRepeatedPackages());
      }
      if (hasPackageWidth()) {
        hash = (37 * hash) + PACKAGE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getPackageWidth();
      }
      if (hasPreset()) {
        hash = (37 * hash) + PRESET_FIELD_NUMBER;
        hash = (53 * hash) + preset_;
      }
      if (hasIsDefaultPreset()) {
        hash = (37 * hash) + IS_DEFAULT_PRESET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsDefaultPreset());
      }
      if (hasIsApplyButtonUsed()) {
        hash = (37 * hash) + IS_APPLY_BUTTON_USED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsApplyButtonUsed());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The state of a Logcat Format Dialog
     * </pre>
     *
     * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFormatConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.LogcatUsageEvent.LogcatFormatConfiguration)
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatConfiguration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        isShowTimestamp_ = false;
        isShowDate_ = false;
        isShowProcessId_ = false;
        isShowThreadId_ = false;
        isShowTags_ = false;
        isShowRepeatedTags_ = false;
        tagWidth_ = 0;
        isShowPackages_ = false;
        isShowRepeatedPackages_ = false;
        packageWidth_ = 0;
        preset_ = 0;
        isDefaultPreset_ = false;
        isApplyButtonUsed_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFormatConfiguration_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration build() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration buildPartial() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration result = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.isShowTimestamp_ = isShowTimestamp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isShowDate_ = isShowDate_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.isShowProcessId_ = isShowProcessId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.isShowThreadId_ = isShowThreadId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.isShowTags_ = isShowTags_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.isShowRepeatedTags_ = isShowRepeatedTags_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.tagWidth_ = tagWidth_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.isShowPackages_ = isShowPackages_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.isShowRepeatedPackages_ = isShowRepeatedPackages_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.packageWidth_ = packageWidth_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.preset_ = preset_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.isDefaultPreset_ = isDefaultPreset_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.isApplyButtonUsed_ = isApplyButtonUsed_;
          to_bitField0_ |= 0x00001000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration) {
          return mergeFrom((com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration other) {
        if (other == com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance()) return this;
        if (other.hasIsShowTimestamp()) {
          setIsShowTimestamp(other.getIsShowTimestamp());
        }
        if (other.hasIsShowDate()) {
          setIsShowDate(other.getIsShowDate());
        }
        if (other.hasIsShowProcessId()) {
          setIsShowProcessId(other.getIsShowProcessId());
        }
        if (other.hasIsShowThreadId()) {
          setIsShowThreadId(other.getIsShowThreadId());
        }
        if (other.hasIsShowTags()) {
          setIsShowTags(other.getIsShowTags());
        }
        if (other.hasIsShowRepeatedTags()) {
          setIsShowRepeatedTags(other.getIsShowRepeatedTags());
        }
        if (other.hasTagWidth()) {
          setTagWidth(other.getTagWidth());
        }
        if (other.hasIsShowPackages()) {
          setIsShowPackages(other.getIsShowPackages());
        }
        if (other.hasIsShowRepeatedPackages()) {
          setIsShowRepeatedPackages(other.getIsShowRepeatedPackages());
        }
        if (other.hasPackageWidth()) {
          setPackageWidth(other.getPackageWidth());
        }
        if (other.hasPreset()) {
          setPreset(other.getPreset());
        }
        if (other.hasIsDefaultPreset()) {
          setIsDefaultPreset(other.getIsDefaultPreset());
        }
        if (other.hasIsApplyButtonUsed()) {
          setIsApplyButtonUsed(other.getIsApplyButtonUsed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                isShowTimestamp_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                isShowDate_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                isShowProcessId_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                isShowThreadId_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                isShowTags_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                isShowRepeatedTags_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                tagWidth_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                isShowPackages_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                isShowRepeatedPackages_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                packageWidth_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                int tmpRaw = input.readEnum();
                com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset tmpValue =
                    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(11, tmpRaw);
                } else {
                  preset_ = tmpRaw;
                  bitField0_ |= 0x00000400;
                }
                break;
              } // case 88
              case 96: {
                isDefaultPreset_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                isApplyButtonUsed_ = input.readBool();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean isShowTimestamp_ ;
      /**
       * <pre>
       * Show timestamp field
       * </pre>
       *
       * <code>optional bool is_show_timestamp = 1;</code>
       * @return Whether the isShowTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasIsShowTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Show timestamp field
       * </pre>
       *
       * <code>optional bool is_show_timestamp = 1;</code>
       * @return The isShowTimestamp.
       */
      @java.lang.Override
      public boolean getIsShowTimestamp() {
        return isShowTimestamp_;
      }
      /**
       * <pre>
       * Show timestamp field
       * </pre>
       *
       * <code>optional bool is_show_timestamp = 1;</code>
       * @param value The isShowTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowTimestamp(boolean value) {

        isShowTimestamp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show timestamp field
       * </pre>
       *
       * <code>optional bool is_show_timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isShowTimestamp_ = false;
        onChanged();
        return this;
      }

      private boolean isShowDate_ ;
      /**
       * <pre>
       * Timestamp format includes the date
       * </pre>
       *
       * <code>optional bool is_show_date = 2;</code>
       * @return Whether the isShowDate field is set.
       */
      @java.lang.Override
      public boolean hasIsShowDate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Timestamp format includes the date
       * </pre>
       *
       * <code>optional bool is_show_date = 2;</code>
       * @return The isShowDate.
       */
      @java.lang.Override
      public boolean getIsShowDate() {
        return isShowDate_;
      }
      /**
       * <pre>
       * Timestamp format includes the date
       * </pre>
       *
       * <code>optional bool is_show_date = 2;</code>
       * @param value The isShowDate to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowDate(boolean value) {

        isShowDate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp format includes the date
       * </pre>
       *
       * <code>optional bool is_show_date = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isShowDate_ = false;
        onChanged();
        return this;
      }

      private boolean isShowProcessId_ ;
      /**
       * <pre>
       * Show the process id field
       * </pre>
       *
       * <code>optional bool is_show_process_id = 3;</code>
       * @return Whether the isShowProcessId field is set.
       */
      @java.lang.Override
      public boolean hasIsShowProcessId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Show the process id field
       * </pre>
       *
       * <code>optional bool is_show_process_id = 3;</code>
       * @return The isShowProcessId.
       */
      @java.lang.Override
      public boolean getIsShowProcessId() {
        return isShowProcessId_;
      }
      /**
       * <pre>
       * Show the process id field
       * </pre>
       *
       * <code>optional bool is_show_process_id = 3;</code>
       * @param value The isShowProcessId to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowProcessId(boolean value) {

        isShowProcessId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show the process id field
       * </pre>
       *
       * <code>optional bool is_show_process_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowProcessId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isShowProcessId_ = false;
        onChanged();
        return this;
      }

      private boolean isShowThreadId_ ;
      /**
       * <pre>
       * Show the thread id field
       * </pre>
       *
       * <code>optional bool is_show_thread_id = 4;</code>
       * @return Whether the isShowThreadId field is set.
       */
      @java.lang.Override
      public boolean hasIsShowThreadId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Show the thread id field
       * </pre>
       *
       * <code>optional bool is_show_thread_id = 4;</code>
       * @return The isShowThreadId.
       */
      @java.lang.Override
      public boolean getIsShowThreadId() {
        return isShowThreadId_;
      }
      /**
       * <pre>
       * Show the thread id field
       * </pre>
       *
       * <code>optional bool is_show_thread_id = 4;</code>
       * @param value The isShowThreadId to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowThreadId(boolean value) {

        isShowThreadId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show the thread id field
       * </pre>
       *
       * <code>optional bool is_show_thread_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowThreadId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isShowThreadId_ = false;
        onChanged();
        return this;
      }

      private boolean isShowTags_ ;
      /**
       * <pre>
       * Show the tag field
       * </pre>
       *
       * <code>optional bool is_show_tags = 5;</code>
       * @return Whether the isShowTags field is set.
       */
      @java.lang.Override
      public boolean hasIsShowTags() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Show the tag field
       * </pre>
       *
       * <code>optional bool is_show_tags = 5;</code>
       * @return The isShowTags.
       */
      @java.lang.Override
      public boolean getIsShowTags() {
        return isShowTags_;
      }
      /**
       * <pre>
       * Show the tag field
       * </pre>
       *
       * <code>optional bool is_show_tags = 5;</code>
       * @param value The isShowTags to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowTags(boolean value) {

        isShowTags_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show the tag field
       * </pre>
       *
       * <code>optional bool is_show_tags = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowTags() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isShowTags_ = false;
        onChanged();
        return this;
      }

      private boolean isShowRepeatedTags_ ;
      /**
       * <pre>
       * Show repeated tags
       * </pre>
       *
       * <code>optional bool is_show_repeated_tags = 6;</code>
       * @return Whether the isShowRepeatedTags field is set.
       */
      @java.lang.Override
      public boolean hasIsShowRepeatedTags() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Show repeated tags
       * </pre>
       *
       * <code>optional bool is_show_repeated_tags = 6;</code>
       * @return The isShowRepeatedTags.
       */
      @java.lang.Override
      public boolean getIsShowRepeatedTags() {
        return isShowRepeatedTags_;
      }
      /**
       * <pre>
       * Show repeated tags
       * </pre>
       *
       * <code>optional bool is_show_repeated_tags = 6;</code>
       * @param value The isShowRepeatedTags to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowRepeatedTags(boolean value) {

        isShowRepeatedTags_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show repeated tags
       * </pre>
       *
       * <code>optional bool is_show_repeated_tags = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowRepeatedTags() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isShowRepeatedTags_ = false;
        onChanged();
        return this;
      }

      private int tagWidth_ ;
      /**
       * <pre>
       * The width of the tag field
       * </pre>
       *
       * <code>optional int32 tag_width = 7;</code>
       * @return Whether the tagWidth field is set.
       */
      @java.lang.Override
      public boolean hasTagWidth() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The width of the tag field
       * </pre>
       *
       * <code>optional int32 tag_width = 7;</code>
       * @return The tagWidth.
       */
      @java.lang.Override
      public int getTagWidth() {
        return tagWidth_;
      }
      /**
       * <pre>
       * The width of the tag field
       * </pre>
       *
       * <code>optional int32 tag_width = 7;</code>
       * @param value The tagWidth to set.
       * @return This builder for chaining.
       */
      public Builder setTagWidth(int value) {

        tagWidth_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The width of the tag field
       * </pre>
       *
       * <code>optional int32 tag_width = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTagWidth() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tagWidth_ = 0;
        onChanged();
        return this;
      }

      private boolean isShowPackages_ ;
      /**
       * <pre>
       * Show the package field
       * </pre>
       *
       * <code>optional bool is_show_packages = 8;</code>
       * @return Whether the isShowPackages field is set.
       */
      @java.lang.Override
      public boolean hasIsShowPackages() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Show the package field
       * </pre>
       *
       * <code>optional bool is_show_packages = 8;</code>
       * @return The isShowPackages.
       */
      @java.lang.Override
      public boolean getIsShowPackages() {
        return isShowPackages_;
      }
      /**
       * <pre>
       * Show the package field
       * </pre>
       *
       * <code>optional bool is_show_packages = 8;</code>
       * @param value The isShowPackages to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowPackages(boolean value) {

        isShowPackages_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show the package field
       * </pre>
       *
       * <code>optional bool is_show_packages = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowPackages() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isShowPackages_ = false;
        onChanged();
        return this;
      }

      private boolean isShowRepeatedPackages_ ;
      /**
       * <pre>
       * Show repeated packages
       * </pre>
       *
       * <code>optional bool is_show_repeated_packages = 9;</code>
       * @return Whether the isShowRepeatedPackages field is set.
       */
      @java.lang.Override
      public boolean hasIsShowRepeatedPackages() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Show repeated packages
       * </pre>
       *
       * <code>optional bool is_show_repeated_packages = 9;</code>
       * @return The isShowRepeatedPackages.
       */
      @java.lang.Override
      public boolean getIsShowRepeatedPackages() {
        return isShowRepeatedPackages_;
      }
      /**
       * <pre>
       * Show repeated packages
       * </pre>
       *
       * <code>optional bool is_show_repeated_packages = 9;</code>
       * @param value The isShowRepeatedPackages to set.
       * @return This builder for chaining.
       */
      public Builder setIsShowRepeatedPackages(boolean value) {

        isShowRepeatedPackages_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Show repeated packages
       * </pre>
       *
       * <code>optional bool is_show_repeated_packages = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsShowRepeatedPackages() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isShowRepeatedPackages_ = false;
        onChanged();
        return this;
      }

      private int packageWidth_ ;
      /**
       * <pre>
       * The width of the package field
       * </pre>
       *
       * <code>optional int32 package_width = 10;</code>
       * @return Whether the packageWidth field is set.
       */
      @java.lang.Override
      public boolean hasPackageWidth() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * The width of the package field
       * </pre>
       *
       * <code>optional int32 package_width = 10;</code>
       * @return The packageWidth.
       */
      @java.lang.Override
      public int getPackageWidth() {
        return packageWidth_;
      }
      /**
       * <pre>
       * The width of the package field
       * </pre>
       *
       * <code>optional int32 package_width = 10;</code>
       * @param value The packageWidth to set.
       * @return This builder for chaining.
       */
      public Builder setPackageWidth(int value) {

        packageWidth_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The width of the package field
       * </pre>
       *
       * <code>optional int32 package_width = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPackageWidth() {
        bitField0_ = (bitField0_ & ~0x00000200);
        packageWidth_ = 0;
        onChanged();
        return this;
      }

      private int preset_ = 0;
      /**
       * <pre>
       * The preset configuration if applicable
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
       * @return Whether the preset field is set.
       */
      @java.lang.Override public boolean hasPreset() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The preset configuration if applicable
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
       * @return The preset.
       */
      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset getPreset() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset result = com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset.forNumber(preset_);
        return result == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset.UNKNOWN_PRESET : result;
      }
      /**
       * <pre>
       * The preset configuration if applicable
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
       * @param value The preset to set.
       * @return This builder for chaining.
       */
      public Builder setPreset(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Preset value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        preset_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The preset configuration if applicable
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration.Preset preset = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreset() {
        bitField0_ = (bitField0_ & ~0x00000400);
        preset_ = 0;
        onChanged();
        return this;
      }

      private boolean isDefaultPreset_ ;
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
       *     See studio_stats.proto;l=13709
       * @return Whether the isDefaultPreset field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasIsDefaultPreset() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
       *     See studio_stats.proto;l=13709
       * @return The isDefaultPreset.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean getIsDefaultPreset() {
        return isDefaultPreset_;
      }
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
       *     See studio_stats.proto;l=13709
       * @param value The isDefaultPreset to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setIsDefaultPreset(boolean value) {

        isDefaultPreset_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_default_preset = 12 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_default_preset is deprecated.
       *     See studio_stats.proto;l=13709
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearIsDefaultPreset() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isDefaultPreset_ = false;
        onChanged();
        return this;
      }

      private boolean isApplyButtonUsed_ ;
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
       *     See studio_stats.proto;l=13712
       * @return Whether the isApplyButtonUsed field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasIsApplyButtonUsed() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
       *     See studio_stats.proto;l=13712
       * @return The isApplyButtonUsed.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean getIsApplyButtonUsed() {
        return isApplyButtonUsed_;
      }
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
       *     See studio_stats.proto;l=13712
       * @param value The isApplyButtonUsed to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setIsApplyButtonUsed(boolean value) {

        isApplyButtonUsed_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Historical, no longer used for writing as of 02/2022
       * </pre>
       *
       * <code>optional bool is_apply_button_used = 13 [deprecated = true];</code>
       * @deprecated android_studio.LogcatUsageEvent.LogcatFormatConfiguration.is_apply_button_used is deprecated.
       *     See studio_stats.proto;l=13712
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearIsApplyButtonUsed() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isApplyButtonUsed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.LogcatUsageEvent.LogcatFormatConfiguration)
    }

    // @@protoc_insertion_point(class_scope:android_studio.LogcatUsageEvent.LogcatFormatConfiguration)
    private static final com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration();
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogcatFormatConfiguration>
        PARSER = new com.google.protobuf.AbstractParser<LogcatFormatConfiguration>() {
      @java.lang.Override
      public LogcatFormatConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogcatFormatConfiguration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogcatFormatConfiguration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogcatFilterEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.LogcatUsageEvent.LogcatFilterEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'tag' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
     * @return Whether the tagTerms field is set.
     */
    boolean hasTagTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'tag' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
     * @return The tagTerms.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getTagTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'tag' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getTagTermsOrBuilder();

    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'package' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
     * @return Whether the packageTerms field is set.
     */
    boolean hasPackageTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'package' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
     * @return The packageTerms.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getPackageTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'package' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getPackageTermsOrBuilder();

    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'message' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
     * @return Whether the messageTerms field is set.
     */
    boolean hasMessageTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'message' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
     * @return The messageTerms.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getMessageTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'message' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getMessageTermsOrBuilder();

    /**
     * <pre>
     * Summary of search terms pertaining to entire log entry
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
     * @return Whether the lineTerms field is set.
     */
    boolean hasLineTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to entire log entry
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
     * @return The lineTerms.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getLineTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to entire log entry
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getLineTermsOrBuilder();

    /**
     * <pre>
     * Number of search terms pertaining to entire log entry. Differs from the
     * above as these terms do not use the 'line:' prefix.
     * </pre>
     *
     * <code>optional int32 implicit_line_terms = 5;</code>
     * @return Whether the implicitLineTerms field is set.
     */
    boolean hasImplicitLineTerms();
    /**
     * <pre>
     * Number of search terms pertaining to entire log entry. Differs from the
     * above as these terms do not use the 'line:' prefix.
     * </pre>
     *
     * <code>optional int32 implicit_line_terms = 5;</code>
     * @return The implicitLineTerms.
     */
    int getImplicitLineTerms();

    /**
     * <pre>
     * Number of search terms pertaining to the 'level' field.
     * </pre>
     *
     * <code>optional int32 level_terms = 6;</code>
     * @return Whether the levelTerms field is set.
     */
    boolean hasLevelTerms();
    /**
     * <pre>
     * Number of search terms pertaining to the 'level' field.
     * </pre>
     *
     * <code>optional int32 level_terms = 6;</code>
     * @return The levelTerms.
     */
    int getLevelTerms();

    /**
     * <pre>
     * Number of search terms pertaining to the 'timestamp' field. As in
     * "how long ago the entry was logged"
     * </pre>
     *
     * <code>optional int32 age_terms = 7;</code>
     * @return Whether the ageTerms field is set.
     */
    boolean hasAgeTerms();
    /**
     * <pre>
     * Number of search terms pertaining to the 'timestamp' field. As in
     * "how long ago the entry was logged"
     * </pre>
     *
     * <code>optional int32 age_terms = 7;</code>
     * @return The ageTerms.
     */
    int getAgeTerms();

    /**
     * <pre>
     * Number of the search terms of the form 'package:mine'.
     * </pre>
     *
     * <code>optional int32 package_project_terms = 8;</code>
     * @return Whether the packageProjectTerms field is set.
     */
    boolean hasPackageProjectTerms();
    /**
     * <pre>
     * Number of the search terms of the form 'package:mine'.
     * </pre>
     *
     * <code>optional int32 package_project_terms = 8;</code>
     * @return The packageProjectTerms.
     */
    int getPackageProjectTerms();

    /**
     * <pre>
     * Number of or operators in the expression
     * </pre>
     *
     * <code>optional int32 or_operators = 9;</code>
     * @return Whether the orOperators field is set.
     */
    boolean hasOrOperators();
    /**
     * <pre>
     * Number of or operators in the expression
     * </pre>
     *
     * <code>optional int32 or_operators = 9;</code>
     * @return The orOperators.
     */
    int getOrOperators();

    /**
     * <pre>
     * Number of and operators in the expression
     * </pre>
     *
     * <code>optional int32 and_operators = 10;</code>
     * @return Whether the andOperators field is set.
     */
    boolean hasAndOperators();
    /**
     * <pre>
     * Number of and operators in the expression
     * </pre>
     *
     * <code>optional int32 and_operators = 10;</code>
     * @return The andOperators.
     */
    int getAndOperators();

    /**
     * <pre>
     * Number of parentheses pairs in the expressions
     * </pre>
     *
     * <code>optional int32 parentheses = 11;</code>
     * @return Whether the parentheses field is set.
     */
    boolean hasParentheses();
    /**
     * <pre>
     * Number of parentheses pairs in the expressions
     * </pre>
     *
     * <code>optional int32 parentheses = 11;</code>
     * @return The parentheses.
     */
    int getParentheses();

    /**
     * <pre>
     * Does the filter contain an error
     * </pre>
     *
     * <code>optional bool contains_errors = 12;</code>
     * @return Whether the containsErrors field is set.
     */
    boolean hasContainsErrors();
    /**
     * <pre>
     * Does the filter contain an error
     * </pre>
     *
     * <code>optional bool contains_errors = 12;</code>
     * @return The containsErrors.
     */
    boolean getContainsErrors();

    /**
     * <pre>
     * Is this filter saved as a favorite
     * </pre>
     *
     * <code>optional bool is_favorite = 13;</code>
     * @return Whether the isFavorite field is set.
     */
    boolean hasIsFavorite();
    /**
     * <pre>
     * Is this filter saved as a favorite
     * </pre>
     *
     * <code>optional bool is_favorite = 13;</code>
     * @return The isFavorite.
     */
    boolean getIsFavorite();

    /**
     * <pre>
     * Number of 'is:crash' search terms.
     * </pre>
     *
     * <code>optional int32 crash_terms = 14;</code>
     * @return Whether the crashTerms field is set.
     */
    boolean hasCrashTerms();
    /**
     * <pre>
     * Number of 'is:crash' search terms.
     * </pre>
     *
     * <code>optional int32 crash_terms = 14;</code>
     * @return The crashTerms.
     */
    int getCrashTerms();

    /**
     * <pre>
     * Number of 'is:stacktrace' search terms.
     * </pre>
     *
     * <code>optional int32 stacktrace_terms = 15;</code>
     * @return Whether the stacktraceTerms field is set.
     */
    boolean hasStacktraceTerms();
    /**
     * <pre>
     * Number of 'is:stacktrace' search terms.
     * </pre>
     *
     * <code>optional int32 stacktrace_terms = 15;</code>
     * @return The stacktraceTerms.
     */
    int getStacktraceTerms();

    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'process' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
     * @return Whether the processTerms field is set.
     */
    boolean hasProcessTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'process' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
     * @return The processTerms.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getProcessTerms();
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'process' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getProcessTermsOrBuilder();
  }
  /**
   * <pre>
   * A summary of a logcat search filter
   * (Logcat is the logging from an Android device the developer is testing
   * their app on)
   * </pre>
   *
   * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFilterEvent}
   */
  public static final class LogcatFilterEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.LogcatUsageEvent.LogcatFilterEvent)
      LogcatFilterEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogcatFilterEvent.newBuilder() to construct.
    private LogcatFilterEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogcatFilterEvent() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogcatFilterEvent();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder.class);
    }

    public interface TermVariantsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Number of normal terms (for example 'tag:foo')
       * </pre>
       *
       * <code>optional int32 count = 1;</code>
       * @return Whether the count field is set.
       */
      boolean hasCount();
      /**
       * <pre>
       * Number of normal terms (for example 'tag:foo')
       * </pre>
       *
       * <code>optional int32 count = 1;</code>
       * @return The count.
       */
      int getCount();

      /**
       * <pre>
       * Number of negated terms (for example '-tag:foo')
       * </pre>
       *
       * <code>optional int32 count_negated = 2;</code>
       * @return Whether the countNegated field is set.
       */
      boolean hasCountNegated();
      /**
       * <pre>
       * Number of negated terms (for example '-tag:foo')
       * </pre>
       *
       * <code>optional int32 count_negated = 2;</code>
       * @return The countNegated.
       */
      int getCountNegated();

      /**
       * <pre>
       * Number of regex terms (for example 'tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_regex = 3;</code>
       * @return Whether the countRegex field is set.
       */
      boolean hasCountRegex();
      /**
       * <pre>
       * Number of regex terms (for example 'tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_regex = 3;</code>
       * @return The countRegex.
       */
      int getCountRegex();

      /**
       * <pre>
       * Number of negated regex terms (for example '-tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_negated_regex = 4;</code>
       * @return Whether the countNegatedRegex field is set.
       */
      boolean hasCountNegatedRegex();
      /**
       * <pre>
       * Number of negated regex terms (for example '-tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_negated_regex = 4;</code>
       * @return The countNegatedRegex.
       */
      int getCountNegatedRegex();
    }
    /**
     * <pre>
     * A summary of a term with regex and negated variants
     * </pre>
     *
     * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants}
     */
    public static final class TermVariants extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants)
        TermVariantsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TermVariants.newBuilder() to construct.
      private TermVariants(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TermVariants() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TermVariants();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_TermVariants_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_TermVariants_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder.class);
      }

      private int bitField0_;
      public static final int COUNT_FIELD_NUMBER = 1;
      private int count_ = 0;
      /**
       * <pre>
       * Number of normal terms (for example 'tag:foo')
       * </pre>
       *
       * <code>optional int32 count = 1;</code>
       * @return Whether the count field is set.
       */
      @java.lang.Override
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Number of normal terms (for example 'tag:foo')
       * </pre>
       *
       * <code>optional int32 count = 1;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }

      public static final int COUNT_NEGATED_FIELD_NUMBER = 2;
      private int countNegated_ = 0;
      /**
       * <pre>
       * Number of negated terms (for example '-tag:foo')
       * </pre>
       *
       * <code>optional int32 count_negated = 2;</code>
       * @return Whether the countNegated field is set.
       */
      @java.lang.Override
      public boolean hasCountNegated() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Number of negated terms (for example '-tag:foo')
       * </pre>
       *
       * <code>optional int32 count_negated = 2;</code>
       * @return The countNegated.
       */
      @java.lang.Override
      public int getCountNegated() {
        return countNegated_;
      }

      public static final int COUNT_REGEX_FIELD_NUMBER = 3;
      private int countRegex_ = 0;
      /**
       * <pre>
       * Number of regex terms (for example 'tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_regex = 3;</code>
       * @return Whether the countRegex field is set.
       */
      @java.lang.Override
      public boolean hasCountRegex() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Number of regex terms (for example 'tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_regex = 3;</code>
       * @return The countRegex.
       */
      @java.lang.Override
      public int getCountRegex() {
        return countRegex_;
      }

      public static final int COUNT_NEGATED_REGEX_FIELD_NUMBER = 4;
      private int countNegatedRegex_ = 0;
      /**
       * <pre>
       * Number of negated regex terms (for example '-tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_negated_regex = 4;</code>
       * @return Whether the countNegatedRegex field is set.
       */
      @java.lang.Override
      public boolean hasCountNegatedRegex() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Number of negated regex terms (for example '-tag~:foo')
       * </pre>
       *
       * <code>optional int32 count_negated_regex = 4;</code>
       * @return The countNegatedRegex.
       */
      @java.lang.Override
      public int getCountNegatedRegex() {
        return countNegatedRegex_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, count_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, countNegated_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, countRegex_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeInt32(4, countNegatedRegex_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, count_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, countNegated_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, countRegex_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, countNegatedRegex_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants)) {
          return super.equals(obj);
        }
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants other = (com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants) obj;

        if (hasCount() != other.hasCount()) return false;
        if (hasCount()) {
          if (getCount()
              != other.getCount()) return false;
        }
        if (hasCountNegated() != other.hasCountNegated()) return false;
        if (hasCountNegated()) {
          if (getCountNegated()
              != other.getCountNegated()) return false;
        }
        if (hasCountRegex() != other.hasCountRegex()) return false;
        if (hasCountRegex()) {
          if (getCountRegex()
              != other.getCountRegex()) return false;
        }
        if (hasCountNegatedRegex() != other.hasCountNegatedRegex()) return false;
        if (hasCountNegatedRegex()) {
          if (getCountNegatedRegex()
              != other.getCountNegatedRegex()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCount()) {
          hash = (37 * hash) + COUNT_FIELD_NUMBER;
          hash = (53 * hash) + getCount();
        }
        if (hasCountNegated()) {
          hash = (37 * hash) + COUNT_NEGATED_FIELD_NUMBER;
          hash = (53 * hash) + getCountNegated();
        }
        if (hasCountRegex()) {
          hash = (37 * hash) + COUNT_REGEX_FIELD_NUMBER;
          hash = (53 * hash) + getCountRegex();
        }
        if (hasCountNegatedRegex()) {
          hash = (37 * hash) + COUNT_NEGATED_REGEX_FIELD_NUMBER;
          hash = (53 * hash) + getCountNegatedRegex();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A summary of a term with regex and negated variants
       * </pre>
       *
       * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants)
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_TermVariants_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_TermVariants_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder.class);
        }

        // Construct using com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          count_ = 0;
          countNegated_ = 0;
          countRegex_ = 0;
          countNegatedRegex_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_TermVariants_descriptor;
        }

        @java.lang.Override
        public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getDefaultInstanceForType() {
          return com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants build() {
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants buildPartial() {
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants result = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.count_ = count_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.countNegated_ = countNegated_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.countRegex_ = countRegex_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.countNegatedRegex_ = countNegatedRegex_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants) {
            return mergeFrom((com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants other) {
          if (other == com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance()) return this;
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          if (other.hasCountNegated()) {
            setCountNegated(other.getCountNegated());
          }
          if (other.hasCountRegex()) {
            setCountRegex(other.getCountRegex());
          }
          if (other.hasCountNegatedRegex()) {
            setCountNegatedRegex(other.getCountNegatedRegex());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  count_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  countNegated_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  countRegex_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  countNegatedRegex_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int count_ ;
        /**
         * <pre>
         * Number of normal terms (for example 'tag:foo')
         * </pre>
         *
         * <code>optional int32 count = 1;</code>
         * @return Whether the count field is set.
         */
        @java.lang.Override
        public boolean hasCount() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Number of normal terms (for example 'tag:foo')
         * </pre>
         *
         * <code>optional int32 count = 1;</code>
         * @return The count.
         */
        @java.lang.Override
        public int getCount() {
          return count_;
        }
        /**
         * <pre>
         * Number of normal terms (for example 'tag:foo')
         * </pre>
         *
         * <code>optional int32 count = 1;</code>
         * @param value The count to set.
         * @return This builder for chaining.
         */
        public Builder setCount(int value) {

          count_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of normal terms (for example 'tag:foo')
         * </pre>
         *
         * <code>optional int32 count = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000001);
          count_ = 0;
          onChanged();
          return this;
        }

        private int countNegated_ ;
        /**
         * <pre>
         * Number of negated terms (for example '-tag:foo')
         * </pre>
         *
         * <code>optional int32 count_negated = 2;</code>
         * @return Whether the countNegated field is set.
         */
        @java.lang.Override
        public boolean hasCountNegated() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Number of negated terms (for example '-tag:foo')
         * </pre>
         *
         * <code>optional int32 count_negated = 2;</code>
         * @return The countNegated.
         */
        @java.lang.Override
        public int getCountNegated() {
          return countNegated_;
        }
        /**
         * <pre>
         * Number of negated terms (for example '-tag:foo')
         * </pre>
         *
         * <code>optional int32 count_negated = 2;</code>
         * @param value The countNegated to set.
         * @return This builder for chaining.
         */
        public Builder setCountNegated(int value) {

          countNegated_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of negated terms (for example '-tag:foo')
         * </pre>
         *
         * <code>optional int32 count_negated = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCountNegated() {
          bitField0_ = (bitField0_ & ~0x00000002);
          countNegated_ = 0;
          onChanged();
          return this;
        }

        private int countRegex_ ;
        /**
         * <pre>
         * Number of regex terms (for example 'tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_regex = 3;</code>
         * @return Whether the countRegex field is set.
         */
        @java.lang.Override
        public boolean hasCountRegex() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Number of regex terms (for example 'tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_regex = 3;</code>
         * @return The countRegex.
         */
        @java.lang.Override
        public int getCountRegex() {
          return countRegex_;
        }
        /**
         * <pre>
         * Number of regex terms (for example 'tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_regex = 3;</code>
         * @param value The countRegex to set.
         * @return This builder for chaining.
         */
        public Builder setCountRegex(int value) {

          countRegex_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of regex terms (for example 'tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_regex = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearCountRegex() {
          bitField0_ = (bitField0_ & ~0x00000004);
          countRegex_ = 0;
          onChanged();
          return this;
        }

        private int countNegatedRegex_ ;
        /**
         * <pre>
         * Number of negated regex terms (for example '-tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_negated_regex = 4;</code>
         * @return Whether the countNegatedRegex field is set.
         */
        @java.lang.Override
        public boolean hasCountNegatedRegex() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Number of negated regex terms (for example '-tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_negated_regex = 4;</code>
         * @return The countNegatedRegex.
         */
        @java.lang.Override
        public int getCountNegatedRegex() {
          return countNegatedRegex_;
        }
        /**
         * <pre>
         * Number of negated regex terms (for example '-tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_negated_regex = 4;</code>
         * @param value The countNegatedRegex to set.
         * @return This builder for chaining.
         */
        public Builder setCountNegatedRegex(int value) {

          countNegatedRegex_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of negated regex terms (for example '-tag~:foo')
         * </pre>
         *
         * <code>optional int32 count_negated_regex = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearCountNegatedRegex() {
          bitField0_ = (bitField0_ & ~0x00000008);
          countNegatedRegex_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants)
      }

      // @@protoc_insertion_point(class_scope:android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants)
      private static final com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants();
      }

      public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TermVariants>
          PARSER = new com.google.protobuf.AbstractParser<TermVariants>() {
        @java.lang.Override
        public TermVariants parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TermVariants> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TermVariants> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TAG_TERMS_FIELD_NUMBER = 1;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants tagTerms_;
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'tag' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
     * @return Whether the tagTerms field is set.
     */
    @java.lang.Override
    public boolean hasTagTerms() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'tag' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
     * @return The tagTerms.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getTagTerms() {
      return tagTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : tagTerms_;
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'tag' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getTagTermsOrBuilder() {
      return tagTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : tagTerms_;
    }

    public static final int PACKAGE_TERMS_FIELD_NUMBER = 2;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants packageTerms_;
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'package' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
     * @return Whether the packageTerms field is set.
     */
    @java.lang.Override
    public boolean hasPackageTerms() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'package' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
     * @return The packageTerms.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getPackageTerms() {
      return packageTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : packageTerms_;
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'package' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getPackageTermsOrBuilder() {
      return packageTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : packageTerms_;
    }

    public static final int MESSAGE_TERMS_FIELD_NUMBER = 3;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants messageTerms_;
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'message' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
     * @return Whether the messageTerms field is set.
     */
    @java.lang.Override
    public boolean hasMessageTerms() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'message' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
     * @return The messageTerms.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getMessageTerms() {
      return messageTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : messageTerms_;
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'message' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getMessageTermsOrBuilder() {
      return messageTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : messageTerms_;
    }

    public static final int LINE_TERMS_FIELD_NUMBER = 4;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants lineTerms_;
    /**
     * <pre>
     * Summary of search terms pertaining to entire log entry
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
     * @return Whether the lineTerms field is set.
     */
    @java.lang.Override
    public boolean hasLineTerms() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Summary of search terms pertaining to entire log entry
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
     * @return The lineTerms.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getLineTerms() {
      return lineTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : lineTerms_;
    }
    /**
     * <pre>
     * Summary of search terms pertaining to entire log entry
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getLineTermsOrBuilder() {
      return lineTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : lineTerms_;
    }

    public static final int IMPLICIT_LINE_TERMS_FIELD_NUMBER = 5;
    private int implicitLineTerms_ = 0;
    /**
     * <pre>
     * Number of search terms pertaining to entire log entry. Differs from the
     * above as these terms do not use the 'line:' prefix.
     * </pre>
     *
     * <code>optional int32 implicit_line_terms = 5;</code>
     * @return Whether the implicitLineTerms field is set.
     */
    @java.lang.Override
    public boolean hasImplicitLineTerms() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Number of search terms pertaining to entire log entry. Differs from the
     * above as these terms do not use the 'line:' prefix.
     * </pre>
     *
     * <code>optional int32 implicit_line_terms = 5;</code>
     * @return The implicitLineTerms.
     */
    @java.lang.Override
    public int getImplicitLineTerms() {
      return implicitLineTerms_;
    }

    public static final int LEVEL_TERMS_FIELD_NUMBER = 6;
    private int levelTerms_ = 0;
    /**
     * <pre>
     * Number of search terms pertaining to the 'level' field.
     * </pre>
     *
     * <code>optional int32 level_terms = 6;</code>
     * @return Whether the levelTerms field is set.
     */
    @java.lang.Override
    public boolean hasLevelTerms() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Number of search terms pertaining to the 'level' field.
     * </pre>
     *
     * <code>optional int32 level_terms = 6;</code>
     * @return The levelTerms.
     */
    @java.lang.Override
    public int getLevelTerms() {
      return levelTerms_;
    }

    public static final int AGE_TERMS_FIELD_NUMBER = 7;
    private int ageTerms_ = 0;
    /**
     * <pre>
     * Number of search terms pertaining to the 'timestamp' field. As in
     * "how long ago the entry was logged"
     * </pre>
     *
     * <code>optional int32 age_terms = 7;</code>
     * @return Whether the ageTerms field is set.
     */
    @java.lang.Override
    public boolean hasAgeTerms() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Number of search terms pertaining to the 'timestamp' field. As in
     * "how long ago the entry was logged"
     * </pre>
     *
     * <code>optional int32 age_terms = 7;</code>
     * @return The ageTerms.
     */
    @java.lang.Override
    public int getAgeTerms() {
      return ageTerms_;
    }

    public static final int PACKAGE_PROJECT_TERMS_FIELD_NUMBER = 8;
    private int packageProjectTerms_ = 0;
    /**
     * <pre>
     * Number of the search terms of the form 'package:mine'.
     * </pre>
     *
     * <code>optional int32 package_project_terms = 8;</code>
     * @return Whether the packageProjectTerms field is set.
     */
    @java.lang.Override
    public boolean hasPackageProjectTerms() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Number of the search terms of the form 'package:mine'.
     * </pre>
     *
     * <code>optional int32 package_project_terms = 8;</code>
     * @return The packageProjectTerms.
     */
    @java.lang.Override
    public int getPackageProjectTerms() {
      return packageProjectTerms_;
    }

    public static final int OR_OPERATORS_FIELD_NUMBER = 9;
    private int orOperators_ = 0;
    /**
     * <pre>
     * Number of or operators in the expression
     * </pre>
     *
     * <code>optional int32 or_operators = 9;</code>
     * @return Whether the orOperators field is set.
     */
    @java.lang.Override
    public boolean hasOrOperators() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Number of or operators in the expression
     * </pre>
     *
     * <code>optional int32 or_operators = 9;</code>
     * @return The orOperators.
     */
    @java.lang.Override
    public int getOrOperators() {
      return orOperators_;
    }

    public static final int AND_OPERATORS_FIELD_NUMBER = 10;
    private int andOperators_ = 0;
    /**
     * <pre>
     * Number of and operators in the expression
     * </pre>
     *
     * <code>optional int32 and_operators = 10;</code>
     * @return Whether the andOperators field is set.
     */
    @java.lang.Override
    public boolean hasAndOperators() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Number of and operators in the expression
     * </pre>
     *
     * <code>optional int32 and_operators = 10;</code>
     * @return The andOperators.
     */
    @java.lang.Override
    public int getAndOperators() {
      return andOperators_;
    }

    public static final int PARENTHESES_FIELD_NUMBER = 11;
    private int parentheses_ = 0;
    /**
     * <pre>
     * Number of parentheses pairs in the expressions
     * </pre>
     *
     * <code>optional int32 parentheses = 11;</code>
     * @return Whether the parentheses field is set.
     */
    @java.lang.Override
    public boolean hasParentheses() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Number of parentheses pairs in the expressions
     * </pre>
     *
     * <code>optional int32 parentheses = 11;</code>
     * @return The parentheses.
     */
    @java.lang.Override
    public int getParentheses() {
      return parentheses_;
    }

    public static final int CONTAINS_ERRORS_FIELD_NUMBER = 12;
    private boolean containsErrors_ = false;
    /**
     * <pre>
     * Does the filter contain an error
     * </pre>
     *
     * <code>optional bool contains_errors = 12;</code>
     * @return Whether the containsErrors field is set.
     */
    @java.lang.Override
    public boolean hasContainsErrors() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * Does the filter contain an error
     * </pre>
     *
     * <code>optional bool contains_errors = 12;</code>
     * @return The containsErrors.
     */
    @java.lang.Override
    public boolean getContainsErrors() {
      return containsErrors_;
    }

    public static final int IS_FAVORITE_FIELD_NUMBER = 13;
    private boolean isFavorite_ = false;
    /**
     * <pre>
     * Is this filter saved as a favorite
     * </pre>
     *
     * <code>optional bool is_favorite = 13;</code>
     * @return Whether the isFavorite field is set.
     */
    @java.lang.Override
    public boolean hasIsFavorite() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Is this filter saved as a favorite
     * </pre>
     *
     * <code>optional bool is_favorite = 13;</code>
     * @return The isFavorite.
     */
    @java.lang.Override
    public boolean getIsFavorite() {
      return isFavorite_;
    }

    public static final int CRASH_TERMS_FIELD_NUMBER = 14;
    private int crashTerms_ = 0;
    /**
     * <pre>
     * Number of 'is:crash' search terms.
     * </pre>
     *
     * <code>optional int32 crash_terms = 14;</code>
     * @return Whether the crashTerms field is set.
     */
    @java.lang.Override
    public boolean hasCrashTerms() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Number of 'is:crash' search terms.
     * </pre>
     *
     * <code>optional int32 crash_terms = 14;</code>
     * @return The crashTerms.
     */
    @java.lang.Override
    public int getCrashTerms() {
      return crashTerms_;
    }

    public static final int STACKTRACE_TERMS_FIELD_NUMBER = 15;
    private int stacktraceTerms_ = 0;
    /**
     * <pre>
     * Number of 'is:stacktrace' search terms.
     * </pre>
     *
     * <code>optional int32 stacktrace_terms = 15;</code>
     * @return Whether the stacktraceTerms field is set.
     */
    @java.lang.Override
    public boolean hasStacktraceTerms() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * Number of 'is:stacktrace' search terms.
     * </pre>
     *
     * <code>optional int32 stacktrace_terms = 15;</code>
     * @return The stacktraceTerms.
     */
    @java.lang.Override
    public int getStacktraceTerms() {
      return stacktraceTerms_;
    }

    public static final int PROCESS_TERMS_FIELD_NUMBER = 16;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants processTerms_;
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'process' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
     * @return Whether the processTerms field is set.
     */
    @java.lang.Override
    public boolean hasProcessTerms() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'process' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
     * @return The processTerms.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getProcessTerms() {
      return processTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : processTerms_;
    }
    /**
     * <pre>
     * Summary of search terms pertaining to the log entry 'process' field
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getProcessTermsOrBuilder() {
      return processTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : processTerms_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTagTerms());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getPackageTerms());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getMessageTerms());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getLineTerms());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, implicitLineTerms_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, levelTerms_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, ageTerms_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, packageProjectTerms_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, orOperators_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, andOperators_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, parentheses_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(12, containsErrors_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeBool(13, isFavorite_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt32(14, crashTerms_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeInt32(15, stacktraceTerms_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeMessage(16, getProcessTerms());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTagTerms());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPackageTerms());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMessageTerms());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLineTerms());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, implicitLineTerms_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, levelTerms_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, ageTerms_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, packageProjectTerms_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, orOperators_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, andOperators_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, parentheses_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, containsErrors_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isFavorite_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, crashTerms_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, stacktraceTerms_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getProcessTerms());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent other = (com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent) obj;

      if (hasTagTerms() != other.hasTagTerms()) return false;
      if (hasTagTerms()) {
        if (!getTagTerms()
            .equals(other.getTagTerms())) return false;
      }
      if (hasPackageTerms() != other.hasPackageTerms()) return false;
      if (hasPackageTerms()) {
        if (!getPackageTerms()
            .equals(other.getPackageTerms())) return false;
      }
      if (hasMessageTerms() != other.hasMessageTerms()) return false;
      if (hasMessageTerms()) {
        if (!getMessageTerms()
            .equals(other.getMessageTerms())) return false;
      }
      if (hasLineTerms() != other.hasLineTerms()) return false;
      if (hasLineTerms()) {
        if (!getLineTerms()
            .equals(other.getLineTerms())) return false;
      }
      if (hasImplicitLineTerms() != other.hasImplicitLineTerms()) return false;
      if (hasImplicitLineTerms()) {
        if (getImplicitLineTerms()
            != other.getImplicitLineTerms()) return false;
      }
      if (hasLevelTerms() != other.hasLevelTerms()) return false;
      if (hasLevelTerms()) {
        if (getLevelTerms()
            != other.getLevelTerms()) return false;
      }
      if (hasAgeTerms() != other.hasAgeTerms()) return false;
      if (hasAgeTerms()) {
        if (getAgeTerms()
            != other.getAgeTerms()) return false;
      }
      if (hasPackageProjectTerms() != other.hasPackageProjectTerms()) return false;
      if (hasPackageProjectTerms()) {
        if (getPackageProjectTerms()
            != other.getPackageProjectTerms()) return false;
      }
      if (hasOrOperators() != other.hasOrOperators()) return false;
      if (hasOrOperators()) {
        if (getOrOperators()
            != other.getOrOperators()) return false;
      }
      if (hasAndOperators() != other.hasAndOperators()) return false;
      if (hasAndOperators()) {
        if (getAndOperators()
            != other.getAndOperators()) return false;
      }
      if (hasParentheses() != other.hasParentheses()) return false;
      if (hasParentheses()) {
        if (getParentheses()
            != other.getParentheses()) return false;
      }
      if (hasContainsErrors() != other.hasContainsErrors()) return false;
      if (hasContainsErrors()) {
        if (getContainsErrors()
            != other.getContainsErrors()) return false;
      }
      if (hasIsFavorite() != other.hasIsFavorite()) return false;
      if (hasIsFavorite()) {
        if (getIsFavorite()
            != other.getIsFavorite()) return false;
      }
      if (hasCrashTerms() != other.hasCrashTerms()) return false;
      if (hasCrashTerms()) {
        if (getCrashTerms()
            != other.getCrashTerms()) return false;
      }
      if (hasStacktraceTerms() != other.hasStacktraceTerms()) return false;
      if (hasStacktraceTerms()) {
        if (getStacktraceTerms()
            != other.getStacktraceTerms()) return false;
      }
      if (hasProcessTerms() != other.hasProcessTerms()) return false;
      if (hasProcessTerms()) {
        if (!getProcessTerms()
            .equals(other.getProcessTerms())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTagTerms()) {
        hash = (37 * hash) + TAG_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getTagTerms().hashCode();
      }
      if (hasPackageTerms()) {
        hash = (37 * hash) + PACKAGE_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getPackageTerms().hashCode();
      }
      if (hasMessageTerms()) {
        hash = (37 * hash) + MESSAGE_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getMessageTerms().hashCode();
      }
      if (hasLineTerms()) {
        hash = (37 * hash) + LINE_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getLineTerms().hashCode();
      }
      if (hasImplicitLineTerms()) {
        hash = (37 * hash) + IMPLICIT_LINE_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getImplicitLineTerms();
      }
      if (hasLevelTerms()) {
        hash = (37 * hash) + LEVEL_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getLevelTerms();
      }
      if (hasAgeTerms()) {
        hash = (37 * hash) + AGE_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getAgeTerms();
      }
      if (hasPackageProjectTerms()) {
        hash = (37 * hash) + PACKAGE_PROJECT_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getPackageProjectTerms();
      }
      if (hasOrOperators()) {
        hash = (37 * hash) + OR_OPERATORS_FIELD_NUMBER;
        hash = (53 * hash) + getOrOperators();
      }
      if (hasAndOperators()) {
        hash = (37 * hash) + AND_OPERATORS_FIELD_NUMBER;
        hash = (53 * hash) + getAndOperators();
      }
      if (hasParentheses()) {
        hash = (37 * hash) + PARENTHESES_FIELD_NUMBER;
        hash = (53 * hash) + getParentheses();
      }
      if (hasContainsErrors()) {
        hash = (37 * hash) + CONTAINS_ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getContainsErrors());
      }
      if (hasIsFavorite()) {
        hash = (37 * hash) + IS_FAVORITE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsFavorite());
      }
      if (hasCrashTerms()) {
        hash = (37 * hash) + CRASH_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getCrashTerms();
      }
      if (hasStacktraceTerms()) {
        hash = (37 * hash) + STACKTRACE_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getStacktraceTerms();
      }
      if (hasProcessTerms()) {
        hash = (37 * hash) + PROCESS_TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getProcessTerms().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A summary of a logcat search filter
     * (Logcat is the logging from an Android device the developer is testing
     * their app on)
     * </pre>
     *
     * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatFilterEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.LogcatUsageEvent.LogcatFilterEvent)
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTagTermsFieldBuilder();
          getPackageTermsFieldBuilder();
          getMessageTermsFieldBuilder();
          getLineTermsFieldBuilder();
          getProcessTermsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tagTerms_ = null;
        if (tagTermsBuilder_ != null) {
          tagTermsBuilder_.dispose();
          tagTermsBuilder_ = null;
        }
        packageTerms_ = null;
        if (packageTermsBuilder_ != null) {
          packageTermsBuilder_.dispose();
          packageTermsBuilder_ = null;
        }
        messageTerms_ = null;
        if (messageTermsBuilder_ != null) {
          messageTermsBuilder_.dispose();
          messageTermsBuilder_ = null;
        }
        lineTerms_ = null;
        if (lineTermsBuilder_ != null) {
          lineTermsBuilder_.dispose();
          lineTermsBuilder_ = null;
        }
        implicitLineTerms_ = 0;
        levelTerms_ = 0;
        ageTerms_ = 0;
        packageProjectTerms_ = 0;
        orOperators_ = 0;
        andOperators_ = 0;
        parentheses_ = 0;
        containsErrors_ = false;
        isFavorite_ = false;
        crashTerms_ = 0;
        stacktraceTerms_ = 0;
        processTerms_ = null;
        if (processTermsBuilder_ != null) {
          processTermsBuilder_.dispose();
          processTermsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatFilterEvent_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent build() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent buildPartial() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent result = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tagTerms_ = tagTermsBuilder_ == null
              ? tagTerms_
              : tagTermsBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.packageTerms_ = packageTermsBuilder_ == null
              ? packageTerms_
              : packageTermsBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.messageTerms_ = messageTermsBuilder_ == null
              ? messageTerms_
              : messageTermsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.lineTerms_ = lineTermsBuilder_ == null
              ? lineTerms_
              : lineTermsBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.implicitLineTerms_ = implicitLineTerms_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.levelTerms_ = levelTerms_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ageTerms_ = ageTerms_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.packageProjectTerms_ = packageProjectTerms_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.orOperators_ = orOperators_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.andOperators_ = andOperators_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.parentheses_ = parentheses_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.containsErrors_ = containsErrors_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.isFavorite_ = isFavorite_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.crashTerms_ = crashTerms_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.stacktraceTerms_ = stacktraceTerms_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.processTerms_ = processTermsBuilder_ == null
              ? processTerms_
              : processTermsBuilder_.build();
          to_bitField0_ |= 0x00008000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent) {
          return mergeFrom((com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent other) {
        if (other == com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance()) return this;
        if (other.hasTagTerms()) {
          mergeTagTerms(other.getTagTerms());
        }
        if (other.hasPackageTerms()) {
          mergePackageTerms(other.getPackageTerms());
        }
        if (other.hasMessageTerms()) {
          mergeMessageTerms(other.getMessageTerms());
        }
        if (other.hasLineTerms()) {
          mergeLineTerms(other.getLineTerms());
        }
        if (other.hasImplicitLineTerms()) {
          setImplicitLineTerms(other.getImplicitLineTerms());
        }
        if (other.hasLevelTerms()) {
          setLevelTerms(other.getLevelTerms());
        }
        if (other.hasAgeTerms()) {
          setAgeTerms(other.getAgeTerms());
        }
        if (other.hasPackageProjectTerms()) {
          setPackageProjectTerms(other.getPackageProjectTerms());
        }
        if (other.hasOrOperators()) {
          setOrOperators(other.getOrOperators());
        }
        if (other.hasAndOperators()) {
          setAndOperators(other.getAndOperators());
        }
        if (other.hasParentheses()) {
          setParentheses(other.getParentheses());
        }
        if (other.hasContainsErrors()) {
          setContainsErrors(other.getContainsErrors());
        }
        if (other.hasIsFavorite()) {
          setIsFavorite(other.getIsFavorite());
        }
        if (other.hasCrashTerms()) {
          setCrashTerms(other.getCrashTerms());
        }
        if (other.hasStacktraceTerms()) {
          setStacktraceTerms(other.getStacktraceTerms());
        }
        if (other.hasProcessTerms()) {
          mergeProcessTerms(other.getProcessTerms());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTagTermsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPackageTermsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getMessageTermsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getLineTermsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                implicitLineTerms_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                levelTerms_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                ageTerms_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                packageProjectTerms_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                orOperators_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                andOperators_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                parentheses_ = input.readInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                containsErrors_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                isFavorite_ = input.readBool();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                crashTerms_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                stacktraceTerms_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 130: {
                input.readMessage(
                    getProcessTermsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants tagTerms_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> tagTermsBuilder_;
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       * @return Whether the tagTerms field is set.
       */
      public boolean hasTagTerms() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       * @return The tagTerms.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getTagTerms() {
        if (tagTermsBuilder_ == null) {
          return tagTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : tagTerms_;
        } else {
          return tagTermsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      public Builder setTagTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (tagTermsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tagTerms_ = value;
        } else {
          tagTermsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      public Builder setTagTerms(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder builderForValue) {
        if (tagTermsBuilder_ == null) {
          tagTerms_ = builderForValue.build();
        } else {
          tagTermsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      public Builder mergeTagTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (tagTermsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            tagTerms_ != null &&
            tagTerms_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance()) {
            getTagTermsBuilder().mergeFrom(value);
          } else {
            tagTerms_ = value;
          }
        } else {
          tagTermsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      public Builder clearTagTerms() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tagTerms_ = null;
        if (tagTermsBuilder_ != null) {
          tagTermsBuilder_.dispose();
          tagTermsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder getTagTermsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTagTermsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getTagTermsOrBuilder() {
        if (tagTermsBuilder_ != null) {
          return tagTermsBuilder_.getMessageOrBuilder();
        } else {
          return tagTerms_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : tagTerms_;
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'tag' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants tag_terms = 1 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> 
          getTagTermsFieldBuilder() {
        if (tagTermsBuilder_ == null) {
          tagTermsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder>(
                  getTagTerms(),
                  getParentForChildren(),
                  isClean());
          tagTerms_ = null;
        }
        return tagTermsBuilder_;
      }

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants packageTerms_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> packageTermsBuilder_;
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       * @return Whether the packageTerms field is set.
       */
      public boolean hasPackageTerms() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       * @return The packageTerms.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getPackageTerms() {
        if (packageTermsBuilder_ == null) {
          return packageTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : packageTerms_;
        } else {
          return packageTermsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      public Builder setPackageTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (packageTermsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packageTerms_ = value;
        } else {
          packageTermsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      public Builder setPackageTerms(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder builderForValue) {
        if (packageTermsBuilder_ == null) {
          packageTerms_ = builderForValue.build();
        } else {
          packageTermsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      public Builder mergePackageTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (packageTermsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            packageTerms_ != null &&
            packageTerms_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance()) {
            getPackageTermsBuilder().mergeFrom(value);
          } else {
            packageTerms_ = value;
          }
        } else {
          packageTermsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      public Builder clearPackageTerms() {
        bitField0_ = (bitField0_ & ~0x00000002);
        packageTerms_ = null;
        if (packageTermsBuilder_ != null) {
          packageTermsBuilder_.dispose();
          packageTermsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder getPackageTermsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPackageTermsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getPackageTermsOrBuilder() {
        if (packageTermsBuilder_ != null) {
          return packageTermsBuilder_.getMessageOrBuilder();
        } else {
          return packageTerms_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : packageTerms_;
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'package' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants package_terms = 2 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> 
          getPackageTermsFieldBuilder() {
        if (packageTermsBuilder_ == null) {
          packageTermsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder>(
                  getPackageTerms(),
                  getParentForChildren(),
                  isClean());
          packageTerms_ = null;
        }
        return packageTermsBuilder_;
      }

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants messageTerms_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> messageTermsBuilder_;
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       * @return Whether the messageTerms field is set.
       */
      public boolean hasMessageTerms() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       * @return The messageTerms.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getMessageTerms() {
        if (messageTermsBuilder_ == null) {
          return messageTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : messageTerms_;
        } else {
          return messageTermsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      public Builder setMessageTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (messageTermsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageTerms_ = value;
        } else {
          messageTermsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      public Builder setMessageTerms(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder builderForValue) {
        if (messageTermsBuilder_ == null) {
          messageTerms_ = builderForValue.build();
        } else {
          messageTermsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      public Builder mergeMessageTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (messageTermsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            messageTerms_ != null &&
            messageTerms_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance()) {
            getMessageTermsBuilder().mergeFrom(value);
          } else {
            messageTerms_ = value;
          }
        } else {
          messageTermsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      public Builder clearMessageTerms() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageTerms_ = null;
        if (messageTermsBuilder_ != null) {
          messageTermsBuilder_.dispose();
          messageTermsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder getMessageTermsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMessageTermsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getMessageTermsOrBuilder() {
        if (messageTermsBuilder_ != null) {
          return messageTermsBuilder_.getMessageOrBuilder();
        } else {
          return messageTerms_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : messageTerms_;
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'message' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants message_terms = 3 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> 
          getMessageTermsFieldBuilder() {
        if (messageTermsBuilder_ == null) {
          messageTermsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder>(
                  getMessageTerms(),
                  getParentForChildren(),
                  isClean());
          messageTerms_ = null;
        }
        return messageTermsBuilder_;
      }

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants lineTerms_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> lineTermsBuilder_;
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       * @return Whether the lineTerms field is set.
       */
      public boolean hasLineTerms() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       * @return The lineTerms.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getLineTerms() {
        if (lineTermsBuilder_ == null) {
          return lineTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : lineTerms_;
        } else {
          return lineTermsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      public Builder setLineTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (lineTermsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lineTerms_ = value;
        } else {
          lineTermsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      public Builder setLineTerms(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder builderForValue) {
        if (lineTermsBuilder_ == null) {
          lineTerms_ = builderForValue.build();
        } else {
          lineTermsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      public Builder mergeLineTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (lineTermsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            lineTerms_ != null &&
            lineTerms_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance()) {
            getLineTermsBuilder().mergeFrom(value);
          } else {
            lineTerms_ = value;
          }
        } else {
          lineTermsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      public Builder clearLineTerms() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lineTerms_ = null;
        if (lineTermsBuilder_ != null) {
          lineTermsBuilder_.dispose();
          lineTermsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder getLineTermsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLineTermsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getLineTermsOrBuilder() {
        if (lineTermsBuilder_ != null) {
          return lineTermsBuilder_.getMessageOrBuilder();
        } else {
          return lineTerms_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : lineTerms_;
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to entire log entry
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants line_terms = 4 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> 
          getLineTermsFieldBuilder() {
        if (lineTermsBuilder_ == null) {
          lineTermsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder>(
                  getLineTerms(),
                  getParentForChildren(),
                  isClean());
          lineTerms_ = null;
        }
        return lineTermsBuilder_;
      }

      private int implicitLineTerms_ ;
      /**
       * <pre>
       * Number of search terms pertaining to entire log entry. Differs from the
       * above as these terms do not use the 'line:' prefix.
       * </pre>
       *
       * <code>optional int32 implicit_line_terms = 5;</code>
       * @return Whether the implicitLineTerms field is set.
       */
      @java.lang.Override
      public boolean hasImplicitLineTerms() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Number of search terms pertaining to entire log entry. Differs from the
       * above as these terms do not use the 'line:' prefix.
       * </pre>
       *
       * <code>optional int32 implicit_line_terms = 5;</code>
       * @return The implicitLineTerms.
       */
      @java.lang.Override
      public int getImplicitLineTerms() {
        return implicitLineTerms_;
      }
      /**
       * <pre>
       * Number of search terms pertaining to entire log entry. Differs from the
       * above as these terms do not use the 'line:' prefix.
       * </pre>
       *
       * <code>optional int32 implicit_line_terms = 5;</code>
       * @param value The implicitLineTerms to set.
       * @return This builder for chaining.
       */
      public Builder setImplicitLineTerms(int value) {

        implicitLineTerms_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of search terms pertaining to entire log entry. Differs from the
       * above as these terms do not use the 'line:' prefix.
       * </pre>
       *
       * <code>optional int32 implicit_line_terms = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearImplicitLineTerms() {
        bitField0_ = (bitField0_ & ~0x00000010);
        implicitLineTerms_ = 0;
        onChanged();
        return this;
      }

      private int levelTerms_ ;
      /**
       * <pre>
       * Number of search terms pertaining to the 'level' field.
       * </pre>
       *
       * <code>optional int32 level_terms = 6;</code>
       * @return Whether the levelTerms field is set.
       */
      @java.lang.Override
      public boolean hasLevelTerms() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Number of search terms pertaining to the 'level' field.
       * </pre>
       *
       * <code>optional int32 level_terms = 6;</code>
       * @return The levelTerms.
       */
      @java.lang.Override
      public int getLevelTerms() {
        return levelTerms_;
      }
      /**
       * <pre>
       * Number of search terms pertaining to the 'level' field.
       * </pre>
       *
       * <code>optional int32 level_terms = 6;</code>
       * @param value The levelTerms to set.
       * @return This builder for chaining.
       */
      public Builder setLevelTerms(int value) {

        levelTerms_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of search terms pertaining to the 'level' field.
       * </pre>
       *
       * <code>optional int32 level_terms = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevelTerms() {
        bitField0_ = (bitField0_ & ~0x00000020);
        levelTerms_ = 0;
        onChanged();
        return this;
      }

      private int ageTerms_ ;
      /**
       * <pre>
       * Number of search terms pertaining to the 'timestamp' field. As in
       * "how long ago the entry was logged"
       * </pre>
       *
       * <code>optional int32 age_terms = 7;</code>
       * @return Whether the ageTerms field is set.
       */
      @java.lang.Override
      public boolean hasAgeTerms() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Number of search terms pertaining to the 'timestamp' field. As in
       * "how long ago the entry was logged"
       * </pre>
       *
       * <code>optional int32 age_terms = 7;</code>
       * @return The ageTerms.
       */
      @java.lang.Override
      public int getAgeTerms() {
        return ageTerms_;
      }
      /**
       * <pre>
       * Number of search terms pertaining to the 'timestamp' field. As in
       * "how long ago the entry was logged"
       * </pre>
       *
       * <code>optional int32 age_terms = 7;</code>
       * @param value The ageTerms to set.
       * @return This builder for chaining.
       */
      public Builder setAgeTerms(int value) {

        ageTerms_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of search terms pertaining to the 'timestamp' field. As in
       * "how long ago the entry was logged"
       * </pre>
       *
       * <code>optional int32 age_terms = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAgeTerms() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ageTerms_ = 0;
        onChanged();
        return this;
      }

      private int packageProjectTerms_ ;
      /**
       * <pre>
       * Number of the search terms of the form 'package:mine'.
       * </pre>
       *
       * <code>optional int32 package_project_terms = 8;</code>
       * @return Whether the packageProjectTerms field is set.
       */
      @java.lang.Override
      public boolean hasPackageProjectTerms() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Number of the search terms of the form 'package:mine'.
       * </pre>
       *
       * <code>optional int32 package_project_terms = 8;</code>
       * @return The packageProjectTerms.
       */
      @java.lang.Override
      public int getPackageProjectTerms() {
        return packageProjectTerms_;
      }
      /**
       * <pre>
       * Number of the search terms of the form 'package:mine'.
       * </pre>
       *
       * <code>optional int32 package_project_terms = 8;</code>
       * @param value The packageProjectTerms to set.
       * @return This builder for chaining.
       */
      public Builder setPackageProjectTerms(int value) {

        packageProjectTerms_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of the search terms of the form 'package:mine'.
       * </pre>
       *
       * <code>optional int32 package_project_terms = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPackageProjectTerms() {
        bitField0_ = (bitField0_ & ~0x00000080);
        packageProjectTerms_ = 0;
        onChanged();
        return this;
      }

      private int orOperators_ ;
      /**
       * <pre>
       * Number of or operators in the expression
       * </pre>
       *
       * <code>optional int32 or_operators = 9;</code>
       * @return Whether the orOperators field is set.
       */
      @java.lang.Override
      public boolean hasOrOperators() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Number of or operators in the expression
       * </pre>
       *
       * <code>optional int32 or_operators = 9;</code>
       * @return The orOperators.
       */
      @java.lang.Override
      public int getOrOperators() {
        return orOperators_;
      }
      /**
       * <pre>
       * Number of or operators in the expression
       * </pre>
       *
       * <code>optional int32 or_operators = 9;</code>
       * @param value The orOperators to set.
       * @return This builder for chaining.
       */
      public Builder setOrOperators(int value) {

        orOperators_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of or operators in the expression
       * </pre>
       *
       * <code>optional int32 or_operators = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrOperators() {
        bitField0_ = (bitField0_ & ~0x00000100);
        orOperators_ = 0;
        onChanged();
        return this;
      }

      private int andOperators_ ;
      /**
       * <pre>
       * Number of and operators in the expression
       * </pre>
       *
       * <code>optional int32 and_operators = 10;</code>
       * @return Whether the andOperators field is set.
       */
      @java.lang.Override
      public boolean hasAndOperators() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Number of and operators in the expression
       * </pre>
       *
       * <code>optional int32 and_operators = 10;</code>
       * @return The andOperators.
       */
      @java.lang.Override
      public int getAndOperators() {
        return andOperators_;
      }
      /**
       * <pre>
       * Number of and operators in the expression
       * </pre>
       *
       * <code>optional int32 and_operators = 10;</code>
       * @param value The andOperators to set.
       * @return This builder for chaining.
       */
      public Builder setAndOperators(int value) {

        andOperators_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of and operators in the expression
       * </pre>
       *
       * <code>optional int32 and_operators = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAndOperators() {
        bitField0_ = (bitField0_ & ~0x00000200);
        andOperators_ = 0;
        onChanged();
        return this;
      }

      private int parentheses_ ;
      /**
       * <pre>
       * Number of parentheses pairs in the expressions
       * </pre>
       *
       * <code>optional int32 parentheses = 11;</code>
       * @return Whether the parentheses field is set.
       */
      @java.lang.Override
      public boolean hasParentheses() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Number of parentheses pairs in the expressions
       * </pre>
       *
       * <code>optional int32 parentheses = 11;</code>
       * @return The parentheses.
       */
      @java.lang.Override
      public int getParentheses() {
        return parentheses_;
      }
      /**
       * <pre>
       * Number of parentheses pairs in the expressions
       * </pre>
       *
       * <code>optional int32 parentheses = 11;</code>
       * @param value The parentheses to set.
       * @return This builder for chaining.
       */
      public Builder setParentheses(int value) {

        parentheses_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of parentheses pairs in the expressions
       * </pre>
       *
       * <code>optional int32 parentheses = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentheses() {
        bitField0_ = (bitField0_ & ~0x00000400);
        parentheses_ = 0;
        onChanged();
        return this;
      }

      private boolean containsErrors_ ;
      /**
       * <pre>
       * Does the filter contain an error
       * </pre>
       *
       * <code>optional bool contains_errors = 12;</code>
       * @return Whether the containsErrors field is set.
       */
      @java.lang.Override
      public boolean hasContainsErrors() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Does the filter contain an error
       * </pre>
       *
       * <code>optional bool contains_errors = 12;</code>
       * @return The containsErrors.
       */
      @java.lang.Override
      public boolean getContainsErrors() {
        return containsErrors_;
      }
      /**
       * <pre>
       * Does the filter contain an error
       * </pre>
       *
       * <code>optional bool contains_errors = 12;</code>
       * @param value The containsErrors to set.
       * @return This builder for chaining.
       */
      public Builder setContainsErrors(boolean value) {

        containsErrors_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Does the filter contain an error
       * </pre>
       *
       * <code>optional bool contains_errors = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearContainsErrors() {
        bitField0_ = (bitField0_ & ~0x00000800);
        containsErrors_ = false;
        onChanged();
        return this;
      }

      private boolean isFavorite_ ;
      /**
       * <pre>
       * Is this filter saved as a favorite
       * </pre>
       *
       * <code>optional bool is_favorite = 13;</code>
       * @return Whether the isFavorite field is set.
       */
      @java.lang.Override
      public boolean hasIsFavorite() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * Is this filter saved as a favorite
       * </pre>
       *
       * <code>optional bool is_favorite = 13;</code>
       * @return The isFavorite.
       */
      @java.lang.Override
      public boolean getIsFavorite() {
        return isFavorite_;
      }
      /**
       * <pre>
       * Is this filter saved as a favorite
       * </pre>
       *
       * <code>optional bool is_favorite = 13;</code>
       * @param value The isFavorite to set.
       * @return This builder for chaining.
       */
      public Builder setIsFavorite(boolean value) {

        isFavorite_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Is this filter saved as a favorite
       * </pre>
       *
       * <code>optional bool is_favorite = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsFavorite() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isFavorite_ = false;
        onChanged();
        return this;
      }

      private int crashTerms_ ;
      /**
       * <pre>
       * Number of 'is:crash' search terms.
       * </pre>
       *
       * <code>optional int32 crash_terms = 14;</code>
       * @return Whether the crashTerms field is set.
       */
      @java.lang.Override
      public boolean hasCrashTerms() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * Number of 'is:crash' search terms.
       * </pre>
       *
       * <code>optional int32 crash_terms = 14;</code>
       * @return The crashTerms.
       */
      @java.lang.Override
      public int getCrashTerms() {
        return crashTerms_;
      }
      /**
       * <pre>
       * Number of 'is:crash' search terms.
       * </pre>
       *
       * <code>optional int32 crash_terms = 14;</code>
       * @param value The crashTerms to set.
       * @return This builder for chaining.
       */
      public Builder setCrashTerms(int value) {

        crashTerms_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of 'is:crash' search terms.
       * </pre>
       *
       * <code>optional int32 crash_terms = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrashTerms() {
        bitField0_ = (bitField0_ & ~0x00002000);
        crashTerms_ = 0;
        onChanged();
        return this;
      }

      private int stacktraceTerms_ ;
      /**
       * <pre>
       * Number of 'is:stacktrace' search terms.
       * </pre>
       *
       * <code>optional int32 stacktrace_terms = 15;</code>
       * @return Whether the stacktraceTerms field is set.
       */
      @java.lang.Override
      public boolean hasStacktraceTerms() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * Number of 'is:stacktrace' search terms.
       * </pre>
       *
       * <code>optional int32 stacktrace_terms = 15;</code>
       * @return The stacktraceTerms.
       */
      @java.lang.Override
      public int getStacktraceTerms() {
        return stacktraceTerms_;
      }
      /**
       * <pre>
       * Number of 'is:stacktrace' search terms.
       * </pre>
       *
       * <code>optional int32 stacktrace_terms = 15;</code>
       * @param value The stacktraceTerms to set.
       * @return This builder for chaining.
       */
      public Builder setStacktraceTerms(int value) {

        stacktraceTerms_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of 'is:stacktrace' search terms.
       * </pre>
       *
       * <code>optional int32 stacktrace_terms = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearStacktraceTerms() {
        bitField0_ = (bitField0_ & ~0x00004000);
        stacktraceTerms_ = 0;
        onChanged();
        return this;
      }

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants processTerms_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> processTermsBuilder_;
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       * @return Whether the processTerms field is set.
       */
      public boolean hasProcessTerms() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       * @return The processTerms.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants getProcessTerms() {
        if (processTermsBuilder_ == null) {
          return processTerms_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : processTerms_;
        } else {
          return processTermsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      public Builder setProcessTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (processTermsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processTerms_ = value;
        } else {
          processTermsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      public Builder setProcessTerms(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder builderForValue) {
        if (processTermsBuilder_ == null) {
          processTerms_ = builderForValue.build();
        } else {
          processTermsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      public Builder mergeProcessTerms(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants value) {
        if (processTermsBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0) &&
            processTerms_ != null &&
            processTerms_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance()) {
            getProcessTermsBuilder().mergeFrom(value);
          } else {
            processTerms_ = value;
          }
        } else {
          processTermsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      public Builder clearProcessTerms() {
        bitField0_ = (bitField0_ & ~0x00008000);
        processTerms_ = null;
        if (processTermsBuilder_ != null) {
          processTermsBuilder_.dispose();
          processTermsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder getProcessTermsBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getProcessTermsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder getProcessTermsOrBuilder() {
        if (processTermsBuilder_ != null) {
          return processTermsBuilder_.getMessageOrBuilder();
        } else {
          return processTerms_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.getDefaultInstance() : processTerms_;
        }
      }
      /**
       * <pre>
       * Summary of search terms pertaining to the log entry 'process' field
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent.TermVariants process_terms = 16 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder> 
          getProcessTermsFieldBuilder() {
        if (processTermsBuilder_ == null) {
          processTermsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariants.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.TermVariantsOrBuilder>(
                  getProcessTerms(),
                  getParentForChildren(),
                  isClean());
          processTerms_ = null;
        }
        return processTermsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.LogcatUsageEvent.LogcatFilterEvent)
    }

    // @@protoc_insertion_point(class_scope:android_studio.LogcatUsageEvent.LogcatFilterEvent)
    private static final com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent();
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogcatFilterEvent>
        PARSER = new com.google.protobuf.AbstractParser<LogcatFilterEvent>() {
      @java.lang.Override
      public LogcatFilterEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogcatFilterEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogcatFilterEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogcatPanelEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:android_studio.LogcatUsageEvent.LogcatPanelEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * True if the panel is created from a restore-state.
     * </pre>
     *
     * <code>optional bool is_restored = 1;</code>
     * @return Whether the isRestored field is set.
     */
    boolean hasIsRestored();
    /**
     * <pre>
     * True if the panel is created from a restore-state.
     * </pre>
     *
     * <code>optional bool is_restored = 1;</code>
     * @return The isRestored.
     */
    boolean getIsRestored();

    /**
     * <pre>
     * The formatting configuration of the panel
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
     * @return Whether the formatConfiguration field is set.
     */
    boolean hasFormatConfiguration();
    /**
     * <pre>
     * The formatting configuration of the panel
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
     * @return The formatConfiguration.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getFormatConfiguration();
    /**
     * <pre>
     * The formatting configuration of the panel
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getFormatConfigurationOrBuilder();

    /**
     * <pre>
     * The panel filter.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
     * @return Whether the filter field is set.
     */
    boolean hasFilter();
    /**
     * <pre>
     * The panel filter.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
     * @return The filter.
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getFilter();
    /**
     * <pre>
     * The panel filter.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
     */
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder getFilterOrBuilder();

    /**
     * <pre>
     * The buffer size.
     * </pre>
     *
     * <code>optional int32 buffer_size = 4;</code>
     * @return Whether the bufferSize field is set.
     */
    boolean hasBufferSize();
    /**
     * <pre>
     * The buffer size.
     * </pre>
     *
     * <code>optional int32 buffer_size = 4;</code>
     * @return The bufferSize.
     */
    int getBufferSize();
  }
  /**
   * <pre>
   * Details of a Logcat panel
   * </pre>
   *
   * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatPanelEvent}
   */
  public static final class LogcatPanelEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:android_studio.LogcatUsageEvent.LogcatPanelEvent)
      LogcatPanelEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogcatPanelEvent.newBuilder() to construct.
    private LogcatPanelEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogcatPanelEvent() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogcatPanelEvent();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatPanelEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatPanelEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder.class);
    }

    private int bitField0_;
    public static final int IS_RESTORED_FIELD_NUMBER = 1;
    private boolean isRestored_ = false;
    /**
     * <pre>
     * True if the panel is created from a restore-state.
     * </pre>
     *
     * <code>optional bool is_restored = 1;</code>
     * @return Whether the isRestored field is set.
     */
    @java.lang.Override
    public boolean hasIsRestored() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * True if the panel is created from a restore-state.
     * </pre>
     *
     * <code>optional bool is_restored = 1;</code>
     * @return The isRestored.
     */
    @java.lang.Override
    public boolean getIsRestored() {
      return isRestored_;
    }

    public static final int FORMAT_CONFIGURATION_FIELD_NUMBER = 2;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration formatConfiguration_;
    /**
     * <pre>
     * The formatting configuration of the panel
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
     * @return Whether the formatConfiguration field is set.
     */
    @java.lang.Override
    public boolean hasFormatConfiguration() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The formatting configuration of the panel
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
     * @return The formatConfiguration.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getFormatConfiguration() {
      return formatConfiguration_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatConfiguration_;
    }
    /**
     * <pre>
     * The formatting configuration of the panel
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getFormatConfigurationOrBuilder() {
      return formatConfiguration_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatConfiguration_;
    }

    public static final int FILTER_FIELD_NUMBER = 3;
    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent filter_;
    /**
     * <pre>
     * The panel filter.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
     * @return Whether the filter field is set.
     */
    @java.lang.Override
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The panel filter.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
     * @return The filter.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getFilter() {
      return filter_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : filter_;
    }
    /**
     * <pre>
     * The panel filter.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder getFilterOrBuilder() {
      return filter_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : filter_;
    }

    public static final int BUFFER_SIZE_FIELD_NUMBER = 4;
    private int bufferSize_ = 0;
    /**
     * <pre>
     * The buffer size.
     * </pre>
     *
     * <code>optional int32 buffer_size = 4;</code>
     * @return Whether the bufferSize field is set.
     */
    @java.lang.Override
    public boolean hasBufferSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The buffer size.
     * </pre>
     *
     * <code>optional int32 buffer_size = 4;</code>
     * @return The bufferSize.
     */
    @java.lang.Override
    public int getBufferSize() {
      return bufferSize_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, isRestored_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getFormatConfiguration());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getFilter());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, bufferSize_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isRestored_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFormatConfiguration());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFilter());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, bufferSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent)) {
        return super.equals(obj);
      }
      com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent other = (com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent) obj;

      if (hasIsRestored() != other.hasIsRestored()) return false;
      if (hasIsRestored()) {
        if (getIsRestored()
            != other.getIsRestored()) return false;
      }
      if (hasFormatConfiguration() != other.hasFormatConfiguration()) return false;
      if (hasFormatConfiguration()) {
        if (!getFormatConfiguration()
            .equals(other.getFormatConfiguration())) return false;
      }
      if (hasFilter() != other.hasFilter()) return false;
      if (hasFilter()) {
        if (!getFilter()
            .equals(other.getFilter())) return false;
      }
      if (hasBufferSize() != other.hasBufferSize()) return false;
      if (hasBufferSize()) {
        if (getBufferSize()
            != other.getBufferSize()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIsRestored()) {
        hash = (37 * hash) + IS_RESTORED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsRestored());
      }
      if (hasFormatConfiguration()) {
        hash = (37 * hash) + FORMAT_CONFIGURATION_FIELD_NUMBER;
        hash = (53 * hash) + getFormatConfiguration().hashCode();
      }
      if (hasFilter()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getFilter().hashCode();
      }
      if (hasBufferSize()) {
        hash = (37 * hash) + BUFFER_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBufferSize();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Details of a Logcat panel
     * </pre>
     *
     * Protobuf type {@code android_studio.LogcatUsageEvent.LogcatPanelEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:android_studio.LogcatUsageEvent.LogcatPanelEvent)
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatPanelEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatPanelEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder.class);
      }

      // Construct using com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFormatConfigurationFieldBuilder();
          getFilterFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        isRestored_ = false;
        formatConfiguration_ = null;
        if (formatConfigurationBuilder_ != null) {
          formatConfigurationBuilder_.dispose();
          formatConfigurationBuilder_ = null;
        }
        filter_ = null;
        if (filterBuilder_ != null) {
          filterBuilder_.dispose();
          filterBuilder_ = null;
        }
        bufferSize_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_LogcatPanelEvent_descriptor;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent getDefaultInstanceForType() {
        return com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent build() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent buildPartial() {
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent result = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.isRestored_ = isRestored_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.formatConfiguration_ = formatConfigurationBuilder_ == null
              ? formatConfiguration_
              : formatConfigurationBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.filter_ = filterBuilder_ == null
              ? filter_
              : filterBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.bufferSize_ = bufferSize_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent) {
          return mergeFrom((com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent other) {
        if (other == com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance()) return this;
        if (other.hasIsRestored()) {
          setIsRestored(other.getIsRestored());
        }
        if (other.hasFormatConfiguration()) {
          mergeFormatConfiguration(other.getFormatConfiguration());
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        if (other.hasBufferSize()) {
          setBufferSize(other.getBufferSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                isRestored_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getFormatConfigurationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getFilterFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                bufferSize_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean isRestored_ ;
      /**
       * <pre>
       * True if the panel is created from a restore-state.
       * </pre>
       *
       * <code>optional bool is_restored = 1;</code>
       * @return Whether the isRestored field is set.
       */
      @java.lang.Override
      public boolean hasIsRestored() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * True if the panel is created from a restore-state.
       * </pre>
       *
       * <code>optional bool is_restored = 1;</code>
       * @return The isRestored.
       */
      @java.lang.Override
      public boolean getIsRestored() {
        return isRestored_;
      }
      /**
       * <pre>
       * True if the panel is created from a restore-state.
       * </pre>
       *
       * <code>optional bool is_restored = 1;</code>
       * @param value The isRestored to set.
       * @return This builder for chaining.
       */
      public Builder setIsRestored(boolean value) {

        isRestored_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True if the panel is created from a restore-state.
       * </pre>
       *
       * <code>optional bool is_restored = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsRestored() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isRestored_ = false;
        onChanged();
        return this;
      }

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration formatConfiguration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder> formatConfigurationBuilder_;
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       * @return Whether the formatConfiguration field is set.
       */
      public boolean hasFormatConfiguration() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       * @return The formatConfiguration.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getFormatConfiguration() {
        if (formatConfigurationBuilder_ == null) {
          return formatConfiguration_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatConfiguration_;
        } else {
          return formatConfigurationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      public Builder setFormatConfiguration(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration value) {
        if (formatConfigurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          formatConfiguration_ = value;
        } else {
          formatConfigurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      public Builder setFormatConfiguration(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder builderForValue) {
        if (formatConfigurationBuilder_ == null) {
          formatConfiguration_ = builderForValue.build();
        } else {
          formatConfigurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      public Builder mergeFormatConfiguration(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration value) {
        if (formatConfigurationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            formatConfiguration_ != null &&
            formatConfiguration_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance()) {
            getFormatConfigurationBuilder().mergeFrom(value);
          } else {
            formatConfiguration_ = value;
          }
        } else {
          formatConfigurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      public Builder clearFormatConfiguration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        formatConfiguration_ = null;
        if (formatConfigurationBuilder_ != null) {
          formatConfigurationBuilder_.dispose();
          formatConfigurationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder getFormatConfigurationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getFormatConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getFormatConfigurationOrBuilder() {
        if (formatConfigurationBuilder_ != null) {
          return formatConfigurationBuilder_.getMessageOrBuilder();
        } else {
          return formatConfiguration_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatConfiguration_;
        }
      }
      /**
       * <pre>
       * The formatting configuration of the panel
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_configuration = 2 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder> 
          getFormatConfigurationFieldBuilder() {
        if (formatConfigurationBuilder_ == null) {
          formatConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder>(
                  getFormatConfiguration(),
                  getParentForChildren(),
                  isClean());
          formatConfiguration_ = null;
        }
        return formatConfigurationBuilder_;
      }

      private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent filter_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder> filterBuilder_;
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       * @return Whether the filter field is set.
       */
      public boolean hasFilter() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       * @return The filter.
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getFilter() {
        if (filterBuilder_ == null) {
          return filter_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      public Builder setFilter(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
        } else {
          filterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      public Builder setFilter(
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      public Builder mergeFilter(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent value) {
        if (filterBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            filter_ != null &&
            filter_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance()) {
            getFilterBuilder().mergeFrom(value);
          } else {
            filter_ = value;
          }
        } else {
          filterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      public Builder clearFilter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filter_ = null;
        if (filterBuilder_ != null) {
          filterBuilder_.dispose();
          filterBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder getFilterBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_ == null ?
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : filter_;
        }
      }
      /**
       * <pre>
       * The panel filter.
       * </pre>
       *
       * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent filter = 3 [lazy = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder>(
                  getFilter(),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      private int bufferSize_ ;
      /**
       * <pre>
       * The buffer size.
       * </pre>
       *
       * <code>optional int32 buffer_size = 4;</code>
       * @return Whether the bufferSize field is set.
       */
      @java.lang.Override
      public boolean hasBufferSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The buffer size.
       * </pre>
       *
       * <code>optional int32 buffer_size = 4;</code>
       * @return The bufferSize.
       */
      @java.lang.Override
      public int getBufferSize() {
        return bufferSize_;
      }
      /**
       * <pre>
       * The buffer size.
       * </pre>
       *
       * <code>optional int32 buffer_size = 4;</code>
       * @param value The bufferSize to set.
       * @return This builder for chaining.
       */
      public Builder setBufferSize(int value) {

        bufferSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The buffer size.
       * </pre>
       *
       * <code>optional int32 buffer_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBufferSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bufferSize_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:android_studio.LogcatUsageEvent.LogcatPanelEvent)
    }

    // @@protoc_insertion_point(class_scope:android_studio.LogcatUsageEvent.LogcatPanelEvent)
    private static final com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent();
    }

    public static com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogcatPanelEvent>
        PARSER = new com.google.protobuf.AbstractParser<LogcatPanelEvent>() {
      @java.lang.Override
      public LogcatPanelEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogcatPanelEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogcatPanelEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <pre>
   * The event type
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.Type type = 1;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The event type
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.Type type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type getType() {
    com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type result = com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type.forNumber(type_);
    return result == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type.UNKNOWN_EVENT_TYPE : result;
  }

  public static final int FORMAT_DIALOG_FIELD_NUMBER = 2;
  private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration formatDialog_;
  /**
   * <pre>
   * Historical, no longer used for writing as of 02/2022
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
   * @deprecated android_studio.LogcatUsageEvent.format_dialog is deprecated.
   *     See studio_stats.proto;l=13633
   * @return Whether the formatDialog field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasFormatDialog() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Historical, no longer used for writing as of 02/2022
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
   * @deprecated android_studio.LogcatUsageEvent.format_dialog is deprecated.
   *     See studio_stats.proto;l=13633
   * @return The formatDialog.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getFormatDialog() {
    return formatDialog_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatDialog_;
  }
  /**
   * <pre>
   * Historical, no longer used for writing as of 02/2022
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getFormatDialogOrBuilder() {
    return formatDialog_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatDialog_;
  }

  public static final int LOGCAT_FILTER_FIELD_NUMBER = 3;
  private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent logcatFilter_;
  /**
   * <pre>
   * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
   * @return Whether the logcatFilter field is set.
   */
  @java.lang.Override
  public boolean hasLogcatFilter() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
   * @return The logcatFilter.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getLogcatFilter() {
    return logcatFilter_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : logcatFilter_;
  }
  /**
   * <pre>
   * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder getLogcatFilterOrBuilder() {
    return logcatFilter_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : logcatFilter_;
  }

  public static final int FORMAT_DIALOG_APPLIED_FIELD_NUMBER = 4;
  private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog formatDialogApplied_;
  /**
   * <pre>
   * The Logcat format configuration set by the format dialog
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
   * @return Whether the formatDialogApplied field is set.
   */
  @java.lang.Override
  public boolean hasFormatDialogApplied() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The Logcat format configuration set by the format dialog
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
   * @return The formatDialogApplied.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog getFormatDialogApplied() {
    return formatDialogApplied_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance() : formatDialogApplied_;
  }
  /**
   * <pre>
   * The Logcat format configuration set by the format dialog
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialogOrBuilder getFormatDialogAppliedOrBuilder() {
    return formatDialogApplied_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance() : formatDialogApplied_;
  }

  public static final int PANEL_ADDED_FIELD_NUMBER = 5;
  private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent panelAdded_;
  /**
   * <pre>
   * A Logcat panel was added
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
   * @return Whether the panelAdded field is set.
   */
  @java.lang.Override
  public boolean hasPanelAdded() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * A Logcat panel was added
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
   * @return The panelAdded.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent getPanelAdded() {
    return panelAdded_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance() : panelAdded_;
  }
  /**
   * <pre>
   * A Logcat panel was added
   * </pre>
   *
   * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEventOrBuilder getPanelAddedOrBuilder() {
    return panelAdded_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance() : panelAdded_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getFormatDialog());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getLogcatFilter());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getFormatDialogApplied());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getPanelAdded());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getFormatDialog());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getLogcatFilter());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getFormatDialogApplied());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getPanelAdded());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.LogcatUsageEvent other = (com.google.wireless.android.sdk.stats.LogcatUsageEvent) obj;

    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasFormatDialog() != other.hasFormatDialog()) return false;
    if (hasFormatDialog()) {
      if (!getFormatDialog()
          .equals(other.getFormatDialog())) return false;
    }
    if (hasLogcatFilter() != other.hasLogcatFilter()) return false;
    if (hasLogcatFilter()) {
      if (!getLogcatFilter()
          .equals(other.getLogcatFilter())) return false;
    }
    if (hasFormatDialogApplied() != other.hasFormatDialogApplied()) return false;
    if (hasFormatDialogApplied()) {
      if (!getFormatDialogApplied()
          .equals(other.getFormatDialogApplied())) return false;
    }
    if (hasPanelAdded() != other.hasPanelAdded()) return false;
    if (hasPanelAdded()) {
      if (!getPanelAdded()
          .equals(other.getPanelAdded())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasFormatDialog()) {
      hash = (37 * hash) + FORMAT_DIALOG_FIELD_NUMBER;
      hash = (53 * hash) + getFormatDialog().hashCode();
    }
    if (hasLogcatFilter()) {
      hash = (37 * hash) + LOGCAT_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getLogcatFilter().hashCode();
    }
    if (hasFormatDialogApplied()) {
      hash = (37 * hash) + FORMAT_DIALOG_APPLIED_FIELD_NUMBER;
      hash = (53 * hash) + getFormatDialogApplied().hashCode();
    }
    if (hasPanelAdded()) {
      hash = (37 * hash) + PANEL_ADDED_FIELD_NUMBER;
      hash = (53 * hash) + getPanelAdded().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.LogcatUsageEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Events raised by user interactions with Logcat tool windows
   * </pre>
   *
   * Protobuf type {@code android_studio.LogcatUsageEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.LogcatUsageEvent)
      com.google.wireless.android.sdk.stats.LogcatUsageEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.class, com.google.wireless.android.sdk.stats.LogcatUsageEvent.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.LogcatUsageEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFormatDialogFieldBuilder();
        getLogcatFilterFieldBuilder();
        getFormatDialogAppliedFieldBuilder();
        getPanelAddedFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      formatDialog_ = null;
      if (formatDialogBuilder_ != null) {
        formatDialogBuilder_.dispose();
        formatDialogBuilder_ = null;
      }
      logcatFilter_ = null;
      if (logcatFilterBuilder_ != null) {
        logcatFilterBuilder_.dispose();
        logcatFilterBuilder_ = null;
      }
      formatDialogApplied_ = null;
      if (formatDialogAppliedBuilder_ != null) {
        formatDialogAppliedBuilder_.dispose();
        formatDialogAppliedBuilder_ = null;
      }
      panelAdded_ = null;
      if (panelAddedBuilder_ != null) {
        panelAddedBuilder_.dispose();
        panelAddedBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LogcatUsageEvent_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.LogcatUsageEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent build() {
      com.google.wireless.android.sdk.stats.LogcatUsageEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent buildPartial() {
      com.google.wireless.android.sdk.stats.LogcatUsageEvent result = new com.google.wireless.android.sdk.stats.LogcatUsageEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.LogcatUsageEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.formatDialog_ = formatDialogBuilder_ == null
            ? formatDialog_
            : formatDialogBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.logcatFilter_ = logcatFilterBuilder_ == null
            ? logcatFilter_
            : logcatFilterBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.formatDialogApplied_ = formatDialogAppliedBuilder_ == null
            ? formatDialogApplied_
            : formatDialogAppliedBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.panelAdded_ = panelAddedBuilder_ == null
            ? panelAdded_
            : panelAddedBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.LogcatUsageEvent) {
        return mergeFrom((com.google.wireless.android.sdk.stats.LogcatUsageEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.LogcatUsageEvent other) {
      if (other == com.google.wireless.android.sdk.stats.LogcatUsageEvent.getDefaultInstance()) return this;
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasFormatDialog()) {
        mergeFormatDialog(other.getFormatDialog());
      }
      if (other.hasLogcatFilter()) {
        mergeLogcatFilter(other.getLogcatFilter());
      }
      if (other.hasFormatDialogApplied()) {
        mergeFormatDialogApplied(other.getFormatDialogApplied());
      }
      if (other.hasPanelAdded()) {
        mergePanelAdded(other.getPanelAdded());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type tmpValue =
                  com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                type_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getFormatDialogFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getLogcatFilterFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getFormatDialogAppliedFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getPanelAddedFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * The event type
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The event type
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type getType() {
      com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type result = com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type.forNumber(type_);
      return result == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type.UNKNOWN_EVENT_TYPE : result;
    }
    /**
     * <pre>
     * The event type
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.Type type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.wireless.android.sdk.stats.LogcatUsageEvent.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The event type
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.Type type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration formatDialog_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder> formatDialogBuilder_;
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.format_dialog is deprecated.
     *     See studio_stats.proto;l=13633
     * @return Whether the formatDialog field is set.
     */
    @java.lang.Deprecated public boolean hasFormatDialog() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     * @deprecated android_studio.LogcatUsageEvent.format_dialog is deprecated.
     *     See studio_stats.proto;l=13633
     * @return The formatDialog.
     */
    @java.lang.Deprecated public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration getFormatDialog() {
      if (formatDialogBuilder_ == null) {
        return formatDialog_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatDialog_;
      } else {
        return formatDialogBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    @java.lang.Deprecated public Builder setFormatDialog(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration value) {
      if (formatDialogBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        formatDialog_ = value;
      } else {
        formatDialogBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    @java.lang.Deprecated public Builder setFormatDialog(
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder builderForValue) {
      if (formatDialogBuilder_ == null) {
        formatDialog_ = builderForValue.build();
      } else {
        formatDialogBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    @java.lang.Deprecated public Builder mergeFormatDialog(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration value) {
      if (formatDialogBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          formatDialog_ != null &&
          formatDialog_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance()) {
          getFormatDialogBuilder().mergeFrom(value);
        } else {
          formatDialog_ = value;
        }
      } else {
        formatDialogBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    @java.lang.Deprecated public Builder clearFormatDialog() {
      bitField0_ = (bitField0_ & ~0x00000002);
      formatDialog_ = null;
      if (formatDialogBuilder_ != null) {
        formatDialogBuilder_.dispose();
        formatDialogBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    @java.lang.Deprecated public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder getFormatDialogBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getFormatDialogFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    @java.lang.Deprecated public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder getFormatDialogOrBuilder() {
      if (formatDialogBuilder_ != null) {
        return formatDialogBuilder_.getMessageOrBuilder();
      } else {
        return formatDialog_ == null ?
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.getDefaultInstance() : formatDialog_;
      }
    }
    /**
     * <pre>
     * Historical, no longer used for writing as of 02/2022
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatConfiguration format_dialog = 2 [deprecated = true, lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder> 
        getFormatDialogFieldBuilder() {
      if (formatDialogBuilder_ == null) {
        formatDialogBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfiguration.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatConfigurationOrBuilder>(
                getFormatDialog(),
                getParentForChildren(),
                isClean());
        formatDialog_ = null;
      }
      return formatDialogBuilder_;
    }

    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent logcatFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder> logcatFilterBuilder_;
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     * @return Whether the logcatFilter field is set.
     */
    public boolean hasLogcatFilter() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     * @return The logcatFilter.
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent getLogcatFilter() {
      if (logcatFilterBuilder_ == null) {
        return logcatFilter_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : logcatFilter_;
      } else {
        return logcatFilterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    public Builder setLogcatFilter(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent value) {
      if (logcatFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logcatFilter_ = value;
      } else {
        logcatFilterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    public Builder setLogcatFilter(
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder builderForValue) {
      if (logcatFilterBuilder_ == null) {
        logcatFilter_ = builderForValue.build();
      } else {
        logcatFilterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    public Builder mergeLogcatFilter(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent value) {
      if (logcatFilterBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          logcatFilter_ != null &&
          logcatFilter_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance()) {
          getLogcatFilterBuilder().mergeFrom(value);
        } else {
          logcatFilter_ = value;
        }
      } else {
        logcatFilterBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    public Builder clearLogcatFilter() {
      bitField0_ = (bitField0_ & ~0x00000004);
      logcatFilter_ = null;
      if (logcatFilterBuilder_ != null) {
        logcatFilterBuilder_.dispose();
        logcatFilterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder getLogcatFilterBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getLogcatFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder getLogcatFilterOrBuilder() {
      if (logcatFilterBuilder_ != null) {
        return logcatFilterBuilder_.getMessageOrBuilder();
      } else {
        return logcatFilter_ == null ?
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.getDefaultInstance() : logcatFilter_;
      }
    }
    /**
     * <pre>
     * A logcat filter. Set when type is FILTER_ADDED_TO_HISTORY.
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFilterEvent logcat_filter = 3 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder> 
        getLogcatFilterFieldBuilder() {
      if (logcatFilterBuilder_ == null) {
        logcatFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFilterEventOrBuilder>(
                getLogcatFilter(),
                getParentForChildren(),
                isClean());
        logcatFilter_ = null;
      }
      return logcatFilterBuilder_;
    }

    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog formatDialogApplied_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialogOrBuilder> formatDialogAppliedBuilder_;
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     * @return Whether the formatDialogApplied field is set.
     */
    public boolean hasFormatDialogApplied() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     * @return The formatDialogApplied.
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog getFormatDialogApplied() {
      if (formatDialogAppliedBuilder_ == null) {
        return formatDialogApplied_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance() : formatDialogApplied_;
      } else {
        return formatDialogAppliedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    public Builder setFormatDialogApplied(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog value) {
      if (formatDialogAppliedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        formatDialogApplied_ = value;
      } else {
        formatDialogAppliedBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    public Builder setFormatDialogApplied(
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder builderForValue) {
      if (formatDialogAppliedBuilder_ == null) {
        formatDialogApplied_ = builderForValue.build();
      } else {
        formatDialogAppliedBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    public Builder mergeFormatDialogApplied(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog value) {
      if (formatDialogAppliedBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          formatDialogApplied_ != null &&
          formatDialogApplied_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance()) {
          getFormatDialogAppliedBuilder().mergeFrom(value);
        } else {
          formatDialogApplied_ = value;
        }
      } else {
        formatDialogAppliedBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    public Builder clearFormatDialogApplied() {
      bitField0_ = (bitField0_ & ~0x00000008);
      formatDialogApplied_ = null;
      if (formatDialogAppliedBuilder_ != null) {
        formatDialogAppliedBuilder_.dispose();
        formatDialogAppliedBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder getFormatDialogAppliedBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getFormatDialogAppliedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialogOrBuilder getFormatDialogAppliedOrBuilder() {
      if (formatDialogAppliedBuilder_ != null) {
        return formatDialogAppliedBuilder_.getMessageOrBuilder();
      } else {
        return formatDialogApplied_ == null ?
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.getDefaultInstance() : formatDialogApplied_;
      }
    }
    /**
     * <pre>
     * The Logcat format configuration set by the format dialog
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatFormatDialog format_dialog_applied = 4 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialogOrBuilder> 
        getFormatDialogAppliedFieldBuilder() {
      if (formatDialogAppliedBuilder_ == null) {
        formatDialogAppliedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialog.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatFormatDialogOrBuilder>(
                getFormatDialogApplied(),
                getParentForChildren(),
                isClean());
        formatDialogApplied_ = null;
      }
      return formatDialogAppliedBuilder_;
    }

    private com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent panelAdded_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEventOrBuilder> panelAddedBuilder_;
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     * @return Whether the panelAdded field is set.
     */
    public boolean hasPanelAdded() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     * @return The panelAdded.
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent getPanelAdded() {
      if (panelAddedBuilder_ == null) {
        return panelAdded_ == null ? com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance() : panelAdded_;
      } else {
        return panelAddedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    public Builder setPanelAdded(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent value) {
      if (panelAddedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        panelAdded_ = value;
      } else {
        panelAddedBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    public Builder setPanelAdded(
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder builderForValue) {
      if (panelAddedBuilder_ == null) {
        panelAdded_ = builderForValue.build();
      } else {
        panelAddedBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    public Builder mergePanelAdded(com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent value) {
      if (panelAddedBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          panelAdded_ != null &&
          panelAdded_ != com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance()) {
          getPanelAddedBuilder().mergeFrom(value);
        } else {
          panelAdded_ = value;
        }
      } else {
        panelAddedBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    public Builder clearPanelAdded() {
      bitField0_ = (bitField0_ & ~0x00000010);
      panelAdded_ = null;
      if (panelAddedBuilder_ != null) {
        panelAddedBuilder_.dispose();
        panelAddedBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder getPanelAddedBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getPanelAddedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEventOrBuilder getPanelAddedOrBuilder() {
      if (panelAddedBuilder_ != null) {
        return panelAddedBuilder_.getMessageOrBuilder();
      } else {
        return panelAdded_ == null ?
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.getDefaultInstance() : panelAdded_;
      }
    }
    /**
     * <pre>
     * A Logcat panel was added
     * </pre>
     *
     * <code>optional .android_studio.LogcatUsageEvent.LogcatPanelEvent panel_added = 5 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEventOrBuilder> 
        getPanelAddedFieldBuilder() {
      if (panelAddedBuilder_ == null) {
        panelAddedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEvent.Builder, com.google.wireless.android.sdk.stats.LogcatUsageEvent.LogcatPanelEventOrBuilder>(
                getPanelAdded(),
                getParentForChildren(),
                isClean());
        panelAdded_ = null;
      }
      return panelAddedBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.LogcatUsageEvent)
  }

  // @@protoc_insertion_point(class_scope:android_studio.LogcatUsageEvent)
  private static final com.google.wireless.android.sdk.stats.LogcatUsageEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LogcatUsageEvent();
  }

  public static com.google.wireless.android.sdk.stats.LogcatUsageEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<LogcatUsageEvent>
      PARSER = new com.google.protobuf.AbstractParser<LogcatUsageEvent>() {
    @java.lang.Override
    public LogcatUsageEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LogcatUsageEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LogcatUsageEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LogcatUsageEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

