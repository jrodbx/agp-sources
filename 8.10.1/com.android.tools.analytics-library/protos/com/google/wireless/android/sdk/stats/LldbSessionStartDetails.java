// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

/**
 * Protobuf type {@code android_studio.LldbSessionStartDetails}
 */
public final class LldbSessionStartDetails extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:android_studio.LldbSessionStartDetails)
    LldbSessionStartDetailsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LldbSessionStartDetails.newBuilder() to construct.
  private LldbSessionStartDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LldbSessionStartDetails() {
    debugSessionId_ = "";
    debuggerType_ = 0;
    runConfigurationType_ = 0;
    lldbVersion_ = "";
    starterType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LldbSessionStartDetails();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LldbSessionStartDetails_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LldbSessionStartDetails_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.wireless.android.sdk.stats.LldbSessionStartDetails.class, com.google.wireless.android.sdk.stats.LldbSessionStartDetails.Builder.class);
  }

  /**
   * <pre>
   * Describes session starter implementations.
   * </pre>
   *
   * Protobuf enum {@code android_studio.LldbSessionStartDetails.StarterType}
   */
  public enum StarterType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_STARTER_TYPE = 0;</code>
     */
    UNKNOWN_STARTER_TYPE(0),
    /**
     * <code>ROOT_SHELL_STARTER_TYPE = 1;</code>
     */
    ROOT_SHELL_STARTER_TYPE(1),
    /**
     * <code>RUN_AS_SHELL_STARTER_TYPE = 2;</code>
     */
    RUN_AS_SHELL_STARTER_TYPE(2),
    /**
     * <code>INJECTOR_STARTER_TYPE = 3;</code>
     */
    INJECTOR_STARTER_TYPE(3),
    ;

    /**
     * <code>UNKNOWN_STARTER_TYPE = 0;</code>
     */
    public static final int UNKNOWN_STARTER_TYPE_VALUE = 0;
    /**
     * <code>ROOT_SHELL_STARTER_TYPE = 1;</code>
     */
    public static final int ROOT_SHELL_STARTER_TYPE_VALUE = 1;
    /**
     * <code>RUN_AS_SHELL_STARTER_TYPE = 2;</code>
     */
    public static final int RUN_AS_SHELL_STARTER_TYPE_VALUE = 2;
    /**
     * <code>INJECTOR_STARTER_TYPE = 3;</code>
     */
    public static final int INJECTOR_STARTER_TYPE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StarterType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static StarterType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_STARTER_TYPE;
        case 1: return ROOT_SHELL_STARTER_TYPE;
        case 2: return RUN_AS_SHELL_STARTER_TYPE;
        case 3: return INJECTOR_STARTER_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StarterType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StarterType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StarterType>() {
            public StarterType findValueByNumber(int number) {
              return StarterType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.LldbSessionStartDetails.getDescriptor().getEnumTypes().get(0);
    }

    private static final StarterType[] VALUES = values();

    public static StarterType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StarterType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:android_studio.LldbSessionStartDetails.StarterType)
  }

  private int bitField0_;
  public static final int DEBUG_SESSION_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object debugSessionId_ = "";
  /**
   * <pre>
   * A UUID used to relate start and end of a native debug session.
   * </pre>
   *
   * <code>optional string debug_session_id = 1;</code>
   * @return Whether the debugSessionId field is set.
   */
  @java.lang.Override
  public boolean hasDebugSessionId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A UUID used to relate start and end of a native debug session.
   * </pre>
   *
   * <code>optional string debug_session_id = 1;</code>
   * @return The debugSessionId.
   */
  @java.lang.Override
  public java.lang.String getDebugSessionId() {
    java.lang.Object ref = debugSessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        debugSessionId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * A UUID used to relate start and end of a native debug session.
   * </pre>
   *
   * <code>optional string debug_session_id = 1;</code>
   * @return The bytes for debugSessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDebugSessionIdBytes() {
    java.lang.Object ref = debugSessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      debugSessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEBUGGER_TYPE_FIELD_NUMBER = 2;
  private int debuggerType_ = 0;
  /**
   * <pre>
   * Debugger type for this session
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 2;</code>
   * @return Whether the debuggerType field is set.
   */
  @java.lang.Override public boolean hasDebuggerType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Debugger type for this session
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 2;</code>
   * @return The debuggerType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType getDebuggerType() {
    com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType result = com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType.forNumber(debuggerType_);
    return result == null ? com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType.UNKNOWN_DEBUGGER_TYPE : result;
  }

  public static final int RUN_CONFIGURATION_TYPE_FIELD_NUMBER = 3;
  private int runConfigurationType_ = 0;
  /**
   * <pre>
   * Run configuration that was used to start this session.
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 3;</code>
   * @return Whether the runConfigurationType field is set.
   */
  @java.lang.Override public boolean hasRunConfigurationType() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Run configuration that was used to start this session.
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 3;</code>
   * @return The runConfigurationType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType getRunConfigurationType() {
    com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType result = com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType.forNumber(runConfigurationType_);
    return result == null ? com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType.UNKNOWN_RUN_CONFIGURATION_TYPE : result;
  }

  public static final int AUTO_DEBUGGER_FIELD_NUMBER = 4;
  private boolean autoDebugger_ = false;
  /**
   * <pre>
   * True if debugger_type was chosen via the Auto debugger type.
   * </pre>
   *
   * <code>optional bool auto_debugger = 4;</code>
   * @return Whether the autoDebugger field is set.
   */
  @java.lang.Override
  public boolean hasAutoDebugger() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * True if debugger_type was chosen via the Auto debugger type.
   * </pre>
   *
   * <code>optional bool auto_debugger = 4;</code>
   * @return The autoDebugger.
   */
  @java.lang.Override
  public boolean getAutoDebugger() {
    return autoDebugger_;
  }

  public static final int DEVICE_INFO_FIELD_NUMBER = 5;
  private com.google.wireless.android.sdk.stats.DeviceInfo deviceInfo_;
  /**
   * <pre>
   * Device on which the debuggable app is running.
   * </pre>
   *
   * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
   * @return Whether the deviceInfo field is set.
   */
  @java.lang.Override
  public boolean hasDeviceInfo() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Device on which the debuggable app is running.
   * </pre>
   *
   * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
   * @return The deviceInfo.
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DeviceInfo getDeviceInfo() {
    return deviceInfo_ == null ? com.google.wireless.android.sdk.stats.DeviceInfo.getDefaultInstance() : deviceInfo_;
  }
  /**
   * <pre>
   * Device on which the debuggable app is running.
   * </pre>
   *
   * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.wireless.android.sdk.stats.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
    return deviceInfo_ == null ? com.google.wireless.android.sdk.stats.DeviceInfo.getDefaultInstance() : deviceInfo_;
  }

  public static final int LLDB_VERSION_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object lldbVersion_ = "";
  /**
   * <pre>
   * Version of the native debugger.
   * </pre>
   *
   * <code>optional string lldb_version = 6;</code>
   * @return Whether the lldbVersion field is set.
   */
  @java.lang.Override
  public boolean hasLldbVersion() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Version of the native debugger.
   * </pre>
   *
   * <code>optional string lldb_version = 6;</code>
   * @return The lldbVersion.
   */
  @java.lang.Override
  public java.lang.String getLldbVersion() {
    java.lang.Object ref = lldbVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        lldbVersion_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Version of the native debugger.
   * </pre>
   *
   * <code>optional string lldb_version = 6;</code>
   * @return The bytes for lldbVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLldbVersionBytes() {
    java.lang.Object ref = lldbVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      lldbVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STARTER_TYPE_FIELD_NUMBER = 7;
  private int starterType_ = 0;
  /**
   * <pre>
   * Type of starter used to start this session.
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionStartDetails.StarterType starter_type = 7;</code>
   * @return Whether the starterType field is set.
   */
  @java.lang.Override public boolean hasStarterType() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Type of starter used to start this session.
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionStartDetails.StarterType starter_type = 7;</code>
   * @return The starterType.
   */
  @java.lang.Override public com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType getStarterType() {
    com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType result = com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType.forNumber(starterType_);
    return result == null ? com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType.UNKNOWN_STARTER_TYPE : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, debugSessionId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, debuggerType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeEnum(3, runConfigurationType_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBool(4, autoDebugger_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getDeviceInfo());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lldbVersion_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeEnum(7, starterType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, debugSessionId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, debuggerType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, runConfigurationType_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, autoDebugger_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDeviceInfo());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lldbVersion_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, starterType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.wireless.android.sdk.stats.LldbSessionStartDetails)) {
      return super.equals(obj);
    }
    com.google.wireless.android.sdk.stats.LldbSessionStartDetails other = (com.google.wireless.android.sdk.stats.LldbSessionStartDetails) obj;

    if (hasDebugSessionId() != other.hasDebugSessionId()) return false;
    if (hasDebugSessionId()) {
      if (!getDebugSessionId()
          .equals(other.getDebugSessionId())) return false;
    }
    if (hasDebuggerType() != other.hasDebuggerType()) return false;
    if (hasDebuggerType()) {
      if (debuggerType_ != other.debuggerType_) return false;
    }
    if (hasRunConfigurationType() != other.hasRunConfigurationType()) return false;
    if (hasRunConfigurationType()) {
      if (runConfigurationType_ != other.runConfigurationType_) return false;
    }
    if (hasAutoDebugger() != other.hasAutoDebugger()) return false;
    if (hasAutoDebugger()) {
      if (getAutoDebugger()
          != other.getAutoDebugger()) return false;
    }
    if (hasDeviceInfo() != other.hasDeviceInfo()) return false;
    if (hasDeviceInfo()) {
      if (!getDeviceInfo()
          .equals(other.getDeviceInfo())) return false;
    }
    if (hasLldbVersion() != other.hasLldbVersion()) return false;
    if (hasLldbVersion()) {
      if (!getLldbVersion()
          .equals(other.getLldbVersion())) return false;
    }
    if (hasStarterType() != other.hasStarterType()) return false;
    if (hasStarterType()) {
      if (starterType_ != other.starterType_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDebugSessionId()) {
      hash = (37 * hash) + DEBUG_SESSION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDebugSessionId().hashCode();
    }
    if (hasDebuggerType()) {
      hash = (37 * hash) + DEBUGGER_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + debuggerType_;
    }
    if (hasRunConfigurationType()) {
      hash = (37 * hash) + RUN_CONFIGURATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + runConfigurationType_;
    }
    if (hasAutoDebugger()) {
      hash = (37 * hash) + AUTO_DEBUGGER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutoDebugger());
    }
    if (hasDeviceInfo()) {
      hash = (37 * hash) + DEVICE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceInfo().hashCode();
    }
    if (hasLldbVersion()) {
      hash = (37 * hash) + LLDB_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getLldbVersion().hashCode();
    }
    if (hasStarterType()) {
      hash = (37 * hash) + STARTER_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + starterType_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.wireless.android.sdk.stats.LldbSessionStartDetails prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code android_studio.LldbSessionStartDetails}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:android_studio.LldbSessionStartDetails)
      com.google.wireless.android.sdk.stats.LldbSessionStartDetailsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LldbSessionStartDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LldbSessionStartDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.wireless.android.sdk.stats.LldbSessionStartDetails.class, com.google.wireless.android.sdk.stats.LldbSessionStartDetails.Builder.class);
    }

    // Construct using com.google.wireless.android.sdk.stats.LldbSessionStartDetails.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDeviceInfoFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      debugSessionId_ = "";
      debuggerType_ = 0;
      runConfigurationType_ = 0;
      autoDebugger_ = false;
      deviceInfo_ = null;
      if (deviceInfoBuilder_ != null) {
        deviceInfoBuilder_.dispose();
        deviceInfoBuilder_ = null;
      }
      lldbVersion_ = "";
      starterType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.wireless.android.sdk.stats.AndroidStudioStats.internal_static_android_studio_LldbSessionStartDetails_descriptor;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LldbSessionStartDetails getDefaultInstanceForType() {
      return com.google.wireless.android.sdk.stats.LldbSessionStartDetails.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LldbSessionStartDetails build() {
      com.google.wireless.android.sdk.stats.LldbSessionStartDetails result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LldbSessionStartDetails buildPartial() {
      com.google.wireless.android.sdk.stats.LldbSessionStartDetails result = new com.google.wireless.android.sdk.stats.LldbSessionStartDetails(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.wireless.android.sdk.stats.LldbSessionStartDetails result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.debugSessionId_ = debugSessionId_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.debuggerType_ = debuggerType_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.runConfigurationType_ = runConfigurationType_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.autoDebugger_ = autoDebugger_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.deviceInfo_ = deviceInfoBuilder_ == null
            ? deviceInfo_
            : deviceInfoBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.lldbVersion_ = lldbVersion_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.starterType_ = starterType_;
        to_bitField0_ |= 0x00000040;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.wireless.android.sdk.stats.LldbSessionStartDetails) {
        return mergeFrom((com.google.wireless.android.sdk.stats.LldbSessionStartDetails)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.wireless.android.sdk.stats.LldbSessionStartDetails other) {
      if (other == com.google.wireless.android.sdk.stats.LldbSessionStartDetails.getDefaultInstance()) return this;
      if (other.hasDebugSessionId()) {
        debugSessionId_ = other.debugSessionId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasDebuggerType()) {
        setDebuggerType(other.getDebuggerType());
      }
      if (other.hasRunConfigurationType()) {
        setRunConfigurationType(other.getRunConfigurationType());
      }
      if (other.hasAutoDebugger()) {
        setAutoDebugger(other.getAutoDebugger());
      }
      if (other.hasDeviceInfo()) {
        mergeDeviceInfo(other.getDeviceInfo());
      }
      if (other.hasLldbVersion()) {
        lldbVersion_ = other.lldbVersion_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasStarterType()) {
        setStarterType(other.getStarterType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              debugSessionId_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType tmpValue =
                  com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                debuggerType_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType tmpValue =
                  com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(3, tmpRaw);
              } else {
                runConfigurationType_ = tmpRaw;
                bitField0_ |= 0x00000004;
              }
              break;
            } // case 24
            case 32: {
              autoDebugger_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getDeviceInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              lldbVersion_ = input.readBytes();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              int tmpRaw = input.readEnum();
              com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType tmpValue =
                  com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(7, tmpRaw);
              } else {
                starterType_ = tmpRaw;
                bitField0_ |= 0x00000040;
              }
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object debugSessionId_ = "";
    /**
     * <pre>
     * A UUID used to relate start and end of a native debug session.
     * </pre>
     *
     * <code>optional string debug_session_id = 1;</code>
     * @return Whether the debugSessionId field is set.
     */
    public boolean hasDebugSessionId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A UUID used to relate start and end of a native debug session.
     * </pre>
     *
     * <code>optional string debug_session_id = 1;</code>
     * @return The debugSessionId.
     */
    public java.lang.String getDebugSessionId() {
      java.lang.Object ref = debugSessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          debugSessionId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A UUID used to relate start and end of a native debug session.
     * </pre>
     *
     * <code>optional string debug_session_id = 1;</code>
     * @return The bytes for debugSessionId.
     */
    public com.google.protobuf.ByteString
        getDebugSessionIdBytes() {
      java.lang.Object ref = debugSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        debugSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A UUID used to relate start and end of a native debug session.
     * </pre>
     *
     * <code>optional string debug_session_id = 1;</code>
     * @param value The debugSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setDebugSessionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      debugSessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A UUID used to relate start and end of a native debug session.
     * </pre>
     *
     * <code>optional string debug_session_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDebugSessionId() {
      debugSessionId_ = getDefaultInstance().getDebugSessionId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A UUID used to relate start and end of a native debug session.
     * </pre>
     *
     * <code>optional string debug_session_id = 1;</code>
     * @param value The bytes for debugSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setDebugSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      debugSessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int debuggerType_ = 0;
    /**
     * <pre>
     * Debugger type for this session
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 2;</code>
     * @return Whether the debuggerType field is set.
     */
    @java.lang.Override public boolean hasDebuggerType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Debugger type for this session
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 2;</code>
     * @return The debuggerType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType getDebuggerType() {
      com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType result = com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType.forNumber(debuggerType_);
      return result == null ? com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType.UNKNOWN_DEBUGGER_TYPE : result;
    }
    /**
     * <pre>
     * Debugger type for this session
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 2;</code>
     * @param value The debuggerType to set.
     * @return This builder for chaining.
     */
    public Builder setDebuggerType(com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      debuggerType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Debugger type for this session
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDebuggerType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      debuggerType_ = 0;
      onChanged();
      return this;
    }

    private int runConfigurationType_ = 0;
    /**
     * <pre>
     * Run configuration that was used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 3;</code>
     * @return Whether the runConfigurationType field is set.
     */
    @java.lang.Override public boolean hasRunConfigurationType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Run configuration that was used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 3;</code>
     * @return The runConfigurationType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType getRunConfigurationType() {
      com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType result = com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType.forNumber(runConfigurationType_);
      return result == null ? com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType.UNKNOWN_RUN_CONFIGURATION_TYPE : result;
    }
    /**
     * <pre>
     * Run configuration that was used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 3;</code>
     * @param value The runConfigurationType to set.
     * @return This builder for chaining.
     */
    public Builder setRunConfigurationType(com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      runConfigurationType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Run configuration that was used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRunConfigurationType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      runConfigurationType_ = 0;
      onChanged();
      return this;
    }

    private boolean autoDebugger_ ;
    /**
     * <pre>
     * True if debugger_type was chosen via the Auto debugger type.
     * </pre>
     *
     * <code>optional bool auto_debugger = 4;</code>
     * @return Whether the autoDebugger field is set.
     */
    @java.lang.Override
    public boolean hasAutoDebugger() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * True if debugger_type was chosen via the Auto debugger type.
     * </pre>
     *
     * <code>optional bool auto_debugger = 4;</code>
     * @return The autoDebugger.
     */
    @java.lang.Override
    public boolean getAutoDebugger() {
      return autoDebugger_;
    }
    /**
     * <pre>
     * True if debugger_type was chosen via the Auto debugger type.
     * </pre>
     *
     * <code>optional bool auto_debugger = 4;</code>
     * @param value The autoDebugger to set.
     * @return This builder for chaining.
     */
    public Builder setAutoDebugger(boolean value) {

      autoDebugger_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if debugger_type was chosen via the Auto debugger type.
     * </pre>
     *
     * <code>optional bool auto_debugger = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAutoDebugger() {
      bitField0_ = (bitField0_ & ~0x00000008);
      autoDebugger_ = false;
      onChanged();
      return this;
    }

    private com.google.wireless.android.sdk.stats.DeviceInfo deviceInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DeviceInfo, com.google.wireless.android.sdk.stats.DeviceInfo.Builder, com.google.wireless.android.sdk.stats.DeviceInfoOrBuilder> deviceInfoBuilder_;
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     * @return Whether the deviceInfo field is set.
     */
    public boolean hasDeviceInfo() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     * @return The deviceInfo.
     */
    public com.google.wireless.android.sdk.stats.DeviceInfo getDeviceInfo() {
      if (deviceInfoBuilder_ == null) {
        return deviceInfo_ == null ? com.google.wireless.android.sdk.stats.DeviceInfo.getDefaultInstance() : deviceInfo_;
      } else {
        return deviceInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    public Builder setDeviceInfo(com.google.wireless.android.sdk.stats.DeviceInfo value) {
      if (deviceInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deviceInfo_ = value;
      } else {
        deviceInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    public Builder setDeviceInfo(
        com.google.wireless.android.sdk.stats.DeviceInfo.Builder builderForValue) {
      if (deviceInfoBuilder_ == null) {
        deviceInfo_ = builderForValue.build();
      } else {
        deviceInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    public Builder mergeDeviceInfo(com.google.wireless.android.sdk.stats.DeviceInfo value) {
      if (deviceInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          deviceInfo_ != null &&
          deviceInfo_ != com.google.wireless.android.sdk.stats.DeviceInfo.getDefaultInstance()) {
          getDeviceInfoBuilder().mergeFrom(value);
        } else {
          deviceInfo_ = value;
        }
      } else {
        deviceInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    public Builder clearDeviceInfo() {
      bitField0_ = (bitField0_ & ~0x00000010);
      deviceInfo_ = null;
      if (deviceInfoBuilder_ != null) {
        deviceInfoBuilder_.dispose();
        deviceInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DeviceInfo.Builder getDeviceInfoBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getDeviceInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    public com.google.wireless.android.sdk.stats.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
      if (deviceInfoBuilder_ != null) {
        return deviceInfoBuilder_.getMessageOrBuilder();
      } else {
        return deviceInfo_ == null ?
            com.google.wireless.android.sdk.stats.DeviceInfo.getDefaultInstance() : deviceInfo_;
      }
    }
    /**
     * <pre>
     * Device on which the debuggable app is running.
     * </pre>
     *
     * <code>optional .android_studio.DeviceInfo device_info = 5 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.wireless.android.sdk.stats.DeviceInfo, com.google.wireless.android.sdk.stats.DeviceInfo.Builder, com.google.wireless.android.sdk.stats.DeviceInfoOrBuilder> 
        getDeviceInfoFieldBuilder() {
      if (deviceInfoBuilder_ == null) {
        deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.wireless.android.sdk.stats.DeviceInfo, com.google.wireless.android.sdk.stats.DeviceInfo.Builder, com.google.wireless.android.sdk.stats.DeviceInfoOrBuilder>(
                getDeviceInfo(),
                getParentForChildren(),
                isClean());
        deviceInfo_ = null;
      }
      return deviceInfoBuilder_;
    }

    private java.lang.Object lldbVersion_ = "";
    /**
     * <pre>
     * Version of the native debugger.
     * </pre>
     *
     * <code>optional string lldb_version = 6;</code>
     * @return Whether the lldbVersion field is set.
     */
    public boolean hasLldbVersion() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Version of the native debugger.
     * </pre>
     *
     * <code>optional string lldb_version = 6;</code>
     * @return The lldbVersion.
     */
    public java.lang.String getLldbVersion() {
      java.lang.Object ref = lldbVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lldbVersion_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Version of the native debugger.
     * </pre>
     *
     * <code>optional string lldb_version = 6;</code>
     * @return The bytes for lldbVersion.
     */
    public com.google.protobuf.ByteString
        getLldbVersionBytes() {
      java.lang.Object ref = lldbVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lldbVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Version of the native debugger.
     * </pre>
     *
     * <code>optional string lldb_version = 6;</code>
     * @param value The lldbVersion to set.
     * @return This builder for chaining.
     */
    public Builder setLldbVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      lldbVersion_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of the native debugger.
     * </pre>
     *
     * <code>optional string lldb_version = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLldbVersion() {
      lldbVersion_ = getDefaultInstance().getLldbVersion();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of the native debugger.
     * </pre>
     *
     * <code>optional string lldb_version = 6;</code>
     * @param value The bytes for lldbVersion to set.
     * @return This builder for chaining.
     */
    public Builder setLldbVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      lldbVersion_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private int starterType_ = 0;
    /**
     * <pre>
     * Type of starter used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.LldbSessionStartDetails.StarterType starter_type = 7;</code>
     * @return Whether the starterType field is set.
     */
    @java.lang.Override public boolean hasStarterType() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Type of starter used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.LldbSessionStartDetails.StarterType starter_type = 7;</code>
     * @return The starterType.
     */
    @java.lang.Override
    public com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType getStarterType() {
      com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType result = com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType.forNumber(starterType_);
      return result == null ? com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType.UNKNOWN_STARTER_TYPE : result;
    }
    /**
     * <pre>
     * Type of starter used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.LldbSessionStartDetails.StarterType starter_type = 7;</code>
     * @param value The starterType to set.
     * @return This builder for chaining.
     */
    public Builder setStarterType(com.google.wireless.android.sdk.stats.LldbSessionStartDetails.StarterType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      starterType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of starter used to start this session.
     * </pre>
     *
     * <code>optional .android_studio.LldbSessionStartDetails.StarterType starter_type = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearStarterType() {
      bitField0_ = (bitField0_ & ~0x00000040);
      starterType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:android_studio.LldbSessionStartDetails)
  }

  // @@protoc_insertion_point(class_scope:android_studio.LldbSessionStartDetails)
  private static final com.google.wireless.android.sdk.stats.LldbSessionStartDetails DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.wireless.android.sdk.stats.LldbSessionStartDetails();
  }

  public static com.google.wireless.android.sdk.stats.LldbSessionStartDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<LldbSessionStartDetails>
      PARSER = new com.google.protobuf.AbstractParser<LldbSessionStartDetails>() {
    @java.lang.Override
    public LldbSessionStartDetails parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LldbSessionStartDetails> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LldbSessionStartDetails> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.wireless.android.sdk.stats.LldbSessionStartDetails getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

