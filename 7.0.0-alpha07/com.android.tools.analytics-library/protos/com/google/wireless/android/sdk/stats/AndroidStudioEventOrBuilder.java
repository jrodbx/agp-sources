// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio_stats.proto

package com.google.wireless.android.sdk.stats;

public interface AndroidStudioEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:android_studio.AndroidStudioEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Describes a group of event kinds related to each other.
   * Necessary only for events that were originally being reported to Google
   * Analytics (GA).
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.EventCategory category = 1;</code>
   * @return Whether the category field is set.
   */
  boolean hasCategory();
  /**
   * <pre>
   * Describes a group of event kinds related to each other.
   * Necessary only for events that were originally being reported to Google
   * Analytics (GA).
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.EventCategory category = 1;</code>
   * @return The category.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.EventCategory getCategory();

  /**
   * <pre>
   * Specific kind of event, primary separation key of all Android Studio
   * related events.
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.EventKind kind = 2;</code>
   * @return Whether the kind field is set.
   */
  boolean hasKind();
  /**
   * <pre>
   * Specific kind of event, primary separation key of all Android Studio
   * related events.
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.EventKind kind = 2;</code>
   * @return The kind.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.EventKind getKind();

  /**
   * <pre>
   * The session id is a UUID tracking a single instance of Android Studio
   * to associate events together such as kind = TEST_RUN
   * </pre>
   *
   * <code>optional string studio_session_id = 3;</code>
   * @return Whether the studioSessionId field is set.
   */
  boolean hasStudioSessionId();
  /**
   * <pre>
   * The session id is a UUID tracking a single instance of Android Studio
   * to associate events together such as kind = TEST_RUN
   * </pre>
   *
   * <code>optional string studio_session_id = 3;</code>
   * @return The studioSessionId.
   */
  java.lang.String getStudioSessionId();
  /**
   * <pre>
   * The session id is a UUID tracking a single instance of Android Studio
   * to associate events together such as kind = TEST_RUN
   * </pre>
   *
   * <code>optional string studio_session_id = 3;</code>
   * @return The bytes for studioSessionId.
   */
  com.google.protobuf.ByteString
      getStudioSessionIdBytes();

  /**
   * <pre>
   * Fully set when kind = STUDIO_PING
   * or ANDROID_STUDIO_TEST
   * or ANDROID_STUDIO_THROUGH_GRADLE
   * or kind = EMULATOR_PING
   * or kind = TEST_RUN
   * or kind = GAME_TOOLS_PING
   * or kind = AGDE_PING.
   * The version field is set for most messages.
   * </pre>
   *
   * <code>optional .android_studio.ProductDetails product_details = 4;</code>
   * @return Whether the productDetails field is set.
   */
  boolean hasProductDetails();
  /**
   * <pre>
   * Fully set when kind = STUDIO_PING
   * or ANDROID_STUDIO_TEST
   * or ANDROID_STUDIO_THROUGH_GRADLE
   * or kind = EMULATOR_PING
   * or kind = TEST_RUN
   * or kind = GAME_TOOLS_PING
   * or kind = AGDE_PING.
   * The version field is set for most messages.
   * </pre>
   *
   * <code>optional .android_studio.ProductDetails product_details = 4;</code>
   * @return The productDetails.
   */
  com.google.wireless.android.sdk.stats.ProductDetails getProductDetails();
  /**
   * <pre>
   * Fully set when kind = STUDIO_PING
   * or ANDROID_STUDIO_TEST
   * or ANDROID_STUDIO_THROUGH_GRADLE
   * or kind = EMULATOR_PING
   * or kind = TEST_RUN
   * or kind = GAME_TOOLS_PING
   * or kind = AGDE_PING.
   * The version field is set for most messages.
   * </pre>
   *
   * <code>optional .android_studio.ProductDetails product_details = 4;</code>
   */
  com.google.wireless.android.sdk.stats.ProductDetailsOrBuilder getProductDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = MONITOR_ACTIVATED or kind = MONITOR_RUNNING
   * Deprecated by AndroidProfilerEvent
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.MonitorType monitor_type = 5 [deprecated = true];</code>
   * @return Whether the monitorType field is set.
   */
  @java.lang.Deprecated boolean hasMonitorType();
  /**
   * <pre>
   * set when kind = MONITOR_ACTIVATED or kind = MONITOR_RUNNING
   * Deprecated by AndroidProfilerEvent
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.MonitorType monitor_type = 5 [deprecated = true];</code>
   * @return The monitorType.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.AndroidStudioEvent.MonitorType getMonitorType();

  /**
   * <pre>
   * set when kind = MONITOR_RUNNING
   * Deprecated by AndroidProfilerEvent
   * </pre>
   *
   * <code>optional bool monitor_paused = 6 [deprecated = true];</code>
   * @return Whether the monitorPaused field is set.
   */
  @java.lang.Deprecated boolean hasMonitorPaused();
  /**
   * <pre>
   * set when kind = MONITOR_RUNNING
   * Deprecated by AndroidProfilerEvent
   * </pre>
   *
   * <code>optional bool monitor_paused = 6 [deprecated = true];</code>
   * @return The monitorPaused.
   */
  @java.lang.Deprecated boolean getMonitorPaused();

  /**
   * <pre>
   * set when kind = PROFILING_OPEN or PROFILING_CAPTURE
   * Deprecated by AndroidProfilerEvent
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.ProfilerCaptureType profiler_capture_type = 7 [deprecated = true];</code>
   * @return Whether the profilerCaptureType field is set.
   */
  @java.lang.Deprecated boolean hasProfilerCaptureType();
  /**
   * <pre>
   * set when kind = PROFILING_OPEN or PROFILING_CAPTURE
   * Deprecated by AndroidProfilerEvent
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.ProfilerCaptureType profiler_capture_type = 7 [deprecated = true];</code>
   * @return The profilerCaptureType.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.AndroidStudioEvent.ProfilerCaptureType getProfilerCaptureType();

  /**
   * <pre>
   * set when kind = CLOUD_TESTING_BACKEND_ERROR
   * </pre>
   *
   * <code>optional string cloud_testing_error_message = 8;</code>
   * @return Whether the cloudTestingErrorMessage field is set.
   */
  boolean hasCloudTestingErrorMessage();
  /**
   * <pre>
   * set when kind = CLOUD_TESTING_BACKEND_ERROR
   * </pre>
   *
   * <code>optional string cloud_testing_error_message = 8;</code>
   * @return The cloudTestingErrorMessage.
   */
  java.lang.String getCloudTestingErrorMessage();
  /**
   * <pre>
   * set when kind = CLOUD_TESTING_BACKEND_ERROR
   * </pre>
   *
   * <code>optional string cloud_testing_error_message = 8;</code>
   * @return The bytes for cloudTestingErrorMessage.
   */
  com.google.protobuf.ByteString
      getCloudTestingErrorMessageBytes();

  /**
   * <pre>
   * set when kind = CLOUD_TESTING_COMPARE_SCREENSHOTS_OPENED
   * </pre>
   *
   * <code>optional int32 cloud_testing_loaded_screenshots_count = 9;</code>
   * @return Whether the cloudTestingLoadedScreenshotsCount field is set.
   */
  boolean hasCloudTestingLoadedScreenshotsCount();
  /**
   * <pre>
   * set when kind = CLOUD_TESTING_COMPARE_SCREENSHOTS_OPENED
   * </pre>
   *
   * <code>optional int32 cloud_testing_loaded_screenshots_count = 9;</code>
   * @return The cloudTestingLoadedScreenshotsCount.
   */
  int getCloudTestingLoadedScreenshotsCount();

  /**
   * <pre>
   * Deprecated, use debug_session_start_details instead.
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 10 [deprecated = true];</code>
   * @return Whether the runConfigurationType field is set.
   */
  @java.lang.Deprecated boolean hasRunConfigurationType();
  /**
   * <pre>
   * Deprecated, use debug_session_start_details instead.
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.RunConfigurationType run_configuration_type = 10 [deprecated = true];</code>
   * @return The runConfigurationType.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.AndroidStudioEvent.RunConfigurationType getRunConfigurationType();

  /**
   * <pre>
   * Deprecated, use debug_session_start_details instead.
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 11 [deprecated = true];</code>
   * @return Whether the debuggerType field is set.
   */
  @java.lang.Deprecated boolean hasDebuggerType();
  /**
   * <pre>
   * Deprecated, use debug_session_start_details instead.
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.DebuggerType debugger_type = 11 [deprecated = true];</code>
   * @return The debuggerType.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.AndroidStudioEvent.DebuggerType getDebuggerType();

  /**
   * <pre>
   * set when kind = LLDB_LAUNCHED
   * or kind = DEPLOYMENT_APK
   * or kind = DEPLOYMENT_EMULATOR
   * or kind = CLOUD_TESTING_CONFIGURE_CLOUD_DEVICE
   * or kind = CLOUD_TESTING_LAUNCH_CLOUD_DEVICE
   * or kind = CLOUD_TESTING_DEBUG_FROM_RESULTS
   * or kind = TEST_RUN
   * or kind = LayoutInspectorEvent and LayoutInspectorEventType = CAPTURE
   * or kind = ANDROID_PROFILER and AndroidProfilerEvent.Type = CHANGE_DEVICE
   * or kind = DynamicLayoutInspectorEvent
   * or kind = AppInspectionEvent and AppInspectionEvent.Type = PROCESS_SELECTED
   * </pre>
   *
   * <code>optional .android_studio.DeviceInfo device_info = 12;</code>
   * @return Whether the deviceInfo field is set.
   */
  boolean hasDeviceInfo();
  /**
   * <pre>
   * set when kind = LLDB_LAUNCHED
   * or kind = DEPLOYMENT_APK
   * or kind = DEPLOYMENT_EMULATOR
   * or kind = CLOUD_TESTING_CONFIGURE_CLOUD_DEVICE
   * or kind = CLOUD_TESTING_LAUNCH_CLOUD_DEVICE
   * or kind = CLOUD_TESTING_DEBUG_FROM_RESULTS
   * or kind = TEST_RUN
   * or kind = LayoutInspectorEvent and LayoutInspectorEventType = CAPTURE
   * or kind = ANDROID_PROFILER and AndroidProfilerEvent.Type = CHANGE_DEVICE
   * or kind = DynamicLayoutInspectorEvent
   * or kind = AppInspectionEvent and AppInspectionEvent.Type = PROCESS_SELECTED
   * </pre>
   *
   * <code>optional .android_studio.DeviceInfo device_info = 12;</code>
   * @return The deviceInfo.
   */
  com.google.wireless.android.sdk.stats.DeviceInfo getDeviceInfo();
  /**
   * <pre>
   * set when kind = LLDB_LAUNCHED
   * or kind = DEPLOYMENT_APK
   * or kind = DEPLOYMENT_EMULATOR
   * or kind = CLOUD_TESTING_CONFIGURE_CLOUD_DEVICE
   * or kind = CLOUD_TESTING_LAUNCH_CLOUD_DEVICE
   * or kind = CLOUD_TESTING_DEBUG_FROM_RESULTS
   * or kind = TEST_RUN
   * or kind = LayoutInspectorEvent and LayoutInspectorEventType = CAPTURE
   * or kind = ANDROID_PROFILER and AndroidProfilerEvent.Type = CHANGE_DEVICE
   * or kind = DynamicLayoutInspectorEvent
   * or kind = AppInspectionEvent and AppInspectionEvent.Type = PROCESS_SELECTED
   * </pre>
   *
   * <code>optional .android_studio.DeviceInfo device_info = 12;</code>
   */
  com.google.wireless.android.sdk.stats.DeviceInfoOrBuilder getDeviceInfoOrBuilder();

  /**
   * <pre>
   * set when kind = LLDB_INSTALL_FAILED
   * e.g. 'failed to get reply to handshake packet'
   * </pre>
   *
   * <code>optional string lldb_session_failure_message = 13;</code>
   * @return Whether the lldbSessionFailureMessage field is set.
   */
  boolean hasLldbSessionFailureMessage();
  /**
   * <pre>
   * set when kind = LLDB_INSTALL_FAILED
   * e.g. 'failed to get reply to handshake packet'
   * </pre>
   *
   * <code>optional string lldb_session_failure_message = 13;</code>
   * @return The lldbSessionFailureMessage.
   */
  java.lang.String getLldbSessionFailureMessage();
  /**
   * <pre>
   * set when kind = LLDB_INSTALL_FAILED
   * e.g. 'failed to get reply to handshake packet'
   * </pre>
   *
   * <code>optional string lldb_session_failure_message = 13;</code>
   * @return The bytes for lldbSessionFailureMessage.
   */
  com.google.protobuf.ByteString
      getLldbSessionFailureMessageBytes();

  /**
   * <pre>
   * set when kind = DEVELOPER_SERVICES_INSTALLED
   * or kind = DEVELOPER_SERVICES_REMOVED
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.DeveloperServiceKind developer_service_kind = 14;</code>
   * @return Whether the developerServiceKind field is set.
   */
  boolean hasDeveloperServiceKind();
  /**
   * <pre>
   * set when kind = DEVELOPER_SERVICES_INSTALLED
   * or kind = DEVELOPER_SERVICES_REMOVED
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.DeveloperServiceKind developer_service_kind = 14;</code>
   * @return The developerServiceKind.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.DeveloperServiceKind getDeveloperServiceKind();

  /**
   * <pre>
   * set when category = GRADLE_SYNC
   * </pre>
   *
   * <code>optional string gradle_version = 15;</code>
   * @return Whether the gradleVersion field is set.
   */
  boolean hasGradleVersion();
  /**
   * <pre>
   * set when category = GRADLE_SYNC
   * </pre>
   *
   * <code>optional string gradle_version = 15;</code>
   * @return The gradleVersion.
   */
  java.lang.String getGradleVersion();
  /**
   * <pre>
   * set when category = GRADLE_SYNC
   * </pre>
   *
   * <code>optional string gradle_version = 15;</code>
   * @return The bytes for gradleVersion.
   */
  com.google.protobuf.ByteString
      getGradleVersionBytes();

  /**
   * <pre>
   * set when kind = GRADLE_SYNC_FAILURE_DETAILS (previously set when kind =
   * GRADLE_SYNC_FAILURE)
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.GradleSyncFailure gradle_sync_failure = 16;</code>
   * @return Whether the gradleSyncFailure field is set.
   */
  boolean hasGradleSyncFailure();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_FAILURE_DETAILS (previously set when kind =
   * GRADLE_SYNC_FAILURE)
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.GradleSyncFailure gradle_sync_failure = 16;</code>
   * @return The gradleSyncFailure.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.GradleSyncFailure getGradleSyncFailure();

  /**
   * <pre>
   * set when kind = GRADLE_SYNC_FAILURE and gradle_sync_failure = *_NOT_FOUND
   * e.g. 'org.gradle.api.internal.DemoClass.demoMethod'
   * </pre>
   *
   * <code>optional string gradle_missing_signature = 17;</code>
   * @return Whether the gradleMissingSignature field is set.
   */
  boolean hasGradleMissingSignature();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_FAILURE and gradle_sync_failure = *_NOT_FOUND
   * e.g. 'org.gradle.api.internal.DemoClass.demoMethod'
   * </pre>
   *
   * <code>optional string gradle_missing_signature = 17;</code>
   * @return The gradleMissingSignature.
   */
  java.lang.String getGradleMissingSignature();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_FAILURE and gradle_sync_failure = *_NOT_FOUND
   * e.g. 'org.gradle.api.internal.DemoClass.demoMethod'
   * </pre>
   *
   * <code>optional string gradle_missing_signature = 17;</code>
   * @return The bytes for gradleMissingSignature.
   */
  com.google.protobuf.ByteString
      getGradleMissingSignatureBytes();

  /**
   * <pre>
   * set when kind = TEMPLATE_RENDERER
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.TemplateRenderer template_renderer = 18;</code>
   * @return Whether the templateRenderer field is set.
   */
  boolean hasTemplateRenderer();
  /**
   * <pre>
   * set when kind = TEMPLATE_RENDERER
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.TemplateRenderer template_renderer = 18;</code>
   * @return The templateRenderer.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.TemplateRenderer getTemplateRenderer();

  /**
   * <pre>
   * set when kind = STUDIO_CRASH
   * </pre>
   *
   * <code>optional .android_studio.StudioCrash studio_crash = 19;</code>
   * @return Whether the studioCrash field is set.
   */
  boolean hasStudioCrash();
  /**
   * <pre>
   * set when kind = STUDIO_CRASH
   * </pre>
   *
   * <code>optional .android_studio.StudioCrash studio_crash = 19;</code>
   * @return The studioCrash.
   */
  com.google.wireless.android.sdk.stats.StudioCrash getStudioCrash();
  /**
   * <pre>
   * set when kind = STUDIO_CRASH
   * </pre>
   *
   * <code>optional .android_studio.StudioCrash studio_crash = 19;</code>
   */
  com.google.wireless.android.sdk.stats.StudioCrashOrBuilder getStudioCrashOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_BUILD_DETAILS or INSTANT_RUN
   * In the case of INSTANT_RUN, only the plugin version information is included
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildDetails gradle_build_details = 20;</code>
   * @return Whether the gradleBuildDetails field is set.
   */
  boolean hasGradleBuildDetails();
  /**
   * <pre>
   * set when kind = GRADLE_BUILD_DETAILS or INSTANT_RUN
   * In the case of INSTANT_RUN, only the plugin version information is included
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildDetails gradle_build_details = 20;</code>
   * @return The gradleBuildDetails.
   */
  com.google.wireless.android.sdk.stats.GradleBuildDetails getGradleBuildDetails();
  /**
   * <pre>
   * set when kind = GRADLE_BUILD_DETAILS or INSTANT_RUN
   * In the case of INSTANT_RUN, only the plugin version information is included
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildDetails gradle_build_details = 20;</code>
   */
  com.google.wireless.android.sdk.stats.GradleBuildDetailsOrBuilder getGradleBuildDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = INSTANT_RUN
   * </pre>
   *
   * <code>optional .android_studio.InstantRun instant_run = 21;</code>
   * @return Whether the instantRun field is set.
   */
  boolean hasInstantRun();
  /**
   * <pre>
   * set when kind = INSTANT_RUN
   * </pre>
   *
   * <code>optional .android_studio.InstantRun instant_run = 21;</code>
   * @return The instantRun.
   */
  com.google.wireless.android.sdk.stats.InstantRun getInstantRun();
  /**
   * <pre>
   * set when kind = INSTANT_RUN
   * </pre>
   *
   * <code>optional .android_studio.InstantRun instant_run = 21;</code>
   */
  com.google.wireless.android.sdk.stats.InstantRunOrBuilder getInstantRunOrBuilder();

  /**
   * <pre>
   * set when kind = META_METRICS
   * </pre>
   *
   * <code>optional .android_studio.MetaMetrics meta_metrics = 22;</code>
   * @return Whether the metaMetrics field is set.
   */
  boolean hasMetaMetrics();
  /**
   * <pre>
   * set when kind = META_METRICS
   * </pre>
   *
   * <code>optional .android_studio.MetaMetrics meta_metrics = 22;</code>
   * @return The metaMetrics.
   */
  com.google.wireless.android.sdk.stats.MetaMetrics getMetaMetrics();
  /**
   * <pre>
   * set when kind = META_METRICS
   * </pre>
   *
   * <code>optional .android_studio.MetaMetrics meta_metrics = 22;</code>
   */
  com.google.wireless.android.sdk.stats.MetaMetricsOrBuilder getMetaMetricsOrBuilder();

  /**
   * <pre>
   * set when kind = EMULATOR_PING
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails emulator_details = 23;</code>
   * @return Whether the emulatorDetails field is set.
   */
  boolean hasEmulatorDetails();
  /**
   * <pre>
   * set when kind = EMULATOR_PING
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails emulator_details = 23;</code>
   * @return The emulatorDetails.
   */
  com.google.wireless.android.sdk.stats.EmulatorDetails getEmulatorDetails();
  /**
   * <pre>
   * set when kind = EMULATOR_PING
   * </pre>
   *
   * <code>optional .android_studio.EmulatorDetails emulator_details = 23;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorDetailsOrBuilder getEmulatorDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = TEST_RUN
   * </pre>
   *
   * <code>optional .android_studio.TestRun test_run = 24;</code>
   * @return Whether the testRun field is set.
   */
  boolean hasTestRun();
  /**
   * <pre>
   * set when kind = TEST_RUN
   * </pre>
   *
   * <code>optional .android_studio.TestRun test_run = 24;</code>
   * @return The testRun.
   */
  com.google.wireless.android.sdk.stats.TestRun getTestRun();
  /**
   * <pre>
   * set when kind = TEST_RUN
   * </pre>
   *
   * <code>optional .android_studio.TestRun test_run = 24;</code>
   */
  com.google.wireless.android.sdk.stats.TestRunOrBuilder getTestRunOrBuilder();

  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENT (deprecated), use the repeated
   * field emulator_ui_events instead.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent emulator_ui_event = 25 [deprecated = true];</code>
   * @return Whether the emulatorUiEvent field is set.
   */
  @java.lang.Deprecated boolean hasEmulatorUiEvent();
  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENT (deprecated), use the repeated
   * field emulator_ui_events instead.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent emulator_ui_event = 25 [deprecated = true];</code>
   * @return The emulatorUiEvent.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.EmulatorUiEvent getEmulatorUiEvent();
  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENT (deprecated), use the repeated
   * field emulator_ui_events instead.
   * </pre>
   *
   * <code>optional .android_studio.EmulatorUiEvent emulator_ui_event = 25 [deprecated = true];</code>
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.EmulatorUiEventOrBuilder getEmulatorUiEventOrBuilder();

  /**
   * <pre>
   * set when kind = HYPERVISOR
   * </pre>
   *
   * <code>optional .android_studio.Hypervisor hypervisor = 26;</code>
   * @return Whether the hypervisor field is set.
   */
  boolean hasHypervisor();
  /**
   * <pre>
   * set when kind = HYPERVISOR
   * </pre>
   *
   * <code>optional .android_studio.Hypervisor hypervisor = 26;</code>
   * @return The hypervisor.
   */
  com.google.wireless.android.sdk.stats.Hypervisor getHypervisor();
  /**
   * <pre>
   * set when kind = HYPERVISOR
   * </pre>
   *
   * <code>optional .android_studio.Hypervisor hypervisor = 26;</code>
   */
  com.google.wireless.android.sdk.stats.HypervisorOrBuilder getHypervisorOrBuilder();

  /**
   * <pre>
   * set when kind = EMULATOR_HOST
   * </pre>
   *
   * <code>optional .android_studio.EmulatorHost emulator_host = 27;</code>
   * @return Whether the emulatorHost field is set.
   */
  boolean hasEmulatorHost();
  /**
   * <pre>
   * set when kind = EMULATOR_HOST
   * </pre>
   *
   * <code>optional .android_studio.EmulatorHost emulator_host = 27;</code>
   * @return The emulatorHost.
   */
  com.google.wireless.android.sdk.stats.EmulatorHost getEmulatorHost();
  /**
   * <pre>
   * set when kind = EMULATOR_HOST
   * </pre>
   *
   * <code>optional .android_studio.EmulatorHost emulator_host = 27;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorHostOrBuilder getEmulatorHostOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_BUILD_PROFILE
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildProfile gradle_build_profile = 28;</code>
   * @return Whether the gradleBuildProfile field is set.
   */
  boolean hasGradleBuildProfile();
  /**
   * <pre>
   * set when kind = GRADLE_BUILD_PROFILE
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildProfile gradle_build_profile = 28;</code>
   * @return The gradleBuildProfile.
   */
  com.google.wireless.android.sdk.stats.GradleBuildProfile getGradleBuildProfile();
  /**
   * <pre>
   * set when kind = GRADLE_BUILD_PROFILE
   * </pre>
   *
   * <code>optional .android_studio.GradleBuildProfile gradle_build_profile = 28;</code>
   */
  com.google.wireless.android.sdk.stats.GradleBuildProfileOrBuilder getGradleBuildProfileOrBuilder();

  /**
   * <pre>
   * set when kind = LLDB_FRONTEND_EXITED
   * </pre>
   *
   * <code>optional .android_studio.LLDBFrontendDetails lldb_frontend_details = 29;</code>
   * @return Whether the lldbFrontendDetails field is set.
   */
  boolean hasLldbFrontendDetails();
  /**
   * <pre>
   * set when kind = LLDB_FRONTEND_EXITED
   * </pre>
   *
   * <code>optional .android_studio.LLDBFrontendDetails lldb_frontend_details = 29;</code>
   * @return The lldbFrontendDetails.
   */
  com.google.wireless.android.sdk.stats.LLDBFrontendDetails getLldbFrontendDetails();
  /**
   * <pre>
   * set when kind = LLDB_FRONTEND_EXITED
   * </pre>
   *
   * <code>optional .android_studio.LLDBFrontendDetails lldb_frontend_details = 29;</code>
   */
  com.google.wireless.android.sdk.stats.LLDBFrontendDetailsOrBuilder getLldbFrontendDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = FIREBASE_ASSISTANT_ERROR_PRESENTED or
   * kind FIREBASE_ASSISTANT_SILENT_ERROR
   * </pre>
   *
   * <code>optional .android_studio.FirebaseErrorDetails firebase_error_details = 30;</code>
   * @return Whether the firebaseErrorDetails field is set.
   */
  boolean hasFirebaseErrorDetails();
  /**
   * <pre>
   * set when kind = FIREBASE_ASSISTANT_ERROR_PRESENTED or
   * kind FIREBASE_ASSISTANT_SILENT_ERROR
   * </pre>
   *
   * <code>optional .android_studio.FirebaseErrorDetails firebase_error_details = 30;</code>
   * @return The firebaseErrorDetails.
   */
  com.google.wireless.android.sdk.stats.FirebaseErrorDetails getFirebaseErrorDetails();
  /**
   * <pre>
   * set when kind = FIREBASE_ASSISTANT_ERROR_PRESENTED or
   * kind FIREBASE_ASSISTANT_SILENT_ERROR
   * </pre>
   *
   * <code>optional .android_studio.FirebaseErrorDetails firebase_error_details = 30;</code>
   */
  com.google.wireless.android.sdk.stats.FirebaseErrorDetailsOrBuilder getFirebaseErrorDetailsOrBuilder();

  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project id.
   * set when kind = PROJECT_STRUCTURE_* or kind = APK_ANALYZER_STATS
   * </pre>
   *
   * <code>optional string project_id = 31;</code>
   * @return Whether the projectId field is set.
   */
  boolean hasProjectId();
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project id.
   * set when kind = PROJECT_STRUCTURE_* or kind = APK_ANALYZER_STATS
   * </pre>
   *
   * <code>optional string project_id = 31;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Client-side salted (rotating every 28 days), sha256 of the project id.
   * set when kind = PROJECT_STRUCTURE_* or kind = APK_ANALYZER_STATS
   * </pre>
   *
   * <code>optional string project_id = 31;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * set when kind = GFX_TRACE_*
   * </pre>
   *
   * <code>optional .android_studio.GfxTracingDetails gfx_tracing_details = 32;</code>
   * @return Whether the gfxTracingDetails field is set.
   */
  boolean hasGfxTracingDetails();
  /**
   * <pre>
   * set when kind = GFX_TRACE_*
   * </pre>
   *
   * <code>optional .android_studio.GfxTracingDetails gfx_tracing_details = 32;</code>
   * @return The gfxTracingDetails.
   */
  com.google.wireless.android.sdk.stats.GfxTracingDetails getGfxTracingDetails();
  /**
   * <pre>
   * set when kind = GFX_TRACE_*
   * </pre>
   *
   * <code>optional .android_studio.GfxTracingDetails gfx_tracing_details = 32;</code>
   */
  com.google.wireless.android.sdk.stats.GfxTracingDetailsOrBuilder getGfxTracingDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = TEST_RECORDER_GENERATE_TEST_CLASS
   * </pre>
   *
   * <code>optional .android_studio.TestRecorderDetails test_recorder_details = 33;</code>
   * @return Whether the testRecorderDetails field is set.
   */
  boolean hasTestRecorderDetails();
  /**
   * <pre>
   * set when kind = TEST_RECORDER_GENERATE_TEST_CLASS
   * </pre>
   *
   * <code>optional .android_studio.TestRecorderDetails test_recorder_details = 33;</code>
   * @return The testRecorderDetails.
   */
  com.google.wireless.android.sdk.stats.TestRecorderDetails getTestRecorderDetails();
  /**
   * <pre>
   * set when kind = TEST_RECORDER_GENERATE_TEST_CLASS
   * </pre>
   *
   * <code>optional .android_studio.TestRecorderDetails test_recorder_details = 33;</code>
   */
  com.google.wireless.android.sdk.stats.TestRecorderDetailsOrBuilder getTestRecorderDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_UI_ACTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.UIActionStats ui_action_stats = 34;</code>
   * @return Whether the uiActionStats field is set.
   */
  boolean hasUiActionStats();
  /**
   * <pre>
   * set when kind = STUDIO_UI_ACTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.UIActionStats ui_action_stats = 34;</code>
   * @return The uiActionStats.
   */
  com.google.wireless.android.sdk.stats.UIActionStats getUiActionStats();
  /**
   * <pre>
   * set when kind = STUDIO_UI_ACTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.UIActionStats ui_action_stats = 34;</code>
   */
  com.google.wireless.android.sdk.stats.UIActionStatsOrBuilder getUiActionStatsOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_PING
   * </pre>
   *
   * <code>optional .android_studio.MachineDetails machine_details = 35;</code>
   * @return Whether the machineDetails field is set.
   */
  boolean hasMachineDetails();
  /**
   * <pre>
   * set when kind = STUDIO_PING
   * </pre>
   *
   * <code>optional .android_studio.MachineDetails machine_details = 35;</code>
   * @return The machineDetails.
   */
  com.google.wireless.android.sdk.stats.MachineDetails getMachineDetails();
  /**
   * <pre>
   * set when kind = STUDIO_PING
   * </pre>
   *
   * <code>optional .android_studio.MachineDetails machine_details = 35;</code>
   */
  com.google.wireless.android.sdk.stats.MachineDetailsOrBuilder getMachineDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_PING
   * </pre>
   *
   * <code>optional .android_studio.JvmDetails jvm_details = 36;</code>
   * @return Whether the jvmDetails field is set.
   */
  boolean hasJvmDetails();
  /**
   * <pre>
   * set when kind = STUDIO_PING
   * </pre>
   *
   * <code>optional .android_studio.JvmDetails jvm_details = 36;</code>
   * @return The jvmDetails.
   */
  com.google.wireless.android.sdk.stats.JvmDetails getJvmDetails();
  /**
   * <pre>
   * set when kind = STUDIO_PING
   * </pre>
   *
   * <code>optional .android_studio.JvmDetails jvm_details = 36;</code>
   */
  com.google.wireless.android.sdk.stats.JvmDetailsOrBuilder getJvmDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_PROCESS_STATS
   * or kind = GRADLE_BUILD_PROFILE
   * or kind = STUDIO_UI_OOM_DIALOG_EVENT
   * or kind = STUDIO_LOW_MEMORY_EVENT
   * </pre>
   *
   * <code>optional .android_studio.JavaProcessStats java_process_stats = 37;</code>
   * @return Whether the javaProcessStats field is set.
   */
  boolean hasJavaProcessStats();
  /**
   * <pre>
   * set when kind = STUDIO_PROCESS_STATS
   * or kind = GRADLE_BUILD_PROFILE
   * or kind = STUDIO_UI_OOM_DIALOG_EVENT
   * or kind = STUDIO_LOW_MEMORY_EVENT
   * </pre>
   *
   * <code>optional .android_studio.JavaProcessStats java_process_stats = 37;</code>
   * @return The javaProcessStats.
   */
  com.google.wireless.android.sdk.stats.JavaProcessStats getJavaProcessStats();
  /**
   * <pre>
   * set when kind = STUDIO_PROCESS_STATS
   * or kind = GRADLE_BUILD_PROFILE
   * or kind = STUDIO_UI_OOM_DIALOG_EVENT
   * or kind = STUDIO_LOW_MEMORY_EVENT
   * </pre>
   *
   * <code>optional .android_studio.JavaProcessStats java_process_stats = 37;</code>
   */
  com.google.wireless.android.sdk.stats.JavaProcessStatsOrBuilder getJavaProcessStatsOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.StudioPerformanceStats studio_performance_stats = 38;</code>
   * @return Whether the studioPerformanceStats field is set.
   */
  boolean hasStudioPerformanceStats();
  /**
   * <pre>
   * set when kind = STUDIO_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.StudioPerformanceStats studio_performance_stats = 38;</code>
   * @return The studioPerformanceStats.
   */
  com.google.wireless.android.sdk.stats.StudioPerformanceStats getStudioPerformanceStats();
  /**
   * <pre>
   * set when kind = STUDIO_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.StudioPerformanceStats studio_performance_stats = 38;</code>
   */
  com.google.wireless.android.sdk.stats.StudioPerformanceStatsOrBuilder getStudioPerformanceStatsOrBuilder();

  /**
   * <pre>
   * set when kind = LLDB_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.LldbPerformanceStats lldb_performance_stats = 39;</code>
   * @return Whether the lldbPerformanceStats field is set.
   */
  boolean hasLldbPerformanceStats();
  /**
   * <pre>
   * set when kind = LLDB_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.LldbPerformanceStats lldb_performance_stats = 39;</code>
   * @return The lldbPerformanceStats.
   */
  com.google.wireless.android.sdk.stats.LldbPerformanceStats getLldbPerformanceStats();
  /**
   * <pre>
   * set when kind = LLDB_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.LldbPerformanceStats lldb_performance_stats = 39;</code>
   */
  com.google.wireless.android.sdk.stats.LldbPerformanceStatsOrBuilder getLldbPerformanceStatsOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_PROJECT_OPENED or STUDIO_PROJECT_CLOSED
   * </pre>
   *
   * <code>optional .android_studio.StudioProjectChange studio_project_change = 40;</code>
   * @return Whether the studioProjectChange field is set.
   */
  boolean hasStudioProjectChange();
  /**
   * <pre>
   * set when kind = STUDIO_PROJECT_OPENED or STUDIO_PROJECT_CLOSED
   * </pre>
   *
   * <code>optional .android_studio.StudioProjectChange studio_project_change = 40;</code>
   * @return The studioProjectChange.
   */
  com.google.wireless.android.sdk.stats.StudioProjectChange getStudioProjectChange();
  /**
   * <pre>
   * set when kind = STUDIO_PROJECT_OPENED or STUDIO_PROJECT_CLOSED
   * </pre>
   *
   * <code>optional .android_studio.StudioProjectChange studio_project_change = 40;</code>
   */
  com.google.wireless.android.sdk.stats.StudioProjectChangeOrBuilder getStudioProjectChangeOrBuilder();

  /**
   * <pre>
   * optionally set when kind = FIREBASE_ASSISTANT_* (except for errors).
   * </pre>
   *
   * <code>optional .android_studio.FirebaseContextDetails firebase_context_details = 41;</code>
   * @return Whether the firebaseContextDetails field is set.
   */
  boolean hasFirebaseContextDetails();
  /**
   * <pre>
   * optionally set when kind = FIREBASE_ASSISTANT_* (except for errors).
   * </pre>
   *
   * <code>optional .android_studio.FirebaseContextDetails firebase_context_details = 41;</code>
   * @return The firebaseContextDetails.
   */
  com.google.wireless.android.sdk.stats.FirebaseContextDetails getFirebaseContextDetails();
  /**
   * <pre>
   * optionally set when kind = FIREBASE_ASSISTANT_* (except for errors).
   * </pre>
   *
   * <code>optional .android_studio.FirebaseContextDetails firebase_context_details = 41;</code>
   */
  com.google.wireless.android.sdk.stats.FirebaseContextDetailsOrBuilder getFirebaseContextDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = LAYOUT_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.LayoutEditorEvent layout_editor_event = 42;</code>
   * @return Whether the layoutEditorEvent field is set.
   */
  boolean hasLayoutEditorEvent();
  /**
   * <pre>
   * set when kind = LAYOUT_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.LayoutEditorEvent layout_editor_event = 42;</code>
   * @return The layoutEditorEvent.
   */
  com.google.wireless.android.sdk.stats.LayoutEditorEvent getLayoutEditorEvent();
  /**
   * <pre>
   * set when kind = LAYOUT_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.LayoutEditorEvent layout_editor_event = 42;</code>
   */
  com.google.wireless.android.sdk.stats.LayoutEditorEventOrBuilder getLayoutEditorEventOrBuilder();

  /**
   * <pre>
   * set when kind = APP_LINKS_ASSISTANT_STATS
   * </pre>
   *
   * <code>optional .android_studio.AppLinksAssistantEvent app_links_assistant_event = 43;</code>
   * @return Whether the appLinksAssistantEvent field is set.
   */
  boolean hasAppLinksAssistantEvent();
  /**
   * <pre>
   * set when kind = APP_LINKS_ASSISTANT_STATS
   * </pre>
   *
   * <code>optional .android_studio.AppLinksAssistantEvent app_links_assistant_event = 43;</code>
   * @return The appLinksAssistantEvent.
   */
  com.google.wireless.android.sdk.stats.AppLinksAssistantEvent getAppLinksAssistantEvent();
  /**
   * <pre>
   * set when kind = APP_LINKS_ASSISTANT_STATS
   * </pre>
   *
   * <code>optional .android_studio.AppLinksAssistantEvent app_links_assistant_event = 43;</code>
   */
  com.google.wireless.android.sdk.stats.AppLinksAssistantEventOrBuilder getAppLinksAssistantEventOrBuilder();

  /**
   * <pre>
   * set when kind = EMULATOR_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.EmulatorPerformanceStats emulator_performance_stats = 44;</code>
   * @return Whether the emulatorPerformanceStats field is set.
   */
  boolean hasEmulatorPerformanceStats();
  /**
   * <pre>
   * set when kind = EMULATOR_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.EmulatorPerformanceStats emulator_performance_stats = 44;</code>
   * @return The emulatorPerformanceStats.
   */
  com.google.wireless.android.sdk.stats.EmulatorPerformanceStats getEmulatorPerformanceStats();
  /**
   * <pre>
   * set when kind = EMULATOR_PERFORMANCE_STATS
   * </pre>
   *
   * <code>optional .android_studio.EmulatorPerformanceStats emulator_performance_stats = 44;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorPerformanceStatsOrBuilder getEmulatorPerformanceStatsOrBuilder();

  /**
   * <pre>
   * set when kind = ADB_ASSISTANT_STATS
   * </pre>
   *
   * <code>optional .android_studio.AdbAssistantStats adb_assistant_stats = 45;</code>
   * @return Whether the adbAssistantStats field is set.
   */
  boolean hasAdbAssistantStats();
  /**
   * <pre>
   * set when kind = ADB_ASSISTANT_STATS
   * </pre>
   *
   * <code>optional .android_studio.AdbAssistantStats adb_assistant_stats = 45;</code>
   * @return The adbAssistantStats.
   */
  com.google.wireless.android.sdk.stats.AdbAssistantStats getAdbAssistantStats();
  /**
   * <pre>
   * set when kind = ADB_ASSISTANT_STATS
   * </pre>
   *
   * <code>optional .android_studio.AdbAssistantStats adb_assistant_stats = 45;</code>
   */
  com.google.wireless.android.sdk.stats.AdbAssistantStatsOrBuilder getAdbAssistantStatsOrBuilder();

  /**
   * <pre>
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionStartDetails lldb_session_start_details = 46;</code>
   * @return Whether the lldbSessionStartDetails field is set.
   */
  boolean hasLldbSessionStartDetails();
  /**
   * <pre>
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionStartDetails lldb_session_start_details = 46;</code>
   * @return The lldbSessionStartDetails.
   */
  com.google.wireless.android.sdk.stats.LldbSessionStartDetails getLldbSessionStartDetails();
  /**
   * <pre>
   * set when kind = LLDB_SESSION_STARTED
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionStartDetails lldb_session_start_details = 46;</code>
   */
  com.google.wireless.android.sdk.stats.LldbSessionStartDetailsOrBuilder getLldbSessionStartDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = LLDB_SESSION_ENDED
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionEndDetails lldb_session_end_details = 47;</code>
   * @return Whether the lldbSessionEndDetails field is set.
   */
  boolean hasLldbSessionEndDetails();
  /**
   * <pre>
   * set when kind = LLDB_SESSION_ENDED
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionEndDetails lldb_session_end_details = 47;</code>
   * @return The lldbSessionEndDetails.
   */
  com.google.wireless.android.sdk.stats.LldbSessionEndDetails getLldbSessionEndDetails();
  /**
   * <pre>
   * set when kind = LLDB_SESSION_ENDED
   * </pre>
   *
   * <code>optional .android_studio.LldbSessionEndDetails lldb_session_end_details = 47;</code>
   */
  com.google.wireless.android.sdk.stats.LldbSessionEndDetailsOrBuilder getLldbSessionEndDetailsOrBuilder();

  /**
   * <pre>
   * set when kind = ANDROID_PROFILER
   * </pre>
   *
   * <code>optional .android_studio.AndroidProfilerEvent android_profiler_event = 48;</code>
   * @return Whether the androidProfilerEvent field is set.
   */
  boolean hasAndroidProfilerEvent();
  /**
   * <pre>
   * set when kind = ANDROID_PROFILER
   * </pre>
   *
   * <code>optional .android_studio.AndroidProfilerEvent android_profiler_event = 48;</code>
   * @return The androidProfilerEvent.
   */
  com.google.wireless.android.sdk.stats.AndroidProfilerEvent getAndroidProfilerEvent();
  /**
   * <pre>
   * set when kind = ANDROID_PROFILER
   * </pre>
   *
   * <code>optional .android_studio.AndroidProfilerEvent android_profiler_event = 48;</code>
   */
  com.google.wireless.android.sdk.stats.AndroidProfilerEventOrBuilder getAndroidProfilerEventOrBuilder();

  /**
   * <pre>
   * set when kind = APK_ANALYZER_STATS
   * </pre>
   *
   * <code>optional .android_studio.ApkAnalyzerStats apk_analyzer_stats = 49;</code>
   * @return Whether the apkAnalyzerStats field is set.
   */
  boolean hasApkAnalyzerStats();
  /**
   * <pre>
   * set when kind = APK_ANALYZER_STATS
   * </pre>
   *
   * <code>optional .android_studio.ApkAnalyzerStats apk_analyzer_stats = 49;</code>
   * @return The apkAnalyzerStats.
   */
  com.google.wireless.android.sdk.stats.ApkAnalyzerStats getApkAnalyzerStats();
  /**
   * <pre>
   * set when kind = APK_ANALYZER_STATS
   * </pre>
   *
   * <code>optional .android_studio.ApkAnalyzerStats apk_analyzer_stats = 49;</code>
   */
  com.google.wireless.android.sdk.stats.ApkAnalyzerStatsOrBuilder getApkAnalyzerStatsOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ENDED, GRADLE_SYNC_FAILURE or
   * GRADLE_SYNC_SETUP_STARTED
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats gradle_sync_stats = 50;</code>
   * @return Whether the gradleSyncStats field is set.
   */
  boolean hasGradleSyncStats();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ENDED, GRADLE_SYNC_FAILURE or
   * GRADLE_SYNC_SETUP_STARTED
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats gradle_sync_stats = 50;</code>
   * @return The gradleSyncStats.
   */
  com.google.wireless.android.sdk.stats.GradleSyncStats getGradleSyncStats();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ENDED, GRADLE_SYNC_FAILURE or
   * GRADLE_SYNC_SETUP_STARTED
   * </pre>
   *
   * <code>optional .android_studio.GradleSyncStats gradle_sync_stats = 50;</code>
   */
  com.google.wireless.android.sdk.stats.GradleSyncStatsOrBuilder getGradleSyncStatsOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_CPP_SYNC_COMPLETED
   * </pre>
   *
   * <code>optional .android_studio.GradleCppSyncStats gradle_cpp_sync_stats = 113;</code>
   * @return Whether the gradleCppSyncStats field is set.
   */
  boolean hasGradleCppSyncStats();
  /**
   * <pre>
   * set when kind = GRADLE_CPP_SYNC_COMPLETED
   * </pre>
   *
   * <code>optional .android_studio.GradleCppSyncStats gradle_cpp_sync_stats = 113;</code>
   * @return The gradleCppSyncStats.
   */
  com.google.wireless.android.sdk.stats.GradleCppSyncStats getGradleCppSyncStats();
  /**
   * <pre>
   * set when kind = GRADLE_CPP_SYNC_COMPLETED
   * </pre>
   *
   * <code>optional .android_studio.GradleCppSyncStats gradle_cpp_sync_stats = 113;</code>
   */
  com.google.wireless.android.sdk.stats.GradleCppSyncStatsOrBuilder getGradleCppSyncStatsOrBuilder();

  /**
   * <pre>
   * set when category = APK_DEBUG
   * </pre>
   *
   * <code>optional .android_studio.ApkDebugProject apk_debug_project = 51;</code>
   * @return Whether the apkDebugProject field is set.
   */
  boolean hasApkDebugProject();
  /**
   * <pre>
   * set when category = APK_DEBUG
   * </pre>
   *
   * <code>optional .android_studio.ApkDebugProject apk_debug_project = 51;</code>
   * @return The apkDebugProject.
   */
  com.google.wireless.android.sdk.stats.ApkDebugProject getApkDebugProject();
  /**
   * <pre>
   * set when category = APK_DEBUG
   * </pre>
   *
   * <code>optional .android_studio.ApkDebugProject apk_debug_project = 51;</code>
   */
  com.google.wireless.android.sdk.stats.ApkDebugProjectOrBuilder getApkDebugProjectOrBuilder();

  /**
   * <pre>
   * set when kind = LAYOUT_INSPECTOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.LayoutInspectorEvent layout_inspector_event = 52;</code>
   * @return Whether the layoutInspectorEvent field is set.
   */
  boolean hasLayoutInspectorEvent();
  /**
   * <pre>
   * set when kind = LAYOUT_INSPECTOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.LayoutInspectorEvent layout_inspector_event = 52;</code>
   * @return The layoutInspectorEvent.
   */
  com.google.wireless.android.sdk.stats.LayoutInspectorEvent getLayoutInspectorEvent();
  /**
   * <pre>
   * set when kind = LAYOUT_INSPECTOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.LayoutInspectorEvent layout_inspector_event = 52;</code>
   */
  com.google.wireless.android.sdk.stats.LayoutInspectorEventOrBuilder getLayoutInspectorEventOrBuilder();

  /**
   * <pre>
   * set when kind = ANDROID_PROFILER_DB_STATS
   * </pre>
   *
   * <code>optional .android_studio.AndroidProfilerDbStats android_profiler_db_stats = 53;</code>
   * @return Whether the androidProfilerDbStats field is set.
   */
  boolean hasAndroidProfilerDbStats();
  /**
   * <pre>
   * set when kind = ANDROID_PROFILER_DB_STATS
   * </pre>
   *
   * <code>optional .android_studio.AndroidProfilerDbStats android_profiler_db_stats = 53;</code>
   * @return The androidProfilerDbStats.
   */
  com.google.wireless.android.sdk.stats.AndroidProfilerDbStats getAndroidProfilerDbStats();
  /**
   * <pre>
   * set when kind = ANDROID_PROFILER_DB_STATS
   * </pre>
   *
   * <code>optional .android_studio.AndroidProfilerDbStats android_profiler_db_stats = 53;</code>
   */
  com.google.wireless.android.sdk.stats.AndroidProfilerDbStatsOrBuilder getAndroidProfilerDbStatsOrBuilder();

  /**
   * <pre>
   * set when kind = TEMPLATE_RENDERER
   * or kind = GRADLE_SYNC_ENDED
   * </pre>
   *
   * <code>optional .android_studio.KotlinSupport kotlin_support = 54;</code>
   * @return Whether the kotlinSupport field is set.
   */
  boolean hasKotlinSupport();
  /**
   * <pre>
   * set when kind = TEMPLATE_RENDERER
   * or kind = GRADLE_SYNC_ENDED
   * </pre>
   *
   * <code>optional .android_studio.KotlinSupport kotlin_support = 54;</code>
   * @return The kotlinSupport.
   */
  com.google.wireless.android.sdk.stats.KotlinSupport getKotlinSupport();
  /**
   * <pre>
   * set when kind = TEMPLATE_RENDERER
   * or kind = GRADLE_SYNC_ENDED
   * </pre>
   *
   * <code>optional .android_studio.KotlinSupport kotlin_support = 54;</code>
   */
  com.google.wireless.android.sdk.stats.KotlinSupportOrBuilder getKotlinSupportOrBuilder();

  /**
   * <pre>
   * set when kind = CONNECTION_ASSISTANT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.ConnectionAssistantEvent connection_assistant_event = 55;</code>
   * @return Whether the connectionAssistantEvent field is set.
   */
  boolean hasConnectionAssistantEvent();
  /**
   * <pre>
   * set when kind = CONNECTION_ASSISTANT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.ConnectionAssistantEvent connection_assistant_event = 55;</code>
   * @return The connectionAssistantEvent.
   */
  com.google.wireless.android.sdk.stats.ConnectionAssistantEvent getConnectionAssistantEvent();
  /**
   * <pre>
   * set when kind = CONNECTION_ASSISTANT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.ConnectionAssistantEvent connection_assistant_event = 55;</code>
   */
  com.google.wireless.android.sdk.stats.ConnectionAssistantEventOrBuilder getConnectionAssistantEventOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_UI_OOM_DIALOG_EVENT
   * </pre>
   *
   * <code>optional .android_studio.OomDialogEvent oom_dialog_event = 56;</code>
   * @return Whether the oomDialogEvent field is set.
   */
  boolean hasOomDialogEvent();
  /**
   * <pre>
   * set when kind = STUDIO_UI_OOM_DIALOG_EVENT
   * </pre>
   *
   * <code>optional .android_studio.OomDialogEvent oom_dialog_event = 56;</code>
   * @return The oomDialogEvent.
   */
  com.google.wireless.android.sdk.stats.OomDialogEvent getOomDialogEvent();
  /**
   * <pre>
   * set when kind = STUDIO_UI_OOM_DIALOG_EVENT
   * </pre>
   *
   * <code>optional .android_studio.OomDialogEvent oom_dialog_event = 56;</code>
   */
  com.google.wireless.android.sdk.stats.OomDialogEventOrBuilder getOomDialogEventOrBuilder();

  /**
   * <pre>
   * set when kind = CMAKE_EDITING_EVENT
   * </pre>
   *
   * <code>optional .android_studio.CMakeEditingEvent cmake_editing_event = 57;</code>
   * @return Whether the cmakeEditingEvent field is set.
   */
  boolean hasCmakeEditingEvent();
  /**
   * <pre>
   * set when kind = CMAKE_EDITING_EVENT
   * </pre>
   *
   * <code>optional .android_studio.CMakeEditingEvent cmake_editing_event = 57;</code>
   * @return The cmakeEditingEvent.
   */
  com.google.wireless.android.sdk.stats.CMakeEditingEvent getCmakeEditingEvent();
  /**
   * <pre>
   * set when kind = CMAKE_EDITING_EVENT
   * </pre>
   *
   * <code>optional .android_studio.CMakeEditingEvent cmake_editing_event = 57;</code>
   */
  com.google.wireless.android.sdk.stats.CMakeEditingEventOrBuilder getCmakeEditingEventOrBuilder();

  /**
   * <pre>
   * set for all events generated by Android Studio
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.IdeBrand ide_brand = 58;</code>
   * @return Whether the ideBrand field is set.
   */
  boolean hasIdeBrand();
  /**
   * <pre>
   * set for all events generated by Android Studio
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.IdeBrand ide_brand = 58;</code>
   * @return The ideBrand.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.IdeBrand getIdeBrand();

  /**
   * <pre>
   * set when kind = CPP_HEADERS_VIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.CppHeadersViewEvent cpp_headers_view_event = 59;</code>
   * @return Whether the cppHeadersViewEvent field is set.
   */
  boolean hasCppHeadersViewEvent();
  /**
   * <pre>
   * set when kind = CPP_HEADERS_VIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.CppHeadersViewEvent cpp_headers_view_event = 59;</code>
   * @return The cppHeadersViewEvent.
   */
  com.google.wireless.android.sdk.stats.CppHeadersViewEvent getCppHeadersViewEvent();
  /**
   * <pre>
   * set when kind = CPP_HEADERS_VIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.CppHeadersViewEvent cpp_headers_view_event = 59;</code>
   */
  com.google.wireless.android.sdk.stats.CppHeadersViewEventOrBuilder getCppHeadersViewEventOrBuilder();

  /**
   * <pre>
   * set when kind = WHATS_NEW_ASSISTANT_EVENT
   * Deprecated since 3.6.0.8, replaced with WhatsNewAssistantUpdateEvent
   * </pre>
   *
   * <code>optional .android_studio.WhatsNewAssistantEvent whats_new_assistant_event = 60 [deprecated = true];</code>
   * @return Whether the whatsNewAssistantEvent field is set.
   */
  @java.lang.Deprecated boolean hasWhatsNewAssistantEvent();
  /**
   * <pre>
   * set when kind = WHATS_NEW_ASSISTANT_EVENT
   * Deprecated since 3.6.0.8, replaced with WhatsNewAssistantUpdateEvent
   * </pre>
   *
   * <code>optional .android_studio.WhatsNewAssistantEvent whats_new_assistant_event = 60 [deprecated = true];</code>
   * @return The whatsNewAssistantEvent.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.WhatsNewAssistantEvent getWhatsNewAssistantEvent();
  /**
   * <pre>
   * set when kind = WHATS_NEW_ASSISTANT_EVENT
   * Deprecated since 3.6.0.8, replaced with WhatsNewAssistantUpdateEvent
   * </pre>
   *
   * <code>optional .android_studio.WhatsNewAssistantEvent whats_new_assistant_event = 60 [deprecated = true];</code>
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.WhatsNewAssistantEventOrBuilder getWhatsNewAssistantEventOrBuilder();

  /**
   * <pre>
   * the project id as used in the playstore, e.g.
   * 'com.google.android.apps.maps'. This is sensitive information and
   * thus restricted to "raw" sawmill access. This data is only available in
   * and for PWG approved scenarios.
   * </pre>
   *
   * <code>optional string raw_project_id = 61;</code>
   * @return Whether the rawProjectId field is set.
   */
  boolean hasRawProjectId();
  /**
   * <pre>
   * the project id as used in the playstore, e.g.
   * 'com.google.android.apps.maps'. This is sensitive information and
   * thus restricted to "raw" sawmill access. This data is only available in
   * and for PWG approved scenarios.
   * </pre>
   *
   * <code>optional string raw_project_id = 61;</code>
   * @return The rawProjectId.
   */
  java.lang.String getRawProjectId();
  /**
   * <pre>
   * the project id as used in the playstore, e.g.
   * 'com.google.android.apps.maps'. This is sensitive information and
   * thus restricted to "raw" sawmill access. This data is only available in
   * and for PWG approved scenarios.
   * </pre>
   *
   * <code>optional string raw_project_id = 61;</code>
   * @return The bytes for rawProjectId.
   */
  com.google.protobuf.ByteString
      getRawProjectIdBytes();

  /**
   * <pre>
   * set when kind = INTELLIJ_INDEXING_STATS
   * </pre>
   *
   * <code>optional .android_studio.IntellijIndexingStats intellij_indexing_stats = 62;</code>
   * @return Whether the intellijIndexingStats field is set.
   */
  boolean hasIntellijIndexingStats();
  /**
   * <pre>
   * set when kind = INTELLIJ_INDEXING_STATS
   * </pre>
   *
   * <code>optional .android_studio.IntellijIndexingStats intellij_indexing_stats = 62;</code>
   * @return The intellijIndexingStats.
   */
  com.google.wireless.android.sdk.stats.IntellijIndexingStats getIntellijIndexingStats();
  /**
   * <pre>
   * set when kind = INTELLIJ_INDEXING_STATS
   * </pre>
   *
   * <code>optional .android_studio.IntellijIndexingStats intellij_indexing_stats = 62;</code>
   */
  com.google.wireless.android.sdk.stats.IntellijIndexingStatsOrBuilder getIntellijIndexingStatsOrBuilder();

  /**
   * <pre>
   * set when kind == LINT_SESSION
   * </pre>
   *
   * <code>optional .android_studio.LintSession lint_session = 63;</code>
   * @return Whether the lintSession field is set.
   */
  boolean hasLintSession();
  /**
   * <pre>
   * set when kind == LINT_SESSION
   * </pre>
   *
   * <code>optional .android_studio.LintSession lint_session = 63;</code>
   * @return The lintSession.
   */
  com.google.wireless.android.sdk.stats.LintSession getLintSession();
  /**
   * <pre>
   * set when kind == LINT_SESSION
   * </pre>
   *
   * <code>optional .android_studio.LintSession lint_session = 63;</code>
   */
  com.google.wireless.android.sdk.stats.LintSessionOrBuilder getLintSessionOrBuilder();

  /**
   * <pre>
   * set when kind == LINT_ACTION
   * </pre>
   *
   * <code>optional .android_studio.LintAction lint_action = 64;</code>
   * @return Whether the lintAction field is set.
   */
  boolean hasLintAction();
  /**
   * <pre>
   * set when kind == LINT_ACTION
   * </pre>
   *
   * <code>optional .android_studio.LintAction lint_action = 64;</code>
   * @return The lintAction.
   */
  com.google.wireless.android.sdk.stats.LintAction getLintAction();
  /**
   * <pre>
   * set when kind == LINT_ACTION
   * </pre>
   *
   * <code>optional .android_studio.LintAction lint_action = 64;</code>
   */
  com.google.wireless.android.sdk.stats.LintActionOrBuilder getLintActionOrBuilder();

  /**
   * <pre>
   * set when kind = STUDIO_RUN_EVENT
   * </pre>
   *
   * <code>optional .android_studio.StudioRunEvent studio_run_event = 65 [deprecated = true];</code>
   * @return Whether the studioRunEvent field is set.
   */
  @java.lang.Deprecated boolean hasStudioRunEvent();
  /**
   * <pre>
   * set when kind = STUDIO_RUN_EVENT
   * </pre>
   *
   * <code>optional .android_studio.StudioRunEvent studio_run_event = 65 [deprecated = true];</code>
   * @return The studioRunEvent.
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.StudioRunEvent getStudioRunEvent();
  /**
   * <pre>
   * set when kind = STUDIO_RUN_EVENT
   * </pre>
   *
   * <code>optional .android_studio.StudioRunEvent studio_run_event = 65 [deprecated = true];</code>
   */
  @java.lang.Deprecated com.google.wireless.android.sdk.stats.StudioRunEventOrBuilder getStudioRunEventOrBuilder();

  /**
   * <pre>
   * set when kind = INTELLIJ_PROJECT_SIZE_STATS
   * </pre>
   *
   * <code>repeated .android_studio.IntellijProjectSizeStats intellij_project_size_stats = 66;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.IntellijProjectSizeStats>
      getIntellijProjectSizeStatsList();
  /**
   * <pre>
   * set when kind = INTELLIJ_PROJECT_SIZE_STATS
   * </pre>
   *
   * <code>repeated .android_studio.IntellijProjectSizeStats intellij_project_size_stats = 66;</code>
   */
  com.google.wireless.android.sdk.stats.IntellijProjectSizeStats getIntellijProjectSizeStats(int index);
  /**
   * <pre>
   * set when kind = INTELLIJ_PROJECT_SIZE_STATS
   * </pre>
   *
   * <code>repeated .android_studio.IntellijProjectSizeStats intellij_project_size_stats = 66;</code>
   */
  int getIntellijProjectSizeStatsCount();
  /**
   * <pre>
   * set when kind = INTELLIJ_PROJECT_SIZE_STATS
   * </pre>
   *
   * <code>repeated .android_studio.IntellijProjectSizeStats intellij_project_size_stats = 66;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.IntellijProjectSizeStatsOrBuilder>
      getIntellijProjectSizeStatsOrBuilderList();
  /**
   * <pre>
   * set when kind = INTELLIJ_PROJECT_SIZE_STATS
   * </pre>
   *
   * <code>repeated .android_studio.IntellijProjectSizeStats intellij_project_size_stats = 66;</code>
   */
  com.google.wireless.android.sdk.stats.IntellijProjectSizeStatsOrBuilder getIntellijProjectSizeStatsOrBuilder(
      int index);

  /**
   * <pre>
   * set when kind = STUDIO_TOOL_WINDOW_ACTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.StudioToolWindowActionStats studio_tool_window_action_stats = 67;</code>
   * @return Whether the studioToolWindowActionStats field is set.
   */
  boolean hasStudioToolWindowActionStats();
  /**
   * <pre>
   * set when kind = STUDIO_TOOL_WINDOW_ACTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.StudioToolWindowActionStats studio_tool_window_action_stats = 67;</code>
   * @return The studioToolWindowActionStats.
   */
  com.google.wireless.android.sdk.stats.StudioToolWindowActionStats getStudioToolWindowActionStats();
  /**
   * <pre>
   * set when kind = STUDIO_TOOL_WINDOW_ACTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.StudioToolWindowActionStats studio_tool_window_action_stats = 67;</code>
   */
  com.google.wireless.android.sdk.stats.StudioToolWindowActionStatsOrBuilder getStudioToolWindowActionStatsOrBuilder();

  /**
   * <pre>
   * set when kind = PROJECT_STRUCTURE_DIALOG
   * </pre>
   *
   * <code>optional .android_studio.PSDEvent psd_event = 68;</code>
   * @return Whether the psdEvent field is set.
   */
  boolean hasPsdEvent();
  /**
   * <pre>
   * set when kind = PROJECT_STRUCTURE_DIALOG
   * </pre>
   *
   * <code>optional .android_studio.PSDEvent psd_event = 68;</code>
   * @return The psdEvent.
   */
  com.google.wireless.android.sdk.stats.PSDEvent getPsdEvent();
  /**
   * <pre>
   * set when kind = PROJECT_STRUCTURE_DIALOG
   * </pre>
   *
   * <code>optional .android_studio.PSDEvent psd_event = 68;</code>
   */
  com.google.wireless.android.sdk.stats.PSDEventOrBuilder getPsdEventOrBuilder();

  /**
   * <pre>
   * set when Android Studio is launched with the "idea.is.internal=true"
   * flag, indicating that this is somebody debugging Android Studio rather
   * than a normal user sending actual usage metrics.
   * </pre>
   *
   * <code>optional bool idea_is_internal = 69;</code>
   * @return Whether the ideaIsInternal field is set.
   */
  boolean hasIdeaIsInternal();
  /**
   * <pre>
   * set when Android Studio is launched with the "idea.is.internal=true"
   * flag, indicating that this is somebody debugging Android Studio rather
   * than a normal user sending actual usage metrics.
   * </pre>
   *
   * <code>optional bool idea_is_internal = 69;</code>
   * @return The ideaIsInternal.
   */
  boolean getIdeaIsInternal();

  /**
   * <pre>
   * set when kind == JNI_INSPECTION
   * </pre>
   *
   * <code>optional .android_studio.JniInspectionEvent jni_inspection_event = 70;</code>
   * @return Whether the jniInspectionEvent field is set.
   */
  boolean hasJniInspectionEvent();
  /**
   * <pre>
   * set when kind == JNI_INSPECTION
   * </pre>
   *
   * <code>optional .android_studio.JniInspectionEvent jni_inspection_event = 70;</code>
   * @return The jniInspectionEvent.
   */
  com.google.wireless.android.sdk.stats.JniInspectionEvent getJniInspectionEvent();
  /**
   * <pre>
   * set when kind == JNI_INSPECTION
   * </pre>
   *
   * <code>optional .android_studio.JniInspectionEvent jni_inspection_event = 70;</code>
   */
  com.google.wireless.android.sdk.stats.JniInspectionEventOrBuilder getJniInspectionEventOrBuilder();

  /**
   * <pre>
   * set when kind == USER_SENTIMENT
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment user_sentiment = 71;</code>
   * @return Whether the userSentiment field is set.
   */
  boolean hasUserSentiment();
  /**
   * <pre>
   * set when kind == USER_SENTIMENT
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment user_sentiment = 71;</code>
   * @return The userSentiment.
   */
  com.google.wireless.android.sdk.stats.UserSentiment getUserSentiment();
  /**
   * <pre>
   * set when kind == USER_SENTIMENT
   * </pre>
   *
   * <code>optional .android_studio.UserSentiment user_sentiment = 71;</code>
   */
  com.google.wireless.android.sdk.stats.UserSentimentOrBuilder getUserSentimentOrBuilder();

  /**
   * <pre>
   * set when kind = RUN_EVENT
   * </pre>
   *
   * <code>optional .android_studio.RunEvent run_event = 72;</code>
   * @return Whether the runEvent field is set.
   */
  boolean hasRunEvent();
  /**
   * <pre>
   * set when kind = RUN_EVENT
   * </pre>
   *
   * <code>optional .android_studio.RunEvent run_event = 72;</code>
   * @return The runEvent.
   */
  com.google.wireless.android.sdk.stats.RunEvent getRunEvent();
  /**
   * <pre>
   * set when kind = RUN_EVENT
   * </pre>
   *
   * <code>optional .android_studio.RunEvent run_event = 72;</code>
   */
  com.google.wireless.android.sdk.stats.RunEventOrBuilder getRunEventOrBuilder();

  /**
   * <pre>
   * set when kind = NAV_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent nav_editor_event = 73;</code>
   * @return Whether the navEditorEvent field is set.
   */
  boolean hasNavEditorEvent();
  /**
   * <pre>
   * set when kind = NAV_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent nav_editor_event = 73;</code>
   * @return The navEditorEvent.
   */
  com.google.wireless.android.sdk.stats.NavEditorEvent getNavEditorEvent();
  /**
   * <pre>
   * set when kind = NAV_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.NavEditorEvent nav_editor_event = 73;</code>
   */
  com.google.wireless.android.sdk.stats.NavEditorEventOrBuilder getNavEditorEventOrBuilder();

  /**
   * <pre>
   * set when kind = DIALOG_STATS
   * </pre>
   *
   * <code>optional .android_studio.DialogStats dialog_stats = 74;</code>
   * @return Whether the dialogStats field is set.
   */
  boolean hasDialogStats();
  /**
   * <pre>
   * set when kind = DIALOG_STATS
   * </pre>
   *
   * <code>optional .android_studio.DialogStats dialog_stats = 74;</code>
   * @return The dialogStats.
   */
  com.google.wireless.android.sdk.stats.DialogStats getDialogStats();
  /**
   * <pre>
   * set when kind = DIALOG_STATS
   * </pre>
   *
   * <code>optional .android_studio.DialogStats dialog_stats = 74;</code>
   */
  com.google.wireless.android.sdk.stats.DialogStatsOrBuilder getDialogStatsOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_PLUGIN_UPGRADE_DIALOG
   * </pre>
   *
   * <code>optional .android_studio.GradlePluginUpgradeDialogStats gradle_plugin_upgrade_dialog = 75;</code>
   * @return Whether the gradlePluginUpgradeDialog field is set.
   */
  boolean hasGradlePluginUpgradeDialog();
  /**
   * <pre>
   * set when kind = GRADLE_PLUGIN_UPGRADE_DIALOG
   * </pre>
   *
   * <code>optional .android_studio.GradlePluginUpgradeDialogStats gradle_plugin_upgrade_dialog = 75;</code>
   * @return The gradlePluginUpgradeDialog.
   */
  com.google.wireless.android.sdk.stats.GradlePluginUpgradeDialogStats getGradlePluginUpgradeDialog();
  /**
   * <pre>
   * set when kind = GRADLE_PLUGIN_UPGRADE_DIALOG
   * </pre>
   *
   * <code>optional .android_studio.GradlePluginUpgradeDialogStats gradle_plugin_upgrade_dialog = 75;</code>
   */
  com.google.wireless.android.sdk.stats.GradlePluginUpgradeDialogStatsOrBuilder getGradlePluginUpgradeDialogOrBuilder();

  /**
   * <pre>
   * set when kind = DATA_BINDING
   * </pre>
   *
   * <code>optional .android_studio.DataBindingEvent data_binding_event = 76;</code>
   * @return Whether the dataBindingEvent field is set.
   */
  boolean hasDataBindingEvent();
  /**
   * <pre>
   * set when kind = DATA_BINDING
   * </pre>
   *
   * <code>optional .android_studio.DataBindingEvent data_binding_event = 76;</code>
   * @return The dataBindingEvent.
   */
  com.google.wireless.android.sdk.stats.DataBindingEvent getDataBindingEvent();
  /**
   * <pre>
   * set when kind = DATA_BINDING
   * </pre>
   *
   * <code>optional .android_studio.DataBindingEvent data_binding_event = 76;</code>
   */
  com.google.wireless.android.sdk.stats.DataBindingEventOrBuilder getDataBindingEventOrBuilder();

  /**
   * <pre>
   * set when kind = TYPING_LATENCY_STATS
   * </pre>
   *
   * <code>optional .android_studio.TypingLatencyStats typing_latency_stats = 77;</code>
   * @return Whether the typingLatencyStats field is set.
   */
  boolean hasTypingLatencyStats();
  /**
   * <pre>
   * set when kind = TYPING_LATENCY_STATS
   * </pre>
   *
   * <code>optional .android_studio.TypingLatencyStats typing_latency_stats = 77;</code>
   * @return The typingLatencyStats.
   */
  com.google.wireless.android.sdk.stats.TypingLatencyStats getTypingLatencyStats();
  /**
   * <pre>
   * set when kind = TYPING_LATENCY_STATS
   * </pre>
   *
   * <code>optional .android_studio.TypingLatencyStats typing_latency_stats = 77;</code>
   */
  com.google.wireless.android.sdk.stats.TypingLatencyStatsOrBuilder getTypingLatencyStatsOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ISSUES.
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncIssue gradle_sync_issues = 78;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.GradleSyncIssue>
      getGradleSyncIssuesList();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ISSUES.
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncIssue gradle_sync_issues = 78;</code>
   */
  com.google.wireless.android.sdk.stats.GradleSyncIssue getGradleSyncIssues(int index);
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ISSUES.
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncIssue gradle_sync_issues = 78;</code>
   */
  int getGradleSyncIssuesCount();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ISSUES.
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncIssue gradle_sync_issues = 78;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.GradleSyncIssueOrBuilder>
      getGradleSyncIssuesOrBuilderList();
  /**
   * <pre>
   * set when kind = GRADLE_SYNC_ISSUES.
   * </pre>
   *
   * <code>repeated .android_studio.GradleSyncIssue gradle_sync_issues = 78;</code>
   */
  com.google.wireless.android.sdk.stats.GradleSyncIssueOrBuilder getGradleSyncIssuesOrBuilder(
      int index);

  /**
   * <pre>
   * The list of quick-fixes offered to resolve a sync failure. (Quick fixes
   * offered to resolve specific sync issues are reported in
   * gradle_sync_issues). set when kind = GRADLE_SYNC_FAILURE_DETAILS.
   * </pre>
   *
   * <code>repeated .android_studio.AndroidStudioEvent.GradleSyncQuickFix offered_quick_fixes = 79;</code>
   * @return A list containing the offeredQuickFixes.
   */
  java.util.List<com.google.wireless.android.sdk.stats.AndroidStudioEvent.GradleSyncQuickFix> getOfferedQuickFixesList();
  /**
   * <pre>
   * The list of quick-fixes offered to resolve a sync failure. (Quick fixes
   * offered to resolve specific sync issues are reported in
   * gradle_sync_issues). set when kind = GRADLE_SYNC_FAILURE_DETAILS.
   * </pre>
   *
   * <code>repeated .android_studio.AndroidStudioEvent.GradleSyncQuickFix offered_quick_fixes = 79;</code>
   * @return The count of offeredQuickFixes.
   */
  int getOfferedQuickFixesCount();
  /**
   * <pre>
   * The list of quick-fixes offered to resolve a sync failure. (Quick fixes
   * offered to resolve specific sync issues are reported in
   * gradle_sync_issues). set when kind = GRADLE_SYNC_FAILURE_DETAILS.
   * </pre>
   *
   * <code>repeated .android_studio.AndroidStudioEvent.GradleSyncQuickFix offered_quick_fixes = 79;</code>
   * @param index The index of the element to return.
   * @return The offeredQuickFixes at the given index.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.GradleSyncQuickFix getOfferedQuickFixes(int index);

  /**
   * <pre>
   * set when kind = STUDIO_PATCH_UPDATER
   * </pre>
   *
   * <code>optional .android_studio.StudioPatchUpdaterEvent studio_patch_updater_event = 80;</code>
   * @return Whether the studioPatchUpdaterEvent field is set.
   */
  boolean hasStudioPatchUpdaterEvent();
  /**
   * <pre>
   * set when kind = STUDIO_PATCH_UPDATER
   * </pre>
   *
   * <code>optional .android_studio.StudioPatchUpdaterEvent studio_patch_updater_event = 80;</code>
   * @return The studioPatchUpdaterEvent.
   */
  com.google.wireless.android.sdk.stats.StudioPatchUpdaterEvent getStudioPatchUpdaterEvent();
  /**
   * <pre>
   * set when kind = STUDIO_PATCH_UPDATER
   * </pre>
   *
   * <code>optional .android_studio.StudioPatchUpdaterEvent studio_patch_updater_event = 80;</code>
   */
  com.google.wireless.android.sdk.stats.StudioPatchUpdaterEventOrBuilder getStudioPatchUpdaterEventOrBuilder();

  /**
   * <pre>
   * Set when kind = RESOURCE_MANAGER
   * </pre>
   *
   * <code>optional .android_studio.ResourceManagerEvent resource_manager_event = 81;</code>
   * @return Whether the resourceManagerEvent field is set.
   */
  boolean hasResourceManagerEvent();
  /**
   * <pre>
   * Set when kind = RESOURCE_MANAGER
   * </pre>
   *
   * <code>optional .android_studio.ResourceManagerEvent resource_manager_event = 81;</code>
   * @return The resourceManagerEvent.
   */
  com.google.wireless.android.sdk.stats.ResourceManagerEvent getResourceManagerEvent();
  /**
   * <pre>
   * Set when kind = RESOURCE_MANAGER
   * </pre>
   *
   * <code>optional .android_studio.ResourceManagerEvent resource_manager_event = 81;</code>
   */
  com.google.wireless.android.sdk.stats.ResourceManagerEventOrBuilder getResourceManagerEventOrBuilder();

  /**
   * <pre>
   * Set when kind = IDE_PLUGIN_INFO
   * </pre>
   *
   * <code>optional .android_studio.IdePluginInfo ide_plugin_info = 82;</code>
   * @return Whether the idePluginInfo field is set.
   */
  boolean hasIdePluginInfo();
  /**
   * <pre>
   * Set when kind = IDE_PLUGIN_INFO
   * </pre>
   *
   * <code>optional .android_studio.IdePluginInfo ide_plugin_info = 82;</code>
   * @return The idePluginInfo.
   */
  com.google.wireless.android.sdk.stats.IdePluginInfo getIdePluginInfo();
  /**
   * <pre>
   * Set when kind = IDE_PLUGIN_INFO
   * </pre>
   *
   * <code>optional .android_studio.IdePluginInfo ide_plugin_info = 82;</code>
   */
  com.google.wireless.android.sdk.stats.IdePluginInfoOrBuilder getIdePluginInfoOrBuilder();

  /**
   * <pre>
   * Set when kind = EDITOR_HIGHLIGHTING_STATS
   * </pre>
   *
   * <code>optional .android_studio.EditorHighlightingStats editor_highlighting_stats = 83;</code>
   * @return Whether the editorHighlightingStats field is set.
   */
  boolean hasEditorHighlightingStats();
  /**
   * <pre>
   * Set when kind = EDITOR_HIGHLIGHTING_STATS
   * </pre>
   *
   * <code>optional .android_studio.EditorHighlightingStats editor_highlighting_stats = 83;</code>
   * @return The editorHighlightingStats.
   */
  com.google.wireless.android.sdk.stats.EditorHighlightingStats getEditorHighlightingStats();
  /**
   * <pre>
   * Set when kind = EDITOR_HIGHLIGHTING_STATS
   * </pre>
   *
   * <code>optional .android_studio.EditorHighlightingStats editor_highlighting_stats = 83;</code>
   */
  com.google.wireless.android.sdk.stats.EditorHighlightingStatsOrBuilder getEditorHighlightingStatsOrBuilder();

  /**
   * <pre>
   * Set when kind = WINDOWS_DEFENDER_STATUS
   * </pre>
   *
   * <code>optional .android_studio.WindowsDefenderStatus windows_defender_status = 84;</code>
   * @return Whether the windowsDefenderStatus field is set.
   */
  boolean hasWindowsDefenderStatus();
  /**
   * <pre>
   * Set when kind = WINDOWS_DEFENDER_STATUS
   * </pre>
   *
   * <code>optional .android_studio.WindowsDefenderStatus windows_defender_status = 84;</code>
   * @return The windowsDefenderStatus.
   */
  com.google.wireless.android.sdk.stats.WindowsDefenderStatus getWindowsDefenderStatus();
  /**
   * <pre>
   * Set when kind = WINDOWS_DEFENDER_STATUS
   * </pre>
   *
   * <code>optional .android_studio.WindowsDefenderStatus windows_defender_status = 84;</code>
   */
  com.google.wireless.android.sdk.stats.WindowsDefenderStatusOrBuilder getWindowsDefenderStatusOrBuilder();

  /**
   * <pre>
   * Set when kind = MEMORY_SETTINGS_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MemorySettingsEvent memory_settings_event = 85;</code>
   * @return Whether the memorySettingsEvent field is set.
   */
  boolean hasMemorySettingsEvent();
  /**
   * <pre>
   * Set when kind = MEMORY_SETTINGS_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MemorySettingsEvent memory_settings_event = 85;</code>
   * @return The memorySettingsEvent.
   */
  com.google.wireless.android.sdk.stats.MemorySettingsEvent getMemorySettingsEvent();
  /**
   * <pre>
   * Set when kind = MEMORY_SETTINGS_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MemorySettingsEvent memory_settings_event = 85;</code>
   */
  com.google.wireless.android.sdk.stats.MemorySettingsEventOrBuilder getMemorySettingsEventOrBuilder();

  /**
   * <pre>
   * Set when kind = STUDIO_UPDATE_FLOW
   * </pre>
   *
   * <code>optional .android_studio.StudioUpdateFlowEvent studio_update_flow_event = 86;</code>
   * @return Whether the studioUpdateFlowEvent field is set.
   */
  boolean hasStudioUpdateFlowEvent();
  /**
   * <pre>
   * Set when kind = STUDIO_UPDATE_FLOW
   * </pre>
   *
   * <code>optional .android_studio.StudioUpdateFlowEvent studio_update_flow_event = 86;</code>
   * @return The studioUpdateFlowEvent.
   */
  com.google.wireless.android.sdk.stats.StudioUpdateFlowEvent getStudioUpdateFlowEvent();
  /**
   * <pre>
   * Set when kind = STUDIO_UPDATE_FLOW
   * </pre>
   *
   * <code>optional .android_studio.StudioUpdateFlowEvent studio_update_flow_event = 86;</code>
   */
  com.google.wireless.android.sdk.stats.StudioUpdateFlowEventOrBuilder getStudioUpdateFlowEventOrBuilder();

  /**
   * <pre>
   * set when kind = BUILD_OUTPUT_WINDOW_STATS
   * </pre>
   *
   * <code>optional .android_studio.BuildOutputWindowStats build_output_window_stats = 87;</code>
   * @return Whether the buildOutputWindowStats field is set.
   */
  boolean hasBuildOutputWindowStats();
  /**
   * <pre>
   * set when kind = BUILD_OUTPUT_WINDOW_STATS
   * </pre>
   *
   * <code>optional .android_studio.BuildOutputWindowStats build_output_window_stats = 87;</code>
   * @return The buildOutputWindowStats.
   */
  com.google.wireless.android.sdk.stats.BuildOutputWindowStats getBuildOutputWindowStats();
  /**
   * <pre>
   * set when kind = BUILD_OUTPUT_WINDOW_STATS
   * </pre>
   *
   * <code>optional .android_studio.BuildOutputWindowStats build_output_window_stats = 87;</code>
   */
  com.google.wireless.android.sdk.stats.BuildOutputWindowStatsOrBuilder getBuildOutputWindowStatsOrBuilder();

  /**
   * <pre>
   * set when kind = GRADLE_PLUGIN_DSL_USAGE_STATS
   * </pre>
   *
   * <code>optional .android_studio.GradlePluginDslUsageStats gradle_plugin_dsl_usage_stats = 88;</code>
   * @return Whether the gradlePluginDslUsageStats field is set.
   */
  boolean hasGradlePluginDslUsageStats();
  /**
   * <pre>
   * set when kind = GRADLE_PLUGIN_DSL_USAGE_STATS
   * </pre>
   *
   * <code>optional .android_studio.GradlePluginDslUsageStats gradle_plugin_dsl_usage_stats = 88;</code>
   * @return The gradlePluginDslUsageStats.
   */
  com.google.wireless.android.sdk.stats.GradlePluginDslUsageStats getGradlePluginDslUsageStats();
  /**
   * <pre>
   * set when kind = GRADLE_PLUGIN_DSL_USAGE_STATS
   * </pre>
   *
   * <code>optional .android_studio.GradlePluginDslUsageStats gradle_plugin_dsl_usage_stats = 88;</code>
   */
  com.google.wireless.android.sdk.stats.GradlePluginDslUsageStatsOrBuilder getGradlePluginDslUsageStatsOrBuilder();

  /**
   * <pre>
   * set when kind = WHATS_NEW_ASSISTANT_UPDATE_EVENT
   * </pre>
   *
   * <code>optional .android_studio.WhatsNewAssistantUpdateEvent whats_new_assistant_update_event = 89;</code>
   * @return Whether the whatsNewAssistantUpdateEvent field is set.
   */
  boolean hasWhatsNewAssistantUpdateEvent();
  /**
   * <pre>
   * set when kind = WHATS_NEW_ASSISTANT_UPDATE_EVENT
   * </pre>
   *
   * <code>optional .android_studio.WhatsNewAssistantUpdateEvent whats_new_assistant_update_event = 89;</code>
   * @return The whatsNewAssistantUpdateEvent.
   */
  com.google.wireless.android.sdk.stats.WhatsNewAssistantUpdateEvent getWhatsNewAssistantUpdateEvent();
  /**
   * <pre>
   * set when kind = WHATS_NEW_ASSISTANT_UPDATE_EVENT
   * </pre>
   *
   * <code>optional .android_studio.WhatsNewAssistantUpdateEvent whats_new_assistant_update_event = 89;</code>
   */
  com.google.wireless.android.sdk.stats.WhatsNewAssistantUpdateEventOrBuilder getWhatsNewAssistantUpdateEventOrBuilder();

  /**
   * <pre>
   * set when kind = DEFAULT_ACTIVITY_LOCATOR_STATS
   * </pre>
   *
   * <code>optional .android_studio.DefaultActivityLocatorStats default_activity_locator_stats = 90;</code>
   * @return Whether the defaultActivityLocatorStats field is set.
   */
  boolean hasDefaultActivityLocatorStats();
  /**
   * <pre>
   * set when kind = DEFAULT_ACTIVITY_LOCATOR_STATS
   * </pre>
   *
   * <code>optional .android_studio.DefaultActivityLocatorStats default_activity_locator_stats = 90;</code>
   * @return The defaultActivityLocatorStats.
   */
  com.google.wireless.android.sdk.stats.DefaultActivityLocatorStats getDefaultActivityLocatorStats();
  /**
   * <pre>
   * set when kind = DEFAULT_ACTIVITY_LOCATOR_STATS
   * </pre>
   *
   * <code>optional .android_studio.DefaultActivityLocatorStats default_activity_locator_stats = 90;</code>
   */
  com.google.wireless.android.sdk.stats.DefaultActivityLocatorStatsOrBuilder getDefaultActivityLocatorStatsOrBuilder();

  /**
   * <pre>
   * set when kind = MOTION_LAYOUT_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MotionLayoutEditorEvent motion_layout_editor_event = 91;</code>
   * @return Whether the motionLayoutEditorEvent field is set.
   */
  boolean hasMotionLayoutEditorEvent();
  /**
   * <pre>
   * set when kind = MOTION_LAYOUT_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MotionLayoutEditorEvent motion_layout_editor_event = 91;</code>
   * @return The motionLayoutEditorEvent.
   */
  com.google.wireless.android.sdk.stats.MotionLayoutEditorEvent getMotionLayoutEditorEvent();
  /**
   * <pre>
   * set when kind = MOTION_LAYOUT_EDITOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MotionLayoutEditorEvent motion_layout_editor_event = 91;</code>
   */
  com.google.wireless.android.sdk.stats.MotionLayoutEditorEventOrBuilder getMotionLayoutEditorEventOrBuilder();

  /**
   * <pre>
   * set when kind = COMPOSE_SAMPLE_EVENT
   * This is a sample project for Compose published on GitHub that can be
   * imported through the sample browser UI or cloned and opened manually
   * </pre>
   *
   * <code>optional .android_studio.ComposeSampleEvent compose_sample_event = 92;</code>
   * @return Whether the composeSampleEvent field is set.
   */
  boolean hasComposeSampleEvent();
  /**
   * <pre>
   * set when kind = COMPOSE_SAMPLE_EVENT
   * This is a sample project for Compose published on GitHub that can be
   * imported through the sample browser UI or cloned and opened manually
   * </pre>
   *
   * <code>optional .android_studio.ComposeSampleEvent compose_sample_event = 92;</code>
   * @return The composeSampleEvent.
   */
  com.google.wireless.android.sdk.stats.ComposeSampleEvent getComposeSampleEvent();
  /**
   * <pre>
   * set when kind = COMPOSE_SAMPLE_EVENT
   * This is a sample project for Compose published on GitHub that can be
   * imported through the sample browser UI or cloned and opened manually
   * </pre>
   *
   * <code>optional .android_studio.ComposeSampleEvent compose_sample_event = 92;</code>
   */
  com.google.wireless.android.sdk.stats.ComposeSampleEventOrBuilder getComposeSampleEventOrBuilder();

  /**
   * <pre>
   * set when kind = IMPORT_SAMPLE_EVENT
   * Logs the ID of the sample project imported through the sample browser UI,
   * e.g. android/user-interface-samples/TextStyling
   * </pre>
   *
   * <code>optional .android_studio.ImportSampleEvent import_sample_event = 93;</code>
   * @return Whether the importSampleEvent field is set.
   */
  boolean hasImportSampleEvent();
  /**
   * <pre>
   * set when kind = IMPORT_SAMPLE_EVENT
   * Logs the ID of the sample project imported through the sample browser UI,
   * e.g. android/user-interface-samples/TextStyling
   * </pre>
   *
   * <code>optional .android_studio.ImportSampleEvent import_sample_event = 93;</code>
   * @return The importSampleEvent.
   */
  com.google.wireless.android.sdk.stats.ImportSampleEvent getImportSampleEvent();
  /**
   * <pre>
   * set when kind = IMPORT_SAMPLE_EVENT
   * Logs the ID of the sample project imported through the sample browser UI,
   * e.g. android/user-interface-samples/TextStyling
   * </pre>
   *
   * <code>optional .android_studio.ImportSampleEvent import_sample_event = 93;</code>
   */
  com.google.wireless.android.sdk.stats.ImportSampleEventOrBuilder getImportSampleEventOrBuilder();

  /**
   * <pre>
   * set when kind = DYNAMIC_LAYOUT_INSPECTOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorEvent dynamic_layout_inspector_event = 94;</code>
   * @return Whether the dynamicLayoutInspectorEvent field is set.
   */
  boolean hasDynamicLayoutInspectorEvent();
  /**
   * <pre>
   * set when kind = DYNAMIC_LAYOUT_INSPECTOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorEvent dynamic_layout_inspector_event = 94;</code>
   * @return The dynamicLayoutInspectorEvent.
   */
  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEvent getDynamicLayoutInspectorEvent();
  /**
   * <pre>
   * set when kind = DYNAMIC_LAYOUT_INSPECTOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.DynamicLayoutInspectorEvent dynamic_layout_inspector_event = 94;</code>
   */
  com.google.wireless.android.sdk.stats.DynamicLayoutInspectorEventOrBuilder getDynamicLayoutInspectorEventOrBuilder();

  /**
   * <pre>
   * set when kind = BUILD_ATTRIBUTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionStats build_attribution_stats = 95;</code>
   * @return Whether the buildAttributionStats field is set.
   */
  boolean hasBuildAttributionStats();
  /**
   * <pre>
   * set when kind = BUILD_ATTRIBUTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionStats build_attribution_stats = 95;</code>
   * @return The buildAttributionStats.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionStats getBuildAttributionStats();
  /**
   * <pre>
   * set when kind = BUILD_ATTRIBUTION_STATS
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionStats build_attribution_stats = 95;</code>
   */
  com.google.wireless.android.sdk.stats.BuildAttributionStatsOrBuilder getBuildAttributionStatsOrBuilder();

  /**
   * <pre>
   * set when kind = EDITOR_COMPLETION_STATS
   * </pre>
   *
   * <code>optional .android_studio.EditorCompletionStats editor_completion_stats = 96;</code>
   * @return Whether the editorCompletionStats field is set.
   */
  boolean hasEditorCompletionStats();
  /**
   * <pre>
   * set when kind = EDITOR_COMPLETION_STATS
   * </pre>
   *
   * <code>optional .android_studio.EditorCompletionStats editor_completion_stats = 96;</code>
   * @return The editorCompletionStats.
   */
  com.google.wireless.android.sdk.stats.EditorCompletionStats getEditorCompletionStats();
  /**
   * <pre>
   * set when kind = EDITOR_COMPLETION_STATS
   * </pre>
   *
   * <code>optional .android_studio.EditorCompletionStats editor_completion_stats = 96;</code>
   */
  com.google.wireless.android.sdk.stats.EditorCompletionStatsOrBuilder getEditorCompletionStatsOrBuilder();

  /**
   * <pre>
   * set when kind = MULTI_VIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MultiViewEvent multi_view_event = 97;</code>
   * @return Whether the multiViewEvent field is set.
   */
  boolean hasMultiViewEvent();
  /**
   * <pre>
   * set when kind = MULTI_VIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MultiViewEvent multi_view_event = 97;</code>
   * @return The multiViewEvent.
   */
  com.google.wireless.android.sdk.stats.MultiViewEvent getMultiViewEvent();
  /**
   * <pre>
   * set when kind = MULTI_VIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.MultiViewEvent multi_view_event = 97;</code>
   */
  com.google.wireless.android.sdk.stats.MultiViewEventOrBuilder getMultiViewEventOrBuilder();

  /**
   * <pre>
   * set when kind = BUILD_ATTRIBUTION_UI_EVENT
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent build_attribution_ui_event = 98;</code>
   * @return Whether the buildAttributionUiEvent field is set.
   */
  boolean hasBuildAttributionUiEvent();
  /**
   * <pre>
   * set when kind = BUILD_ATTRIBUTION_UI_EVENT
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent build_attribution_ui_event = 98;</code>
   * @return The buildAttributionUiEvent.
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEvent getBuildAttributionUiEvent();
  /**
   * <pre>
   * set when kind = BUILD_ATTRIBUTION_UI_EVENT
   * </pre>
   *
   * <code>optional .android_studio.BuildAttributionUiEvent build_attribution_ui_event = 98;</code>
   */
  com.google.wireless.android.sdk.stats.BuildAttributionUiEventOrBuilder getBuildAttributionUiEventOrBuilder();

  /**
   * <pre>
   * set when kind = ANDROID_CPP_EXTENSION
   * </pre>
   *
   * <code>optional .android_studio.AndroidCppExtensionEvent android_cpp_extension_event = 99;</code>
   * @return Whether the androidCppExtensionEvent field is set.
   */
  boolean hasAndroidCppExtensionEvent();
  /**
   * <pre>
   * set when kind = ANDROID_CPP_EXTENSION
   * </pre>
   *
   * <code>optional .android_studio.AndroidCppExtensionEvent android_cpp_extension_event = 99;</code>
   * @return The androidCppExtensionEvent.
   */
  com.google.wireless.android.sdk.stats.AndroidCppExtensionEvent getAndroidCppExtensionEvent();
  /**
   * <pre>
   * set when kind = ANDROID_CPP_EXTENSION
   * </pre>
   *
   * <code>optional .android_studio.AndroidCppExtensionEvent android_cpp_extension_event = 99;</code>
   */
  com.google.wireless.android.sdk.stats.AndroidCppExtensionEventOrBuilder getAndroidCppExtensionEventOrBuilder();

  /**
   * <pre>
   * set when kind = DESIGN_EDITOR_HELP_PANEL_EVENT
   * </pre>
   *
   * <code>optional .android_studio.DesignEditorHelpPanelEvent design_editor_help_panel_event = 100;</code>
   * @return Whether the designEditorHelpPanelEvent field is set.
   */
  boolean hasDesignEditorHelpPanelEvent();
  /**
   * <pre>
   * set when kind = DESIGN_EDITOR_HELP_PANEL_EVENT
   * </pre>
   *
   * <code>optional .android_studio.DesignEditorHelpPanelEvent design_editor_help_panel_event = 100;</code>
   * @return The designEditorHelpPanelEvent.
   */
  com.google.wireless.android.sdk.stats.DesignEditorHelpPanelEvent getDesignEditorHelpPanelEvent();
  /**
   * <pre>
   * set when kind = DESIGN_EDITOR_HELP_PANEL_EVENT
   * </pre>
   *
   * <code>optional .android_studio.DesignEditorHelpPanelEvent design_editor_help_panel_event = 100;</code>
   */
  com.google.wireless.android.sdk.stats.DesignEditorHelpPanelEventOrBuilder getDesignEditorHelpPanelEventOrBuilder();

  /**
   * <pre>
   * set when kind = APP_INSPECTION
   * </pre>
   *
   * <code>optional .android_studio.AppInspectionEvent app_inspection_event = 101;</code>
   * @return Whether the appInspectionEvent field is set.
   */
  boolean hasAppInspectionEvent();
  /**
   * <pre>
   * set when kind = APP_INSPECTION
   * </pre>
   *
   * <code>optional .android_studio.AppInspectionEvent app_inspection_event = 101;</code>
   * @return The appInspectionEvent.
   */
  com.google.wireless.android.sdk.stats.AppInspectionEvent getAppInspectionEvent();
  /**
   * <pre>
   * set when kind = APP_INSPECTION
   * </pre>
   *
   * <code>optional .android_studio.AppInspectionEvent app_inspection_event = 101;</code>
   */
  com.google.wireless.android.sdk.stats.AppInspectionEventOrBuilder getAppInspectionEventOrBuilder();

  /**
   * <pre>
   * set when kind = ML_MODEL_BINDING
   * </pre>
   *
   * <code>optional .android_studio.MlModelBindingEvent ml_model_binding_event = 102;</code>
   * @return Whether the mlModelBindingEvent field is set.
   */
  boolean hasMlModelBindingEvent();
  /**
   * <pre>
   * set when kind = ML_MODEL_BINDING
   * </pre>
   *
   * <code>optional .android_studio.MlModelBindingEvent ml_model_binding_event = 102;</code>
   * @return The mlModelBindingEvent.
   */
  com.google.wireless.android.sdk.stats.MlModelBindingEvent getMlModelBindingEvent();
  /**
   * <pre>
   * set when kind = ML_MODEL_BINDING
   * </pre>
   *
   * <code>optional .android_studio.MlModelBindingEvent ml_model_binding_event = 102;</code>
   */
  com.google.wireless.android.sdk.stats.MlModelBindingEventOrBuilder getMlModelBindingEventOrBuilder();

  /**
   * <pre>
   * set when kind = DEPLOYMENT_TO_EMULATOR
   * </pre>
   *
   * <code>optional .android_studio.AvdLaunchEvent avd_launch_event = 103;</code>
   * @return Whether the avdLaunchEvent field is set.
   */
  boolean hasAvdLaunchEvent();
  /**
   * <pre>
   * set when kind = DEPLOYMENT_TO_EMULATOR
   * </pre>
   *
   * <code>optional .android_studio.AvdLaunchEvent avd_launch_event = 103;</code>
   * @return The avdLaunchEvent.
   */
  com.google.wireless.android.sdk.stats.AvdLaunchEvent getAvdLaunchEvent();
  /**
   * <pre>
   * set when kind = DEPLOYMENT_TO_EMULATOR
   * </pre>
   *
   * <code>optional .android_studio.AvdLaunchEvent avd_launch_event = 103;</code>
   */
  com.google.wireless.android.sdk.stats.AvdLaunchEventOrBuilder getAvdLaunchEventOrBuilder();

  /**
   * <pre>
   * set when kind = NAV_SAFE_ARGS_EVENT
   * </pre>
   *
   * <code>optional .android_studio.NavSafeArgsEvent nav_safe_args_event = 104;</code>
   * @return Whether the navSafeArgsEvent field is set.
   */
  boolean hasNavSafeArgsEvent();
  /**
   * <pre>
   * set when kind = NAV_SAFE_ARGS_EVENT
   * </pre>
   *
   * <code>optional .android_studio.NavSafeArgsEvent nav_safe_args_event = 104;</code>
   * @return The navSafeArgsEvent.
   */
  com.google.wireless.android.sdk.stats.NavSafeArgsEvent getNavSafeArgsEvent();
  /**
   * <pre>
   * set when kind = NAV_SAFE_ARGS_EVENT
   * </pre>
   *
   * <code>optional .android_studio.NavSafeArgsEvent nav_safe_args_event = 104;</code>
   */
  com.google.wireless.android.sdk.stats.NavSafeArgsEventOrBuilder getNavSafeArgsEventOrBuilder();

  /**
   * <pre>
   * set when kind = DAGGER_EDITOR
   * </pre>
   *
   * <code>optional .android_studio.DaggerEditorEvent dagger_editor_event = 105;</code>
   * @return Whether the daggerEditorEvent field is set.
   */
  boolean hasDaggerEditorEvent();
  /**
   * <pre>
   * set when kind = DAGGER_EDITOR
   * </pre>
   *
   * <code>optional .android_studio.DaggerEditorEvent dagger_editor_event = 105;</code>
   * @return The daggerEditorEvent.
   */
  com.google.wireless.android.sdk.stats.DaggerEditorEvent getDaggerEditorEvent();
  /**
   * <pre>
   * set when kind = DAGGER_EDITOR
   * </pre>
   *
   * <code>optional .android_studio.DaggerEditorEvent dagger_editor_event = 105;</code>
   */
  com.google.wireless.android.sdk.stats.DaggerEditorEventOrBuilder getDaggerEditorEventOrBuilder();

  /**
   * <pre>
   * set when kind = PARALLEL_ANDROID_TEST_REPORT_UI
   * </pre>
   *
   * <code>optional .android_studio.ParallelAndroidTestReportUiEvent parallel_android_test_report_ui_event = 106;</code>
   * @return Whether the parallelAndroidTestReportUiEvent field is set.
   */
  boolean hasParallelAndroidTestReportUiEvent();
  /**
   * <pre>
   * set when kind = PARALLEL_ANDROID_TEST_REPORT_UI
   * </pre>
   *
   * <code>optional .android_studio.ParallelAndroidTestReportUiEvent parallel_android_test_report_ui_event = 106;</code>
   * @return The parallelAndroidTestReportUiEvent.
   */
  com.google.wireless.android.sdk.stats.ParallelAndroidTestReportUiEvent getParallelAndroidTestReportUiEvent();
  /**
   * <pre>
   * set when kind = PARALLEL_ANDROID_TEST_REPORT_UI
   * </pre>
   *
   * <code>optional .android_studio.ParallelAndroidTestReportUiEvent parallel_android_test_report_ui_event = 106;</code>
   */
  com.google.wireless.android.sdk.stats.ParallelAndroidTestReportUiEventOrBuilder getParallelAndroidTestReportUiEventOrBuilder();

  /**
   * <pre>
   * set when kind = APPLY_CHANGES_AGENT_ERROR
   * </pre>
   *
   * <code>optional .android_studio.ApplyChangesAgentError apply_changes_agent_error = 107;</code>
   * @return Whether the applyChangesAgentError field is set.
   */
  boolean hasApplyChangesAgentError();
  /**
   * <pre>
   * set when kind = APPLY_CHANGES_AGENT_ERROR
   * </pre>
   *
   * <code>optional .android_studio.ApplyChangesAgentError apply_changes_agent_error = 107;</code>
   * @return The applyChangesAgentError.
   */
  com.google.wireless.android.sdk.stats.ApplyChangesAgentError getApplyChangesAgentError();
  /**
   * <pre>
   * set when kind = APPLY_CHANGES_AGENT_ERROR
   * </pre>
   *
   * <code>optional .android_studio.ApplyChangesAgentError apply_changes_agent_error = 107;</code>
   */
  com.google.wireless.android.sdk.stats.ApplyChangesAgentErrorOrBuilder getApplyChangesAgentErrorOrBuilder();

  /**
   * <pre>
   * set when kind = WIZARD_TEMPLATES_USAGE
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.TemplatesUsage template_usage = 108;</code>
   * @return Whether the templateUsage field is set.
   */
  boolean hasTemplateUsage();
  /**
   * <pre>
   * set when kind = WIZARD_TEMPLATES_USAGE
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.TemplatesUsage template_usage = 108;</code>
   * @return The templateUsage.
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.TemplatesUsage getTemplateUsage();
  /**
   * <pre>
   * set when kind = WIZARD_TEMPLATES_USAGE
   * </pre>
   *
   * <code>optional .android_studio.AndroidStudioEvent.TemplatesUsage template_usage = 108;</code>
   */
  com.google.wireless.android.sdk.stats.AndroidStudioEvent.TemplatesUsageOrBuilder getTemplateUsageOrBuilder();

  /**
   * <pre>
   * set when kind = UPGRADE_ASSISTANT_COMPONENT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.UpgradeAssistantComponentEvent upgrade_assistant_component_event = 109;</code>
   * @return Whether the upgradeAssistantComponentEvent field is set.
   */
  boolean hasUpgradeAssistantComponentEvent();
  /**
   * <pre>
   * set when kind = UPGRADE_ASSISTANT_COMPONENT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.UpgradeAssistantComponentEvent upgrade_assistant_component_event = 109;</code>
   * @return The upgradeAssistantComponentEvent.
   */
  com.google.wireless.android.sdk.stats.UpgradeAssistantComponentEvent getUpgradeAssistantComponentEvent();
  /**
   * <pre>
   * set when kind = UPGRADE_ASSISTANT_COMPONENT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.UpgradeAssistantComponentEvent upgrade_assistant_component_event = 109;</code>
   */
  com.google.wireless.android.sdk.stats.UpgradeAssistantComponentEventOrBuilder getUpgradeAssistantComponentEventOrBuilder();

  /**
   * <pre>
   * set when kind = UPGRADE_ASSISTANT_PROCESSOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.UpgradeAssistantProcessorEvent upgrade_assistant_processor_event = 110;</code>
   * @return Whether the upgradeAssistantProcessorEvent field is set.
   */
  boolean hasUpgradeAssistantProcessorEvent();
  /**
   * <pre>
   * set when kind = UPGRADE_ASSISTANT_PROCESSOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.UpgradeAssistantProcessorEvent upgrade_assistant_processor_event = 110;</code>
   * @return The upgradeAssistantProcessorEvent.
   */
  com.google.wireless.android.sdk.stats.UpgradeAssistantProcessorEvent getUpgradeAssistantProcessorEvent();
  /**
   * <pre>
   * set when kind = UPGRADE_ASSISTANT_PROCESSOR_EVENT
   * </pre>
   *
   * <code>optional .android_studio.UpgradeAssistantProcessorEvent upgrade_assistant_processor_event = 110;</code>
   */
  com.google.wireless.android.sdk.stats.UpgradeAssistantProcessorEventOrBuilder getUpgradeAssistantProcessorEventOrBuilder();

  /**
   * <pre>
   * set when kind = INTERACTIVE_PREVIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.InteractivePreviewEvent interactive_preview_event = 111;</code>
   * @return Whether the interactivePreviewEvent field is set.
   */
  boolean hasInteractivePreviewEvent();
  /**
   * <pre>
   * set when kind = INTERACTIVE_PREVIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.InteractivePreviewEvent interactive_preview_event = 111;</code>
   * @return The interactivePreviewEvent.
   */
  com.google.wireless.android.sdk.stats.InteractivePreviewEvent getInteractivePreviewEvent();
  /**
   * <pre>
   * set when kind = INTERACTIVE_PREVIEW_EVENT
   * </pre>
   *
   * <code>optional .android_studio.InteractivePreviewEvent interactive_preview_event = 111;</code>
   */
  com.google.wireless.android.sdk.stats.InteractivePreviewEventOrBuilder getInteractivePreviewEventOrBuilder();

  /**
   * <pre>
   * set when kind = COMPOSE_ANIMATION_TOOLING
   * </pre>
   *
   * <code>optional .android_studio.ComposeAnimationToolingEvent compose_animation_tooling_event = 112;</code>
   * @return Whether the composeAnimationToolingEvent field is set.
   */
  boolean hasComposeAnimationToolingEvent();
  /**
   * <pre>
   * set when kind = COMPOSE_ANIMATION_TOOLING
   * </pre>
   *
   * <code>optional .android_studio.ComposeAnimationToolingEvent compose_animation_tooling_event = 112;</code>
   * @return The composeAnimationToolingEvent.
   */
  com.google.wireless.android.sdk.stats.ComposeAnimationToolingEvent getComposeAnimationToolingEvent();
  /**
   * <pre>
   * set when kind = COMPOSE_ANIMATION_TOOLING
   * </pre>
   *
   * <code>optional .android_studio.ComposeAnimationToolingEvent compose_animation_tooling_event = 112;</code>
   */
  com.google.wireless.android.sdk.stats.ComposeAnimationToolingEventOrBuilder getComposeAnimationToolingEventOrBuilder();

  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENTS
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorUiEvent emulator_ui_events = 114;</code>
   */
  java.util.List<com.google.wireless.android.sdk.stats.EmulatorUiEvent>
      getEmulatorUiEventsList();
  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENTS
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorUiEvent emulator_ui_events = 114;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorUiEvent getEmulatorUiEvents(int index);
  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENTS
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorUiEvent emulator_ui_events = 114;</code>
   */
  int getEmulatorUiEventsCount();
  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENTS
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorUiEvent emulator_ui_events = 114;</code>
   */
  java.util.List<? extends com.google.wireless.android.sdk.stats.EmulatorUiEventOrBuilder>
      getEmulatorUiEventsOrBuilderList();
  /**
   * <pre>
   * set when kind = EMULATOR_UI_EVENTS
   * </pre>
   *
   * <code>repeated .android_studio.EmulatorUiEvent emulator_ui_events = 114;</code>
   */
  com.google.wireless.android.sdk.stats.EmulatorUiEventOrBuilder getEmulatorUiEventsOrBuilder(
      int index);

  /**
   * <pre>
   * set when kind = SURVEY_RESPONSE
   * </pre>
   *
   * <code>optional .android_studio.SurveyResponse survey_response = 115;</code>
   * @return Whether the surveyResponse field is set.
   */
  boolean hasSurveyResponse();
  /**
   * <pre>
   * set when kind = SURVEY_RESPONSE
   * </pre>
   *
   * <code>optional .android_studio.SurveyResponse survey_response = 115;</code>
   * @return The surveyResponse.
   */
  com.google.wireless.android.sdk.stats.SurveyResponse getSurveyResponse();
  /**
   * <pre>
   * set when kind = SURVEY_RESPONSE
   * </pre>
   *
   * <code>optional .android_studio.SurveyResponse survey_response = 115;</code>
   */
  com.google.wireless.android.sdk.stats.SurveyResponseOrBuilder getSurveyResponseOrBuilder();

  /**
   * <pre>
   * set when kind = COMPOSE_DEPLOY
   * </pre>
   *
   * <code>optional .android_studio.ComposeDeployEvent compose_deploy_event = 116;</code>
   * @return Whether the composeDeployEvent field is set.
   */
  boolean hasComposeDeployEvent();
  /**
   * <pre>
   * set when kind = COMPOSE_DEPLOY
   * </pre>
   *
   * <code>optional .android_studio.ComposeDeployEvent compose_deploy_event = 116;</code>
   * @return The composeDeployEvent.
   */
  com.google.wireless.android.sdk.stats.ComposeDeployEvent getComposeDeployEvent();
  /**
   * <pre>
   * set when kind = COMPOSE_DEPLOY
   * </pre>
   *
   * <code>optional .android_studio.ComposeDeployEvent compose_deploy_event = 116;</code>
   */
  com.google.wireless.android.sdk.stats.ComposeDeployEventOrBuilder getComposeDeployEventOrBuilder();

  /**
   * <pre>
   * set when kind = AUTO_IMPORT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.AutoImportEvent auto_import_event = 117;</code>
   * @return Whether the autoImportEvent field is set.
   */
  boolean hasAutoImportEvent();
  /**
   * <pre>
   * set when kind = AUTO_IMPORT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.AutoImportEvent auto_import_event = 117;</code>
   * @return The autoImportEvent.
   */
  com.google.wireless.android.sdk.stats.AutoImportEvent getAutoImportEvent();
  /**
   * <pre>
   * set when kind = AUTO_IMPORT_EVENT
   * </pre>
   *
   * <code>optional .android_studio.AutoImportEvent auto_import_event = 117;</code>
   */
  com.google.wireless.android.sdk.stats.AutoImportEventOrBuilder getAutoImportEventOrBuilder();

  /**
   * <pre>
   * set when kind = FILE_USAGE
   * </pre>
   *
   * <code>optional .android_studio.FileUsage file_usage = 118;</code>
   * @return Whether the fileUsage field is set.
   */
  boolean hasFileUsage();
  /**
   * <pre>
   * set when kind = FILE_USAGE
   * </pre>
   *
   * <code>optional .android_studio.FileUsage file_usage = 118;</code>
   * @return The fileUsage.
   */
  com.google.wireless.android.sdk.stats.FileUsage getFileUsage();
  /**
   * <pre>
   * set when kind = FILE_USAGE
   * </pre>
   *
   * <code>optional .android_studio.FileUsage file_usage = 118;</code>
   */
  com.google.wireless.android.sdk.stats.FileUsageOrBuilder getFileUsageOrBuilder();
}
